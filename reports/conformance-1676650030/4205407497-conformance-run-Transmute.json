{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "70827e12-19bb-4ce6-8147-68c18a067501",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e6fcb263-2f0a-4894-9407-090658705ed9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2835c8ec-85a6-4fab-97b2-06a0b4ba1168",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6681a2a5-c732-4c78-a7cf-377f71cd167f"
                }
              }
            ]
          },
          {
            "id": "47ed137a-8835-465b-b876-4a751dff8a19",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ac3c401c-9a5f-44f9-a9c0-8eb51108cd8d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "31d26330-0dcd-4dc5-b853-5caf93490aeb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "80093c35-e15b-4fbb-89c5-2e21385c58c0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fdae15c6-44e6-40e8-ab55-15023f58e489",
            "name": "Positive Testing",
            "item": [
              {
                "id": "65edec35-37ba-4708-83b7-67f4b4b494ee",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0edf8566-1f08-4706-ae96-fa252c12aff4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "28de302e-bb1e-4565-b696-cf6cb30ca6a5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4c5fdc9b-4698-427d-a023-1271340660d8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ec044ee8-a301-4f52-844a-bc8b91c1a53d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "448aa663-937e-4333-9dc7-a05e679f0557",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "23b3817e-68dc-4f80-aca4-f31d80a62ba8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a887bb5-45ea-4456-b37f-e2a7e9f58389",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3514a9e9-3943-4203-bcdc-51582294676b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a907dd4-b4c6-4f6c-9c93-ee5bdba10189",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c42ea00e-816d-43fb-9be9-0a92eac1948a"
            }
          }
        ]
      },
      {
        "id": "72f6d5a0-46fc-4aa2-9c99-100cd0a026ba",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7f0e0f52-2e67-4d42-9c66-a01640441a48",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4bb0e6d1-af62-417b-985b-551aa576f5f7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "47574be5-5bb0-497f-922b-103ad29395a8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0974ae1c-be65-4c80-bd4c-0d35b5067cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b187be29-c6cc-412a-8055-7c0f28f8383f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70c5f4e-0492-426b-8fe5-006beca64fac",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8ae249-4f74-4761-9efd-f1635d7c0c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5abe327b-c29e-40ea-934c-413135ada96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05120a18-8f25-4b33-b5ff-c917ff677cae",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05657b7b-8f37-4791-aa4e-cb3dc9e61999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a137fcbe-53a7-4514-aa1f-0748c6d3a3b8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2d04d165-8927-4c93-a993-2d550c62ec84",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f848a5dd-c8e1-41c7-a392-a664bf6efa42",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bdc1bd1-6d0d-4a16-990f-76613c144ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f404fc27-9a81-4875-bf8a-b015e6a0a8ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ea5498-5cd7-4d9d-86e9-4feefc25f3e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "594e9916-f12e-40d9-b4bf-3f3b924a127f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe8d985-3380-4060-adef-60c6d0cfe824",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9973c59a-5c9a-4326-8dd0-28eabf02a0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edd697db-df4c-4a2d-8488-6a1aa1bf723a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7426e8-9604-49bc-a456-7981ad08fbc2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "d51c3048-cd0b-411a-b15a-ab9e65708413"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1d4de2d4-efed-41ee-9905-61777da05273",
            "name": "Positive Testing",
            "item": [
              {
                "id": "12512db4-499f-4a8b-9f77-96fa0160e5d3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee18aace-699a-4fed-b63c-7681d448fd62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ae290e38-cf39-478d-a873-ee8a5781c17c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "395a0359-17ec-4a8b-ba0a-189dd5e0641a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "a1d69e08-8853-4755-a040-d6822a12ce02"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "516f43cc-d13d-41d7-a8f3-b66f44e37d0d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5142270-ceac-49e9-87e7-1c41f7290ba6"
            }
          }
        ]
      },
      {
        "id": "5fbde689-5bc1-49ef-b218-ab88f7feeedb",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "54bed177-44ec-4715-a05f-8dd99259b9fa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a4d7f7f-fa59-4bd7-997e-e7d48f659aa3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6fec6f26-15e1-44bc-aa2d-8a9ae52d8bc8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0d7655-449d-4dc8-bfa2-c73e7fd0fedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a4321a-0559-46d9-aae8-60711df3f753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4869e41b-9042-4e9d-bbd5-86c992713f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b180cc68-3275-4ef7-9861-cf21a5e81da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6e1f37-1d68-4a67-9d15-fbf62ea301f0",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d7542b-c233-48dc-b3aa-cd7bc6455192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e78288-0862-48cf-bc26-3e5f31a0c986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d5939e-9135-4d60-b42d-6a186978fa9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03b0ea30-6501-4f78-b49c-0d5089d9bce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b8b5c8-0992-451f-bb23-64b8eb718fa8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00b4953-13fd-4e09-be14-c3cdd0f3f20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3362f3-ee0e-4342-ab2a-623e355aaa05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2521a884-c801-4005-84bf-cda1185f9b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b1849d8-307f-4283-8fc5-939d12f261f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ce54bb-6086-4848-a870-04e1d04ee697",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5adc8a6-ed37-4f91-8abb-fd7038cc0eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7272416-8e12-4022-9c32-f74f3ed0e213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a65628-5bc0-4670-8204-07884bd28672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8744b625-87f0-409c-83f8-662f592dde66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f259349-8602-4d8d-ab13-c05c00ef7ae8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8808e6-2c42-47bf-bf4a-f1987483df7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b0c1934-989b-4161-87fb-95c23ad3908d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6353ec25-c127-4cb4-845d-c4bce35daec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7072f9a9-e90f-4337-8173-ee083a8fe781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3718a9-dfd7-47b3-a8b7-97561f04df10",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d9ca18-7702-40e3-92ca-fb8093d02b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a062b86c-1b12-40dc-a1ce-3f98ff6d483f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a983f4-a87b-4fee-91f8-be62951c9f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "caed9b49-9aa2-4d7f-834e-99d6f963bb3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2316072f-1b03-4600-93d2-418751fc3ab5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e204260-9be0-44a6-9bf7-82f015492e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56030c50-dfa0-454f-bad5-0621d8e3f7de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5169b1-32bf-47a9-ba76-1b71d10f09f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68270483-0d8f-49c2-8ee1-bd7bc2dc6ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f652ef-d4f8-43da-bb2d-a73418133cfb",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f843570-4911-4473-85de-2a7b9cebef38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d45937-4b69-455c-8ed9-7311ff850d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7e050c-dc2d-4c9d-a47d-3eb376beaeb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac062dfc-661a-4056-8060-7e3ee274a173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96020665-8e97-4034-8030-f90d8c8f90c6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04892f76-0adb-42d5-b76c-3d237451f6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7e42825-9b35-44a5-8403-072fced1c5f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590be4fe-9361-4459-959d-3841845f7a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d46b0d1-cbc6-4875-aa82-96c31fe218d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c22cf0-dd69-4696-9568-2d9eed45de58",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572954dd-fb8d-42f1-bd25-58e538c42002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b2d023-4578-4487-9d8d-c9a9f6e84c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef2e2b9-2b9e-4116-92d0-be63ac4667b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4837f924-c626-4a8d-99d3-c35025ef16b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8fffab8-4e93-495c-964e-74391b88311f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c151fea-17c0-46e1-952f-cccd80cbe869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c4c285-74d7-406e-8aa6-963b77a7904e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6afa4b-a71b-4415-8055-6a2ed341613c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aeb22c8e-a1d0-4835-85fd-bf23f18c300f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e429e4f-533d-4478-8d11-8b730d6f2744",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707960ca-5547-4124-b658-e504a5ecc801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c5ae9a6-922e-4236-94cc-a9358c4a921b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb31542-70ad-45d7-b8f0-0fd4be6ee818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "394b0aca-53bd-4af2-b60c-5299fff7c5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9de431c-08b8-4a22-a976-1af321c750fc",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ef4514-edf4-4469-aff6-98dc85cdfbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b269221-71e7-4dbc-8118-8c1caa7ec672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d042edf-fc4e-440e-b54a-687a07dca911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "63de2d33-cd00-43a7-a8c0-7673a787961b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3741f81e-11b4-4255-80eb-81092cdd9a31",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3d04a5-789f-4b3d-abbd-c6d6655621f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9309437-034f-497d-845b-184c9ef097fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f496db-38f0-48d1-8edd-e2151dbd7775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5af57728-284d-4ebb-a0db-09eed6296528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ee6f9b-0e9e-4e81-904c-3fe7c64a4004",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c84fc1-a7d3-4f4e-a599-fd1660dbfc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61d1895-a1ff-4bbe-82bc-43312b0808e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb3c5da-a6ef-4edb-a872-e972f6cb4a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb35303b-9005-429b-ba8d-30256daad823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5e29d0-c22b-4d82-9117-cb26ed1b2591",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6e1632-630f-47dc-9e53-5439abd2ec9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5acb1380-3d52-48dd-99b4-93f9b9648ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d350ed9c-8249-4f14-9865-39facc8be1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41d72296-821d-4e0d-ad04-826cf9374b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d245d9a-ba1a-40bd-973a-0b34ac907eb0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec07b33d-9b86-4d06-b815-dbbe2f52a8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a740cb-a5fd-40a8-b944-246dfb6ac847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2022edd-4bc9-4c4f-a595-347b0e4ca079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b3d0013-cc46-48ff-b5e3-9a8dd84cb524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227f4846-3eb1-4ac4-b388-1417ce8169b6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5a5dc8-e9f4-460a-b49d-ab5b294b5ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57b88a1-042a-43c3-86e9-e464a8ecb08c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c451b5-29e0-4d11-a859-1762daf53e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90cd0271-f6d5-4e59-884f-730e6aa06956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c280a8b-f3d3-48a3-945f-b4e1e8553c13",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d8f56c-9ba1-42a5-a720-fbf1ef7d0891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f8261f4-fe3c-4218-b2b2-636f298a7d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8fe9042-c301-468b-b1f2-88262b93f267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "39e407f0-a760-4a8f-b7b9-a4af2622a445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9211387-29cf-41b1-a915-fc371ada287d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb36a94a-d07e-47d3-95f6-2fdac93241bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c603149-5672-48a6-ac3b-a158f47662e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5bc6c23-b7db-4848-af2d-fb0df177e451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4389a9f9-6c31-44f7-ae3f-87872e2f0fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7f9cdd-5d5a-4d79-b7fc-f4cfd305b86d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e061cc6-e6f0-4d8b-ab71-384223da62d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f144f6fb-1d3d-42ad-a423-325a07475479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1152ec72-c4f9-4ff7-a492-37470ba958fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae8f62d-255b-4e9c-b6d2-c61e64e809ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016cdce3-963b-467a-bae1-81298f0cf194",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b41a96-42a4-4649-a4a2-2cda3b6102d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "934c386f-2c1f-4f69-8fca-e5fd6accf95a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5397968-5464-4a96-a23f-e8cf6bc835bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "32abe750-8c0c-4e61-8284-f66fa6617937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45e1ab3-81bb-4c33-a36b-b5b7bab0ac5a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806786ee-d597-432f-9fba-7487d5657895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af70bee7-35eb-452c-8a85-7b38c200c3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab7d894-e67a-4c44-af49-b14abeea0811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55de1818-3bae-4ea9-bcd3-bf689de602d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71087ee9-f412-4a73-8377-0ef3cfd2ede4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed272d82-9ace-445d-adb9-5dff30471773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffe306e2-f5ca-4269-9aa8-db078f0097c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42ab1fa-170f-4d94-812b-6b05c56c4302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d641e2da-c819-47c3-90f0-7b5661998e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111c58aa-015d-48ea-adb2-7d5f1e7f9ec5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b0ccb7-d204-4cb8-b179-f6e045f6599c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ddc6f5-8f02-41ce-855b-99ded8ad8dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1dfa49-2796-40fd-a2ef-f46cf684cbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "871e99ef-5720-413a-88cb-4d283136f4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d405068-b54a-48e9-93b6-2374c446282e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca2a890-9d1f-4be4-b646-7a5f80e630e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c082e32-989c-4157-85ca-ca8af11b66b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a14d99-99ee-4431-aad0-fe405e62c602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "10fe8e8a-6df2-4832-9dab-ad26dea26650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5620f6d2-1319-49e7-9f2e-1eb9dc36e1ea",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41499573-6dc1-4932-a504-92e09732348e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a67e77bd-adac-4c8e-b312-fa59e1449bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959d8fda-3076-43bb-bb50-63b853d3ce53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "710a6c16-8238-49c8-b428-7abf4120b3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78898b20-2f8a-4ffb-b7c5-b603bdbe6307",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5d6580-01f5-46da-ad5e-730a2d3d6de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e77421-fcb6-440c-b8ec-00cd00d7a731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e409d318-2a83-4b93-9d4d-b1244902f571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b044909d-f569-4e7e-8e8f-e3282d7f7475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c2aefc-8168-43cf-840b-b857384722d6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aee6d7e-5529-42de-b0fc-630fc7220d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe2b4cb3-9f7a-4f56-ae09-7b60efcb09b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb80e6da-82b0-47be-8b5f-5b681f0f5c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "31fab6dd-4bf9-4deb-8d1b-abfa319e28cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c872a2-3b75-4afc-9baf-31e3af1aecff",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eefcd17-d887-4fe0-b6f5-778c460019cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e1f3ed-a308-41a4-994e-3795c0a2940e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3520b8b7-dd0f-4eb7-9513-faac805a8960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f71c9f42-4e94-4586-8fd4-118ddf1dd32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6912bb7-c6db-4694-b80b-2585b3b81527",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6e8fc3-e2b6-445e-b17e-957ab4114086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "531b35b8-b9b7-4486-af0a-33d716356949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a95b5e6-1de5-46ce-869e-550afeb81114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7e97a98-99f1-4860-95a7-45e0cb546d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a2ceac-a8d1-4b58-9284-2920852d2de2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d42afa8-513f-4b08-9543-1d6a3d57b2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9950da3-9b11-49e1-b729-e377f15f707e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c17dce7-033b-4d33-bc1c-78814300c1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba3996d-a9d0-4d11-ac95-6422dd3c3346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85d2156-d2b5-40bf-a2b0-f2756e7b8d1f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cccd0cd5-cff8-4006-bd34-1423576b0d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a319d89-b9e2-422c-b0b5-493016d8adb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e0b246-f3b9-46e8-9eed-4b79407ec62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c870a021-56f8-407c-a3ea-547796f7cd27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e42d86f-1b24-42ac-a40f-8211b0c2208a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9f9715-fa55-4c85-b0be-7b07c9f5e2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd60f676-d14f-4e94-9396-7aff9a533838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a8ecf5-7124-443f-be12-2d8f975dafd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "018ec0dc-75ef-43d9-977b-bbc161d87071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067d64ec-ca8b-4adc-890f-171eda63c919",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ba94c4-6c98-4524-9218-753abc4072bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e20fca-b92d-4a08-aab0-7c3f2fe16c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960470ed-6b54-4ca8-936e-ed976c32372d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c70535ec-1b2e-4314-a6a1-e70c1ee6009d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2c0788-a33e-41d7-ae7c-2e8ec507915c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa9e1f7-701c-4b88-9822-992e16695419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57bb5ef4-b69b-44ca-89d9-7e715364b1fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f1f12f-22c1-4d6c-99b6-302c03462900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3ad7b3ce-d849-4c77-baa6-78a5bfddead7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c229c4a6-37fd-481b-9158-57381c351798",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "618f9e14-95b3-453b-b189-3658eb5572eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "237f5bbf-2989-4213-8b42-f39ed3e36afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aef4865-5879-4e54-98ae-059ff3c25425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eed296db-1a30-4364-802f-8ad8ec04d7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b87f4b8-9a82-4b09-8a3a-c3d813e58a73",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ca7971-4e28-4a46-b47c-c2cbff23dae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b071c121-bfe3-4675-ba80-cfba823f3169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0ffae8-83a8-486e-a551-beab6c9e5d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "00b8508c-a5a2-49a6-980d-39c93949970b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b4b53f-c426-44ae-921b-16196d69d01e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b18db09-e64e-414e-b336-a12b0b261faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b70b65-1315-4066-87f5-46c158a0d91d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4fcd04-3487-4953-8e91-9630b52507dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a402bbe-4618-4002-8467-e266a187bd74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e17c42-5d8b-466d-b926-3754d2063332",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef1795b-d4b5-499a-b6f8-6eb12313076b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378b3e30-49f4-4ec2-b811-127070aa96d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d1d6de-97c7-4a2b-bd8d-900461d5dade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9302bb03-5bb1-4150-8b38-dd734ac85e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308568fc-943a-4a4e-ad97-4b2ce14cc69c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd5a33e-9fed-4110-ac8d-20001934a207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50891fd3-4093-4661-bd09-340d98d193f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8f02de-de40-470a-bc69-c28451605591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "213ef1fc-fac4-4de0-a096-4062b256dbe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da85d929-83f1-4927-8107-d8695e0d7e5d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c892f0e1-bf6a-403b-b613-a74cca1fc4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749d72d2-5554-4a34-ac24-d119e5b4e4dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed77284-0515-4f29-a816-0a0db19689e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f96265ce-4a7b-477e-b590-7b9f9d1c0ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb46c54-e263-4d1e-8f0c-7b7475644af7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252e3503-d2d2-4395-8b45-a9c0ebb1c4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09547cc5-3d41-4d9d-acab-e8a2cb149ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98f6a11-a826-431a-b13e-4f6b14789b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9deb1964-6728-4d57-8c6a-e64fbe5f8dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e552d5e0-2563-42ff-ba78-b4b3601bc840",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01783c4-7678-4cc3-a9ab-551347537245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3018b112-48e1-47dc-900e-115a248037e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45763af-c240-4e1c-a7b2-100987218335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1abc03cd-852b-4f06-80d2-77103039e159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f1b811-c26f-42b8-95bc-894e954f441e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5564614-4a7a-435c-8a0f-84429ea9b579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff144a95-81d7-4037-b341-763ee0008cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c648f6d-2dd3-484b-b054-f4612837995c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "80180b62-422c-47ee-8686-1b3daea49e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2904039-01e6-42f8-8b1b-5bbb587fbcb3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92128b43-fb21-4d12-bbd0-6d71fd9a8444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6367e62-f4d4-42eb-9e98-3ffd88f115ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53490e6a-7596-4e32-a824-9d4f43b48f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c65ed58c-08a6-41d6-82ec-e3db25adfee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c55abe-5ac9-4148-9d8f-df8d081ff106",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19769c9-0808-4906-858a-081770db6c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb6c710c-bec0-4ee5-9638-d90019f7d051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edde0d9d-9dd6-46c2-b520-05ea70426582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2d6a24d-3d53-49b6-bade-5e7afdeef26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3860c915-94a5-4959-a06a-8ac9ba14c66f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bacc49c-0e34-4b9b-acaa-5ad9d496880d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03fdb1a3-4313-4b15-bad3-481a0d153f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc49f25-b253-4960-b1bd-1619f72ffba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0b4e661-fc01-466d-bdee-7098179b5fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4888f0e-1c44-481f-bc24-3758258652d8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4ee9a3-f9f0-4242-b876-d68c800905ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23b06d3-7c09-41e2-8f84-034b6141d7ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50b4d01-4ff0-4130-907d-bb6ff767335d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9c1d8cc-5b2a-4fab-b980-89e6fc4633ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a64bd3e-8a59-4cdf-847b-1e9dd81cd42b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b944224e-2d0f-42bd-82b6-872dda8c1739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e847598-a2e0-433b-af68-cf48edb27038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bdc5ce8-c487-4fbd-a227-6a6edce53df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b6a1466-e2f2-4bf2-a637-d153aca47e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63713063-7f2c-4288-9013-a646a030d56a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5e555e-0249-4944-9883-3591c0f75961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9451c590-dac8-42f8-be85-2245f5d4bdb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3939bb06-3704-4006-938d-999a568d2336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41c8066b-f833-48ae-b648-7d9f018def5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6368b03d-fc8b-410f-958a-847cf7e162c7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4d2935-0523-491b-a15c-d90204b257b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e45f0666-896b-41ec-b6ad-53c3dca544a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360664e7-e5fb-423a-9665-1d1f17f59ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "10a505df-741c-4542-bf3e-92f35d4bc374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6204a8-9c45-49fd-b126-247352ef0545",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2424d4d-1837-4b2f-b20e-2ac0e6d91aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab3f33db-fae4-4aba-ba3c-f81178f620bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62262c88-eff2-47f4-ab74-1e736e4b7b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "313fde50-6d28-4fd2-990b-8733f9eec60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1526e7b4-4c3a-42be-bf3b-d78b9e299f16",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3fab65-2c17-4329-9e3f-a6d73e4cfe5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4314c1b7-485f-4051-aa38-681ffc51c792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7eeba90-462b-4924-98b8-c821561f4950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "59129cd5-7dab-44f0-93fd-785360c5bfa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf40f32-7181-4bf5-8f4c-14c9dcda338d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5977684b-7929-444b-8a26-61f3449327cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e4945dc-7db5-417c-9b46-a38f430e7700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfe8f7a-ca3e-4597-be6b-33186c284ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db7e4ef6-dc9a-47a2-8f05-8ad6bb40ca0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033c602a-7ad7-40a5-b625-fcbd8fb463e5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b75311a-5aa3-4f82-9f9d-ad50a210bd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "283588d7-c858-453f-88ed-b3b2eb807e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d9cfff-67a2-4157-a456-e8bd6419e29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d02f050d-b12d-4e57-8c8c-645520cdc0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99242548-67fe-470d-aefd-8e50c39d440b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f165ce2-deb8-491d-b114-ebe17aad77b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33500057-c111-4560-870b-fadd4b24ce3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7563e84-47f0-4453-a6ef-d027e318d74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5af9b35a-2a92-4dbd-8baf-2801f86774c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e963d6a-5c36-400f-b8be-e2d8f27eede8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46675a4-a703-4ceb-8363-65d0d72edd48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "074191e5-9754-4b82-8cf5-ee343d044c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c61928-3d19-4a9d-a74c-53a65789c24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f0956f-79ce-4a21-8a63-2a415db6c91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ec0f62-af9b-4853-8e99-e3b151a4d8b2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e30a30-d521-470c-86b3-2814d132d7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e53175e-727f-4eb4-8d64-cddc96315234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055ef742-5e27-48c3-bdbc-0109ee8627dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "48458b01-2f0f-4f29-b191-542ae2cacbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d252ec0e-e900-4ec3-a243-565ce39e36fe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7136f327-b73d-4de2-9bb4-43f62fdfdd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e5418f-019d-4dba-a45b-146154701e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f3ab1c-3fc6-497d-a0bc-6d5e43c54a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0d0165-4126-49a4-b314-8ac104f36faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400dee94-ee3e-40f8-88b0-35ecba79acee",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6edf81-ee89-4e11-92ca-889a443a7da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c49fa933-d24b-4ec4-8503-b5782474e38d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246f0445-04e4-4af6-b130-1407730c7371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f40fbf54-b767-4cb4-9a3a-269b1bae4a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb060bab-3bb0-40a8-85ac-5fa4a695cbd1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e653ea9f-7451-4e81-bbd4-bba983e1cfab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9473b275-4d1b-4513-9c8f-c531e55c3cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f562690-1fdc-4f3a-bd9c-1077ab3a7269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad8775ff-2c9f-4f68-b924-8c589865ce4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1c735e-c4f9-44df-a46f-5145e855cbd1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d3cbfe-648a-4c43-8620-9a85ffe194ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "921e2650-c7c2-47c7-8e65-8dd9a6afc501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65311f76-0949-48ab-b210-f332184ee62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d8c4aca-8172-4c43-8062-c823a1a3d5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99105703-7a90-43c4-aca1-0e3228d3503d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afc46a1-45c0-4a49-8e2c-e88550633fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b479f6-d1db-475c-9a12-1a4d13f9abc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d7aca8-f98a-414a-979f-1293cba9102e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "96d6df6e-93ef-4a34-a0b4-f23fd18fe8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4da864-2bcd-44e8-8ac6-d86986e4a772",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce3e85f-3428-4c0d-8bc8-bd29fff8ad1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c7f0bfc-024e-41a1-808c-ba3090e62c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1124e2bc-ac0c-4bda-a03c-06f3963cdfef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29184b3e-32d3-43b6-98ff-e4654276263c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4798627-1a78-4203-8b81-2e71d0a3c371",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60b5eb6-830b-471e-ba99-ea8c61631bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ef7ddd-8bce-4592-b140-5bb96f922e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7803207-a647-474f-a6ab-8d14098f990a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "097bbdce-cee7-4ea3-b128-f4bf5ee1b7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75c1e51-cd1c-4396-a9c7-5b854e3cac13",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f94827-1e52-46d7-ad60-8d025c068974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb33c3e-2df0-4dfa-99df-1a1170f91ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ae0855-e1fb-4fc2-a25e-cc87d613466e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c382821-d9d1-4aaa-8c1e-c89d55e5106f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945a68bf-67cb-46ed-8bbf-5eca1523fda0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce4f6a5-03eb-40be-bf2b-4f71b960aafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0630c11-6a32-464a-9858-484bbe032140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14b5fc4-9aca-4706-ad00-80f8b782d143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8668a116-06b1-4aa4-86ae-856ebd9b3da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa959c86-c0a5-4d93-9397-e018238a0610",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89b8e57-0e41-492b-9985-aed6872fb95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e75b9b-b2d4-45c9-aaf6-5c1d96ac7007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0d8fd3-f5c7-454a-85ec-b09149441ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "01585b10-eb86-479f-8afc-fc046befe274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765666d5-f22a-4590-8df7-55a842ecf6ab",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35888dd1-ddbd-4245-8ca2-4a766eeb5903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d389d6b-2dc6-48ec-8d12-eb4076d8c038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a26ae4-d0a8-4753-b7d2-25993a8873dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fea30362-a9b9-4f19-8d81-e78a83cc9f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e65566-609c-49eb-8aa5-6c26513fc5b9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de96446-d651-4a79-a76d-24b4465a205e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fc434a-a7fe-46ba-a2cc-3821a4d3c993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26424109-27db-497e-94eb-be373bfa3444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e07c748-ba95-4cb1-a52b-c4cd99663d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb11054-b3d0-4e1e-9e97-8e7513c4e504",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59e84e6-b963-4338-bc5f-6c5dd57385ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48708c3-5c5a-4f50-83c2-3fa62f5a8695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4efa3ce-0ee6-47d6-b1ba-4b836b027521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb601f8-a3af-43fa-b0ad-df550fe71af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67a118d-bd51-4c25-913a-2759f1e90d5b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f00837d-d0ab-416a-af40-4ffc05b7b70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a6fac4-321a-4a3d-9cf6-fbf3cf5eaf63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed9e4a5-5681-4182-9462-0bbc5542e2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d74735f-a1c8-4d43-9bf4-c7446c35f615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dada9324-4402-43d5-949a-327f3ecb6637",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cef3b87-09d3-4c67-961a-209b272907b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47a25fd-d447-4462-b2e6-78f70b53ac54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84452510-0d26-4910-93d0-b4fd9031b637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70c61c34-c0ba-4759-a2d8-23103915cad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f22af4-ec56-4432-913e-5cdf2d96f81f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f815e1-442b-42ac-bb37-90aad5729c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf015258-e7e4-48e3-b78a-09dd840f848f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69382bca-2445-43fb-aa6f-5f88703e7041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55a68dd4-be22-47d5-aabc-acd23aa95513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0c161c-b387-456e-924f-d969346c5164",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240c9cc0-dbf7-4ebc-9236-aa6e528f555c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf5000ca-d098-4d94-997f-45f153ce8ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4478a5d-58b1-48c8-8e04-27e9aa644bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a651aec7-aeed-481c-afda-0ddbaae00b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1404a35c-70d7-4133-a367-d1530b0ce59f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fffd62-15f1-4db3-9163-b939271b2d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a7b1e6-bd84-4247-a301-18f493626eba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fb3b4b-9298-4fe3-956c-fc98cb090ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dddc8f0-cec8-4697-873e-d6b3d72ec562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368ab292-4cb3-48a9-ae58-3c762a513e0b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ee35f0-ea67-44a8-85c1-961a8607ac8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9350ff17-5691-49b3-abe6-eab26d88df7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04990cdb-26b5-4459-b36e-e23d0fd1f6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b78e0acc-6bc0-4dd7-8742-4309b310bfa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5039eba3-e283-44d6-866a-600439979131",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f246176-8e63-4e7b-a6cb-9e22922f9bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab73fbc-76b8-42a9-a452-7cb2f814b2bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f62aa5-d6ea-4d4d-ac2c-946ae5285623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a5fd5b5-db0b-4ac2-ab8c-81e6fe7681fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b843d013-9e18-4b5d-9e36-0fc99ee35b16",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e540fd-e355-47d2-935b-ffb955be5328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "babcd02e-c73e-4a83-9ee6-b448a8ceeb1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0c4ed2-54b2-4f2f-aba7-3b98fab7242b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "caf8aec9-da06-458a-a81f-681a77fe2e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a672f780-6204-4fc9-8d90-b5eae19eddf7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36d2462-7db0-4eef-9893-48527cf89ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1b71ce8-b050-4880-b955-e5a8cab39a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5d3fb5-a4fb-49c6-b9cb-9a2d1a569a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a68cd13-b36d-427e-a065-a99e7dc16239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273cbd88-ebda-401d-827e-84b6c9ec803f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b9a9b3-2f36-49e9-99c3-0d2bb6545d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d8055f-3c33-46fa-afb7-180d04dc695a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed793323-bafe-4d33-a63d-18fd5a5656a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b3a519-a4de-47a7-9d6e-fa032a534728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4f356b-f8d5-4204-bad3-35cf185f7a46",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e26faa8-cc9b-493b-af60-dafca014126a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "164ea9bf-3ab3-4578-88b5-c09a71470f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02407417-410a-46a4-9606-b76844ed9759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c579727f-9421-4625-9d57-8ddbdd34d50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8bbf51-736f-41a0-ba2f-6f9f794c7a14",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25757a11-c2b5-4e2a-a2ec-2b59cb4b7e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f9b88c-ff7d-4dce-8f03-d30ae58e72a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3cee9f-360e-4a30-bfa8-99387ef15f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac4f4757-abd2-413d-ab3e-c190e940c3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a3fea2-ced0-4583-8da2-f886b7365a40",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4294f5-c6db-4307-b34c-789436fba32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b53dd5a7-abe2-4967-88f1-f6634b130c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4c7ff5-1426-459c-9a21-aa7ea7f45b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb25a6f5-fe70-4376-b937-043cc66b4aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650a4456-f97d-433f-a085-7793fe27c65b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b4cad9-e552-4a90-a5e2-d1217ce34fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d19c444-b382-416f-bfb8-3de1ac63caaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3465ad59-3c95-4587-9b07-f5c687238705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "768c877d-20a8-4a6d-80ae-a4a95e280b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378cf655-c7ac-4810-8d9e-d4e20bd13de1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9802b85-fe3e-433c-aae6-4a0a3874abf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf9fc3d-32bb-48e2-a52c-9b83ecb24b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f02ecf-b4e1-4d6e-b21b-cb88a3b79167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b32c9484-4e41-4b4f-b7c3-25fa999c5e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c584a37-32e7-4217-853c-c8e8b56b5b85",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4c24a0-8012-47d3-8c22-6974bab9f2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53fd1f21-274a-42d4-bc32-273677b6d856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92395f79-2717-4aa2-91cd-6a6d7b49670f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "507975fb-7722-47a9-a5e5-4db109fc317c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54e5f04-a111-4ca5-946c-03537bf0be15",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21f9c21-e660-4390-90fc-a02b0bf6dd8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71577ce6-05a5-4869-87f4-6527ae9bad25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80669f7-8611-4644-a1ed-d88e35a0539e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c382cb4a-e426-4397-a36c-457d35537283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc57f72-eb6e-403e-82a3-8c2d9415609b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3a5ca1-1167-49da-8130-062dc94d2f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44dcf540-1c5b-473d-a8da-308797c49b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7cd56a-14cd-4666-b65c-f4616a9a457e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6197da3e-8225-40cf-9f45-50c33b0efad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1a6a4c-6549-4830-a184-95ca0812a0c8",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c4d71d-2405-4be4-9c34-1fddcc48ac7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14775dad-7a10-4acd-a777-0ee339adb57b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cab3437-f0e5-4e6f-a3fb-6819b60290b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e37dd9e-b58e-4cbe-8b52-4c3a5630f714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f843a4e-077f-4184-827f-1fbd1673c4b4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9600f0-0579-4dea-84ec-0e9d7dbd2501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a01321-be6c-4e88-80cb-7243cf7bb578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45dd1b49-4a8b-4693-8a0f-32cedcd8a7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "05cb7f17-9e33-446f-906b-7fa167746fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad672d1f-448a-4999-8691-17a65e6b3d4a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17734bd-311d-4d3e-831d-0223655def86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "be63e04d-06c2-410c-8516-e30d4b24fa86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12f4b91-72ec-450b-83e4-3db2e0e01664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2376f5ed-bdd4-4090-a314-5fc3191d2355"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b5326b47-0699-40da-9902-116029c05f58",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "073d920d-6aca-4f38-a020-242831d0a44c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d50798e-841d-4ea1-aaf1-2d57910a0e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d8df55d-b26f-4e74-913a-8c89ede668f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32a538c-64d3-4715-8443-567d536ac975",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "92889407-2c48-4dcf-8a6d-e9599b856c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33c9794-0128-46f7-afcc-742a312f9180",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afbd17b-bc15-4350-ad43-649577d81932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9b860ff-53ce-4da9-a985-a701db9dfead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e3b079-366d-4430-b546-26a74a58e741",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "23f36e5e-0466-4f9b-b3ac-0ea3ee2191ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "734e9fd4-baa1-4d98-8b0e-d8162a804227",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76428c33-a472-42c3-9071-93c565a37c87"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "87264d06-d6d9-4064-ace1-f9dd2f2b25b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "766c134f-c04b-434a-bb9a-3bc21f43bdb7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "10173e68-5b2e-4750-a962-6188b5f92463",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d38a1714-9e93-4d85-a68d-ae76dac4af64"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "64a76708-1492-452f-9bbd-370c4437a16f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b29049a7-4f1a-4cea-b4d2-be87f2a007ff"
                }
              }
            ]
          },
          {
            "id": "4bf21d30-7823-40d8-94ae-ae0ace2451b2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b9112922-a674-4854-9d98-e5f8226a4a19",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4142007c-adc9-49cb-bf2e-c410892abe14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8179a48-fa8c-489b-ba86-8d70ac7ba924"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7dd2cc81-cda8-4c8c-9a6e-4063e7d948cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "acf56592-647f-4aca-af34-ed643f4d81c9"
                    }
                  }
                ]
              },
              {
                "id": "45c71e14-ef53-4d08-87a0-a3a8904c9986",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7de4fa2-a8b9-4bd0-816a-d44bc1d51ce3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc302e46-faa7-4fb9-8a8d-0e590a3fb2a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15db14b3-87cb-43cd-a257-470872ea1342",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3839b00a-5d0b-43a9-a2c7-05c476198c58"
                    }
                  }
                ]
              },
              {
                "id": "ccaa3a76-e26c-43cc-9bdf-c385cda46c79",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfc70e0b-421b-4ec4-ad3b-9d2c28df1d0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2117232b-d2a0-46dd-b304-fa386a8ce784"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32a1cd1b-96e9-4beb-a428-577d82571b55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "824afaf5-5c30-4b9c-9df3-2982f2ee2b72"
                    }
                  }
                ]
              },
              {
                "id": "50cecc5f-e6dc-496c-b302-9dc2fd4d399d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "253ef9ce-6c7c-4051-9bcb-cb831c776af6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c31f09a0-beeb-4423-92ab-6718e752f086"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65927884-8682-4345-9a2f-af5c1c594f8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "80feb0b5-7d53-42df-b95a-7606bb8bb91a"
                    }
                  }
                ]
              },
              {
                "id": "9dbf4f3e-72f3-42bd-9639-c9b5f2ba1471",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab5362b6-a233-4227-85fb-af41f642850a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8efd8852-b6a6-4540-8dfc-eda09d0f677e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6201bc85-e808-47cd-9d33-1a1b6351f3f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a16dfaa9-31ef-40bd-bd84-a00c43184a28"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "be75ef2d-4aa0-410c-9c4b-64b372733aa7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b6451fb6-b8a7-4845-b285-5132c775e6ae"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "682339e0-243f-4959-b185-96da9079edf6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1fbb0496-d7ac-4585-84dd-0e7d64bfe13d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "398dc4cc-f416-4fe8-97a9-4004a08e442e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "354aef18-bd6b-4265-874c-bbbcce20189a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e618e86-1bca-4ee2-8689-1a486c8ad0b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "feb8b95a-623f-4634-8fd1-6be1d3153960"
            }
          }
        ]
      },
      {
        "id": "bffbe6a1-3a47-4e2d-a07d-a5181301a38a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cabf28d1-7dda-44ab-9864-6a37b41dccee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ca3173b-48e8-4d70-aadd-9da02bb87e07",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ce6a4386-d66c-4cb0-a842-54b9107b6e6b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "261ff730-2e94-4b4b-be56-32537ec5f508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f77c92f7-398c-4c31-820a-24b3ee4779ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851d9802-69a7-460b-a552-46110b2a8343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "858d8646-ef73-4a2d-bad0-583e6ac0c90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001c9b30-1bcf-4b40-b510-cd65702714c5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb195ec-2651-484e-ad81-80fcfba1f751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d8e6f0-5ef6-45b2-85e5-1a137d6b1d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411d7b0e-0ade-4ce7-9a0d-ba8a244cc535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ce22f8-e67d-4670-b88d-43dd7c86132d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d08f77-6081-4946-a484-857f39114896",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d1946a-279e-46a1-ac53-cd86a785533d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7612c47d-761c-4ef1-851b-def3dc634833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491b1e73-1ddb-400b-a2ce-03365ac9fa23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf1e1f2-9024-403a-a85a-e45366f63637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ed8988-9bb1-4d98-b71f-dc1667a5fe79",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4572fa80-4d1f-4ab9-a204-d891d18f0379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85344f27-0b75-46d8-ab21-36332d44deca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c82deb4-7435-4f31-8c04-9046fbbb15e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b496b62e-20f0-4059-9db3-80a934d068a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed25cc0f-7573-4a91-b2b0-8cd4629da600",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a16f77f-bc74-4c74-8b84-23dab2fa3364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "527ec07b-1746-4942-b245-32c5fed47f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de52edf6-e903-45c1-8e9e-4660123cc6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3114ce08-56ce-4ce9-9f5b-a4cb7d3051b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bdc62b2-ac4d-400d-9ce6-e33895279219",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b65efdb-dc8b-4f9e-8896-2af50f3dd12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "638e3bbc-e5ec-4c00-8e90-56bf89aa6bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644da316-5d9b-46f1-b585-e37a2fb0beb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "00add984-6b9d-4a5e-b65c-af13062bc3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d968d8e1-dd9f-4939-aede-38b9e64c9204",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5bf49f-1a3e-4433-b762-399b488b645b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8985520d-7bc0-4856-8180-e0d114b35269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bf0921-5dbe-41af-943c-141be49b7a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc0b5856-5a35-41f6-ae34-2f324d0cce8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad393b48-c358-47bb-8e9e-84816675419a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29fa257-21b8-4d9c-bce7-252061b17429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "958b07cd-243a-4bab-8334-2aad497ad9d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f480e57-31ba-480f-be5b-bc1676480269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0896cbd-fb46-499d-a1ad-30cb656ad99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f06c6f-f43d-4fe7-8539-510c133e5ebf",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0a0a31-6726-4772-9287-d4154c7e2458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1311c46-9773-4c9b-879a-eb132e9de946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf23f209-807d-48f9-a822-e887285349dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00fbb6ad-314f-47e0-913d-3f6ebf5117f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4ecb26-0554-4bbc-ad39-e817310ca069",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f22b09f-c012-453a-a0a6-694167151fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c183712c-fc6b-4688-aa28-b1cad364fa75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c637d1-2f5e-41c7-adff-536cabde4646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b654e0d0-c37c-45f5-9151-f6a756c89751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b887a26b-70c8-479b-8c25-2cb330294aa2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "337c5233-e63f-4749-bb40-243cdace4411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a16aec-414b-4c06-91bb-238c948aca0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba76cf0b-fa1e-4466-81b1-15bd7c50fa2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4e6e8f0a-f860-4311-8514-62517160e0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57228c16-06f2-46d4-9d33-3b5fe34fca27",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96938f4f-0757-4c14-a055-a7e60af9f153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd086118-2e7f-44d7-8a8f-e74c4e51592e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c992a87-dc99-47b4-b7d7-46d9640f1bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "18b44206-37a7-4773-906b-5d883ba65913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e840281-0f53-4b16-988e-8201cefdc49c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcfd3912-cc6f-45e1-955b-1ec73ecc871d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c93384c5-a004-4107-ab98-a78e6d133a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e80759f-1f67-4d6a-a0d7-bc591a6117fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "56bfac74-ac25-45b2-a4bb-679beb072181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4256e632-9dc3-452f-898a-e1bac96df149",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eea990d-e303-4375-8e90-34a8cff6ed2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e624e483-34ff-4340-aca2-ba6f249b8aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e3913a-05bc-4e41-9ef4-c480bf13bcb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e1c49ec-5252-4ea1-93d3-90da67be943a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1604bc3a-e490-4d8a-bb75-ae4793d5c7fb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ad7a11-6a5c-4ece-85e2-f9df65cad7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61b6ff3-f4b7-4e07-a7db-d4ac0c4ae43f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d634cc-9d25-4dbd-8cf9-be39fc126952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e41f5454-62cb-4591-a3db-91e17a2b5c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e28bbf6-6c6b-4442-9b03-4bfeb2db904d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cc668b-f28c-400f-848f-18e4d53c3a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f37c19-de94-464a-8f7a-f4a0fa3f8615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8138df-4c67-4a28-a343-8c3056ffed36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "99f40d37-7c77-4820-9f9d-fc1e9046cca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b603b7-5380-415b-9272-4c23fdaa4231",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28f7512-4b91-4ba5-9982-c98a6e86dac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a65b59-dba9-4a64-9b56-e82531a92c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5047933-3d44-4c2c-87cb-0b1163540d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "04d8712d-9fb1-45dd-92c1-51dd8ee5d2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7ce883-5419-41de-a613-b40e0257d848",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5174b722-1e70-4d83-862d-1bf44e176419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a25206d3-87de-49cc-b844-cb16ddebb67f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8a8bbe-fe74-442f-888c-25ce79dda72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2e2c004-e2ad-4483-ac5a-616979d507b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d69aea4-001f-40ec-9700-c911bc046468",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0661379f-365b-4d6a-bb92-83a0118caeba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18cd0c21-8a94-446a-855a-063a6f13b103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dcde8ac-13ec-4b68-8e61-884db75c2079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e25c4d1c-677e-4709-84fb-2dacf720c921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e775e4-05e8-4025-8dd5-b92f08671bdc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b89fd74-c9f4-4a31-9d35-e99a481c555d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d7b7cd-391f-4ef6-b9b1-86a1b502792a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fde315e-4791-48a9-9e97-a220eec40964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c43779c-a445-4c7e-982c-71c15636a96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff002bc5-102c-4c93-b473-b737810e9506",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86a01f3-01ee-402f-b0ea-1cfdc83c6cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4482f5e1-1391-4615-938d-957a0f6827ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a6fa37-def1-479f-b7fa-302d5e21402c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db63db70-71bb-46fb-bd71-d9effd52a41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807f84f1-22e7-4202-b43f-2f14e4a0c7ea",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23594b5c-a2c4-42b1-aa15-81e441c9b6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6518744-06ee-423c-aa64-8e5c13db8a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08dcc307-e9bd-49f7-b5f0-c42cba1adbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53f3dbeb-b472-4316-a9b2-195bdfe35e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de65f67-e902-4664-b9cb-6dbd74e8fb88",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f79eab-54c8-43b1-bac0-f9acdcc7d91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9691a919-93cd-4432-9337-dfde0a93688c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b9ca2b-32f5-4a9a-aace-bc337b99fb03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65c35174-44b8-4429-9d0d-5c2362348976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ff6cec-2388-452e-ba91-ee23a0ef4fd9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafff006-3588-4652-850b-169d654abc57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4454413f-551b-4ccf-8dfd-62c41a9cff9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1cbd89b-9c6c-4549-90d1-5262fe6dfec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a59a896-ae5b-40d8-8080-08912bb89394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7838d4bd-be61-44f4-bf30-a62cd6539e4d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12235fee-8506-477d-9bcd-6e00a3fe2934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d047ed56-86a3-4dfe-96ba-6d16a5625a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ae087d-8df0-4bbc-ada0-6bd7c344e306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21d753d7-f65b-41e8-9839-6c534e69cfaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862a319e-9bb1-4f8b-9f3a-6509236c4070",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aff4e0d-304d-4572-b3fb-9260c5959cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d8eb9ec-9b90-4a39-93ee-7c4788603c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07340e01-2eee-49df-be6a-5c0d1ee73447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8590f0da-22c6-4fe5-b86a-e0790a43977e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104a8bd3-1ab5-4fc7-916e-89f306afa646",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23092e91-cec5-4626-9b14-ae281e830b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6bc4f3-324e-4350-b480-6c00383e112d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39075076-844a-4f70-a91a-4b2d908f54b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e412a217-7622-41cc-bc1e-9735f670a656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab16cc0-1e7e-4f57-8bc5-4744f56d808a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f099d33-3a27-4e6a-b856-9545e98e014e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d24867c7-0386-4ef9-889e-2749fcca09d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dabc831-0c6a-4337-91b4-580cf69c84f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8790434-9193-4804-a482-d78696898828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a335427-0678-4bf7-83c0-38531595eb3c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f6c0ce-2c4a-48cb-92bd-27fb6373ba75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b13e65-81d1-4c0e-b8c0-99ad6bb15651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9e29b3-ebd6-414a-bc32-aa5849c91f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6ac0a57-3546-4fe0-828c-781807872608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e63699-3980-4b23-accd-81930ac0179b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c48682-78c2-4d2f-9540-aa91846fca43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12ae99f-39bc-49c1-b622-b13146506ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e1fed6-1ece-42ec-af72-8b30ee0e1f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "280b0139-9691-47b1-9507-bdbc2e6f2862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5abfd2f-5651-487e-b46d-6f6e1f021238",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2865d2f7-40a1-41e9-be85-67af417f70d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ae67a9-207e-4abc-a72a-af27dfb54483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456a6b21-cfc0-4263-8f9d-9cb4914f673c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c00ab8-5b5d-4b1a-b206-6a1c2b19fd79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4255325-26ce-43fe-b104-dd60fdb696ac",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889b65a7-c4c6-4aa8-8ab1-5323ed78f43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c3a64c6-3aa4-47c5-9ddf-16e25feb9d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1d6928-c06a-4af4-a56c-db697759e832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1730e9d-9c29-4138-a4ca-efb1bea12a09"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8c2f38cf-29c2-40ca-92cc-59df08b21539",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e806f616-6a10-440e-a5c5-535c1288fb68",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb7d65b-66dc-4eab-92e5-cd65aee26a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d3087e-5660-424b-9525-07846904d5db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b330e039-a716-402d-bf31-7e2e8276ebe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "acf4f61f-60bb-44e4-b00a-401011638a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a80f60b-a044-4255-8f4b-cd6952db23f8",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726c914b-a186-47a7-a303-d5554d086de5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "82a9522f-15b7-48e4-b786-819cc6f6a561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf2cddc-24af-4231-8b83-c85ed55269e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50234dd2-c068-4558-9b3c-96c11491eaa4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf2e128a-3a17-4103-9f64-a9b432017c28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50371298-fd63-43db-8669-73575802dea5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6218193c-7ed1-4d1e-bd51-eb86323f327f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3fd05ed8-95d3-48f7-ab3d-956b9451ef0a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27b487d8-6ce8-4106-927c-0074bdc652f4",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "429783b8-3f75-45ff-ab11-d92aae284bf2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4bb8a2bd-b5b2-4a03-8e46-b088108e0e38",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7cffeb81-3f12-43eb-89de-fa26ddc4a431"
            }
          }
        ]
      },
      {
        "id": "e8c137fc-866b-4695-bde3-242935644713",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e1643d5f-c30c-4304-aaa2-4ff7aecda527",
            "name": "Negative Testing",
            "item": [
              {
                "id": "56b0e898-a009-431b-9a45-94c2d9887e12",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8782aae4-1d29-47ef-9a87-c1229b12a6b8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0242923-082f-4baa-acb5-6588ff1bc7c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de2e4ea-87a5-478e-b208-7fe58350b58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abebe589-6da2-4037-b5f1-fa12126d6a7d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50669495-236e-44a1-a298-983349388812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd546a4d-21ff-43ad-8ba3-682e2e614e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e981a0a-f5a3-4b22-9618-87e81d69e2dd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77af4fca-b3c3-4151-9d24-1b84f60057a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49a5030e-40ec-4ae2-ab47-83b314373777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532ea951-4366-4f7f-9e3e-1d98bc292f49",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cd084f-dc95-4d02-84bc-e9909e77d05b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d7ec8a9-f47c-4808-ab69-7b8b5a2b0a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba907f17-7daa-43bc-b4fd-f9764c26bdab",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1745417-5c29-4a6b-a735-9685c0788193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52aa1a02-c614-4307-a930-9e1435563cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d56b0cc-f961-4376-aa81-6ea8ac3ae5d7",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb93e0c9-7c76-4fa2-80ac-246ef52eb856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35f8afab-fbe1-4f5c-9458-2c5f5768f82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7e1f5c-3eb6-4330-9bf5-3a8f71f61425",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab3fd86-905b-489d-9ef8-34e42bbea348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b52362b5-9c2e-4932-9537-b82528d89d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bda26f3-abcb-4691-89f8-4abee83c7127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6858bafd-d93e-4d61-a939-fefe407d1aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c744f651-96a9-4c74-841e-3eb87ae40d86",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf12349-5991-4e2e-99fd-cbd5927964ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37c90e2c-537b-4eda-844d-dee179fdd8d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a35fbe-7e2f-490c-9d4c-498a6f2e33c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35824866-b864-4699-ab6b-63ba2d0cfcca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13426d9-5374-4be5-81ac-f2783ed5614d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1216af-83e8-4244-b593-be2581d24c56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24851dca-976b-45f1-a0b7-d53024cd1cf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73285f9b-1d0f-434e-9ebc-dc6cf4d74cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49935006-bb91-49e1-98e0-c609fdd96e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d5f283-b800-47e0-9da0-57874d253220",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8532f9-f63b-4ba2-a502-9b7fcf46f213",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae7a69ef-712c-4c1a-afdc-1626f45ec93f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db6fef3-66d6-4b1d-9200-aa36c9722b95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a65cb27-88a9-49c6-9c2e-ddee0eaca3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab2fae9-051a-43d9-acd0-2f0a3c73db0d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e07aa8-8a86-478b-8e7a-93de75614994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0afd32fc-5c03-44c7-a556-28088d2e4aea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4190da-8e8f-4281-9f73-48f5b994cfe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d702484-1b22-453a-89a5-5d9f9051ade2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356600ce-ed65-4075-977f-5f5057f4bb00",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85f772e-eebb-481d-ac93-876d2d41bd94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0e0832-afeb-44f3-9d64-680d14d5803d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d050df-b8af-4a48-9b38-a6e57617eceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24647d9e-73b7-4b47-8273-579e0f21cf4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5945f6-eac8-473a-81d9-3bff2ffd5808",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23de22f7-9158-4318-9d0c-8087f53c8080",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbcbda30-2f23-4ef1-b311-e64cd9e964c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3355218-b117-4e9a-a3ba-19e1f98f8a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39e35e16-c8a8-4a9e-871e-01cc7e778c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7292f61-7701-42cd-ba80-5ce6109c9675",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7683639a-4b88-4f65-8666-c1a63536744b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24c7aa44-0851-4b9e-a1e4-22786a11d54a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d87ca81-a59f-450e-95b1-bea437fb9ed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2cad7d-a313-4fb3-bc28-1f174a10e6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d4ff7c-432d-4efc-ac15-df8e25a31fd1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2472715-2cad-4954-bd9f-cf3817f0286c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04012aac-b0cd-4f13-bb14-781a7a000d2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5e533e-ca60-460d-9cfa-53b2a8232774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a3aeafe-0a5a-4743-82ff-fd021077f1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f695d65b-a698-4d68-aa19-ddf8b5e716d6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11dd85f8-6ffc-4d96-a4df-731881ce00d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9899980-6ea9-4266-a28d-18dc9b18d146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04adf35-1483-41bc-923e-974a2bd1c419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5643950b-2daa-4df1-ba44-e24fbd1d3b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f529f8a-ee9d-4304-ab85-352c4a00547d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288c355f-0a10-49a3-93d2-ba796c1ce861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c50259-246c-4dff-9867-358770bca4d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2925f02-9d09-4217-812c-261ad045e02a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a491599-6e69-4690-9c54-9fdbcd013580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37257725-e3f8-4742-850b-8296dc59a6a1",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9681f88-3291-4c72-8d9e-73cf403a60be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f10b2575-eb1b-43f6-a8be-edd5c148a702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "084b6947-19eb-46ac-91b9-08d2c066165a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "307c3e7c-7c3a-412d-a7d0-50027433048f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4ae172-7e24-4f8e-8aab-b463c45295a1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da432c04-548a-4a8f-b839-33a36b4b50c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d013dd7-e801-405c-b517-93c6fe9a104b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c895170-a310-4f4e-9bc2-21f910575039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d0ea49-fee7-43be-95d0-77fae6be67f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ab9318-41bf-454c-ac24-04a9f788fbc4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f8ba79-c492-4f56-b79d-d85d78150e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dffd00de-281b-481c-90f6-65252c0570ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3870b14-4220-4fc5-a30d-b80aa8fa2b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ee742a-0995-4b33-8fff-380863fb1edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39513eb4-df04-4620-bdfd-259953aa602f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0d4651-39e7-4d3a-8971-83b07dbde84b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e6e529-ecec-4eb4-b311-350f64265db8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5619c00-1fd8-4cd4-95a8-f60b61b2e790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c62e1d7c-add8-4185-b8a2-a428020161cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7b1544-0b8c-437e-a9fb-e8e966aed360",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc72d22e-90b9-4c48-82e1-1b88a3ef07a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff7dad91-2743-419b-840d-84308a48c0f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3314d6f8-927c-40c3-b794-7d5e87d1403c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f09ee2f0-4dda-42d0-b062-8d9ae298439e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44fb24cc-06c9-4c01-a8c1-51086cc0c585",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174a537a-7d63-4622-b2ea-0428bbc3bc54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e2c4bf-5f0b-489a-9ced-607030fb04ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4a09d6-09ea-42f2-b484-c60df7ba782f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb532025-8ccf-476d-9dca-f51a163a005b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5c8f5f-35c3-4729-9e24-9368849089d0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e750ce11-6846-44a7-bb23-294e53cc3435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4347d74-19cf-43f9-936a-681d76a20ff5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6f4ae4-44a0-41ec-b8ca-766abeedef09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e93a9ae-cc5f-4493-84e9-5d8ec5cdcbd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c7297f-40f9-4faa-8ce9-134559964770",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009b92d2-28ce-43c4-b551-27370d6b620e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f85c045-2eff-41f1-b1ab-6d87b9d265f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee5ee03-d88c-49b2-9f7c-90bf1a1fd60b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab27dfd2-8419-4ba2-84c1-e48728c16d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a698ac2b-7a7e-4c02-a3ae-72f0bb38e1a8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9e1ebe-3215-4802-97df-6d35d447155a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8b5ade5-aff8-42a4-989f-0f386bdba9e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "002bc814-8b5d-47fb-a401-2b42e650b10f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76dc0eea-8c21-42b0-8a9d-4718e7072e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cf79de-cf69-47fa-b887-f1d05283aaab",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3133257a-ac74-4c4b-8469-2f2884df36f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca15a3cb-cb67-453e-b580-555357213213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b505fbb-8bc8-4c0a-b084-918673fd01f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d66400-2d26-4601-8413-f8891b491b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97c96cb-a7e5-40c5-ad7a-19851c3f0c23",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921f78c8-9eb1-496d-9704-f461438c2b3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e90a860b-eaa2-4c28-8062-a3f4a59cecb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f907ab-f7c5-4b3e-b935-20614b617dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def27752-4b05-473f-8f98-2783df8cf251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2cbee7-eeda-4e2c-98bd-d642c9248c84",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fe80fe-7730-4fbc-9fbc-7a4031fd31dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2d18f40-8534-44a2-a332-38370777133c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dba69a7-ea27-403d-97ac-f2a54f60fd90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d31ce3-a399-4dbd-8f32-86befa399308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5517d7-4f19-47a7-8f1c-c1f3ea1cc8f5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b28fcf-7ebb-4575-9dd6-893cb8ce7f83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f135718-2afb-4ab6-b374-9217807a5ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f093d5-cc3a-41fa-b74d-45d49c0faf83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd462ba-0c92-4156-a1e1-27b7ea147a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b691927c-60ce-4774-86a0-cf914bfec5b3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a30f551-3352-4f00-ad3d-3c2374f51e83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfd6814a-3035-4149-85d3-cf224ebd9852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4e175a-cb67-4f79-92b9-5a4a23c44127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66cf364b-00fa-49a6-b331-125744275224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216c533f-7f8a-4c1e-a2f0-b983c03f934a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19df8d09-cdc6-4b9c-8ae6-71a996766cd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6a25f0d-578e-4aab-ae6c-dd4b935d9a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb23295-9bc9-4791-b5e9-291296bd5343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e3b1b7d-2e09-4adf-8a6b-2eb9187c7305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2890f675-1cd6-473d-a7ec-10941518f808",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46e782f-2413-407b-8424-ff9d0f605b71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52cecee3-7693-4efe-9309-ffe344e8850b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cfa72f-7961-4866-8339-fe68a73fa2c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "792c77b2-147f-4c02-be2c-7a5022057709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca82df20-56ba-4cfb-b016-9cfb83d396fa",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07e38ce-6f59-44bd-a097-857baa3b0e43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ae63df2-5b94-4845-a528-16a43d554467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0c5413-764d-45ca-8749-067dfa9fcc52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6682d1c-5a48-4421-afa7-06dd09b69cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e089265-1fa8-4499-86c5-d9e2463e59b9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8c41b4-cade-4a97-abf6-a60926412158",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bcd973a-304f-460e-8d55-e84a07230beb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c08386e-50b3-4a02-98ee-fed0f5979687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b753fc-041b-4987-b07e-daca03472286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db88aeb6-4b15-43d6-b585-28edfaa06884",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e746ac1d-53cf-45a3-93dd-cfa74f6f444b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ef8826-0959-4ab2-a2d0-6b31af4247b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d24b9eb-9dd0-4289-83fb-4d2a3a681f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "808ed169-f08d-46bd-a620-66a7aa1c4ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff33289-3327-46dc-9598-62ec6f539790",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cfc57d-dfaf-469b-b76d-05ffe0e37794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e820b61-b1da-4277-861b-0f9556501b62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5f03d0-afde-426f-abf8-b0cef63a9434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c468df4-a290-4ee0-a63b-a4c168c168e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3ccb68-38c6-4dd4-a092-0f235bb65cb4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0209d10a-501f-48ef-a2e3-ab32422a57b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767b09b5-aee7-40e3-a19c-9f4a060d7e82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a6c414-d16f-4f9e-bc2f-64700854400e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7601c869-e1d5-4d3c-8227-b996e9afa592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2207f2-419e-40c0-8203-a2f7a8ab80df",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441d0515-bc4a-44a1-ba5c-91037b90cae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cc87cbb-8984-4f6e-bd1e-f573e4d7ee68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbc1490-b3c7-4c3e-a605-a10e5f9e050c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd562257-98c3-419d-883c-0e204c0c09cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3b2a72-a7a7-4bc5-848f-a307c4929a29",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f4bd5f-cf33-438b-ad3a-007b93496579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82db90bf-9078-4eef-9aad-689b5985e5e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cf9481-c477-4648-b827-f906cb9eeee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e97320-e3f6-421f-9886-fc986d2c8c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09c59e1-2611-427c-a43b-0d40e3694f6a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab90f28e-13e3-4e9a-a202-8515c0638cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da070e6-018e-4e3d-9f95-78a820a6548d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e691a8-ce87-4dfc-b3cb-ee8bf5b836c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b62ab02d-289f-4578-8d8a-7b2df6e4ccf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11f5466-4f47-4718-810a-e10c1e79cd89",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de4b2c7-e0d8-4fa6-9298-d16ce11f478f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb8d5d05-f0df-4351-b5e6-2a1d613410cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40331159-934b-4d54-8fd0-7977e338c877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd4de97-c64e-415e-96f3-14a49b702aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340fd242-ae28-40ca-9543-a50b5edad944",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc549b49-4781-415c-9da3-8ffd0d9abd68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c4b04c8-be72-472b-b0ee-bb6a3ab6efcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94972c1-5cd0-4db7-bcc1-6275db2b1dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044385c9-0f3d-4bed-930c-4cc9927d2b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9eeeda8-2d92-478a-9ec9-61bd96b91316",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fb91e3-6fcb-46fb-a25f-f2c9d95e58bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b84455c-f676-4172-9360-eec6df4a2f39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ffc177-91dc-49ac-950b-306956de3b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e17ba87b-4fb6-4579-8325-fcf0dcd5cf62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e48bbc1-20f8-4290-bfb2-e582df3c4e51",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f943f5-8e92-4376-8ae5-9e8e6f13734a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c4cd26-4032-48af-8f9b-273181225085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8667ebc6-591a-4a80-a888-7d6749e335c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bfbf041-ae47-493d-b30d-ba2c1eeb29fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fead2afd-2bb6-4e06-96f6-51d695308fe3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9470a033-3dc5-48c9-b80f-e717f4b7d01b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53b34c5a-c08a-471f-9ccb-f18850dbf240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d3e675-567e-495e-a917-1b8ebd4d3fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f53aab12-d03f-4ff2-8aff-efaa5d586de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff791c1c-7ada-405a-98d4-563811ee6063",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f892074-c2eb-46b4-bbf7-114dda1d42df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d8cb79-4684-4c29-9d3c-fdde2113acc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df597d8-5f15-45b6-a799-285888d1699a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e1874ff-88c9-4153-b734-40d2fe9bc1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b4ec17-f897-47ad-bb03-1e5b013e8304",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6080a3-0605-4d17-aa9f-5b9d460fb359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e05fe68-578e-42b9-961d-77a5f9b3f73c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb87a4b-a3ff-4b2d-8262-5fcf5418415c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d452b1-f372-4e2c-b250-94abf62b5898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e11bf25-898f-459b-84a7-1cc14835c7ae",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19a21f2-7f12-44c0-aa39-6601716853b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb88888b-38bb-4481-879f-24bc86cb1422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd2d7a9-1c38-4a3b-bb32-24d84f3d7dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0ee52bc-8cdb-40cb-b5ae-b8eb7a10941c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6755b5-f3b1-41c1-8f4d-a879a6408a48",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f90621-fda3-458a-b29d-5273b9bf026a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ceaba9-9524-48c0-8df9-2bbd0219c20a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b19d6e6-f927-4272-b8ca-5244efc918f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f633c8-876f-4c66-be46-9a8581516535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f6cea56-86d6-4943-b09a-1a51fa560094",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc86fa9-39b4-4964-8bde-866338155223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca08eae-302a-48e9-9021-fcdb4baa6461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e411ff9-e9a4-4d69-9c3d-32b0c66bce72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73882b3f-e3da-41ee-9576-85b5c3b0d24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5075b14-4275-49c3-93e5-050cb624dd2f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec274207-70a1-4615-8891-70ca903c0361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d0dfb93-6e74-44a8-9302-b66dba5f78f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e673ac0-7186-4af8-87cf-a2257d5e4e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dede4dbb-351a-44eb-bbbf-dfa1d2fc518e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8043fb64-eb2f-4057-8ab1-5d7e52b81a31",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f94d72-663a-42ca-8bab-4594a46e1695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b88a301-253e-4c35-903e-dbcdf1a2cbaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c87f4c7-0d90-4a14-8eef-a83a962cd711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d37c4f7a-346b-4109-ab2e-0c33dcaf2be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac949d3-70c5-46ba-8698-4b335dd40aad",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875cf340-87a3-4a42-b001-db73b6066bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "584cf5a4-e7a4-4141-870a-08d4ba57e09d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a34d3c1-aa51-40e7-ba7d-1100b97f680e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84176490-3748-48dc-90d8-9b4a002ed1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32331db-73a8-41ac-9b21-f3fc3e5a4f0c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78269ad9-41a4-4714-ac43-a561b6c4840c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49cfc9cf-75d0-4a90-8d24-17fad13fd257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f070e63e-33b2-4a53-9e23-6b785713dbbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f94edb49-55f1-455a-b42b-e9e8f3b4755f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c070ebb7-e175-4d95-a311-aa0f7c6a4b7e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e1df27-db44-4032-b4e7-eb51336e91a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf39f627-ba31-43bc-b2be-4cbe3fcaa911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef38457c-032a-44fa-956d-06ab93f77ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f27fc03-b54f-4d43-9c1a-6eb370222529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f73cd64-c588-4a68-b6ca-1dd0e9c19fea",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050b8b18-0577-4dbe-be21-271f9745902b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fce165c-c508-49e0-9c44-693c8b8239b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f022dd-0ad1-41fe-a65d-91a2d0546819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5df0239-7c4a-4ad6-a3ba-af3f1a1fb371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23021b8-ccb2-402f-a858-ec39506343b8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbc402e-50be-49ba-b1b0-6d6db4a9d08a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1ff550-c31b-4019-b045-5001fb86d5f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "575f932e-d0ab-43c1-a140-3585d6db4625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0864de8c-5093-4718-a466-eec8e44ac5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71185a99-5cd6-49e6-bddc-04507e7b6feb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60389d8e-52c4-4a1d-881a-2fae4ed7abcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c0b75f-16d1-4e78-9a5e-49448bb337ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf04ccdd-e0b1-49c5-b117-0782b736363c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "140671ad-7ac1-4147-b755-828aef38da48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858f382c-ba57-4462-930b-cea9c914c5fd",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33da2c13-6810-495b-9093-8624557bb684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f27ec8-7c44-452d-ae50-566c456cfb54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "370159fc-5e21-4764-bb12-8c8b26d57bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83f0040a-b6c3-493d-8191-b9850ae876ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94459c4-fd92-4994-818e-c3d5e18f81ba",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3dde7a-ddbf-4f1c-80f4-29944f6e23c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddcb916f-2394-4ea6-a0ab-c5bf5ff156fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d16b6b9-b8f4-4e27-8f00-26c900f8a9a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaea3e99-76c2-4e01-ac8e-5b40f9c637d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07cd747-38aa-41ab-a980-d42eebe7147b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05c116a-7a0f-421e-84f2-42c53989e4d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb4d82eb-d561-4d22-a128-f610c72874ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a832b96-478f-4e39-af80-f3bc85288bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "579c8086-f6aa-4c25-9e50-354708789b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde0872d-cd61-4ad9-b4f4-e78a952890de",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ed55f7-2cbc-48f1-a5c0-aa1b09aee9db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c3250db-f904-4e3b-9002-aa321c13a3af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7856baf5-cbac-425f-a1ea-3b8114fdc1ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793fff47-ab22-4771-a544-e23292af365a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7010073c-240c-42cf-8c03-12974697123f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1051fb74-33e3-46ec-aed8-334c9422cef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a88fc4-1a58-40f6-ae7e-359f1a3689ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28da167-4c93-48ac-9df6-3bcbd910a1b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e5eb156-4e0f-4dab-bcb5-b1d4cdb68912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e1fd5d-a5b8-44e4-a032-3719fc33b1fa",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03877d24-e0ad-4515-99ce-365da75cd636",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e814b73-9c2c-4d19-a32d-fbc17a4f215e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a294ba-d0dd-452d-8059-a265a019a30c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e91bcec-5c0e-4e23-8301-68974c2925f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715598af-b52b-4e24-937e-952c2e753036",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e9704d-5925-4b7b-b25c-c096a4d02c10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15c02c69-7fcb-46b8-81bf-8780f78d191b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f01eef-3b1b-4cfd-84db-972dda19c041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8899035b-f55a-4d50-9356-18df79330970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38dec3ba-e207-4410-9d18-c40b39361ecc",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ccc4c33-55cb-4c77-8515-31f3586fc685",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5b7ee59-8f32-4f61-9835-da6ecc851106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a0bc47-d9d3-4abf-886f-3d6f82aa2b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b65602-6b3f-44e9-a929-b0d3fa523d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7e5a14-681d-45ab-9964-db1375933127",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a57b0f3-cc78-44ed-8f51-a60b0dc17814",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a299a5d-c1b9-47b1-b56b-3c6f70251069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8017b3-97bc-4c33-ac26-c97fd3cf16e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4effd5b-fb49-4146-af2a-5643ebaae7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727c26e1-0d66-4db4-baa5-9e59c7a8f2ec",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c887858d-432d-47d0-b0a8-e1d56974bd9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4cb4e0e-2f5f-4afa-853e-366220e906b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64eca600-7f37-4fbd-835e-1a62c8ce24d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc8af67-25ad-4715-a36c-4bc95669d1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385ae15a-98a8-43b7-b45b-bcd00dd96767",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651bc3e6-f98f-47b9-8d6e-8253dccf7f5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1f67aab-1913-454a-97b1-269748acc261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8969503c-c073-487b-87e7-e4581a3e6d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b073d6f9-9bf2-4d4e-9dcb-c41df80a91fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23f933b-209a-422b-ae08-baf27fab0f80",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f6621c-f75d-4ba1-8a77-b545a1058855",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12f53241-8dc2-4f17-848f-8305f2d1cc8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fbea21e-eea1-4829-bb5a-c6d20de6ff24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02063b0d-dc4d-4f8f-82f9-7b0a331cc607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3525a34-572b-4f15-ae93-d3a40c2838fb",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef93fe19-c7db-4f34-900e-711ad67d6950",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4aefe3b0-3690-4506-aba7-0cad48f23041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb8ac13-d655-476a-9658-af14e350b6f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a93e49-afbb-46f2-94b7-85749476c8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8d333c-94ae-4723-8abb-e9a917fd721a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb53645-78c2-4212-9e3a-5e5e78d4116f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "362e386d-2638-42de-aae4-ec291bddeb11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9945ce12-9e5e-496d-8fd5-b7a699ffe1f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0150ba-4ee2-4dd6-ae21-4fe4d14fa784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f672a9-3e6a-4fc0-8654-25f85aacf65d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719b054f-7164-4692-a99d-761953c5b678",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b26f69ad-563c-4543-b31d-4e0bf4b00cb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5eeaa5-28a4-48ca-86aa-808fa85fa68b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b71250-0154-4a9f-9830-34aa700f8914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c71041f-e9e4-4ba7-bd0e-0d624d01a138",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a552a4-420e-4fe4-be04-f43e00a59489",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c69f3f00-c9ac-4a38-baed-d6fe7467f821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb9a563-35fa-477e-b51a-e2abb469fdc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d10492-87e7-413a-92e1-721828391fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5a9693-a62d-436a-9272-22a6486126fa",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5008248f-3e8a-4b38-b94c-d6274c1db4cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc12e906-111b-415e-9b6e-7c822a145aa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0436042-ef40-425b-9247-426ca274bb08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca5b713a-7115-40f7-8737-c968f0f1ee89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680d1af2-43b4-4af9-a43c-2d2a5b7106fe",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30932a96-3adf-4396-8b2a-7ba2fbbaab0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "778d6d39-5af4-442f-ade8-c013520078f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1135a3-8d32-49ac-aa9a-5fd588c8fe5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba9d7a1-9b40-4abd-b633-09cf5b5aef75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0523671-6ccf-46b4-a4f3-e9674dfd4127",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817573d7-0adc-4a18-94bd-79bf7936ae9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "024d538c-b403-4549-bf6a-beff04276aba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d657536-c4ac-4f9c-a56a-90949bab4cb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a9b7214-ffc7-415d-ab0e-8bb6bf49333e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c041215e-cdd3-4e10-b416-5891538c5b49",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abc1c35-9a8a-4455-b653-d24f356a40c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12b8c0e7-4be0-4faf-9642-165915d58cff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45d499a-11d1-4195-9286-d3eba14d8419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd1ed5a-8b95-4dae-bc55-3849a32a0e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae3732b-9b11-401e-994a-a7ee53001c42",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5423e00-8071-4d38-a901-f471754926ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "647347b5-b5f6-478f-9054-8aec5803538d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fd879b-80f9-4f45-9ffa-31930da72ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35de3822-02f5-4162-b1b1-2d8debdeed72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1dd428-c47a-4ba8-9b85-415ac3d06644",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a355877e-3ef9-4de9-aed8-357ace67e6ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18067295-8f16-4faa-85ff-b86031244583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32804eba-e32e-47fb-ba46-98b7f43a258a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1c9dc6-5125-46cb-a56d-cfcbb71fb58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90e69bb-fd09-477d-99f7-6bd467bc74fc",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd2502d-7d8f-454e-aae1-e06fcfed83e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "776173ea-7179-4893-aed4-9b2ae3c3056c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0139f371-26fe-4c4e-b5f7-1d94925232de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18260eb8-4d18-4dd9-978c-6312bf7ee677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5546af-89f7-4548-8b59-13a1e5e945fa",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25304d02-3426-43ad-8d1c-952527f2f366",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99eeecc5-6ef9-450f-96d7-0a64e557df44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0f2736-bc29-4399-bed0-4c31f81ce147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b846880a-10c0-4b1b-9614-a2e80a6c04de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4324c1-1ac6-4593-8e65-c7644871eb68",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0132a5d-ef60-4127-af06-367da3d6bc18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c17c6f37-0df7-42a9-9a97-cbd71640f636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c0a757-685c-45f8-8b05-6136c83f3f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "255018b3-a6bf-47db-82da-bf8fcc27fb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3448ab44-92a5-463c-9a96-5ca410702c58",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46b472b-d587-417e-9b78-0583e66386a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2564ad58-62a6-44e7-b024-25c82e88293e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68b547b-8f25-45f2-bc51-85ec102db6db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eee00cc-3c5c-4cd2-80b5-1950655ad296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41dd494-40dc-47cf-a5cb-3f5c93096a0e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0daa2f8c-ff8f-4657-9ad1-b879ba150d46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a1d1454-a866-4ebe-b666-4ee0c4f883df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5943c6-e2bf-4217-a68c-5affb9590604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3c119a-ba8f-464d-a89c-408a5e27b2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd02067f-d2af-495a-be33-70d8a783663b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6df670-e4c0-4ab1-a1bd-64669d2500f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af9fb571-6388-48b8-878c-d22ee7ffc13a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd945e11-4e31-49da-ba55-a4844b0de0f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a14dab9a-420e-4bf4-a0be-498623ba4b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea2140d-fed5-43c3-aff4-38fd259e8a5d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aea4efe-920b-435a-b3eb-f9c7ce00fe48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c2366c9-00cd-4f88-83f4-505e196943ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88324eaa-542f-4426-8b8e-55f69b6e6913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c57e73-215a-49ab-aea6-95d930b4ab2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89220571-bf25-4305-bc1d-aae58a8bfec9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d5abc4-0f63-4d99-9110-b2eee2a06df3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "362cbdc0-ebd4-4184-a5bc-9c739f780086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d125ea-a269-49d9-b707-f3945bdb391c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed09a3c4-1661-47df-bf8e-134a882b1038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88865b49-eb1b-4fd2-a182-b7821bae7e83",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91484865-8ac8-4da7-80d6-3b517a9ac7f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca3e9b74-181e-4710-9416-42283829bbff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb248c9-d4f1-49eb-b12e-d08bea69eb07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4d515b-c1a7-46f6-8042-2e3d0a47b127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd023fa-b675-4c1c-9e56-93094a1ed7d8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4930bd8e-85d0-4ca0-b130-bde4fdd0cee5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e22125af-97aa-4f36-a984-5bcc4c6f0126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e530dcdf-5793-44fc-abfe-260b077d005e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da2e87e-ee56-4ba6-a7db-01727ce728e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381c6638-1380-4631-90dd-b197f14a4799",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54d08ee-1def-4f0d-89e6-8e8f5bb81220",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2743cdcc-368a-4550-8447-828e29e783a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbdb6028-b510-40e1-8f1e-d64a985ba1b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95de055-f457-45b9-af3f-d6d0c6c02eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55eb74d-d967-447b-9f49-d39eb01c279d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b12ef4-922f-46a4-96a1-90d0763280b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a227b230-4d18-4cab-9fc3-1f2e8e967358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6795c1-8e7c-4c1f-a69d-258a3e42ee20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d58e9397-977d-4bf2-a342-7a871a7c8298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36dea9b-3ac1-4f48-828a-e961d533a3c2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6182284-825c-4f0e-8879-a8f4eb4f375a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c656f96-d6c6-495e-8944-3632535aa0dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5670ecbe-f518-4729-b39d-04875ad1526c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96b7f29-bfc5-46ab-8e67-0db79ba4956d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a0cbd2-9441-403a-9a45-d39077acb4f5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3c0cca-b32c-4280-8ee3-9961b292a6c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0bd08ad-b753-427a-8fbc-a46d7d2f6a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68919d67-1ff8-4be4-a39a-fba01f76d685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e772987b-0cbe-4148-a4ff-07fb3e8c21bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e2ffae-f2b4-4cfb-9560-75403f745c5f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5071d686-9e9a-4596-b92d-ef73a3ef5cd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dadead99-571b-488d-8f0d-c80349c5bbf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "536ccf90-b67d-4b5a-8c8d-665dcdeb7d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341537a8-9793-4130-882f-1c065ba71578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd086633-35f4-4245-bf9d-fc44d211f2b7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76761fbc-636d-4d54-8bd6-d87715eed85e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da98a915-61aa-45ce-b27b-683b902b020c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0870717-c72c-42c9-a460-420ba470915c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c237c7e4-5de8-488d-a55d-148305b556eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9af9277-fa4a-4d3e-878a-ac87b00557cc",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798b89bc-a904-4e77-81f1-7f0eb2c6c12f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "288ef9b2-afb9-448b-927e-6201bba9f359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ea452f-4439-4bd2-b2f7-0cad5decc49b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56e6051-08bc-4637-834c-89e869202da5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbd63f0e-34f2-4354-9817-16888d7dc479",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d21b69e-cfcd-41a8-aa37-44a4c896b80e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "27581d58-77d4-4572-89ed-310ac3a9857e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ca63f76d-dc39-4da1-a41a-0067e738f3f2"
                    }
                  }
                ]
              },
              {
                "id": "7423f025-643d-4429-8da6-d7f69aa46b0f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bdb3bc86-b3ce-46e4-90e8-e04406e19783",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c483af44-43ec-4b64-b6b7-3999c54f8799",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bb14b03a-5f3e-4f4c-847a-a2cf5c64a821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d992595-69ec-4534-bad8-d4716d879332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "396f739a-144d-4dc8-9697-c60396a15de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bbd106-af78-47ee-9163-730d7c264694",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f083e5-bd0f-436a-a48c-c4a292c41ad8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "244644d0-7509-43ae-981f-b3d78bbac7e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e278782d-b988-4c6e-b510-206cc0d807e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4cf86de4-9265-4a97-9c15-02317cbe295a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42d0d39e-10f1-49fd-a4df-96c8c47a6fde",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6cd4875-77e8-4c7a-ad12-582ca5210583"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "910f1a9a-9acc-4c42-a96e-fc2e78235b88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d413e7d6-5832-4f47-bec3-8608e0c6c66c"
                    }
                  }
                ]
              },
              {
                "id": "b3fb1145-1bb3-4a76-b150-440c95dd9a47",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2d08bd4e-4ea1-454d-bed0-3d4ae91c5325",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85aa12b-63cc-4a7d-a5cd-728e4d76ce80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f9df403a-aa8e-424b-9ec3-347158d4906f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26cebdfa-e20e-4878-ac0d-ba6c1d994962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e297cb-00e6-43f4-9a36-a35d191a7efe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8ab916c7-2e48-423b-8fab-960db6dc45ae",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e9d9b825-5b8d-44e4-acf8-63fb6f38fb86",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "38fe61ef-4d18-4fe0-86da-f91b896fdd17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "17fb9846-0a36-4e23-85cd-6dbe66d5753a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9bcaf10b-17c8-4df6-be56-b3aabf557541",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76de6d69-c18e-4a77-aa14-8854e91340a6"
                    }
                  }
                ]
              },
              {
                "id": "368a0dce-444a-472e-85c0-49a16d96da3f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "385fa8dd-e0a7-4b8e-bbf0-8501dcfd6e79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6a376236-a2af-4c5d-9796-3c8ce0000d8c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4adf414e-cf11-48c8-971b-9e05be48d4c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e61fd32-11c7-416d-b465-e1d7c2666a0a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ccd3823-1493-45fa-97ea-dc4b90fa434b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4d707f61-c748-4160-a453-d8b5b0d7b010"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e9d1a5a-7426-4fdb-97aa-314f09cc5d1d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "07c3f86f-74ba-4352-ba6f-4c78227cee1d"
            }
          }
        ]
      },
      {
        "id": "d002cae7-5abd-48b6-b5c9-bae77de3a34f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5ee48259-25dc-403d-bb5f-adfad762bf1a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "deca63da-567e-40b6-a429-46306e54af7b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "672d3684-dc4e-49a9-859b-ef34a63918aa",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7cee25-3bed-4333-a531-1b50032df372",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4e09bce9-b860-4798-8417-1dc66425ee0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad64cec-5f5b-4476-9747-fbcc36b5af39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a10a6ae-c41b-460a-8072-8ea69bbaca0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c8a75e-847b-429e-8ee4-193548b4b506",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a23db5-5c84-4dba-862d-ff4d066b91c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "010cb5b0-1889-4648-b43d-1565c4c52855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb99301-a6e5-486f-8dea-9eba5a5f9800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f15f0960-cc27-4fd0-832c-0bc8a5c7bca6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4fc5c23a-083a-4690-879d-82204ef1317a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb896ee1-b610-4e0c-a09d-558956d86744"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2f0ac70-8e9c-4203-bbd3-116e89680547",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81c603b9-0c04-4371-8bce-cd1b864849cf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b03c855a-9f19-4075-b208-9dad88d7b699",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2bc8257e-a431-480f-9293-f9b095669bc4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93371b8d-3d5a-4429-a7f7-78491c952c07",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c10997c1-6692-414b-bcbe-4fdd86b7c5a5"
            }
          }
        ]
      },
      {
        "id": "c1112b9f-1295-4b52-ad7b-06be187b875d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8669bd00-00e2-4cc6-9edd-364b779b32dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5859ebfc-5d2e-4c9b-877d-f1019505d93d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9ea0194e-76b8-49fd-ae70-c4d609271935",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c85e5fe-8301-4257-b906-243be77786da",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f8e186d4-f56c-4f17-b554-7701b75662ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "043f0ade-d3ac-4113-a3b9-0dda4b8d1a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd0f59cb-aeda-4e48-9fcd-f58d13f78cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819f47a6-7e9f-466a-8268-a269c68d6e02",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f742e0d8-db0f-4c54-be92-0c409022e4f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "df9fbc8c-cc8f-4e1b-b476-1721ad3e1004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d6053a-e512-484b-8f40-e78982543cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3eb7adda-2970-4923-8303-2be4f3beb3e5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e51e0104-2383-437c-9401-8c58dce6ae5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88aa4324-f978-4cf3-aa1f-576f1b67f5e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad0a75d3-7e04-4df9-a167-85e83a321956",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b8a7ee4-1d02-445d-92e0-9710d46ebd11"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf3935ac-c2b9-4bce-b5a8-ff17e038a90f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6ced872f-4684-4767-8d39-cde728eedb3f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9998710-1d25-4d55-bd90-9037afbe22d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27297202-9059-49cb-9946-04128ca55be2"
            }
          }
        ]
      },
      {
        "id": "1ad6896c-d5e4-4b65-a800-12a9e8b7d5cf",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "17e830ba-fe80-496a-9cf6-f116ed8259a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e1aaa4f1-47a7-4098-a12a-c2f35d585c0c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b8393cb9-a964-4be6-b8b9-4d73f22a1503",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f824ffc1-fa36-4047-850a-bba7bdb2c886",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e685f773-9659-4c62-a463-24e2d55df2eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61aaf4ba-93c0-43c5-9fa3-32489df0bb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b542940-0714-48bb-b4c6-0546e91d0b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b015d40-8961-4d0f-9228-fa44af35521f",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5005f89b-0d0e-4be9-abf8-2a8820d4e20f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "37695628-360b-4def-9c74-133427985f5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3c5496-a3cf-4100-b50f-f5d2385be850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd7f25f6-229a-4cdc-9037-44f27815e091"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58656b38-3aff-4e59-9b19-c7b12c310b69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5e51683-795f-47dc-b51f-ae2ded9e6de6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e861fa1-79a9-4cc0-918e-5158f20e67b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e72532c-6f28-4ddf-bdc3-42978ae409e0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7acdb05-46ca-4bb3-a32a-0dc472c02265",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "31a163b6-235e-4b4b-893d-1e1ec38ca31e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e19226a-dd5e-4aa5-8226-b9a0b6d8af43",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ff4626d-f9f2-4a89-acf6-3ff0b60f4dcc"
            }
          }
        ]
      },
      {
        "id": "4042ae6c-e839-4b83-919e-75794de98318",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46b38b03-d6f7-46ac-a6ce-56a7b1fcb025",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b912c3e-bc67-41f1-b95c-1dfd10876566",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4bd062ac-213c-4a49-8892-3bf3c524540d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c81a7adc-d754-4204-8ae0-c6f93fd2e1de",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c4453b0-d092-4cdd-a378-0d8b622cc04f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1917,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 515,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 963,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 954,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 807.5900383141758,
      "responseMin": 18,
      "responseMax": 22305,
      "responseSd": 1673.265567540797,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1676649631038,
      "completed": 1676649856335
    },
    "executions": [
      {
        "id": "e6fcb263-2f0a-4894-9407-090658705ed9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2d45a7c3-3d80-4517-9e60-1cf3550177c8",
          "httpRequestId": "b74cb080-404c-4d1c-983b-f78abe15165a"
        },
        "item": {
          "id": "e6fcb263-2f0a-4894-9407-090658705ed9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "cd651bba-31fc-4ea1-84f9-48b4d4936115",
          "status": "OK",
          "code": 200,
          "responseTime": 140,
          "responseSize": 0
        }
      },
      {
        "id": "47ed137a-8835-465b-b876-4a751dff8a19",
        "cursor": {
          "ref": "90f0e784-b2fc-4602-abc1-cd8ffed040f1",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "09b7eda5-3a59-4740-9f99-623c007060b9"
        },
        "item": {
          "id": "47ed137a-8835-465b-b876-4a751dff8a19",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e8b519b0-15e9-4e9a-bd76-43942efd252d",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "65edec35-37ba-4708-83b7-67f4b4b494ee",
        "cursor": {
          "ref": "f6724058-89a3-46d2-859c-7eb46ac82a06",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "dac8efb4-e4c5-4fb3-94a5-a3f90d30a947"
        },
        "item": {
          "id": "65edec35-37ba-4708-83b7-67f4b4b494ee",
          "name": "did_json"
        },
        "response": {
          "id": "b9beb1c5-f5de-43dc-98af-422592031a1c",
          "status": "OK",
          "code": 200,
          "responseTime": 1445,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47574be5-5bb0-497f-922b-103ad29395a8",
        "cursor": {
          "ref": "9121e62c-ad27-478d-8061-855b9857682e",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1c68234a-4da7-4ef4-9dc6-fddedc19e10f"
        },
        "item": {
          "id": "47574be5-5bb0-497f-922b-103ad29395a8",
          "name": "did:invalid"
        },
        "response": {
          "id": "4b5cb1a8-8365-456b-8e61-12b4659a85c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47574be5-5bb0-497f-922b-103ad29395a8",
        "cursor": {
          "ref": "9121e62c-ad27-478d-8061-855b9857682e",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1c68234a-4da7-4ef4-9dc6-fddedc19e10f"
        },
        "item": {
          "id": "47574be5-5bb0-497f-922b-103ad29395a8",
          "name": "did:invalid"
        },
        "response": {
          "id": "4b5cb1a8-8365-456b-8e61-12b4659a85c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70c5f4e-0492-426b-8fe5-006beca64fac",
        "cursor": {
          "ref": "f17074d5-b364-41e6-bcc0-b891e88c6c2b",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "89b42818-5789-4b07-8004-82ef911ca1c3"
        },
        "item": {
          "id": "e70c5f4e-0492-426b-8fe5-006beca64fac",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c064c49f-de78-4bd9-9d12-c7414a361574",
          "status": "Not Found",
          "code": 404,
          "responseTime": 949,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05120a18-8f25-4b33-b5ff-c917ff677cae",
        "cursor": {
          "ref": "4ce8fdb6-ffa9-45ff-8917-d68cc6fd8d23",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f23c2ace-cd3a-4b50-b739-41c15e62d2cb"
        },
        "item": {
          "id": "05120a18-8f25-4b33-b5ff-c917ff677cae",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e060bc29-6ffc-479f-8a48-66915e5712aa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 913,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f848a5dd-c8e1-41c7-a392-a664bf6efa42",
        "cursor": {
          "ref": "d65054c6-5f99-49d5-bddd-5bdcf728b48d",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "76add6f3-b38a-4166-8df5-a2ba0d3c0861"
        },
        "item": {
          "id": "f848a5dd-c8e1-41c7-a392-a664bf6efa42",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c2c4de06-2f1c-40cc-a827-3cf15633bfa1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe8d985-3380-4060-adef-60c6d0cfe824",
        "cursor": {
          "ref": "abf76285-4290-47df-b23b-57126713ef65",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9670c7e7-618a-4e7e-a26d-1c83872f9139"
        },
        "item": {
          "id": "8fe8d985-3380-4060-adef-60c6d0cfe824",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "6f3f5ab0-2ed5-4f41-8159-c7fb6ab936aa",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 661,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe8d985-3380-4060-adef-60c6d0cfe824",
        "cursor": {
          "ref": "abf76285-4290-47df-b23b-57126713ef65",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9670c7e7-618a-4e7e-a26d-1c83872f9139"
        },
        "item": {
          "id": "8fe8d985-3380-4060-adef-60c6d0cfe824",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "6f3f5ab0-2ed5-4f41-8159-c7fb6ab936aa",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 661,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12512db4-499f-4a8b-9f77-96fa0160e5d3",
        "cursor": {
          "ref": "95575df9-d7d1-4a26-88e2-298fb930aac3",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "766dbaba-73de-434a-b9e7-d35506988c9a"
        },
        "item": {
          "id": "12512db4-499f-4a8b-9f77-96fa0160e5d3",
          "name": "identifiers"
        },
        "response": {
          "id": "94cc66d0-bec0-4d94-80b3-f0527c4131d2",
          "status": "OK",
          "code": 200,
          "responseTime": 1177,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fec6f26-15e1-44bc-aa2d-8a9ae52d8bc8",
        "cursor": {
          "ref": "1e81703a-0243-4043-b161-36842cd56551",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8f30159b-2af8-4b61-be91-2f37843a4e97"
        },
        "item": {
          "id": "6fec6f26-15e1-44bc-aa2d-8a9ae52d8bc8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d48b66b8-f44d-4b84-8d14-aa733ae89051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fec6f26-15e1-44bc-aa2d-8a9ae52d8bc8",
        "cursor": {
          "ref": "1e81703a-0243-4043-b161-36842cd56551",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8f30159b-2af8-4b61-be91-2f37843a4e97"
        },
        "item": {
          "id": "6fec6f26-15e1-44bc-aa2d-8a9ae52d8bc8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d48b66b8-f44d-4b84-8d14-aa733ae89051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6e1f37-1d68-4a67-9d15-fbf62ea301f0",
        "cursor": {
          "ref": "f72aeca6-71f3-411d-b164-8679a2649b7e",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b410689a-dd46-423b-918e-cac2270cdfd6"
        },
        "item": {
          "id": "1c6e1f37-1d68-4a67-9d15-fbf62ea301f0",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c106b880-b8bf-44fb-bf2f-ac4d0c1b7910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b8b5c8-0992-451f-bb23-64b8eb718fa8",
        "cursor": {
          "ref": "bed0b690-4d92-4266-b620-aa667017006b",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4b5b2be4-7171-4ab6-adba-233b4afacbf9"
        },
        "item": {
          "id": "57b8b5c8-0992-451f-bb23-64b8eb718fa8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9b43289c-63b2-4365-9668-8d9e2a966378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 1117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ce54bb-6086-4848-a870-04e1d04ee697",
        "cursor": {
          "ref": "d80a5559-0f92-4e68-ada7-4ec294f1e0ec",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a7249f01-53de-400c-90a4-feb1dad45ec8"
        },
        "item": {
          "id": "f4ce54bb-6086-4848-a870-04e1d04ee697",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "940427e4-4906-40c0-b913-ba14e990451c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 1114
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f259349-8602-4d8d-ab13-c05c00ef7ae8",
        "cursor": {
          "ref": "a1ac7253-741c-4ebf-9a87-12e6ee021c82",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "61ccda2b-5e0d-49e0-a434-00b64b52974b"
        },
        "item": {
          "id": "3f259349-8602-4d8d-ab13-c05c00ef7ae8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7576e383-3a67-4e22-8265-bc8a5e714f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1332,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3718a9-dfd7-47b3-a8b7-97561f04df10",
        "cursor": {
          "ref": "ef68a8d4-2268-4c9c-84a5-2a3f3f716654",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7af935ee-02e8-4d9b-b490-faec5b537429"
        },
        "item": {
          "id": "4e3718a9-dfd7-47b3-a8b7-97561f04df10",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e2de9d45-ba8e-4081-a3a7-36a89ac5c192",
          "status": "Created",
          "code": 201,
          "responseTime": 11811,
          "responseSize": 723
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:15)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:15)"
            }
          }
        ]
      },
      {
        "id": "2316072f-1b03-4600-93d2-418751fc3ab5",
        "cursor": {
          "ref": "aa2db660-507e-4359-8063-4d8d1f1b9f06",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "49e7a7a5-dea6-494d-865e-a0d81095c402"
        },
        "item": {
          "id": "2316072f-1b03-4600-93d2-418751fc3ab5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b1261bfe-051e-424b-bcfe-84f5979cfdc6",
          "status": "Created",
          "code": 201,
          "responseTime": 22305,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:16)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:16)"
            }
          }
        ]
      },
      {
        "id": "97f652ef-d4f8-43da-bb2d-a73418133cfb",
        "cursor": {
          "ref": "d7303bc5-71e1-43de-b663-0426fdaaef2f",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d6ab7aae-aa99-46df-895f-2e65e1153007"
        },
        "item": {
          "id": "97f652ef-d4f8-43da-bb2d-a73418133cfb",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8247b213-db9e-44f2-b099-ca1c74fc19e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1211,
          "responseSize": 1574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96020665-8e97-4034-8030-f90d8c8f90c6",
        "cursor": {
          "ref": "34ed8065-8bbe-469b-9d2d-727162a2a753",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "109baf1d-5d8c-4883-86a2-763e739e525f"
        },
        "item": {
          "id": "96020665-8e97-4034-8030-f90d8c8f90c6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ca28c128-12c2-4cfd-bff9-af5231d9c32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 1543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c22cf0-dd69-4696-9568-2d9eed45de58",
        "cursor": {
          "ref": "f5aac2b5-e98b-415c-8587-dda335024ae3",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f043fccf-2f75-4328-809c-d23948badd12"
        },
        "item": {
          "id": "f7c22cf0-dd69-4696-9568-2d9eed45de58",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "71815848-5413-4db0-b99d-d522da21be96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fffab8-4e93-495c-964e-74391b88311f",
        "cursor": {
          "ref": "402e15e7-2ae4-42e5-b65e-531526d989eb",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8617034b-aa9c-4dba-ae41-3f99ee04ff47"
        },
        "item": {
          "id": "f8fffab8-4e93-495c-964e-74391b88311f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6bc9dcaf-0848-42c3-9f30-eeb09e343093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1542
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e429e4f-533d-4478-8d11-8b730d6f2744",
        "cursor": {
          "ref": "c525da17-36e7-4a83-8101-31fc52c5d8e2",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3f868c78-1bf3-4ae0-8899-bf2ba7a985ba"
        },
        "item": {
          "id": "7e429e4f-533d-4478-8d11-8b730d6f2744",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d41e490f-659f-48d2-b3a1-0fc6229cdf73",
          "status": "Created",
          "code": 201,
          "responseTime": 5017,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:21)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:21)"
            }
          }
        ]
      },
      {
        "id": "b9de431c-08b8-4a22-a976-1af321c750fc",
        "cursor": {
          "ref": "2460d074-9a24-4a65-895e-1d502c9e9ad5",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a8cda2f8-0028-4e73-9ed9-68cac6ed94bd"
        },
        "item": {
          "id": "b9de431c-08b8-4a22-a976-1af321c750fc",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "9de2f95a-b110-4115-828d-3ddc0f1462e4",
          "status": "Created",
          "code": 201,
          "responseTime": 5903,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "3741f81e-11b4-4255-80eb-81092cdd9a31",
        "cursor": {
          "ref": "a129b374-50e1-4d48-9bd3-8ef7d99b800f",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b0eb36ab-1c9e-465c-82d0-c3a22c211639"
        },
        "item": {
          "id": "3741f81e-11b4-4255-80eb-81092cdd9a31",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "bf1c6de4-460d-4c56-9bb5-e38337a83eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ee6f9b-0e9e-4e81-904c-3fe7c64a4004",
        "cursor": {
          "ref": "7c9636f6-c0e4-4365-92e4-f1f03795f2d7",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c1abd8e2-a157-4cc0-af56-424788c3444e"
        },
        "item": {
          "id": "b4ee6f9b-0e9e-4e81-904c-3fe7c64a4004",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "bb508da4-aa5c-4377-b45e-a01d17aba59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5e29d0-c22b-4d82-9117-cb26ed1b2591",
        "cursor": {
          "ref": "07ea7d58-6fcb-473f-a9c5-dcaeea830980",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fe4e5788-7366-4bd2-84cc-02c651c250fb"
        },
        "item": {
          "id": "fe5e29d0-c22b-4d82-9117-cb26ed1b2591",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "869e16d3-52cb-423d-b6a0-22ee2a490e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d245d9a-ba1a-40bd-973a-0b34ac907eb0",
        "cursor": {
          "ref": "834e0078-158e-414d-bab9-2dde8c9be554",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c76ed550-1fe9-45a0-b0a1-018b071d7e09"
        },
        "item": {
          "id": "7d245d9a-ba1a-40bd-973a-0b34ac907eb0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "27443029-eb86-4bde-9544-74a783bbaa29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227f4846-3eb1-4ac4-b388-1417ce8169b6",
        "cursor": {
          "ref": "39105221-ff65-4b2f-ad7f-ba1d2710d9a9",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f479b3c9-76e4-498a-a04d-3876b7339f40"
        },
        "item": {
          "id": "227f4846-3eb1-4ac4-b388-1417ce8169b6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "55d455db-4119-4494-b356-acfed7d5b148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c280a8b-f3d3-48a3-945f-b4e1e8553c13",
        "cursor": {
          "ref": "e4ab44f1-2a6d-4e82-b2c6-bd664e71e7f8",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7a746d9f-7143-4c98-84cd-9c8947299312"
        },
        "item": {
          "id": "0c280a8b-f3d3-48a3-945f-b4e1e8553c13",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "593ef5f0-805c-4b04-8368-dd60b2df9a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9211387-29cf-41b1-a915-fc371ada287d",
        "cursor": {
          "ref": "2f534faf-685d-418f-a7f8-9327a64f8b14",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "678aad59-5830-4f92-b4ea-09a333e4fa25"
        },
        "item": {
          "id": "a9211387-29cf-41b1-a915-fc371ada287d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a61f9d19-69fe-419b-9cd7-baaca0359d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7f9cdd-5d5a-4d79-b7fc-f4cfd305b86d",
        "cursor": {
          "ref": "7af4a92e-c876-4b89-b265-43efd02516f3",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "223049a2-b637-4cc8-8575-dffa76714002"
        },
        "item": {
          "id": "4c7f9cdd-5d5a-4d79-b7fc-f4cfd305b86d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "21298647-f2c0-4fae-b4d3-cca88e3a6558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016cdce3-963b-467a-bae1-81298f0cf194",
        "cursor": {
          "ref": "abd5ee0c-6977-4fa6-9a28-c2c559239f00",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "cdd862fd-cafb-4fe1-881e-40633e943484"
        },
        "item": {
          "id": "016cdce3-963b-467a-bae1-81298f0cf194",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2bb3ebf6-858b-4288-be23-6a22c1533f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45e1ab3-81bb-4c33-a36b-b5b7bab0ac5a",
        "cursor": {
          "ref": "b84cc510-cef6-4542-99ab-a7e9cc34bb73",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5533b68f-90c6-4433-ad5d-470a2a098253"
        },
        "item": {
          "id": "d45e1ab3-81bb-4c33-a36b-b5b7bab0ac5a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "803a4ba8-6642-4473-ad48-c1474e8335da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71087ee9-f412-4a73-8377-0ef3cfd2ede4",
        "cursor": {
          "ref": "aa57b4b6-b3f9-4ce0-9b06-a7ff2e7fa116",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e74148af-54fd-4ec4-890c-57deaa733ed3"
        },
        "item": {
          "id": "71087ee9-f412-4a73-8377-0ef3cfd2ede4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "23898df5-b59b-4e54-ac93-0f43a26474f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111c58aa-015d-48ea-adb2-7d5f1e7f9ec5",
        "cursor": {
          "ref": "21bf001a-df2d-4d7e-9712-65c259c0f23c",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c65996f1-32ba-4c1f-b819-4fed7adf672f"
        },
        "item": {
          "id": "111c58aa-015d-48ea-adb2-7d5f1e7f9ec5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7d75c979-f02c-43f3-a4a7-673f94159faa",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2037,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:34)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:34)"
            }
          }
        ]
      },
      {
        "id": "2d405068-b54a-48e9-93b6-2374c446282e",
        "cursor": {
          "ref": "987965b6-32cb-4738-a106-dab66b62ba93",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f32f8e64-abae-41dc-82bc-1625cc654f8b"
        },
        "item": {
          "id": "2d405068-b54a-48e9-93b6-2374c446282e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9676b0ea-edb6-4988-927d-8933405d1a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5620f6d2-1319-49e7-9f2e-1eb9dc36e1ea",
        "cursor": {
          "ref": "2cc89710-dc24-4ab9-afeb-3463cccda88b",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "06bd7bdf-d5f9-4066-b0ac-1ec0a07dfff5"
        },
        "item": {
          "id": "5620f6d2-1319-49e7-9f2e-1eb9dc36e1ea",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9ba4dd37-c9fa-41ea-8864-8863a0fc5e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78898b20-2f8a-4ffb-b7c5-b603bdbe6307",
        "cursor": {
          "ref": "7177d560-91e7-421a-a2b4-baaa97207dce",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "aeff1c63-4675-4cf1-ba71-cec2a5271914"
        },
        "item": {
          "id": "78898b20-2f8a-4ffb-b7c5-b603bdbe6307",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "224bd8b6-b7ab-43da-950a-1c58af48103a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c2aefc-8168-43cf-840b-b857384722d6",
        "cursor": {
          "ref": "491019f6-c12f-48f7-bde3-49e71f4f0aca",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cd7ed543-a417-401b-b92d-d6e15438880f"
        },
        "item": {
          "id": "a2c2aefc-8168-43cf-840b-b857384722d6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f392ce97-074d-4a21-b0cc-7f46aa1f5b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c872a2-3b75-4afc-9baf-31e3af1aecff",
        "cursor": {
          "ref": "92072d47-8eaf-4c18-ab6e-e6e2f8213b9a",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a359e753-f131-41ae-8faa-4d9ca84d9c03"
        },
        "item": {
          "id": "a5c872a2-3b75-4afc-9baf-31e3af1aecff",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "615927ff-ea86-4be5-a629-960d32260d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6912bb7-c6db-4694-b80b-2585b3b81527",
        "cursor": {
          "ref": "1710a04f-8bb5-4e3b-8ddf-87a7512d673e",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4090c5eb-299a-4040-83ae-167099ebfa07"
        },
        "item": {
          "id": "e6912bb7-c6db-4694-b80b-2585b3b81527",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4dc2b6be-86cf-43d3-83ab-6ad6210f4763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a2ceac-a8d1-4b58-9284-2920852d2de2",
        "cursor": {
          "ref": "d02f05a2-df9b-42d6-8425-1b070bcee10f",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e7784354-d959-4d8c-99be-aa251af0475c"
        },
        "item": {
          "id": "24a2ceac-a8d1-4b58-9284-2920852d2de2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1a3f8ed2-d3a8-4863-b992-32f6721b5a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85d2156-d2b5-40bf-a2b0-f2756e7b8d1f",
        "cursor": {
          "ref": "ecf6c397-dd12-47ac-a284-1289348863d4",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "54cdd668-1b96-4fe5-8925-e44e9bc502c6"
        },
        "item": {
          "id": "e85d2156-d2b5-40bf-a2b0-f2756e7b8d1f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d9f067f3-abea-4a28-806f-e734fd969d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e42d86f-1b24-42ac-a40f-8211b0c2208a",
        "cursor": {
          "ref": "aa457643-493b-4189-b4e0-607f341df91d",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1906f08a-7642-4527-8962-bd7909d1aac3"
        },
        "item": {
          "id": "0e42d86f-1b24-42ac-a40f-8211b0c2208a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b23cb46f-54b2-4005-a53f-7ac87b746cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067d64ec-ca8b-4adc-890f-171eda63c919",
        "cursor": {
          "ref": "c2c3ae52-a929-4f58-9a4d-aa1fdffddac3",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c2089652-08ff-4462-a696-75cf0d9ab272"
        },
        "item": {
          "id": "067d64ec-ca8b-4adc-890f-171eda63c919",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5dd08813-c9cb-4b4d-85cf-1076fa724a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2c0788-a33e-41d7-ae7c-2e8ec507915c",
        "cursor": {
          "ref": "67b9d3fe-4bac-4c59-8b4b-202108a8aec7",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3aed07d8-5d83-4fad-bf56-ea8204487d01"
        },
        "item": {
          "id": "2e2c0788-a33e-41d7-ae7c-2e8ec507915c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "dfb4ba0d-b328-413f-9be2-64489c248077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c229c4a6-37fd-481b-9158-57381c351798",
        "cursor": {
          "ref": "a1414bdd-0c66-401a-b735-e0a116400f88",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8fe0bd79-8a99-4f7b-9e94-e029e1cabe23"
        },
        "item": {
          "id": "c229c4a6-37fd-481b-9158-57381c351798",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a8ca746d-1477-4783-bc2a-8039beb52553",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 585,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b87f4b8-9a82-4b09-8a3a-c3d813e58a73",
        "cursor": {
          "ref": "af6cecfe-9ef8-48c0-8604-6a7f6e37dabf",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8db3efa2-9f23-4cf6-a8ac-b1e5762449d2"
        },
        "item": {
          "id": "8b87f4b8-9a82-4b09-8a3a-c3d813e58a73",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a337bb98-6135-4d57-ab13-908c67e264e9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 545,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:47)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:47)"
            }
          }
        ]
      },
      {
        "id": "c6b4b53f-c426-44ae-921b-16196d69d01e",
        "cursor": {
          "ref": "162a1a6d-a6f3-41e2-b3a3-15e8951a5a15",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f69369d3-8c15-498c-81b6-799916ed1ed2"
        },
        "item": {
          "id": "c6b4b53f-c426-44ae-921b-16196d69d01e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f8d00150-5073-4187-be5d-1716e6fcefb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e17c42-5d8b-466d-b926-3754d2063332",
        "cursor": {
          "ref": "d3ce7430-6c56-479c-8c02-f625425160cf",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5b37e4cb-a711-4c29-b025-1e41797e1ae2"
        },
        "item": {
          "id": "90e17c42-5d8b-466d-b926-3754d2063332",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "650b2df3-ecf2-4e24-a8d8-0df0a055b1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308568fc-943a-4a4e-ad97-4b2ce14cc69c",
        "cursor": {
          "ref": "12ee9a50-7486-41bf-a5d0-cfd567d6c129",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "21b17eaa-ae20-4291-8453-4ec136e2720f"
        },
        "item": {
          "id": "308568fc-943a-4a4e-ad97-4b2ce14cc69c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0d28c79b-60c5-4c63-b007-9fce845a2f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da85d929-83f1-4927-8107-d8695e0d7e5d",
        "cursor": {
          "ref": "e9b62f84-8f7b-473e-ac63-3b0dcf6fd93d",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "75e04dce-e85c-49b2-b017-dcaba151515d"
        },
        "item": {
          "id": "da85d929-83f1-4927-8107-d8695e0d7e5d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b22aa8f2-27cf-4785-8aeb-396aeb38e0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb46c54-e263-4d1e-8f0c-7b7475644af7",
        "cursor": {
          "ref": "4f30769a-28df-4af4-a5dd-f7ee1f40e96c",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "916d8eb1-df65-4b28-b67c-06bda19d2024"
        },
        "item": {
          "id": "beb46c54-e263-4d1e-8f0c-7b7475644af7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6ef3e743-7540-4783-acac-1ca8a0576973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e552d5e0-2563-42ff-ba78-b4b3601bc840",
        "cursor": {
          "ref": "a8a52460-5f30-45d5-881b-f16cd03f485c",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "97f8853e-87c3-4a80-a9a7-8347996d6280"
        },
        "item": {
          "id": "e552d5e0-2563-42ff-ba78-b4b3601bc840",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1bb348c7-e55d-4425-886d-e63acd261b05",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 637,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f1b811-c26f-42b8-95bc-894e954f441e",
        "cursor": {
          "ref": "334a372b-6450-4688-83b8-f4c22d0aba68",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f8aba95d-b40d-4211-86e9-bd5c1c5eb9ed"
        },
        "item": {
          "id": "63f1b811-c26f-42b8-95bc-894e954f441e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "46093ea9-9295-4038-8eda-209072cd6963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2904039-01e6-42f8-8b1b-5bbb587fbcb3",
        "cursor": {
          "ref": "b58f60fa-5034-4967-b135-36b6032649cf",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ed2f1393-5d24-4594-bf59-afd2a6d498e7"
        },
        "item": {
          "id": "f2904039-01e6-42f8-8b1b-5bbb587fbcb3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2fb37bfc-3059-4e93-b986-0f90a165728a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c55abe-5ac9-4148-9d8f-df8d081ff106",
        "cursor": {
          "ref": "ddb33bd8-36f5-4ea8-964f-b1ac1877b8e2",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9aee5129-cabd-4257-9b59-d81e35c13900"
        },
        "item": {
          "id": "f8c55abe-5ac9-4148-9d8f-df8d081ff106",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6a4eb21b-7c47-4524-8bfc-e6dd76a73d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3860c915-94a5-4959-a06a-8ac9ba14c66f",
        "cursor": {
          "ref": "b7ecd8a9-4f81-45ae-bff4-6906142a61c8",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "da412358-75c4-4d87-a554-50a129e15e56"
        },
        "item": {
          "id": "3860c915-94a5-4959-a06a-8ac9ba14c66f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c01ebc2c-3a42-447f-bc2e-a29b58d80df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4888f0e-1c44-481f-bc24-3758258652d8",
        "cursor": {
          "ref": "9dddea7c-bf09-436d-b7e4-07e8a6153df9",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "00ed1ad7-1608-4577-a513-8640169138a9"
        },
        "item": {
          "id": "b4888f0e-1c44-481f-bc24-3758258652d8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e1c11cc0-d812-4d22-8a56-e1c0b92cfb09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a64bd3e-8a59-4cdf-847b-1e9dd81cd42b",
        "cursor": {
          "ref": "29ca6e61-92f1-4591-b637-8d54fc83fa92",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a80e52ac-c743-410a-94c4-7f787f405f04"
        },
        "item": {
          "id": "6a64bd3e-8a59-4cdf-847b-1e9dd81cd42b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f624583e-ff99-4e00-854f-adc7d5d7d962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63713063-7f2c-4288-9013-a646a030d56a",
        "cursor": {
          "ref": "a11424e2-aa7e-4d28-89bb-1260120a5ff0",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b7ecaef1-f52b-4b6c-b8ab-3546c9254f09"
        },
        "item": {
          "id": "63713063-7f2c-4288-9013-a646a030d56a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1b6fe646-3094-48b4-8eea-8993db31d0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6368b03d-fc8b-410f-958a-847cf7e162c7",
        "cursor": {
          "ref": "6c359431-493b-43b8-9291-7733cf56834c",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "10214730-721f-4a56-939c-6d514bea2e89"
        },
        "item": {
          "id": "6368b03d-fc8b-410f-958a-847cf7e162c7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9d074ad5-dcf3-4baa-99a6-c3e6e88ee497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6204a8-9c45-49fd-b126-247352ef0545",
        "cursor": {
          "ref": "b59dc8ff-b0d7-4219-9fd6-a63100aa0b3b",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "460eb61a-5cf3-4583-a72e-a77341047127"
        },
        "item": {
          "id": "1f6204a8-9c45-49fd-b126-247352ef0545",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5f30ff86-78fe-4f05-b0ee-03ced7ce361f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1526e7b4-4c3a-42be-bf3b-d78b9e299f16",
        "cursor": {
          "ref": "c5957416-e4af-4737-b7ab-4f1241d30a59",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0e73426b-b283-4986-8449-67be9d157147"
        },
        "item": {
          "id": "1526e7b4-4c3a-42be-bf3b-d78b9e299f16",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "97672ff9-5b49-48bf-85d9-ef69f3960a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf40f32-7181-4bf5-8f4c-14c9dcda338d",
        "cursor": {
          "ref": "f04b47c1-d98d-4ed6-9eff-ff6364306674",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "48e4e8b4-8b5b-4608-aecd-4cead423cc40"
        },
        "item": {
          "id": "5cf40f32-7181-4bf5-8f4c-14c9dcda338d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9627d4a7-96ef-4e3b-963b-c117aec35ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033c602a-7ad7-40a5-b625-fcbd8fb463e5",
        "cursor": {
          "ref": "bc078d30-d54b-4f0b-88f0-8328436572f4",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cd294e7f-5e3b-44b2-a7e4-d0e14d3d1abd"
        },
        "item": {
          "id": "033c602a-7ad7-40a5-b625-fcbd8fb463e5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "36be5019-b695-4bc2-831b-384dbeb130c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99242548-67fe-470d-aefd-8e50c39d440b",
        "cursor": {
          "ref": "ce134e3a-7936-4019-a9c1-ada00a19f52f",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "450d7612-767b-4c7f-b0c7-98760599da62"
        },
        "item": {
          "id": "99242548-67fe-470d-aefd-8e50c39d440b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c2541f5b-52a9-4ddf-8082-37cde05f25ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e963d6a-5c36-400f-b8be-e2d8f27eede8",
        "cursor": {
          "ref": "8f8d5e97-0c9a-4204-aedd-cc8e92b44e96",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "72f13d8e-4e3f-4d07-ae7a-1bc080618c83"
        },
        "item": {
          "id": "1e963d6a-5c36-400f-b8be-e2d8f27eede8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "31f6b3b9-ed29-4b58-afb8-8aa344921e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ec0f62-af9b-4853-8e99-e3b151a4d8b2",
        "cursor": {
          "ref": "399da19c-57f5-4b37-9571-b3c3fe3dfab6",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "78522783-c64d-4e2d-8145-8359e22bdc01"
        },
        "item": {
          "id": "a9ec0f62-af9b-4853-8e99-e3b151a4d8b2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "83b892b7-a00d-4160-b8fd-cecfb1013a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d252ec0e-e900-4ec3-a243-565ce39e36fe",
        "cursor": {
          "ref": "357f0a51-6b53-49e0-b536-6460f964d8ab",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "80792a10-bc28-460f-929e-1de74cd9ce73"
        },
        "item": {
          "id": "d252ec0e-e900-4ec3-a243-565ce39e36fe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bc81e709-f108-45af-bede-8175246c5cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400dee94-ee3e-40f8-88b0-35ecba79acee",
        "cursor": {
          "ref": "bd2df5b2-1de4-4eb3-b81c-b3bdf16268e4",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1af79840-0942-4ac6-b11b-2a84ccabd280"
        },
        "item": {
          "id": "400dee94-ee3e-40f8-88b0-35ecba79acee",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "93be0047-858e-4416-bca1-5650a44f9631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb060bab-3bb0-40a8-85ac-5fa4a695cbd1",
        "cursor": {
          "ref": "ef06a023-da7b-42b2-b6a0-0819e1b99795",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c920eec4-779f-454d-a1d6-c9c80edec466"
        },
        "item": {
          "id": "fb060bab-3bb0-40a8-85ac-5fa4a695cbd1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c9e386d5-6aa6-4028-8617-b2fb5e355ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1c735e-c4f9-44df-a46f-5145e855cbd1",
        "cursor": {
          "ref": "5fd115c9-0243-4a83-b18b-a48fe9f0cd74",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "70807fed-31f3-4ff4-9b35-51aaab34ebbd"
        },
        "item": {
          "id": "8e1c735e-c4f9-44df-a46f-5145e855cbd1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6fd71244-7a91-42a2-88a7-7c92c83997de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99105703-7a90-43c4-aca1-0e3228d3503d",
        "cursor": {
          "ref": "b54a3f58-8db1-4a3e-a4fc-598056da2a3a",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "15043ee8-6515-42b3-8f55-e85da7957c27"
        },
        "item": {
          "id": "99105703-7a90-43c4-aca1-0e3228d3503d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5ac20a28-0ecf-4046-8935-bd383a2f9d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 880,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4da864-2bcd-44e8-8ac6-d86986e4a772",
        "cursor": {
          "ref": "b80626cb-548c-45c1-859b-7c0f3fb60387",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6619f03a-22c0-4821-b8f0-8dc9baa81a34"
        },
        "item": {
          "id": "0a4da864-2bcd-44e8-8ac6-d86986e4a772",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "07985867-3a9d-4585-8bd1-5b92204aca95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4798627-1a78-4203-8b81-2e71d0a3c371",
        "cursor": {
          "ref": "53e1d619-140e-4652-bc8e-8ac3391d19f2",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2453f5d5-445a-4c57-87d8-dabe60992e61"
        },
        "item": {
          "id": "f4798627-1a78-4203-8b81-2e71d0a3c371",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e5ded53d-b569-481d-aab5-21db565459da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 922,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75c1e51-cd1c-4396-a9c7-5b854e3cac13",
        "cursor": {
          "ref": "2a9b2864-7b83-49eb-8bd5-ed09efd686dd",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5c0d2e6a-7d4b-46e8-a4ff-d3b1f72c5e4e"
        },
        "item": {
          "id": "e75c1e51-cd1c-4396-a9c7-5b854e3cac13",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5cab188d-5929-478f-aeec-a623947a0fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1117,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945a68bf-67cb-46ed-8bbf-5eca1523fda0",
        "cursor": {
          "ref": "d923cd20-920a-4ba5-ac67-bce18c2639b2",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b02cc28b-284a-4274-b9ac-10c04841710b"
        },
        "item": {
          "id": "945a68bf-67cb-46ed-8bbf-5eca1523fda0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ef156a84-8e49-4f34-814d-7b141ae87b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 988,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa959c86-c0a5-4d93-9397-e018238a0610",
        "cursor": {
          "ref": "bcf46527-60c3-4917-b39d-fa477bc51bdf",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "865b5d8b-8c57-41a2-b0b9-31dfae8943d7"
        },
        "item": {
          "id": "fa959c86-c0a5-4d93-9397-e018238a0610",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5cdf8443-108f-485d-9d86-5e476e6692d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765666d5-f22a-4590-8df7-55a842ecf6ab",
        "cursor": {
          "ref": "7f83d9ac-851e-48d0-9baf-392ed33f06d9",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3b3856dc-4338-4b5e-ad1d-13b14c288399"
        },
        "item": {
          "id": "765666d5-f22a-4590-8df7-55a842ecf6ab",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "32db318e-0685-468b-b7bf-c93bf81612fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e65566-609c-49eb-8aa5-6c26513fc5b9",
        "cursor": {
          "ref": "48b168b0-1de3-4af8-b7fd-8c044a20818c",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ee779a74-eefe-4939-97ae-4dc699b50a63"
        },
        "item": {
          "id": "d2e65566-609c-49eb-8aa5-6c26513fc5b9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "57172971-5bf7-443b-aba0-9d7254297d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 868,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb11054-b3d0-4e1e-9e97-8e7513c4e504",
        "cursor": {
          "ref": "c0074080-ddd0-4e44-acb9-584068aa07fb",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ceb8ebbf-77e0-4d0f-ba02-3afb6be2aa86"
        },
        "item": {
          "id": "efb11054-b3d0-4e1e-9e97-8e7513c4e504",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "acd60c36-d52b-4483-af0a-d94202fe6753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 914,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67a118d-bd51-4c25-913a-2759f1e90d5b",
        "cursor": {
          "ref": "145f5b9a-fd7b-43a8-a8d6-7c387f4a4dfd",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3fad9ab5-cebb-4eee-93d0-e2187860531f"
        },
        "item": {
          "id": "a67a118d-bd51-4c25-913a-2759f1e90d5b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "cd3c1b3e-f5e6-445a-98cb-cdf2670db8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 943,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dada9324-4402-43d5-949a-327f3ecb6637",
        "cursor": {
          "ref": "eb614fda-b596-43dc-b4b6-7d11a7519c0a",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9408a531-d244-48a7-b39c-171582c88c12"
        },
        "item": {
          "id": "dada9324-4402-43d5-949a-327f3ecb6637",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "78d1de6f-6b5f-4f22-903f-b08cecf45ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 954,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f22af4-ec56-4432-913e-5cdf2d96f81f",
        "cursor": {
          "ref": "a3b810b0-592e-4043-8f9c-648ee1ca9cf6",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9a9b9e84-e81b-4ca7-a609-c13cc32c48c7"
        },
        "item": {
          "id": "f3f22af4-ec56-4432-913e-5cdf2d96f81f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7d8dbefd-23b0-4739-b698-de4eb34cfb69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0c161c-b387-456e-924f-d969346c5164",
        "cursor": {
          "ref": "4fe760a2-02f8-4deb-90d6-f4bc6db00e59",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3915fe07-f7c7-4e1b-8de3-35c72d5b633f"
        },
        "item": {
          "id": "fe0c161c-b387-456e-924f-d969346c5164",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "26144c07-2c23-4cf8-81bc-b29fcd51fe81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1404a35c-70d7-4133-a367-d1530b0ce59f",
        "cursor": {
          "ref": "f0ab5cb2-bc68-4797-b4c7-427390ea6b85",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "98ead5ad-ae6e-4f71-a514-5c52945e63e6"
        },
        "item": {
          "id": "1404a35c-70d7-4133-a367-d1530b0ce59f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4dc68f8e-af11-41d4-aa7a-fa2a5016a7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368ab292-4cb3-48a9-ae58-3c762a513e0b",
        "cursor": {
          "ref": "8c75c33c-daa9-401b-8c26-6a31dd0ec60c",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4afea03f-9c6f-4009-9233-7a9a678ff9d3"
        },
        "item": {
          "id": "368ab292-4cb3-48a9-ae58-3c762a513e0b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1e9ae43a-452e-4645-8c0a-7b3bdba4c65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5039eba3-e283-44d6-866a-600439979131",
        "cursor": {
          "ref": "ee2dce0f-1b7c-4890-83c0-32ab58e8ecc6",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d7cba27a-aff3-463d-b695-30a1f71d3c34"
        },
        "item": {
          "id": "5039eba3-e283-44d6-866a-600439979131",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c577581c-dff1-4a83-a5c8-360b5233969c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b843d013-9e18-4b5d-9e36-0fc99ee35b16",
        "cursor": {
          "ref": "8d683f8c-b176-452b-b4e4-bdc9f7936697",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b62a354a-fac7-423a-8f7d-53301bc1709b"
        },
        "item": {
          "id": "b843d013-9e18-4b5d-9e36-0fc99ee35b16",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a27e4f21-93be-47ca-919c-695539d28f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a672f780-6204-4fc9-8d90-b5eae19eddf7",
        "cursor": {
          "ref": "6d840a52-6dce-4525-98ec-55eee6492495",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "95f981f1-4e19-4e56-b684-192ac97deeac"
        },
        "item": {
          "id": "a672f780-6204-4fc9-8d90-b5eae19eddf7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "44a7b307-3ef4-4aec-a63a-884bb26b878e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273cbd88-ebda-401d-827e-84b6c9ec803f",
        "cursor": {
          "ref": "ea921490-b970-47b8-999b-4d5274000875",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "567908dd-e059-47d7-9c50-2aaf0e04d159"
        },
        "item": {
          "id": "273cbd88-ebda-401d-827e-84b6c9ec803f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3c56d5df-4339-4394-8a24-9f9a247acd80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4f356b-f8d5-4204-bad3-35cf185f7a46",
        "cursor": {
          "ref": "6b9dec06-b4cd-42d7-ac90-8b44f860223f",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "77768b3e-9176-4cb6-bfe7-b80d41fc4b94"
        },
        "item": {
          "id": "1d4f356b-f8d5-4204-bad3-35cf185f7a46",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0b727b9c-fffc-4335-a29d-4cc9fab2f487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8bbf51-736f-41a0-ba2f-6f9f794c7a14",
        "cursor": {
          "ref": "7f19fc01-5fc9-4ed7-a00a-f5874444372b",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5028b849-1370-4dd9-8e79-f9222c035364"
        },
        "item": {
          "id": "0e8bbf51-736f-41a0-ba2f-6f9f794c7a14",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "56b4fe28-a858-4d50-9f22-45e3b9cfdf1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a3fea2-ced0-4583-8da2-f886b7365a40",
        "cursor": {
          "ref": "9d613e14-4dbd-44d5-b655-f6bb29f0712b",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "17e49f71-46c7-48dd-9152-e97014ca0fbc"
        },
        "item": {
          "id": "e1a3fea2-ced0-4583-8da2-f886b7365a40",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e50c6da0-1c42-424a-95b2-fe5585c36853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650a4456-f97d-433f-a085-7793fe27c65b",
        "cursor": {
          "ref": "48aa3417-a9ff-4264-a793-877713d04952",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3f155a42-cf40-4fbf-b04f-06f2ba7f4336"
        },
        "item": {
          "id": "650a4456-f97d-433f-a085-7793fe27c65b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1846d5d7-7388-4a6a-97cd-ffb334b89ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378cf655-c7ac-4810-8d9e-d4e20bd13de1",
        "cursor": {
          "ref": "b2795119-b985-45e3-b6e9-6ec72889ae18",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1a4802de-b19c-42b8-942d-80fe084a40a1"
        },
        "item": {
          "id": "378cf655-c7ac-4810-8d9e-d4e20bd13de1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "81b54638-7ccf-48a5-9796-a8d513042056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1042,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c584a37-32e7-4217-853c-c8e8b56b5b85",
        "cursor": {
          "ref": "d8821be3-9db4-4796-aa38-ea4bfebbf746",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9b69da41-514a-424c-8d5b-a33dff1841ed"
        },
        "item": {
          "id": "4c584a37-32e7-4217-853c-c8e8b56b5b85",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6df5c81d-bb8a-4ea9-88ca-af70c5479958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1025,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54e5f04-a111-4ca5-946c-03537bf0be15",
        "cursor": {
          "ref": "2d2d90ec-49ad-47fd-ae24-1ae4b942760d",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6a242dfd-133c-4122-98a8-fedd68492bb7"
        },
        "item": {
          "id": "c54e5f04-a111-4ca5-946c-03537bf0be15",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "60421cd0-46e9-4b66-8798-3b344d6d4cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 948,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc57f72-eb6e-403e-82a3-8c2d9415609b",
        "cursor": {
          "ref": "03655269-fc99-4c82-ae58-9fcb65949c94",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "29cc9e7a-3f02-44c5-8025-8fe7c4d16bb8"
        },
        "item": {
          "id": "6cc57f72-eb6e-403e-82a3-8c2d9415609b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7e24f65b-8219-4a58-872a-2c47fd24010f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 922,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1a6a4c-6549-4830-a184-95ca0812a0c8",
        "cursor": {
          "ref": "e6e14bd9-d2cb-4c8b-a79d-f5c6bcf8c267",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "22da613f-341c-442c-8b82-a11c1d9a31ce"
        },
        "item": {
          "id": "aa1a6a4c-6549-4830-a184-95ca0812a0c8",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "573c38db-24f2-41f6-aed8-0d0d5aa3d1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f843a4e-077f-4184-827f-1fbd1673c4b4",
        "cursor": {
          "ref": "ebed2a6a-4373-49e8-95f2-1fc42597c007",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3c4e6064-c1c7-49e2-85d1-bc6e376170ce"
        },
        "item": {
          "id": "1f843a4e-077f-4184-827f-1fbd1673c4b4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "31721ca1-b073-4b08-bfde-e18d94c708c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad672d1f-448a-4999-8691-17a65e6b3d4a",
        "cursor": {
          "ref": "cc2d5414-ce71-4851-a972-0d92a0cb2af7",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "78f0737a-0a4a-436a-b826-a598a49ad2a9"
        },
        "item": {
          "id": "ad672d1f-448a-4999-8691-17a65e6b3d4a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "16065a43-ef99-4cc6-abfb-a4cfa2d002a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073d920d-6aca-4f38-a020-242831d0a44c",
        "cursor": {
          "ref": "7c8c7240-211f-497a-b79d-fbdc094c4bd9",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0d2b1904-d4ba-40e0-8b9a-e95a8cfc8979"
        },
        "item": {
          "id": "073d920d-6aca-4f38-a020-242831d0a44c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0928feb0-108d-44f1-988b-b48931cb899d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33c9794-0128-46f7-afcc-742a312f9180",
        "cursor": {
          "ref": "c29999f5-8e32-4780-9bef-1489070458be",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3bdc06f3-7c48-4666-ae40-1e2845ab7428"
        },
        "item": {
          "id": "c33c9794-0128-46f7-afcc-742a312f9180",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "a435c69d-9f44-4488-8bf0-4a757b6b426f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 554,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9112922-a674-4854-9d98-e5f8226a4a19",
        "cursor": {
          "ref": "0cee8809-1ece-4362-a3ba-2aba6668c657",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a11f6c2e-7175-4da9-b2fe-b1282a245950"
        },
        "item": {
          "id": "b9112922-a674-4854-9d98-e5f8226a4a19",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d572687c-0203-4694-a215-b6ce407193e1",
          "status": "Created",
          "code": 201,
          "responseTime": 4200,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c71e14-ef53-4d08-87a0-a3a8904c9986",
        "cursor": {
          "ref": "9769b1a3-8064-4985-933a-d7610e3081a4",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1d192b97-a6d9-4a03-8d1e-f758f7c62dbf"
        },
        "item": {
          "id": "45c71e14-ef53-4d08-87a0-a3a8904c9986",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "734f391e-d412-4de8-a86e-53e4b62c9891",
          "status": "Created",
          "code": 201,
          "responseTime": 3999,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccaa3a76-e26c-43cc-9bdf-c385cda46c79",
        "cursor": {
          "ref": "97113304-253a-48fc-98b3-371a8a3a1454",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8951c0b6-ff3c-41a9-9abe-560f264bd725"
        },
        "item": {
          "id": "ccaa3a76-e26c-43cc-9bdf-c385cda46c79",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ea5ae5ca-0939-4e45-a069-6070fdc7387a",
          "status": "Created",
          "code": 201,
          "responseTime": 3855,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cecc5f-e6dc-496c-b302-9dc2fd4d399d",
        "cursor": {
          "ref": "3498f35f-3fbd-480e-8008-9b8618d5d86e",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "62f0e252-cad2-4599-9d5f-97f6c83003a0"
        },
        "item": {
          "id": "50cecc5f-e6dc-496c-b302-9dc2fd4d399d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0863a392-d807-4f5e-84c6-7bd8d8f713f3",
          "status": "Created",
          "code": 201,
          "responseTime": 4136,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbf4f3e-72f3-42bd-9639-c9b5f2ba1471",
        "cursor": {
          "ref": "5229d6d5-5886-4d52-b833-33cebf31e3e8",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a3b34da3-f48e-4d21-8ae6-6cc63853eb14"
        },
        "item": {
          "id": "9dbf4f3e-72f3-42bd-9639-c9b5f2ba1471",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "dae74dd9-7dbb-465c-b9fb-2924e74a26ea",
          "status": "Created",
          "code": 201,
          "responseTime": 5208,
          "responseSize": 1088
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6a4386-d66c-4cb0-a842-54b9107b6e6b",
        "cursor": {
          "ref": "541d067c-2138-4a22-a6f5-4c7207855b38",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f184fbed-6310-4115-980f-1196a6e14680"
        },
        "item": {
          "id": "ce6a4386-d66c-4cb0-a842-54b9107b6e6b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d2e26955-cf5f-4ee3-b82d-2adc97cc01c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6a4386-d66c-4cb0-a842-54b9107b6e6b",
        "cursor": {
          "ref": "541d067c-2138-4a22-a6f5-4c7207855b38",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f184fbed-6310-4115-980f-1196a6e14680"
        },
        "item": {
          "id": "ce6a4386-d66c-4cb0-a842-54b9107b6e6b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d2e26955-cf5f-4ee3-b82d-2adc97cc01c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001c9b30-1bcf-4b40-b510-cd65702714c5",
        "cursor": {
          "ref": "22bbb00b-7ee7-47ad-8ff2-3bc489f90adf",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "14edf2e6-bb9b-415e-899a-35e9078c1511"
        },
        "item": {
          "id": "001c9b30-1bcf-4b40-b510-cd65702714c5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4b07ede4-175c-4dec-85c6-c7d8d6ebc48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d08f77-6081-4946-a484-857f39114896",
        "cursor": {
          "ref": "dd18af79-430f-437f-bbec-8fda3a09e824",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f6840212-9fcb-4c92-a16a-1b5839d60b3f"
        },
        "item": {
          "id": "90d08f77-6081-4946-a484-857f39114896",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "11887a42-2163-4bdc-9262-46f47f9dcd0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ed8988-9bb1-4d98-b71f-dc1667a5fe79",
        "cursor": {
          "ref": "b1c9502b-2f14-4011-be0d-e020597a0cd8",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4dbd54a1-e64b-4bf1-84e7-e7dfbaf21ba7"
        },
        "item": {
          "id": "a8ed8988-9bb1-4d98-b71f-dc1667a5fe79",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a00af06a-3300-4c06-87e4-0e907fa5da0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed25cc0f-7573-4a91-b2b0-8cd4629da600",
        "cursor": {
          "ref": "41b8ad6c-be3d-4c69-8a85-285b1d3be1ca",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "548cee99-8751-4678-8a0c-edac3a1ec418"
        },
        "item": {
          "id": "ed25cc0f-7573-4a91-b2b0-8cd4629da600",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c3f15d3f-adea-441d-a8da-1d7e4d82c9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bdc62b2-ac4d-400d-9ce6-e33895279219",
        "cursor": {
          "ref": "a645c6a3-2645-4d72-9c8e-2d80740df27e",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "cd82e189-b09f-4221-a45f-bf8972ebc81c"
        },
        "item": {
          "id": "5bdc62b2-ac4d-400d-9ce6-e33895279219",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3e378384-002f-4da0-af7c-113b9f5022a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d968d8e1-dd9f-4939-aede-38b9e64c9204",
        "cursor": {
          "ref": "7568a088-0482-472f-9afc-8ea47e5f092e",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "112c1cb4-5b4b-4198-af5b-cd2c1591ab71"
        },
        "item": {
          "id": "d968d8e1-dd9f-4939-aede-38b9e64c9204",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6e2b3f61-c96e-4ef2-ad14-5f863f724403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad393b48-c358-47bb-8e9e-84816675419a",
        "cursor": {
          "ref": "8eae72c9-c96b-4ea0-b461-a846b75bb4f8",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f78f7c33-4fb8-4d38-9f4a-a22113f44deb"
        },
        "item": {
          "id": "ad393b48-c358-47bb-8e9e-84816675419a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "32751e3c-adc4-41e9-9beb-7a3dbadc1bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f06c6f-f43d-4fe7-8539-510c133e5ebf",
        "cursor": {
          "ref": "f857427e-2643-419f-847f-5a8667e8d46c",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2695b5c0-d62f-45b4-b1a2-abf523017ad0"
        },
        "item": {
          "id": "f2f06c6f-f43d-4fe7-8539-510c133e5ebf",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e0cfecfc-f662-4e79-873b-fc4f66f54dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4ecb26-0554-4bbc-ad39-e817310ca069",
        "cursor": {
          "ref": "a7176df5-a251-495d-b8e1-696c94e0d144",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7906278b-7e7f-4ca8-9626-4ddcb2341e5e"
        },
        "item": {
          "id": "5f4ecb26-0554-4bbc-ad39-e817310ca069",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "775bfde1-a865-4695-b20d-fef6dcc0b075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b887a26b-70c8-479b-8c25-2cb330294aa2",
        "cursor": {
          "ref": "37ef5afb-09ba-42e1-9577-ceac24b41430",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "56f73946-5242-4a55-9653-8cc1d0d4b86a"
        },
        "item": {
          "id": "b887a26b-70c8-479b-8c25-2cb330294aa2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d47f679f-8415-4eb6-9311-43c802d89a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57228c16-06f2-46d4-9d33-3b5fe34fca27",
        "cursor": {
          "ref": "ad14cf23-3e6f-44e4-b9e4-ecc7e378678a",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9dd05114-33cb-4635-a3b0-1454a375963e"
        },
        "item": {
          "id": "57228c16-06f2-46d4-9d33-3b5fe34fca27",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "570af675-7628-4d73-af98-53ded90a7c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e840281-0f53-4b16-988e-8201cefdc49c",
        "cursor": {
          "ref": "da8d7286-e5e9-4e7a-8018-e96f87c929b0",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4437b54a-01b6-4b51-954b-1fe6a93bfa50"
        },
        "item": {
          "id": "5e840281-0f53-4b16-988e-8201cefdc49c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "60c1485f-103d-4b6c-9b33-73fe978a5992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4256e632-9dc3-452f-898a-e1bac96df149",
        "cursor": {
          "ref": "e56e5366-7c6c-40f6-bdbb-801c099c7a2c",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5b779259-e9c6-43cb-b2a7-b6155655ada4"
        },
        "item": {
          "id": "4256e632-9dc3-452f-898a-e1bac96df149",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "550c8542-269c-4a33-8a97-1fc5e41b5a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1087,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1604bc3a-e490-4d8a-bb75-ae4793d5c7fb",
        "cursor": {
          "ref": "e9fe71d7-6fef-4eab-b71b-06ab8f3e30e1",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "eedbeaf2-d43c-450f-8240-45dfcda83cef"
        },
        "item": {
          "id": "1604bc3a-e490-4d8a-bb75-ae4793d5c7fb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ce3c8c83-a07d-424c-868a-083331cbc940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1001,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e28bbf6-6c6b-4442-9b03-4bfeb2db904d",
        "cursor": {
          "ref": "47a62681-6628-431d-86ed-e29b0c8ae4f8",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "dfa1261c-b8ba-428f-b7e3-97db5d37c51e"
        },
        "item": {
          "id": "2e28bbf6-6c6b-4442-9b03-4bfeb2db904d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "74fea6d6-6d24-4ce6-9b7a-6dc1f7c42028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 996,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b603b7-5380-415b-9272-4c23fdaa4231",
        "cursor": {
          "ref": "a6a01cba-02a6-45a9-9a57-cecc850dba11",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "764b9d1f-45cb-4451-817e-6f4dcd5898a4"
        },
        "item": {
          "id": "99b603b7-5380-415b-9272-4c23fdaa4231",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2ce011fc-6600-4eb5-bbc7-4c2674971483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7ce883-5419-41de-a613-b40e0257d848",
        "cursor": {
          "ref": "89765bee-7861-4de3-b9ec-b15cf08e91a9",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ee352a3d-79ea-4437-bcf2-a6d1a23a0b0b"
        },
        "item": {
          "id": "6b7ce883-5419-41de-a613-b40e0257d848",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "47bf2362-9f5d-4bdd-a4fa-9fd8eb45f966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 892,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d69aea4-001f-40ec-9700-c911bc046468",
        "cursor": {
          "ref": "89caab8f-3a14-4b73-a43d-6ca6fb528acd",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "17469681-e12b-4ac1-bd72-8024247a30a7"
        },
        "item": {
          "id": "3d69aea4-001f-40ec-9700-c911bc046468",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5e55d42b-3839-4e4b-aef9-f8609f6dbadd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1301,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e775e4-05e8-4025-8dd5-b92f08671bdc",
        "cursor": {
          "ref": "adef203c-8a08-4fea-8f57-f79aaaf9b0d9",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "baae529a-747a-45fc-b6e8-acb8ca2e68db"
        },
        "item": {
          "id": "e0e775e4-05e8-4025-8dd5-b92f08671bdc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ceb9c2eb-7258-4d8f-9085-61fc51995907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff002bc5-102c-4c93-b473-b737810e9506",
        "cursor": {
          "ref": "f979069d-8ba3-4622-ba2e-9e9dd56e572a",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0421c686-3b81-4cf3-90e0-b1fe6126e01a"
        },
        "item": {
          "id": "ff002bc5-102c-4c93-b473-b737810e9506",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "69dc8849-23f8-4f9a-93bc-7cb33e6264e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 971,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807f84f1-22e7-4202-b43f-2f14e4a0c7ea",
        "cursor": {
          "ref": "9083b7df-0028-41f1-9779-6095690b3c69",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9844894d-c527-48ac-ad78-973702751240"
        },
        "item": {
          "id": "807f84f1-22e7-4202-b43f-2f14e4a0c7ea",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "37ebfc13-0565-4445-af82-931de2da088c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 873,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de65f67-e902-4664-b9cb-6dbd74e8fb88",
        "cursor": {
          "ref": "96ef8c87-7ea2-4679-b850-4de3b6ae8e96",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "18ff75ae-0f20-48c1-b2d8-35fe1d3ba5dc"
        },
        "item": {
          "id": "9de65f67-e902-4664-b9cb-6dbd74e8fb88",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "de6d5e0d-fbce-4551-bbd0-72ce759fb7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ff6cec-2388-452e-ba91-ee23a0ef4fd9",
        "cursor": {
          "ref": "44b9bdb9-fcb0-4231-8f1d-6048333628e4",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2140f721-15da-4276-b10c-e225311f3f99"
        },
        "item": {
          "id": "37ff6cec-2388-452e-ba91-ee23a0ef4fd9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5d3d3a4f-c73c-4415-b733-03986ca5f0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7838d4bd-be61-44f4-bf30-a62cd6539e4d",
        "cursor": {
          "ref": "32c9431e-30a2-44f3-9c3a-46783697f544",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "041598f1-c852-4c02-b269-e88669a60e75"
        },
        "item": {
          "id": "7838d4bd-be61-44f4-bf30-a62cd6539e4d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bda371e2-68e8-46e9-9557-6672ec45de28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862a319e-9bb1-4f8b-9f3a-6509236c4070",
        "cursor": {
          "ref": "c90c66e8-bad6-47a0-8970-c0f6be84e3ea",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fdc1865d-020e-48a2-a101-b74c52697209"
        },
        "item": {
          "id": "862a319e-9bb1-4f8b-9f3a-6509236c4070",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6721a3ae-2ed4-4a7a-82b9-b01ff7a55c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104a8bd3-1ab5-4fc7-916e-89f306afa646",
        "cursor": {
          "ref": "e9448d28-5a8a-4fcc-a024-462a4c11d1cf",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "26284a67-9a63-4cbf-a1a5-c2f4a3647e94"
        },
        "item": {
          "id": "104a8bd3-1ab5-4fc7-916e-89f306afa646",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ed6ee537-1700-445d-9201-283ee9c417e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab16cc0-1e7e-4f57-8bc5-4744f56d808a",
        "cursor": {
          "ref": "7232ec0e-0723-4440-badb-61082075cb40",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "56d487fc-f29e-4ba7-bc86-0719dcd6985f"
        },
        "item": {
          "id": "7ab16cc0-1e7e-4f57-8bc5-4744f56d808a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "920f72e8-19eb-4f3d-841b-37b8054960ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 990,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a335427-0678-4bf7-83c0-38531595eb3c",
        "cursor": {
          "ref": "f90ccf91-82db-4069-a8cb-592227864eca",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fc76d36b-5e66-4686-8349-d1b29f5e18e2"
        },
        "item": {
          "id": "7a335427-0678-4bf7-83c0-38531595eb3c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "11fd181b-1f51-4545-8b1a-aedd90a2ed99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 914,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e63699-3980-4b23-accd-81930ac0179b",
        "cursor": {
          "ref": "7af4c55d-d7df-4d17-ac38-805ed18471bf",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1f4dfed8-cc22-47aa-b507-8df5777a24c3"
        },
        "item": {
          "id": "38e63699-3980-4b23-accd-81930ac0179b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f8fc163c-2182-4fd3-95fc-a72ab30f9df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 965,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5abfd2f-5651-487e-b46d-6f6e1f021238",
        "cursor": {
          "ref": "bd7000f7-c050-4d79-9745-aa9c2f848b89",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5ff6563f-70b2-475f-9aa7-cd7db6850c9b"
        },
        "item": {
          "id": "c5abfd2f-5651-487e-b46d-6f6e1f021238",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c668b182-8c47-4f21-85ce-eccc895873e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1015,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4255325-26ce-43fe-b104-dd60fdb696ac",
        "cursor": {
          "ref": "a6e245ca-6326-4e75-a94e-85f519006237",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "de30a63c-cb2d-4644-8ef5-7df168b5e3f2"
        },
        "item": {
          "id": "d4255325-26ce-43fe-b104-dd60fdb696ac",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9ee5b08a-8bad-42c2-9224-8b8895484633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 858,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e806f616-6a10-440e-a5c5-535c1288fb68",
        "cursor": {
          "ref": "fd3a58bb-57df-4830-ae52-f544c991a42b",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9fa9e392-e249-45a1-bffd-2bf845a3b91d"
        },
        "item": {
          "id": "e806f616-6a10-440e-a5c5-535c1288fb68",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b0003d22-5973-491d-a974-87245295777d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a80f60b-a044-4255-8f4b-cd6952db23f8",
        "cursor": {
          "ref": "4200fc4d-13bb-4827-b9e5-9eb133bf0dc8",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c5c632e8-f4c8-471e-9c63-c8c6bc663601"
        },
        "item": {
          "id": "1a80f60b-a044-4255-8f4b-cd6952db23f8",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "af8eca50-5a12-4b83-9b0d-a8877638e177",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 618,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8782aae4-1d29-47ef-9a87-c1229b12a6b8",
        "cursor": {
          "ref": "65515d53-39ad-4fcd-b230-dd3c57d2fc33",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "00dd20e9-ba93-4ae6-bca7-4ec1bcab96e2"
        },
        "item": {
          "id": "8782aae4-1d29-47ef-9a87-c1229b12a6b8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c255be55-1288-4f72-99d8-d9a7715976c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8782aae4-1d29-47ef-9a87-c1229b12a6b8",
        "cursor": {
          "ref": "65515d53-39ad-4fcd-b230-dd3c57d2fc33",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "00dd20e9-ba93-4ae6-bca7-4ec1bcab96e2"
        },
        "item": {
          "id": "8782aae4-1d29-47ef-9a87-c1229b12a6b8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c255be55-1288-4f72-99d8-d9a7715976c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abebe589-6da2-4037-b5f1-fa12126d6a7d",
        "cursor": {
          "ref": "c0a6fe87-85fd-48de-8360-d09b0d9b2ba2",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "505892cb-7470-475f-b8ff-d48ee378c54b"
        },
        "item": {
          "id": "abebe589-6da2-4037-b5f1-fa12126d6a7d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "42716d5d-a555-45c1-906b-67216cfe8363",
          "status": "OK",
          "code": 200,
          "responseTime": 362,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "0e981a0a-f5a3-4b22-9618-87e81d69e2dd",
        "cursor": {
          "ref": "7b3ff2bb-fa88-4a2e-a0c7-cdd76d3cff05",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7ba89193-67db-4912-9ffb-98e2d2296b7e"
        },
        "item": {
          "id": "0e981a0a-f5a3-4b22-9618-87e81d69e2dd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e17ca926-37f5-403c-9efb-7b4c1aefdc19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532ea951-4366-4f7f-9e3e-1d98bc292f49",
        "cursor": {
          "ref": "897ff746-f795-4f61-8658-32e39c37d8f7",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fef10afc-fb58-4443-b071-efbc7c986601"
        },
        "item": {
          "id": "532ea951-4366-4f7f-9e3e-1d98bc292f49",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ff4ecffa-5495-4653-b88a-6778bbc5bbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba907f17-7daa-43bc-b4fd-f9764c26bdab",
        "cursor": {
          "ref": "12b73e98-bf78-4517-8c2d-676210206d2a",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c5196c06-b059-4114-8810-5c0c9e3db40a"
        },
        "item": {
          "id": "ba907f17-7daa-43bc-b4fd-f9764c26bdab",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "bdd0b08e-a53a-422f-af32-04e3c0beb109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d56b0cc-f961-4376-aa81-6ea8ac3ae5d7",
        "cursor": {
          "ref": "bf793f48-f4d8-4159-b2d5-b4cc8f749ada",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0da4c26f-c71f-44dc-b9a8-75d22b53b988"
        },
        "item": {
          "id": "1d56b0cc-f961-4376-aa81-6ea8ac3ae5d7",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "adabdd72-4bb1-48cd-854d-01cbbc63217b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7e1f5c-3eb6-4330-9bf5-3a8f71f61425",
        "cursor": {
          "ref": "5a4eee54-f844-4cf5-960b-70a3c00b734b",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "34746533-2b3b-426c-b37f-355184d33b62"
        },
        "item": {
          "id": "ab7e1f5c-3eb6-4330-9bf5-3a8f71f61425",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fe38a7b0-405d-48ce-bc5d-a98be3273023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c744f651-96a9-4c74-841e-3eb87ae40d86",
        "cursor": {
          "ref": "13380495-8640-4aeb-be9c-c7aeebc5b0af",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cecc715f-140f-4959-be25-3ab69ecb95c1"
        },
        "item": {
          "id": "c744f651-96a9-4c74-841e-3eb87ae40d86",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8a82677f-e5b6-4f2f-9208-b9210ae295be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13426d9-5374-4be5-81ac-f2783ed5614d",
        "cursor": {
          "ref": "40b8269b-e51a-441b-abc4-cb80222ed7d1",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "28eee89b-1783-429f-ad5e-308b24949d1c"
        },
        "item": {
          "id": "a13426d9-5374-4be5-81ac-f2783ed5614d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "29be520c-d278-45cb-8e0b-b05c4690a828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 2009
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d5f283-b800-47e0-9da0-57874d253220",
        "cursor": {
          "ref": "cbd8fd83-ee59-49d7-a4b3-242752558ad3",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b6257344-3cd4-4a94-9166-e572d9091848"
        },
        "item": {
          "id": "80d5f283-b800-47e0-9da0-57874d253220",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0de27a1f-b673-4362-a1b2-2911297466d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab2fae9-051a-43d9-acd0-2f0a3c73db0d",
        "cursor": {
          "ref": "cc045f7e-2fa1-4113-aaaf-099e827fd714",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6d0eaf24-eddb-40ba-9f77-c87cabab36b2"
        },
        "item": {
          "id": "1ab2fae9-051a-43d9-acd0-2f0a3c73db0d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d4f132e4-283a-4322-8d14-0950f851c955",
          "status": "OK",
          "code": 200,
          "responseTime": 560,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:154)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:154)"
            }
          }
        ]
      },
      {
        "id": "356600ce-ed65-4075-977f-5f5057f4bb00",
        "cursor": {
          "ref": "344be7fd-755d-4a32-8948-c56f6424937c",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9687609e-5bae-4fdb-9e74-9641ce28eeda"
        },
        "item": {
          "id": "356600ce-ed65-4075-977f-5f5057f4bb00",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "caec2a40-5fca-4e76-9259-11dc8e1ea5b6",
          "status": "OK",
          "code": 200,
          "responseTime": 837,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:155)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:155)"
            }
          }
        ]
      },
      {
        "id": "fa5945f6-eac8-473a-81d9-3bff2ffd5808",
        "cursor": {
          "ref": "ab672a74-3711-4998-813c-1804abdffd35",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "94174f35-4123-46f4-bf5a-db3d1b924a08"
        },
        "item": {
          "id": "fa5945f6-eac8-473a-81d9-3bff2ffd5808",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c11c70fe-f4f4-453b-8e7f-a99fa2195a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 2466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7292f61-7701-42cd-ba80-5ce6109c9675",
        "cursor": {
          "ref": "75d29eef-95f6-44a0-89d1-ec4caa714a37",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "56a5b48a-5c98-4daf-af53-6eea6b19a440"
        },
        "item": {
          "id": "a7292f61-7701-42cd-ba80-5ce6109c9675",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9b44bfec-4c2f-4c69-8c22-7489694edca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d4ff7c-432d-4efc-ac15-df8e25a31fd1",
        "cursor": {
          "ref": "6f6f2efa-f961-4687-902b-a3f408299e2c",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "367a1c1f-2c6b-48d2-84c7-76ae9e78d4e9"
        },
        "item": {
          "id": "79d4ff7c-432d-4efc-ac15-df8e25a31fd1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9a044af7-a860-472a-857e-807178bc181d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 2455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f695d65b-a698-4d68-aa19-ddf8b5e716d6",
        "cursor": {
          "ref": "8cbc0105-5775-48d9-a054-0392b79d8d8c",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "67283194-b0f2-476b-a79f-cf45f18d370f"
        },
        "item": {
          "id": "f695d65b-a698-4d68-aa19-ddf8b5e716d6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a9b8f3b1-0c22-4cc6-a027-5a3aa8b13aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f529f8a-ee9d-4304-ab85-352c4a00547d",
        "cursor": {
          "ref": "232e1d2b-6dd1-4d9d-ad42-d42eeaea261b",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d2c33e82-07d7-463c-b93c-ae01328f7bde"
        },
        "item": {
          "id": "6f529f8a-ee9d-4304-ab85-352c4a00547d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e972738c-6a6e-4cdf-b2ac-e2caf37a8dc8",
          "status": "OK",
          "code": 200,
          "responseTime": 499,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:160)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:160)"
            }
          }
        ]
      },
      {
        "id": "37257725-e3f8-4742-850b-8296dc59a6a1",
        "cursor": {
          "ref": "77d6520a-60c0-4831-949a-cfe2abe17340",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "88fc29b4-1c08-43da-a84e-4c6bd323bd76"
        },
        "item": {
          "id": "37257725-e3f8-4742-850b-8296dc59a6a1",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "da9b6d23-14c0-48d6-ae27-5c3e8578dbae",
          "status": "OK",
          "code": 200,
          "responseTime": 2358,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:161)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:161)"
            }
          }
        ]
      },
      {
        "id": "0e4ae172-7e24-4f8e-8aab-b463c45295a1",
        "cursor": {
          "ref": "1f09079e-745c-4a9a-9478-03ae2e32bad1",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3130066a-e5a0-4841-ba21-d7fb2833cc1a"
        },
        "item": {
          "id": "0e4ae172-7e24-4f8e-8aab-b463c45295a1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "30ec6b35-91d7-4b55-9e2c-3f9162eb19a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ab9318-41bf-454c-ac24-04a9f788fbc4",
        "cursor": {
          "ref": "e3dc119e-e6a1-47c0-9d1a-d90ed443b648",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "cc9fea9b-7738-431b-b930-8445a8d183f3"
        },
        "item": {
          "id": "32ab9318-41bf-454c-ac24-04a9f788fbc4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "09381a81-c1e1-4615-b512-e4a9e0b736be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39513eb4-df04-4620-bdfd-259953aa602f",
        "cursor": {
          "ref": "1dcd9e34-50cb-4795-97fa-b42e44ffbe2a",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6fca4c89-6eb1-4a15-a59e-a5463eeaadcb"
        },
        "item": {
          "id": "39513eb4-df04-4620-bdfd-259953aa602f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cfd712c5-1a36-47fc-aa88-634e2676fd76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7b1544-0b8c-437e-a9fb-e8e966aed360",
        "cursor": {
          "ref": "4c982711-7c4e-4bc8-af79-1615626137bc",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "222b0391-7b2e-41bb-af76-dccb848b6d93"
        },
        "item": {
          "id": "6e7b1544-0b8c-437e-a9fb-e8e966aed360",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8bac95b5-f9c1-4946-ba8d-2fce3c4859ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44fb24cc-06c9-4c01-a8c1-51086cc0c585",
        "cursor": {
          "ref": "13c35859-1e8b-4297-8270-b96a2d380653",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "159d7e58-734f-432e-a311-5d6734de4be5"
        },
        "item": {
          "id": "44fb24cc-06c9-4c01-a8c1-51086cc0c585",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "91f98677-9cec-477b-9cbe-2dad6fd4f666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5c8f5f-35c3-4729-9e24-9368849089d0",
        "cursor": {
          "ref": "cf51f82a-11f5-4213-a340-3c623b70bcef",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "76730d36-7969-48cf-9a58-0394ecdf6436"
        },
        "item": {
          "id": "ea5c8f5f-35c3-4729-9e24-9368849089d0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "864ddd95-c00a-46da-b17d-5ad8efb5ab84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c7297f-40f9-4faa-8ce9-134559964770",
        "cursor": {
          "ref": "623e1532-98fe-47d7-91a3-edeaf4e5375a",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f8780ef4-aa2b-4060-be79-ce5c1d5ccee9"
        },
        "item": {
          "id": "b8c7297f-40f9-4faa-8ce9-134559964770",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3d86c273-39b9-4786-803a-1713b2a92f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a698ac2b-7a7e-4c02-a3ae-72f0bb38e1a8",
        "cursor": {
          "ref": "57999913-5083-447e-bd79-903aa7fb4dc1",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "074e6224-df69-4bc7-b783-71f54a707a57"
        },
        "item": {
          "id": "a698ac2b-7a7e-4c02-a3ae-72f0bb38e1a8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1968996a-af97-4264-872e-803736ffa78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cf79de-cf69-47fa-b887-f1d05283aaab",
        "cursor": {
          "ref": "b0ab30d5-9b6e-44b3-9bb4-1e40dfdaf0b8",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9158f2c2-19e7-4c7b-b6b3-b2e38d74d6c2"
        },
        "item": {
          "id": "55cf79de-cf69-47fa-b887-f1d05283aaab",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f61422f4-bda3-4f3f-b304-ee8a49618d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97c96cb-a7e5-40c5-ad7a-19851c3f0c23",
        "cursor": {
          "ref": "480efe28-4816-4465-8016-0f0f66e83f27",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b93442b0-0781-44cb-bbdf-13e0a3a9a207"
        },
        "item": {
          "id": "e97c96cb-a7e5-40c5-ad7a-19851c3f0c23",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "06b94412-fe83-45a5-a3df-fbfdaa7d5dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2cbee7-eeda-4e2c-98bd-d642c9248c84",
        "cursor": {
          "ref": "682c0e18-380c-47f9-bad7-93bdcfd95cff",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5053db8e-2d27-4de6-a2a2-6a9affcf2585"
        },
        "item": {
          "id": "2c2cbee7-eeda-4e2c-98bd-d642c9248c84",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "97203b39-3bb6-430b-9d84-5c08334f6c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5517d7-4f19-47a7-8f1c-c1f3ea1cc8f5",
        "cursor": {
          "ref": "ab9359ae-028d-4e39-a5ce-9ac9ffb73327",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1ac1c5f9-d65f-4ca5-ad4f-6c339cb6be9f"
        },
        "item": {
          "id": "2a5517d7-4f19-47a7-8f1c-c1f3ea1cc8f5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d679bee2-21dd-49db-887c-9026f649d619",
          "status": "OK",
          "code": 200,
          "responseTime": 811,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "b691927c-60ce-4774-86a0-cf914bfec5b3",
        "cursor": {
          "ref": "261f99ea-a02e-4dae-a5b1-850303d6ebee",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4d280743-1dc3-444e-bef9-6999694e074c"
        },
        "item": {
          "id": "b691927c-60ce-4774-86a0-cf914bfec5b3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6f141a1b-e5b1-43ee-8ee1-537a6fe99c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216c533f-7f8a-4c1e-a2f0-b983c03f934a",
        "cursor": {
          "ref": "655d4fb0-745c-4375-84ca-accd83c5760e",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ac4e583f-9fac-46f1-a6fc-73a7263bf4a7"
        },
        "item": {
          "id": "216c533f-7f8a-4c1e-a2f0-b983c03f934a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "413d5b45-10f0-428e-bf41-88e7316ad50a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2890f675-1cd6-473d-a7ec-10941518f808",
        "cursor": {
          "ref": "1a9240d3-df14-40ea-a886-e8fa037baa94",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5f4cbbfe-230b-4451-b921-762eb8eabd38"
        },
        "item": {
          "id": "2890f675-1cd6-473d-a7ec-10941518f808",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e4756160-b6a0-48e2-9a9a-12a2c82171c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca82df20-56ba-4cfb-b016-9cfb83d396fa",
        "cursor": {
          "ref": "4c0f069a-e0a4-4f1a-8eb9-c2f78bfc2abe",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "df047a6b-3dce-49c2-84d7-f14936eae57c"
        },
        "item": {
          "id": "ca82df20-56ba-4cfb-b016-9cfb83d396fa",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4ed8a125-32e4-4643-a16a-33295cf5b55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e089265-1fa8-4499-86c5-d9e2463e59b9",
        "cursor": {
          "ref": "55331747-4aab-485b-a74c-0d25f383504e",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b447f3bf-f227-4f9b-9d96-374ba088f51d"
        },
        "item": {
          "id": "1e089265-1fa8-4499-86c5-d9e2463e59b9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0a442e10-204f-4ee2-8545-85a7cd5f642d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db88aeb6-4b15-43d6-b585-28edfaa06884",
        "cursor": {
          "ref": "3a7d2583-42b4-4d51-afa8-a33998fc9699",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "77db4f19-28ea-4178-8c90-858fbc826dec"
        },
        "item": {
          "id": "db88aeb6-4b15-43d6-b585-28edfaa06884",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2ffc2bd9-81c6-4897-bd71-dd493aee7acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff33289-3327-46dc-9598-62ec6f539790",
        "cursor": {
          "ref": "8a344fe5-2019-49b3-82eb-124d44dd0f55",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4ec1accf-2d7c-45b9-9992-03f88dcbfdb5"
        },
        "item": {
          "id": "7ff33289-3327-46dc-9598-62ec6f539790",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3906efeb-ef44-4d4e-ba93-859bb5d7aebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3ccb68-38c6-4dd4-a092-0f235bb65cb4",
        "cursor": {
          "ref": "bce0d401-61ba-4b37-a068-de796e99ae93",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "471697bf-f3d1-4f65-8da7-8953309930c4"
        },
        "item": {
          "id": "ac3ccb68-38c6-4dd4-a092-0f235bb65cb4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c39a9c1c-1fae-4be7-b3ec-6585e6d4a044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2207f2-419e-40c0-8203-a2f7a8ab80df",
        "cursor": {
          "ref": "d9576269-351d-475c-8f93-d7254ba08836",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3f5c6988-8355-4ce0-8d31-8afabf0b6301"
        },
        "item": {
          "id": "da2207f2-419e-40c0-8203-a2f7a8ab80df",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5bbf3647-c599-4cb6-844b-0f37598d161f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3b2a72-a7a7-4bc5-848f-a307c4929a29",
        "cursor": {
          "ref": "09f6a8e0-a5a0-460c-9099-7e4fccbaa551",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b7d4fb66-b3ac-4105-a461-c2a64c87a41f"
        },
        "item": {
          "id": "4f3b2a72-a7a7-4bc5-848f-a307c4929a29",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c4162363-db14-424a-96b3-5957e4ec36c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09c59e1-2611-427c-a43b-0d40e3694f6a",
        "cursor": {
          "ref": "f5c0147d-914c-4866-a869-4de732b7723e",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "588f9e04-e71c-4732-bbe2-7e7a20eb0811"
        },
        "item": {
          "id": "b09c59e1-2611-427c-a43b-0d40e3694f6a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5e0174ae-2820-4109-9580-eb54f08b3491",
          "status": "OK",
          "code": 200,
          "responseTime": 372,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:184)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:184)"
            }
          }
        ]
      },
      {
        "id": "a11f5466-4f47-4718-810a-e10c1e79cd89",
        "cursor": {
          "ref": "0055365e-15e2-4e40-97c1-442732d97c18",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "badda992-b384-4e71-af83-a18bccec6b34"
        },
        "item": {
          "id": "a11f5466-4f47-4718-810a-e10c1e79cd89",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2490db5f-993d-4c6b-bf1a-ce0e21befacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340fd242-ae28-40ca-9543-a50b5edad944",
        "cursor": {
          "ref": "58eda423-cd0d-49b1-9deb-b19bc5f179b7",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5209a346-4e53-43ec-b3e5-35121f7546b6"
        },
        "item": {
          "id": "340fd242-ae28-40ca-9543-a50b5edad944",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "317859e0-f8bf-4376-b10f-f7c6d4b4ceee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9eeeda8-2d92-478a-9ec9-61bd96b91316",
        "cursor": {
          "ref": "53519ebf-5048-4579-a11e-42c22101c779",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2b227fc4-0cc1-4073-be80-419a6588b7f8"
        },
        "item": {
          "id": "b9eeeda8-2d92-478a-9ec9-61bd96b91316",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "17ecfefd-e8c2-4c88-80a4-a9dc101ea668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e48bbc1-20f8-4290-bfb2-e582df3c4e51",
        "cursor": {
          "ref": "756b852e-7ca0-4464-98b5-931516067fad",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fa7acf6a-4047-488b-bfeb-ec10e7b97e13"
        },
        "item": {
          "id": "1e48bbc1-20f8-4290-bfb2-e582df3c4e51",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7ca9b5d5-432a-4d44-bd44-5e44131347bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fead2afd-2bb6-4e06-96f6-51d695308fe3",
        "cursor": {
          "ref": "01207b7f-81a0-47c7-bd70-f16e7d3a9462",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "eda432c6-86bb-4791-aece-206618141761"
        },
        "item": {
          "id": "fead2afd-2bb6-4e06-96f6-51d695308fe3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "87fe8bf6-7e41-472d-80ae-19df79dbed32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff791c1c-7ada-405a-98d4-563811ee6063",
        "cursor": {
          "ref": "57d28371-3967-4037-81bb-75253dcc3152",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d1429292-3d8c-4671-89ab-db7e19f64a8d"
        },
        "item": {
          "id": "ff791c1c-7ada-405a-98d4-563811ee6063",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4bc10d9b-cec6-4bc9-8d70-a9d4ab145b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b4ec17-f897-47ad-bb03-1e5b013e8304",
        "cursor": {
          "ref": "4c0348a1-9a53-4530-88c7-418a24f9e637",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c92a4d5a-59eb-46e3-b8e1-2ea0b59f1007"
        },
        "item": {
          "id": "47b4ec17-f897-47ad-bb03-1e5b013e8304",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "dbfdb615-3048-4cf8-9160-14bfb39045db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e11bf25-898f-459b-84a7-1cc14835c7ae",
        "cursor": {
          "ref": "0a89f8cd-2e76-44f5-93fb-03b7e31580f2",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b1bcf123-1e5b-4aef-8b07-537f9317f87e"
        },
        "item": {
          "id": "3e11bf25-898f-459b-84a7-1cc14835c7ae",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3b0780f3-c685-49b1-93da-602fde092b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6755b5-f3b1-41c1-8f4d-a879a6408a48",
        "cursor": {
          "ref": "bd8ceca5-7c7b-43f5-b1b5-a271e8076793",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f7bed89f-a023-4822-821a-7e72a1b7367b"
        },
        "item": {
          "id": "ab6755b5-f3b1-41c1-8f4d-a879a6408a48",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "53ff7f90-3dc4-4c91-a9d6-2ac9b491fcb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6cea56-86d6-4943-b09a-1a51fa560094",
        "cursor": {
          "ref": "7694c83a-32b9-4418-b5e9-82724b489a59",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ea588fd0-5b92-4cd8-8f7d-657feb243cb6"
        },
        "item": {
          "id": "6f6cea56-86d6-4943-b09a-1a51fa560094",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c3a38443-56b9-4fb1-a5a1-b2739d8e9368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5075b14-4275-49c3-93e5-050cb624dd2f",
        "cursor": {
          "ref": "c3c9bafb-1cf8-4e0c-8896-e77748e5b991",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3670d51c-4ef0-4e71-b575-bc3995679011"
        },
        "item": {
          "id": "b5075b14-4275-49c3-93e5-050cb624dd2f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7bdac9c1-d85c-40f5-8ded-04aa7eb65dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8043fb64-eb2f-4057-8ab1-5d7e52b81a31",
        "cursor": {
          "ref": "a81bb553-0dd1-4808-9045-e0a546f313d7",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "71a58a76-491e-4b2c-846e-04c79e478491"
        },
        "item": {
          "id": "8043fb64-eb2f-4057-8ab1-5d7e52b81a31",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3b44d2fa-8c17-4589-9482-c9b1fc494dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac949d3-70c5-46ba-8698-4b335dd40aad",
        "cursor": {
          "ref": "af301cd0-80b9-45e2-b4f6-6f279bffb0ba",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3ce5e3e6-cf33-468d-9479-f2cf240b48e1"
        },
        "item": {
          "id": "aac949d3-70c5-46ba-8698-4b335dd40aad",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "69fbf336-ff89-455b-8556-b7352a077bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32331db-73a8-41ac-9b21-f3fc3e5a4f0c",
        "cursor": {
          "ref": "b253f854-eafd-42c1-996b-74ac3d8380e7",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ebcf83ff-bd2d-445f-9f9e-f254a9019230"
        },
        "item": {
          "id": "f32331db-73a8-41ac-9b21-f3fc3e5a4f0c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "88c745de-4669-43e7-9448-a23b52da573e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c070ebb7-e175-4d95-a311-aa0f7c6a4b7e",
        "cursor": {
          "ref": "6f969281-1df8-471d-8f99-2bdefa75c0e8",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9d7ecfb0-2917-4202-9385-97d1bfa9495b"
        },
        "item": {
          "id": "c070ebb7-e175-4d95-a311-aa0f7c6a4b7e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d1f63890-e475-46de-aacc-72d0e68277e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f73cd64-c588-4a68-b6ca-1dd0e9c19fea",
        "cursor": {
          "ref": "6b176451-01f4-4e60-8378-c37af9d6f3a1",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "06934a77-8a3d-4d22-bd81-40cbf2ad9041"
        },
        "item": {
          "id": "9f73cd64-c588-4a68-b6ca-1dd0e9c19fea",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f4140c9d-bb75-46b8-813b-07f97d19c586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23021b8-ccb2-402f-a858-ec39506343b8",
        "cursor": {
          "ref": "57ae67bf-549f-42d0-becd-388df29f3b84",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ceb5c3c2-ccc1-4fb5-a1c6-28c9629d4495"
        },
        "item": {
          "id": "e23021b8-ccb2-402f-a858-ec39506343b8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b0ba68bb-28de-4bfd-a1bf-1bfef1634058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71185a99-5cd6-49e6-bddc-04507e7b6feb",
        "cursor": {
          "ref": "ed602ce0-9f4e-47e9-bcbd-03f3d34a1f07",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3da051ea-711b-4710-80e8-37a3d7c5076f"
        },
        "item": {
          "id": "71185a99-5cd6-49e6-bddc-04507e7b6feb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ab34ece3-a4ef-4d98-9a4a-c348b55f35b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858f382c-ba57-4462-930b-cea9c914c5fd",
        "cursor": {
          "ref": "55d7c710-7c2b-4f94-986b-5d45bc8e8bb1",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "04ce7670-6071-4e4d-a656-8dca0faf414e"
        },
        "item": {
          "id": "858f382c-ba57-4462-930b-cea9c914c5fd",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e31205d7-13d3-479c-a4b2-778c7c08578a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94459c4-fd92-4994-818e-c3d5e18f81ba",
        "cursor": {
          "ref": "604736c1-6c48-47fc-b6e5-ad322a628db6",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9bc0affd-44d9-467a-a0cc-a2e846ccdd17"
        },
        "item": {
          "id": "e94459c4-fd92-4994-818e-c3d5e18f81ba",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fa7cf1ad-6eda-4ccc-afc0-fae18a1d10c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07cd747-38aa-41ab-a980-d42eebe7147b",
        "cursor": {
          "ref": "768bb48d-45e4-4b3a-85ad-56c7592aeb77",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "779f8595-02c0-4ee7-aa25-1befaef8eacf"
        },
        "item": {
          "id": "e07cd747-38aa-41ab-a980-d42eebe7147b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "591f1fdc-1e50-4049-86f8-37861610dee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde0872d-cd61-4ad9-b4f4-e78a952890de",
        "cursor": {
          "ref": "04adb8e3-9215-4acb-82c2-5d6fea3f2a40",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c1b0c021-443f-415f-865e-34dc46b57e89"
        },
        "item": {
          "id": "dde0872d-cd61-4ad9-b4f4-e78a952890de",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "08dbf59b-1bd5-4675-bd8a-f44bb0160858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7010073c-240c-42cf-8c03-12974697123f",
        "cursor": {
          "ref": "52baf93b-8813-4656-8a76-dddbed1213ca",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "fb300cfe-7ed3-4c01-8755-9128e6b88621"
        },
        "item": {
          "id": "7010073c-240c-42cf-8c03-12974697123f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "292b5772-733e-4fc0-b86c-b3cafb125ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e1fd5d-a5b8-44e4-a032-3719fc33b1fa",
        "cursor": {
          "ref": "f9d63de5-1277-460a-a63a-2bf1a71d4bab",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cf0f43ad-0022-4f76-869d-8c33337c48d1"
        },
        "item": {
          "id": "05e1fd5d-a5b8-44e4-a032-3719fc33b1fa",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0c0e4f8e-c9df-4b60-b709-79c920412f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715598af-b52b-4e24-937e-952c2e753036",
        "cursor": {
          "ref": "18e57d1e-22be-4994-8d1e-0123e302883e",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "44c6476d-db5f-4201-bf4f-6d4985c99e6a"
        },
        "item": {
          "id": "715598af-b52b-4e24-937e-952c2e753036",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f42efd42-0a53-4144-b621-ac751d98e56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38dec3ba-e207-4410-9d18-c40b39361ecc",
        "cursor": {
          "ref": "7a72b13e-7069-4c39-bf2b-431aafbb3bbc",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "adcf1cc1-f2e6-4902-854f-b23ffcbd14c2"
        },
        "item": {
          "id": "38dec3ba-e207-4410-9d18-c40b39361ecc",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9b167e1e-239f-46b2-ab83-713b9c1157cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7e5a14-681d-45ab-9964-db1375933127",
        "cursor": {
          "ref": "820b04ec-5712-4ef9-b1fb-c333ba52bcaa",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9b1e4c1c-6a53-4e43-8c24-a7898f6925a5"
        },
        "item": {
          "id": "8d7e5a14-681d-45ab-9964-db1375933127",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c2f6cf58-27bb-4010-8b10-831274da21ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727c26e1-0d66-4db4-baa5-9e59c7a8f2ec",
        "cursor": {
          "ref": "bed4a01f-89d2-48d2-bde9-e67e7e312c5b",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ac2de869-d8e3-41b0-a325-a099f9433b38"
        },
        "item": {
          "id": "727c26e1-0d66-4db4-baa5-9e59c7a8f2ec",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c8c2c858-7a5c-466a-9c07-a255041b2079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385ae15a-98a8-43b7-b45b-bcd00dd96767",
        "cursor": {
          "ref": "265b7104-b3e9-462c-91ca-38bc6b1a2997",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f06c41b2-5bad-457a-a125-db01097ca2b6"
        },
        "item": {
          "id": "385ae15a-98a8-43b7-b45b-bcd00dd96767",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7dcb5c9c-4d86-43d7-83fa-2fa6051ba7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23f933b-209a-422b-ae08-baf27fab0f80",
        "cursor": {
          "ref": "3cd05f14-44dc-41a7-b713-c0ca9895f300",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "87e027e1-8ee6-4c21-89fb-14121d1bbb71"
        },
        "item": {
          "id": "e23f933b-209a-422b-ae08-baf27fab0f80",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "798989e6-c70b-4adb-9d9c-afab5bb7a9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3525a34-572b-4f15-ae93-d3a40c2838fb",
        "cursor": {
          "ref": "679328d4-6a94-48c5-8868-e730bfe7be81",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7f6d6c13-473b-4a10-acc6-ac11115f33b9"
        },
        "item": {
          "id": "b3525a34-572b-4f15-ae93-d3a40c2838fb",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e4b654a3-27bf-4bbd-948b-9f065cecaf37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8d333c-94ae-4723-8abb-e9a917fd721a",
        "cursor": {
          "ref": "5988d73a-a668-48a2-8585-4470e3266aa0",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6440dbc5-933e-4038-966b-d11622c25a9b"
        },
        "item": {
          "id": "ea8d333c-94ae-4723-8abb-e9a917fd721a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c29c3599-cb05-4100-bd49-4a7527cc3e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f672a9-3e6a-4fc0-8654-25f85aacf65d",
        "cursor": {
          "ref": "efd62aa5-4085-4007-ab0d-4dfe54c6573c",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f6bda4e9-a376-49da-8f50-b182fbb76ca6"
        },
        "item": {
          "id": "33f672a9-3e6a-4fc0-8654-25f85aacf65d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ceb28f33-0a75-4f45-bf6a-2568e159ce19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c71041f-e9e4-4ba7-bd0e-0d624d01a138",
        "cursor": {
          "ref": "8810ebb3-a2ff-4879-93f8-81c405c278ea",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f97a0e9f-1a76-41b3-86a9-c0f2c7d80a1f"
        },
        "item": {
          "id": "1c71041f-e9e4-4ba7-bd0e-0d624d01a138",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "eb9c8aea-714d-419c-9ed8-64060257c538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5a9693-a62d-436a-9272-22a6486126fa",
        "cursor": {
          "ref": "0bf46143-a9a9-4c0a-b7da-21fe76a4d508",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fbbda9fa-371b-4577-9857-a6bcaff33deb"
        },
        "item": {
          "id": "9a5a9693-a62d-436a-9272-22a6486126fa",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0d5993a0-793a-440c-af9c-d9c3e6ce6b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680d1af2-43b4-4af9-a43c-2d2a5b7106fe",
        "cursor": {
          "ref": "8dffbe46-da52-4120-b833-fa3f0b1ddd65",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a24a21c3-7b02-4639-a898-f2c894e17c9e"
        },
        "item": {
          "id": "680d1af2-43b4-4af9-a43c-2d2a5b7106fe",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d75033ae-80f5-4fce-8cb1-5ed033d7c724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0523671-6ccf-46b4-a4f3-e9674dfd4127",
        "cursor": {
          "ref": "11ba0bc6-3baa-4b02-aa5b-158605d631a0",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cf075c5d-e5ee-4e5f-90d3-3bafc8da3f4e"
        },
        "item": {
          "id": "f0523671-6ccf-46b4-a4f3-e9674dfd4127",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5a63b61d-1d18-4845-896b-8d6b01cc60df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c041215e-cdd3-4e10-b416-5891538c5b49",
        "cursor": {
          "ref": "6c6dd096-2b08-4610-8777-950b01545f3e",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4a079b19-f9f7-4292-8188-edfc07d486a9"
        },
        "item": {
          "id": "c041215e-cdd3-4e10-b416-5891538c5b49",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9f96ca75-15b8-4fd3-a28e-f458c0131767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae3732b-9b11-401e-994a-a7ee53001c42",
        "cursor": {
          "ref": "3070c13f-6efc-4d02-8c9a-0ef74aaa46f8",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "35064dc2-3d35-42d0-9a9a-f41854bb3335"
        },
        "item": {
          "id": "6ae3732b-9b11-401e-994a-a7ee53001c42",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "99ba87b6-f322-4e2d-8f09-f9b129be8571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1dd428-c47a-4ba8-9b85-415ac3d06644",
        "cursor": {
          "ref": "23254e3c-9929-40c3-b32a-2cad71306960",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "15bedc9c-a9d8-4695-af82-5128f4d6025d"
        },
        "item": {
          "id": "2a1dd428-c47a-4ba8-9b85-415ac3d06644",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0d7cecc2-46d2-41f8-b749-827ca7598bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90e69bb-fd09-477d-99f7-6bd467bc74fc",
        "cursor": {
          "ref": "35193666-ad84-4de0-9b37-1301470a87ac",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b04d67b6-49ca-48b0-b415-1aed280e262e"
        },
        "item": {
          "id": "d90e69bb-fd09-477d-99f7-6bd467bc74fc",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9899dcfc-27c8-4740-9b6f-c743f8660f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5546af-89f7-4548-8b59-13a1e5e945fa",
        "cursor": {
          "ref": "5b0f07ad-cdab-4fc7-b5e1-d21fd689139d",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "110ad3a7-c4a5-44aa-812c-e2731571a1a9"
        },
        "item": {
          "id": "3b5546af-89f7-4548-8b59-13a1e5e945fa",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6071773a-469b-4d3f-a2fe-b7e6fb846524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4324c1-1ac6-4593-8e65-c7644871eb68",
        "cursor": {
          "ref": "5f243154-5db0-4a51-a4c6-b9db6bb1b811",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f5516db6-e3e1-418d-b4a1-227a099ab536"
        },
        "item": {
          "id": "ec4324c1-1ac6-4593-8e65-c7644871eb68",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "46816025-5fba-4cbd-846f-c83741ccd8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3448ab44-92a5-463c-9a96-5ca410702c58",
        "cursor": {
          "ref": "5f05f570-aa25-48b7-bf9c-419000814c61",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a88cea12-6d98-4189-aa25-e731dfcec9dc"
        },
        "item": {
          "id": "3448ab44-92a5-463c-9a96-5ca410702c58",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5285aad2-97b7-4c38-9c8c-1a2938432ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41dd494-40dc-47cf-a5cb-3f5c93096a0e",
        "cursor": {
          "ref": "5bc1c887-1c66-4c59-9010-8cafa3ab5576",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f35c7a6c-4e5a-4361-9158-9b528bba4620"
        },
        "item": {
          "id": "e41dd494-40dc-47cf-a5cb-3f5c93096a0e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "63ca0ac1-0bc5-4991-a8d3-d9fd8df80545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd02067f-d2af-495a-be33-70d8a783663b",
        "cursor": {
          "ref": "ab89b13e-55bc-4f23-a5b3-f44969db7c1e",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4e172815-6595-48a2-8c0e-04f7738700e8"
        },
        "item": {
          "id": "bd02067f-d2af-495a-be33-70d8a783663b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5974554e-1b16-4b1c-8309-630c43782073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea2140d-fed5-43c3-aff4-38fd259e8a5d",
        "cursor": {
          "ref": "ee717f2e-477f-4b10-adb7-a73da462e9ad",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "514569ab-687a-4a2a-ba48-2a08216a120e"
        },
        "item": {
          "id": "cea2140d-fed5-43c3-aff4-38fd259e8a5d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b89140e4-251d-4529-9033-23777f688845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89220571-bf25-4305-bc1d-aae58a8bfec9",
        "cursor": {
          "ref": "6101aca5-294f-4df5-9e69-1c00f01094c6",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "18adf53c-fa8e-4e5a-9fce-8016f971e934"
        },
        "item": {
          "id": "89220571-bf25-4305-bc1d-aae58a8bfec9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "94dd3d25-feb9-4a44-8751-b630c9973e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88865b49-eb1b-4fd2-a182-b7821bae7e83",
        "cursor": {
          "ref": "e53f0a97-669a-4da8-8442-97d7493c912e",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "04c9552d-4168-4f44-a7b2-66ff19575115"
        },
        "item": {
          "id": "88865b49-eb1b-4fd2-a182-b7821bae7e83",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "25d7af6f-5447-4446-af36-4cf3663a11d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd023fa-b675-4c1c-9e56-93094a1ed7d8",
        "cursor": {
          "ref": "c8741a8b-e12e-44a9-a3d3-f6dfc0aa7b1e",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6bf18daa-cc74-444b-94a2-a4e480d03bb7"
        },
        "item": {
          "id": "1dd023fa-b675-4c1c-9e56-93094a1ed7d8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a1635569-256c-4379-972a-c8b53edb3dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381c6638-1380-4631-90dd-b197f14a4799",
        "cursor": {
          "ref": "f90ab6ab-a16e-4949-acdc-a5c3e11f3ae3",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f057ae42-0593-4083-8839-34d2a195a3b9"
        },
        "item": {
          "id": "381c6638-1380-4631-90dd-b197f14a4799",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8a736bbd-57f4-47e1-a142-bc3fe23fbf2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55eb74d-d967-447b-9f49-d39eb01c279d",
        "cursor": {
          "ref": "a1d9fa05-0964-4859-8e4c-8150af9db153",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ce264c4a-0d87-47c3-977e-6f602961c137"
        },
        "item": {
          "id": "f55eb74d-d967-447b-9f49-d39eb01c279d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "86d1fa42-2a3f-40fa-b770-ab391f1d8474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36dea9b-3ac1-4f48-828a-e961d533a3c2",
        "cursor": {
          "ref": "00700eb7-5aef-4fe5-aefd-475827ad0084",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "eb4e6d56-4495-41d5-8aaa-ded11d453db4"
        },
        "item": {
          "id": "d36dea9b-3ac1-4f48-828a-e961d533a3c2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "72a1b0a7-7d71-422d-b481-ad67cbf84827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a0cbd2-9441-403a-9a45-d39077acb4f5",
        "cursor": {
          "ref": "fb0f1d57-8592-4b20-99d4-de6a214472c2",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "543fb35a-defb-46b2-81b4-c8bbac7b6a76"
        },
        "item": {
          "id": "07a0cbd2-9441-403a-9a45-d39077acb4f5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f2784cb3-73b9-4442-9820-c47b894483f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e2ffae-f2b4-4cfb-9560-75403f745c5f",
        "cursor": {
          "ref": "a6f4759d-8803-42d4-9057-ec457f276dc1",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8b7894fa-add2-4f1e-adec-0294deb343fc"
        },
        "item": {
          "id": "67e2ffae-f2b4-4cfb-9560-75403f745c5f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b128411e-1678-4ef6-ac3b-0669586e1814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd086633-35f4-4245-bf9d-fc44d211f2b7",
        "cursor": {
          "ref": "bff305e7-088c-4a3e-b1b8-e376624740fb",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8b49dfae-4c22-4868-9e19-4548e0dc1cd7"
        },
        "item": {
          "id": "cd086633-35f4-4245-bf9d-fc44d211f2b7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7ec48a92-224d-48b8-88ff-f2681be5e2a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9af9277-fa4a-4d3e-878a-ac87b00557cc",
        "cursor": {
          "ref": "a7e79b3f-7740-4171-8a53-2b48f5793542",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2c8e6049-f816-4e11-bc63-6074e2d1668e"
        },
        "item": {
          "id": "b9af9277-fa4a-4d3e-878a-ac87b00557cc",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "efc4d051-7a49-4b6b-8b5e-bd9ce9b37ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb3bc86-b3ce-46e4-90e8-e04406e19783",
        "cursor": {
          "ref": "e11d97fc-45b8-44db-8aeb-dcc76deeafab",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9a7c6f5e-be6a-409e-8460-2e67b8accb3c"
        },
        "item": {
          "id": "bdb3bc86-b3ce-46e4-90e8-e04406e19783",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "775969f1-e391-46e2-8545-a3125b9661ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bbd106-af78-47ee-9163-730d7c264694",
        "cursor": {
          "ref": "57561c98-78b2-49e2-805f-9b3dd7b7f286",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d43ca6c8-2a1e-4ac8-825f-06d7817f9e1e"
        },
        "item": {
          "id": "e9bbd106-af78-47ee-9163-730d7c264694",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "3622275c-05ec-437b-80eb-64ed31ad8e51",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 565,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d08bd4e-4ea1-454d-bed0-3d4ae91c5325",
        "cursor": {
          "ref": "26a066df-c022-4d59-9d15-1337da89e4ca",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "aa71b3fc-1ebc-428d-a0fa-c5a2f95edf1f"
        },
        "item": {
          "id": "2d08bd4e-4ea1-454d-bed0-3d4ae91c5325",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d204e7a1-850b-419c-b6b6-4751987099a1",
          "status": "OK",
          "code": 200,
          "responseTime": 924,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d9b825-5b8d-44e4-acf8-63fb6f38fb86",
        "cursor": {
          "ref": "4c385be7-72cf-4e07-b627-963d146880a0",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "162adb6a-d774-45cf-b0da-09c293a9a6d7"
        },
        "item": {
          "id": "e9d9b825-5b8d-44e4-acf8-63fb6f38fb86",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0024a496-9fbf-4dee-b7ec-d7de079fd361",
          "status": "OK",
          "code": 200,
          "responseTime": 3126,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "368a0dce-444a-472e-85c0-49a16d96da3f",
        "cursor": {
          "ref": "9e95b210-c147-43e6-a126-bbbf28a0fd88",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4e71312b-b3ab-4443-acc4-3cb4280659e8"
        },
        "item": {
          "id": "368a0dce-444a-472e-85c0-49a16d96da3f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d6b1341e-d48a-44a6-8712-091ec1a8e7d1",
          "status": "OK",
          "code": 200,
          "responseTime": 1991,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "672d3684-dc4e-49a9-859b-ef34a63918aa",
        "cursor": {
          "ref": "255f72a4-215d-4034-8c36-7523281003bb",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "54966a82-688b-4fa0-afed-bbab7b0aa97f"
        },
        "item": {
          "id": "672d3684-dc4e-49a9-859b-ef34a63918aa",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "82e13159-524e-40fc-a090-7da542a51c32",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672d3684-dc4e-49a9-859b-ef34a63918aa",
        "cursor": {
          "ref": "255f72a4-215d-4034-8c36-7523281003bb",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "54966a82-688b-4fa0-afed-bbab7b0aa97f"
        },
        "item": {
          "id": "672d3684-dc4e-49a9-859b-ef34a63918aa",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "82e13159-524e-40fc-a090-7da542a51c32",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672d3684-dc4e-49a9-859b-ef34a63918aa",
        "cursor": {
          "ref": "255f72a4-215d-4034-8c36-7523281003bb",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "54966a82-688b-4fa0-afed-bbab7b0aa97f"
        },
        "item": {
          "id": "672d3684-dc4e-49a9-859b-ef34a63918aa",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "82e13159-524e-40fc-a090-7da542a51c32",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c8a75e-847b-429e-8ee4-193548b4b506",
        "cursor": {
          "ref": "47a53792-4e92-4ac2-ad39-45faee1d11e0",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0f942d86-a2e0-451f-a80d-34b9efa974e5"
        },
        "item": {
          "id": "18c8a75e-847b-429e-8ee4-193548b4b506",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "338fff7c-8b62-4b95-a7ab-382774c86b01",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 376,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea0194e-76b8-49fd-ae70-c4d609271935",
        "cursor": {
          "ref": "70abb28e-d43f-44ce-8b67-44d24bbc81fe",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "737b4d3f-0314-49ad-95dd-bbbbfe95868f"
        },
        "item": {
          "id": "9ea0194e-76b8-49fd-ae70-c4d609271935",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2318cfdc-776f-4ddd-a649-fe5221d1c3e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea0194e-76b8-49fd-ae70-c4d609271935",
        "cursor": {
          "ref": "70abb28e-d43f-44ce-8b67-44d24bbc81fe",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "737b4d3f-0314-49ad-95dd-bbbbfe95868f"
        },
        "item": {
          "id": "9ea0194e-76b8-49fd-ae70-c4d609271935",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2318cfdc-776f-4ddd-a649-fe5221d1c3e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819f47a6-7e9f-466a-8268-a269c68d6e02",
        "cursor": {
          "ref": "e93cf71f-d16e-4ee9-9a78-bd3362837f98",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7951394c-7ffb-4bbd-aae0-b19bca259159"
        },
        "item": {
          "id": "819f47a6-7e9f-466a-8268-a269c68d6e02",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "eb81c6a3-245f-4364-97e6-6d91be71df10",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 667,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8393cb9-a964-4be6-b8b9-4d73f22a1503",
        "cursor": {
          "ref": "2b68bc56-6791-4635-aba9-861a195569fe",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "bdc3ff98-fd56-45aa-861f-c3c01ef14222"
        },
        "item": {
          "id": "b8393cb9-a964-4be6-b8b9-4d73f22a1503",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6e3ced58-9acc-4730-953e-90b2658ef253",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8393cb9-a964-4be6-b8b9-4d73f22a1503",
        "cursor": {
          "ref": "2b68bc56-6791-4635-aba9-861a195569fe",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "bdc3ff98-fd56-45aa-861f-c3c01ef14222"
        },
        "item": {
          "id": "b8393cb9-a964-4be6-b8b9-4d73f22a1503",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6e3ced58-9acc-4730-953e-90b2658ef253",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b015d40-8961-4d0f-9228-fa44af35521f",
        "cursor": {
          "ref": "bc65faec-bf93-4349-9fcb-93aa0bebd9a6",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "24a6cb88-401b-4e14-8695-c3f48c9c4006"
        },
        "item": {
          "id": "0b015d40-8961-4d0f-9228-fa44af35521f",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "6ffb06f5-66b4-4059-9a33-911004b8becc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 619,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}