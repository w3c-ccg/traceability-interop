{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8530b7ad-945b-4201-803d-14fbcc5dcc00",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bf90974e-7585-4946-843f-877c3bc5f58d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "53f48455-a1d2-41b1-b980-d950f3e33f54",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9d14e9c0-7c65-4faf-8d86-6de5c064a4fb"
                }
              }
            ]
          },
          {
            "id": "54b1ed0e-a7ed-48f3-b7c8-370f2bd52211",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "095ddf58-f5c6-428c-92e8-d2dd69fad1b2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "53514268-2b24-4005-9bc9-5201a9d84656"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8b5177d9-1435-4a43-8e5e-9100b7a031e1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "76c0afa5-4194-4254-862b-a4ed9d83bc78",
            "name": "Positive Testing",
            "item": [
              {
                "id": "627c57ec-77e8-4f84-8e2e-f927b6ff2918",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d084d92-4954-4878-b208-16370c55d6e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "518a0242-7b8f-4322-99f2-486c9f1ec3dd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3319f61d-343f-41dc-84b1-f6d7899a2ad3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "93cae35b-a2a1-4ed8-801f-24d0397f9b9b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "48411fdd-732c-44b0-a713-eb21185e881d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7aebca89-4c35-427d-8f01-74df36e327d5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c66845e-9e76-42e2-a78b-a24f57adad94",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b60a182c-a1e7-484b-8ca5-a8239c8f7f3e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d172b269-ceb5-460d-94bf-b4c373976716",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba8d4e2f-b2b1-49ab-91a7-d1add619a83d"
            }
          }
        ]
      },
      {
        "id": "9308e778-f06b-4d4b-97ef-23f5d3d01823",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c2fcb444-fb89-49dd-9ba2-8b66a072a3db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6fecbbfd-6488-4a71-bfc0-4416d94276ac",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6474e652-823a-4256-aaf8-461e491aab72",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d9b699-49dc-4f9b-bd63-6b6a9b5ee198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4bc3b2a0-991c-4e92-93fd-feb3967632c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5f39f1-c407-4eba-ad1c-8b24d29a745e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9accce-db63-4798-9dda-778e0f77c1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e5147f3-5086-413f-b4e8-b42411d28de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e311b977-2504-45a4-8233-50013a832af3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a45f2b0-d5fd-4115-b760-3dc797351ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4048f259-45f5-4ae2-9b72-990a6672273c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d6bb13d7-25dd-4489-9824-03f4b866f251",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "97e0aa48-123f-4531-b7cf-c868dbd36475",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa132d5-55aa-4cbc-8d61-0725f564efbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e354a546-88c7-40ee-9deb-117c20e6142a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41ee5c7-648e-4a28-90ae-86f93836ab7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da2c7ee5-2f74-4e29-8e55-c9d0f2700224"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e7bc2751-bd98-44bd-ae38-2975299ec0c5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "55450f4d-46ca-4e46-9e45-1b0c144fa77f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d76b038e-df8d-460b-84e1-72d8f0a943c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3f8ac6b2-f044-42d0-b080-94cf4f574e71"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c47824f-5dc4-423e-acdb-e5e58279fc0b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "535eab0c-3050-4968-97eb-2ec1c4081284"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d16e8278-c97b-46c9-986f-7f6b80465c31",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca9be6e7-6875-490f-b8e2-698064fb9ddd"
            }
          }
        ]
      },
      {
        "id": "10ae9f70-2ed3-4f9d-945c-db3276667516",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "da798254-ad3e-4aa8-9b2d-5387f83eb050",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e3ce93d4-ac80-4ba6-ba55-26f1e2132a5d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f752b7f8-466a-4d96-b221-1ffb2083d5c9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b036c15b-0563-42fb-8c15-4b659582da7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805cd58b-8f3d-4b15-b829-818b18d30df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af49cb69-592c-48a4-bcdc-399ac049dc77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e022540d-890b-425f-a896-ffc03f510051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0152745-6701-424c-b548-0c160432c710",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "191cbf87-1962-4360-8d54-0f98a72fd010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c9612e-1389-468f-880f-2bb70ae7d07c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317e8532-2ab9-4e26-b216-0e1cc6aad53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82f03ed4-5fe9-448d-a4b7-99f900281728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34760f4e-523f-4e62-9911-3e1405f0b884",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc43491f-079b-4dbe-b308-4393d401c4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f72fc3d8-6235-4ef7-b57d-c7f706e8a4a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a147ee68-bd68-4212-96e9-604e37c7fb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "518f62ca-31b1-4447-903c-03ed6ddd623d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb645fa4-946c-45bc-931d-e90162b74a15",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba43688a-0614-4b88-8769-376dc02e91a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "173d3374-0efd-4093-a86a-925cadbbe265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d39667d-814c-4cd7-9813-198ff34d05c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d58fadf2-3ff6-4461-9a52-0081958315ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc6b580-8760-4410-aa09-fab072f75f64",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde5aced-51d9-429b-b8c6-bebd8f7e1987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95909e6d-5280-44f3-bf6b-a48937690de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50bdecf-b018-4df3-aa01-df0ada9678c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77f4fc6c-cefe-49c0-adcc-f76ab713f9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb5b959-29e1-4892-bc84-232120be3a23",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9016259-923c-4ec0-8218-9545bc98b0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e5d783-d350-4dac-8de2-4fa78ad20355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd08205-03d0-4e6c-91b3-ab04826cd998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28362052-9e8f-4c78-bedd-2b317e1f6f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce0a71f-3662-44d4-9b76-ce5580d1f10f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce5e091-c417-4647-9efd-e1889759bb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d1fcca7-dc59-4751-80a2-4fc190ee46f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906b02e1-5c3b-4d77-a41d-147ba8691d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e1e90c7-61a2-4282-96a6-8e4dcd7df0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37845e87-5fad-4185-9717-d1c86ae1267a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4837af1a-d5ea-4e32-9ca7-8ff560ec7b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a86dd3d-fb1d-4493-b00f-b9364fbefd43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ac072e-f4de-4ee2-af89-207f80ae25a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81443482-3c9a-4048-a031-b2be4e91ec23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15036eea-5cfe-4b2b-8896-d0cfe678b482",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6366846d-4484-474d-8037-3c2d17cfe580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f287edbc-8a5a-48b1-ae1d-430e184ccf08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b6a336-74c1-457a-9dee-e1dd0cf0904c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "409c9a91-4138-44d7-8213-3d07eb6dd2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f09a6c0-6dd5-49e9-b82b-6ee0ec61a9e1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "722de1b2-49bb-4ed6-abc0-7b2b881459da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd33b220-05d3-43e1-a943-194ecffa8863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea58419-55b7-4902-ac5c-ef5f4fccc3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44230b33-fa14-4f26-8a3e-fe7cd8ca2e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c271c6-6e85-4889-9a7a-679c4fa3d8ba",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074d8aa9-87f9-4da3-9f31-350c95650274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f375e5f9-6635-4cbc-a252-528b1701b8ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da4d99c-e558-45fa-aa0d-718579685f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "381cecde-3ff7-4f33-819f-e82c6f5c83ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9a74e2-c569-45bb-b9bc-d138cfd0d314",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7c7c25-1a4e-4b47-9bbe-6ee7296ae711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f13960e7-cd36-42a7-92eb-5cfa3a2305ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebc3d52-5617-4281-9a35-0b136b8c35e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "130ef46c-06af-44bf-9216-5f94848d0406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debb094f-d24c-4cb7-adbc-8f15f7711991",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44db1093-cae4-4493-8af7-a93728cb3189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85fa97f0-53b0-4043-ab3d-7e49c82a19ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415799ea-b551-4e4a-b703-2ee345bc6dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88a4bacd-60ed-4d5f-9d39-556b6cf59762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2136c774-bad4-41bc-98fc-af22d298c30b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481cd984-30d0-4147-b565-d6bdb4299d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e95eaf9-a6fc-401b-a58d-1790dfd3e4de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a78565-ad50-492f-b541-8a59ea8e152d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f57a7c22-592d-42fe-a1ed-c6edcab357a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e04b59-0cad-49f4-ac3a-94cfc0bab0d9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad7d98b-84c9-4be4-9a67-d1a8eee32bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ebcf82-fb71-46fa-816c-3303f10b5abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4fc6836-c546-4288-9ad4-a8b313667802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a7d2be4-d14d-4352-9d99-907f1c53cf20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0daec9c2-9576-4149-b5c9-607627eb115e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9371565-0fca-4d4b-9b0f-a466a4004326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9814328d-301b-419e-a633-d1a9836047f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c315c0fe-1ac5-49e5-9593-2f2df92aeacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df7b221f-d46a-489c-82e9-81c30c3a7bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263d8f49-d417-4ba6-8951-2f40eb503eef",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3008c8df-5579-4dd0-b6a8-5d2d6c55423d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c15a0077-6b35-4390-a8ca-1a8d5a699b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe196bc7-6a01-4e16-ac60-efd6db0dacd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f09aaa8-ae42-4fdf-bb6a-2a6d39cc7ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd1e0ee-9810-49b8-95c4-11bb8faa2052",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa02f0f5-aa13-4679-a5ce-1f99d22eed7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7d9d5c-2768-4796-9b55-959f5d7cd09b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28379013-1a7d-4f9b-a9db-c4f31496fd2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d488172a-01a9-4acf-9fa4-3c1663b7fa59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a6c440-1a44-4672-8088-cc69440a03c6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ba67cf-e1b7-4b9b-81e3-9914272e140a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c873c7-4c0b-474c-bf7d-68569d11a37c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca2d856-ebf2-485a-a806-8e45ac56aa13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c996331c-4592-49d9-ac18-38ff0a68deb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2c6787-be1f-4454-ade1-8efc3eedd3a0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfff8758-5650-4cd7-ad12-8f471c5cc25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee3e6786-7d0d-4315-9d95-f5eb6c9bd26f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1603e9f3-0dae-40f8-b541-7ead67f75198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87b120f0-d6e1-4d2c-85eb-b3023d4fcf7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25e91f0-9fdc-4e71-8808-8fac38e318bc",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3581b5ac-15ee-4a0b-86f1-84e448418a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "571901af-8f3c-4025-8f20-9086478d736c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc5c0d7-7a78-4dbb-bd81-cbf2d258e553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a23d8d75-1b43-4352-93bb-edc485eb8f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e5365c-7f83-4ef0-9d42-f88c99eb6b7e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a81f3ed-47c8-4955-b316-28fe6dadb567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c39496-597d-4778-b721-5a0c7050e33a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfd45ac-25c4-4b82-aa77-643acaaa46af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e258b8d-06e6-4e2b-bac5-a042c66c6c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97d3fe4-f9d2-48ff-8d24-7b4d8d29a08f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31dbff1f-f1de-430f-b64a-988c4ca4c032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ff125b-a05b-44ae-834d-d66d1606cf4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5cd05a-8bf8-4d90-96cb-1d4e8ac0eb2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ef376c87-0824-4949-8c2a-39eb21a019da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22207359-cdd7-4c09-a91d-717876047f53",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2add43-dc07-43a0-a89f-3b4749f5842e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "867aa7e6-9ab3-4302-8e5a-bfc4b80d0e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed9c4dd-fed5-4659-a5fe-ed486071f8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad74ef9-41c5-4f2f-95c5-6ce320cff14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9498f3-8bf2-4e08-963f-7ae4f27f6fe6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44451ee7-3539-4903-8745-6aebb349d21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa30ceae-eb10-4ac4-8700-270b49403006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8306f248-c13c-44ae-ad35-e09633d69a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b51abf5-a83a-4a85-b449-2225b3d3698d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee0b141-abbd-4fd2-8031-6d846662e939",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cdbbb83-7871-4c77-b928-1d5212b0d467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e59501d-23ec-4208-bab1-8d2095135eda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691b0fcf-f354-4b88-8fca-0fb96cbd4e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "10d8ca07-9ae8-4dcc-bd3a-e6a2b1bf27ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11338e80-2d66-4af6-953c-b2838c8c4aa9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed31a052-8b63-40ef-9035-0306ab501bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e91871-e86f-496f-aac2-d241e1cc3ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31415059-3cb5-47ad-b1b1-ef2345fc24e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "85f368c2-7af6-4584-a1fd-ec56f73db2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb86f36-4ea7-43fe-9183-d01cae613019",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9e5b0e-258c-4397-8a73-9b5e0eb3c9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a109b836-fcb1-4158-9aef-e86bc00c47a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911cb11e-3711-4305-8105-a02f1b4a6c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "77e03182-6235-4370-84c7-078ca555414b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9212fd64-4ee3-43cc-b2b4-7f65d35579cf",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c6007e-21a0-49df-9f2c-0eadf6221e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9ae780-42c8-49ed-8739-18d5cdd7cdd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0a8aaf-3fe6-4a05-bbaa-3fca5b29dfa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "87b1c329-7665-434a-aa68-55455d6bebc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40983f2-471b-4805-9565-10f855f50910",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5935a627-cbaf-42d2-a814-2415a9026a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f96c5f-3c03-4301-9452-417137ebdec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4912da-f215-467b-8ecb-700c9a20fe5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf134e4-6fd9-466a-9b22-7b83837af114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80336d3b-0a64-4f7c-9903-64ba392d66cb",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f8680c-8e18-4703-a6cd-834204b154fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d8b68a-4127-44e1-8ed1-9eaba9fe2560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbba56c5-d829-40ac-a31d-569ff5d5368e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "986a650e-8ea8-4951-98ad-a9462e8da893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46147f90-52d9-450f-9243-9da8a18354ca",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b0fdf6-2eb4-41a2-98d2-9b6d35dce0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a86fa8da-1fa0-4cd0-b085-14b1b4e1d283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4f85a5-4846-4333-9745-a48bd13153f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c77d50e9-542b-48ab-b861-3b6326668986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fa2e10-f0f6-4458-91ed-5a4506aeb30f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21042db2-4536-4b32-86aa-d6f0100d1e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41024f63-5f79-4436-82ab-82101b95d595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03785f5-3e3d-450a-89bd-1bf907c11e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05bc2524-2b77-4fe0-9232-0176e4a55249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5b6a19-9108-4274-870a-48520bc124c4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce551d0f-c765-4bdd-b2fb-56d72a9efaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0ecdf5-ffcb-4a43-afb7-b5cdaf536c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162e9977-fee2-4cbf-9c4e-8da77e9c61e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fbfb47d-3b73-4899-8395-962a556e96cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecff87f-cb9f-4589-8a85-764493cbedf8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6bbab42-bd16-4fab-9e11-0910539aa2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd611df3-75f2-4062-b494-16abfb6c8ef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc4c6d9-15e9-4725-8df9-d65917ef511b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b144ae5f-9098-40d2-8aa7-d61371767022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9dc953-a873-4342-86c4-8e50cbce0b79",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887f6a6c-aa7f-4477-9f69-7940d6cc4f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "939068ba-b487-41c8-83ee-9437f88d793a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef6d121-bb71-4ac7-8dcf-3be20343d3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b85aeef0-ceef-40ef-b031-9a6af19659cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db49e01-84c4-481e-b31c-7410d10c0d35",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2fa51c1-70bb-4fb6-bcea-5663f7e24499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e91db7d4-ae45-4f50-9574-315b3b1d8a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce93d810-8ca2-4781-bc56-00d2ce5a9a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "34a641a1-2976-40b3-ac65-5790a88c4425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c788c7-ec0a-4b08-8e66-09003196910d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65befda8-e2b3-4139-81d2-2909d0c397c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a608df-0e21-43c6-84a5-ab41f953163c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38209058-980e-40c9-8107-37cd8b940e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c727c0-a2fc-494e-b8c6-83c9f8aae24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7bac46a-f144-4438-a9a4-5d5deca3c99d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a900ba9-a8d7-45df-875e-d0ed220a8391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c5800c1-cba9-45b2-8294-046a479069be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118421ca-8d4b-4b4e-84ee-4a21a234d1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0133140d-f325-4a3c-a3c5-6093292ec13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ca98fa-080d-4c16-8431-015589f4a337",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bcac40f-4088-4fa7-8aec-4a0ba48f90da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c8e386d-aae2-4866-a095-7239a6bec46a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f5df93-0858-4ace-8c9c-7df0544ace97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3eee557-904e-4c26-b2c1-22e0fe9f5c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542c224c-b33a-45c0-ad94-3a62dfda303f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1f505b-1dac-429f-b665-4683f8821d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43269996-ef5d-495a-8e0c-733d1a8aa018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d3f259-35f3-4de7-8b4a-a3bbe48c25cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "56272f47-8c7e-4a56-8afb-a40861f65480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e89b64-65f0-4adc-9340-89fc31fbc2fb",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1702b17c-77d8-4444-ba23-819982b23cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb567df6-ff8c-4075-9095-daede459826a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81d7d30-cc15-4349-9114-d0eb3e560052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2f3b77-893d-4fc4-9f55-1354add2511f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf44eeb-bd75-4ad9-9e18-b5cfea02ed4a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26514ce5-65ff-436e-b4a0-bf48430dff2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fca906c0-6d94-4133-829b-3a51e2b14047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad18f4e-a194-4b07-afbe-2e02d82a025d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5be9825-71dd-4243-b8af-1ac93e735392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5118b5bf-5d8a-47dd-b9c7-e41fdbd1f4f4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22ea874-d462-464d-8f6e-7f6cc52880cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c38d663-e9e4-4634-8371-1ad6c35a427b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1bfdb07-7d30-4240-b9c6-c3e020ec9210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0780abef-5aa9-485f-8fc1-abd46e99663c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d836eeed-57a7-4465-8e19-5c02558d350d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13523931-1fd1-4af9-9c16-980857d69e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857510db-7cd8-439b-a992-0455acaa8cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82063d57-343f-42ba-a1e2-c269b5a1c721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a282bb6-5f0d-4657-ba39-b1d861b11573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237b126f-027a-4687-8f74-8fe246872a45",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d859b94a-7102-422f-936e-c974e335c612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "972f924f-b6fb-4b21-830f-7125caa09c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f005a9e-40e4-4431-8c1d-0f58c243ef26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3aa2377d-6a1b-4419-ba3f-639601f77d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0168b494-0721-4589-b85b-5ce26d4b697b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f8871a-d531-4d40-b4c4-4e31381ab54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4edf9563-cc50-4ca9-b4de-d4cea2b902c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66176eb1-d32c-421b-bd87-dc5ecaeb3868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5851b027-f846-4c73-a302-3a6126c9f625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13297aab-fb7c-4825-af93-cf10d608e979",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d1ee9f-b2a8-4a82-a97c-d6be6f6735e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c0a499-db7c-46e8-a330-ea1fafe6a1af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf8c143-01c0-4bb5-9233-aa7a7852e71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d383d9b4-bb61-4ab3-8ceb-0bb7431504e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1f30d7-fd6b-4ca6-95c4-14a28c567605",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1682701-bbca-4e6d-8473-eab07700dff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b20804-948d-4110-9b62-3d90349090b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9179143-a3cc-4686-b50b-654d12d45be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9374a85-71d5-48c9-9ba6-7d1f44aaa85b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4f28a4-f644-4c86-bf81-a76acda8c19f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab94c372-4e64-407a-b0f7-f424dfd73d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c54c0b2f-3b8e-4826-bb7e-2bc34a1574f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980b5f08-33f1-4086-9c97-3f4590b29a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db04ae60-8b88-4234-9dd8-f91447167ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0e837d-92df-4151-888b-f119e1229ee9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb0dc5a-6655-4b45-8cf0-4ae574217353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950e2b80-3c15-4865-877b-dfa3cafc5351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f688cc03-e2cf-4181-bac9-1c2e7fbc7675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e77066f-190d-458a-9bf8-34b1af81a475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d1838c-9330-41d6-95b9-c960936d46c0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95aff050-1c5c-4bd1-9150-7af2954e4d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca95deb0-9d78-4670-9b76-60c15bfe7a31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0903730-494e-4fc3-8ac3-bf72291c1c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "786482ae-0943-40ea-9671-9a939f16bae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75036ca-21e2-4582-907b-959083435002",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef69790-cbb2-4d07-802d-c0cc21775016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d439a135-5bb0-46e3-8357-80c345322ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615c88d5-169f-4679-a948-87b213e70a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc8b043-2e26-4da5-ac44-23830433a8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b84f4ad-c999-454f-aa9b-2da254bba507",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb235ce-2859-40e3-9a8d-e4db01762297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9722b73e-137a-47ec-8a1b-95b77f3aa2c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2b5723-86cb-42fd-8610-e2c744624cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15268e6f-8ace-4650-a958-9e26e4b8cf71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa11e42-d53f-4ed8-90c3-5fcc11379077",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61479f5d-e211-4d75-a1ad-9f3c5ff926a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "181e23e3-d5f9-45d0-ad5d-80b2d675ba54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e668d8b1-181e-454b-889b-c6ece1e3a0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79176b4a-6107-4ff1-9853-635179e7e4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce2e23d-a787-4cfc-95c8-9cdf94bc384d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4cb76c7-4bd5-49bc-a7ae-a9791bbc6865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d45d5dce-298f-4bd8-b60b-a3bd7a4ec111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ab100f-dc1a-4869-aeb5-2fbd012205e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8167c4cd-43d5-4761-a72e-6a39b62bcdf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e6b2b0-b2ac-420d-8f4f-9de3a8e1f31f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d91da9-5daf-4c0f-ba25-fb385d8436dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a7c2cb-bffa-4c00-83b5-43b5034a8e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5c84f6-8d09-43f0-993d-f973d8d382f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a8abdc2-59bf-4300-b7c5-aba11d82c850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ee57d5-c8eb-4d06-b18c-cb4c3f39f6f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d20d63-64d8-4c3d-8826-612ab88cf272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d10a54b4-e07f-4bd2-845a-822c44851321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1875b635-b9ec-4249-af35-ed2278d7c9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7f9702-3f8e-4277-adf4-13c9d67bd901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf4191b-c92c-4747-9d1f-16b80f02b772",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679d38cb-b3ea-4976-9a54-63164b618d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80113bda-c56d-4cff-af00-c061917ca3f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd366200-c284-4a92-938b-0adac6287aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7ae2e91-0ed7-490d-a025-7660183c9498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7fb7278-e4e5-4f64-accf-bdd63fe92a85",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecaaa69f-89c5-42c1-b52b-b2cbdaee1f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "992612da-ba75-4383-8822-fbd2b5bd631a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff9497c-3c30-4f7b-9c4d-4fa51a1125cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e33a805-5548-41cb-b738-a21ae237e94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b702a48-a483-460d-82d6-fd10a3fd7dea",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b039a6e-2ec6-4bce-abd7-bc073c64f397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4823bdad-9d20-4cde-917d-f8f18b979391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afa9c77-b0b8-41fa-8c71-5a5eb4c45750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "72ccbd9d-5b89-4ed5-8a26-c56f0d8b832b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6548a00-8087-49d0-80ec-b726321f5fd0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e61693-e2e3-449f-b760-9729180905d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc493a14-639e-41b1-bc64-770024d07f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381b4099-0611-4b00-9047-9fa4e8fc6cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab8b076-d28d-42de-a3bb-fba8b6db2576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6773471c-8f99-4c5d-bd2c-6c3c678e0e1c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a24abeb-7b8e-49c7-bba3-d50bcbe51b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de99925-dc5d-4b5e-9ad5-5c836c5798e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be5e137-7749-4edd-bde0-35c7dfaa962e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f35c0ac5-e804-44a9-9990-bd8920eec9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ece017-c356-4202-ab71-caf2c13632b0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "670f1f01-023f-4bd5-aed2-8d9e97e91cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f40d3126-432a-4e9a-a089-b5f42d905d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e316fca0-ee5a-4ca6-9265-403272e1ec82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4936b11b-6fe3-411e-8bfc-0ecc0a9b5770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4321b452-8a83-4b2a-ae30-5a78ed437a34",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96489dd2-87d7-48d3-9bb9-e9e8f874121a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c5466f-f025-4e38-86e2-54d009a1986e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee3727f-da8f-4bc1-af9b-56fcff874820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5025236b-f3f5-4f32-aded-80ac873218a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8a934e-f59f-4a53-a325-bd71495c8d1e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "285ee324-356c-4b8e-ac98-3f29286244f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "064574df-d003-4d18-abb1-567c5f38c40d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1377068a-ca0d-4365-83a7-88cb7e8c3e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d94f25ef-6f9e-4e94-b032-a8183d7f5bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1965f335-b133-480d-872e-2ef3bfb9f3e4",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9689ed-8b58-4bf9-ba58-82f94619cde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae389516-4b83-4896-9679-66f57b04878c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954adef1-7371-474f-975a-797795d3b48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f4b9626-6ad8-4c4d-84c6-2868f186d0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4cd3cc-d098-4779-9b06-f9caa8b7a1ee",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463bb26f-b8f3-4240-b5d3-5a2a5935b446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bea0939-a7e1-472c-bc96-18e7dda04bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1234ac74-1a91-486e-89ea-34ac3c6b02d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6edd9eea-842d-4074-b91c-d0e83702f2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531983d4-29ac-4c49-835a-54128aa5b605",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec11593-10df-4b8c-9fc2-85159b7ca8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22d0461-1405-45e1-9abf-7de01c02f639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9742fe6b-d9e6-46c5-8aaf-3f2798ee48a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee0344c4-815a-462d-8800-538dadf6d0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d526fefa-d7e0-4c7a-bf2b-a3e882dcc972",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce97e4cf-825a-4da8-b2f3-24b8293200f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184818c3-9ab2-4f7b-9a2d-969001f3f53e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ff989f-b17a-4442-87b1-eda9e68bdee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57d72cad-14fa-41e7-8f5b-4d4d3b583983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cdea77-bb4a-42cc-8e7a-0b1e49e95fdd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66b19d4-b0c1-4ef5-8f9e-2a958d844eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cadcb18-cebd-4e64-b705-d01f2fb1b4dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f75c4e-7a66-4aa7-9282-0cc02deca0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40ecde6f-d727-434a-a521-b914c290f2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebd1184-8901-443b-97cc-defdda680ead",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43f7f31-c243-49cd-b795-b74edd8bdcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9427dde8-4a2b-4d4b-b9d5-490648a8d0a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87234763-246f-478b-b8ad-7ca493218128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a24862ed-0602-44ad-9e7c-a88ef7e6d910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6366cf57-3a19-4e44-90ec-8a0419ad6bd7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867fe171-9774-4db7-b9ac-4f6cec83d9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acdca798-cf75-4b83-9cb4-510167326808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e20f04-b8c5-4129-9b82-72adf4a181aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af5997e5-c614-423a-86ad-1f8eec7664a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356ae03d-3ed4-445d-907d-66a0efb4e1cf",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c77fa4-e44f-4075-bbae-ab0cc97b94b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a278c08-3851-46cd-a785-fffbefc09edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa9157c-c63b-4170-b9b6-8597755f4fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d2aeb6d-58b9-44b0-99f5-8b809367dab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3fb53b0-b261-4f70-8937-eb437e727cc9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8371cd2e-f469-490c-9981-c7439d51f9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc9fcc9e-1ec4-400b-a891-ca4e065e892f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a215c03-b676-4acc-9b9d-2d3b12a2ef57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "61984b46-9a07-43cb-a34d-0aaa6350e8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf029fb-e5ff-4b7c-a719-c228a14d49c7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad1d0dc-3f58-4498-9328-528d45062c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b798283-cf29-4dc0-b9b9-e091c9a12e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46fbf62-845b-48dd-bc37-81608a557b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "05538bfb-c32d-4def-b35f-a4ba2a7bfe47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021cb7eb-9034-45ba-8bf4-544a68babbc3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c4d8c8-cad2-429d-a745-98508fab13d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1569d2c0-4a97-4085-a39b-8f05f2dce8a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25bdf48a-1324-4230-b18b-2aaca87ecd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe495f7b-7b62-40a8-ba2c-b7d965250b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ae736f-0689-4a94-a371-9e3cc8a0ebb3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69abb407-ee93-4fa9-846e-c88ad4403a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166636fd-60aa-4b18-b3a2-716c5fd3a814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97314581-08da-47eb-8ade-267f41122101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f253d55-a50c-48c4-85b5-8e23ba3ffe9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b879c5-fd49-43cd-b9f4-447131b4fde6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd81c3e-d86c-45ca-966b-a780e2979701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2614fffa-0fd7-49eb-adf2-928c9fef6ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c21be2a-c8cc-4147-aa67-45d8ece7f430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b66ced79-534e-410f-be8d-3a657e39784c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01eb2c26-bac9-474c-b7ea-564a95fd2f2a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3840ad04-78a3-4b81-9b76-e072ba776d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23634012-738e-44e8-b89b-bbb692e19506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2029e7f7-6b94-400c-8e99-3dc9db309e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2d210d1b-be8f-4441-8652-e219fba05e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7903c2c2-62b6-4f91-a615-6e2841ddd5b6",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d6b61d-c92b-4e88-aa67-9b18c723c9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd7ccc72-751b-4693-abdf-6b53e8edb72b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f3695d-92b8-4d81-bedb-8e1894cf4942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "70810396-b1a5-4df0-a479-5d260ddf652a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68bf19a4-880d-4f42-a7c0-6bbcd22e7681",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5d4c5a-02d8-429b-b797-4ffc55047ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3217876e-b488-49ed-9352-eb0e5c83edf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c008d7a-5a32-4cec-bde0-14b09a06efe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd45b40-3fd7-478f-b7fa-ba43d06d42f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb2df5c-119c-4631-b3b8-b42768d0935f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff2aade-ebe4-4012-8a98-0fb54193df60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "790713b6-9062-4370-ad97-3359b991662b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71b95d1-a9a0-4256-b750-dc5aa2f48927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d478791d-316d-4154-b30c-d04fb9500cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8043c62-a611-4571-a1e1-0f7bb8f6c440",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6874289-9462-47e3-9d5a-f945a81b48dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43e546f-4df0-4c02-8dd1-fdf43e0e67b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b0a35d-424e-4383-930f-cf6d50ca99a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78bdb265-52b6-48a6-b1d3-2df887a4a451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7407ea8e-7a7b-470a-8ecc-1a373200532c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135e500b-9ac9-44d8-88bb-e5f7d814300d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5186964d-8ba6-4210-9d62-4f9e429cbdc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761f7687-dabe-4b63-89af-a1c553d44fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94de99b9-4f94-4a58-8237-e7bb902ade12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f19597a-058a-42c6-a5cb-b1727a9be6d8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5dc0e8-f133-4f3b-8ed5-8c5263df3275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "414fed46-dea5-4d00-ba1c-0a5062da9198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b345ccb4-5bc3-408e-8f71-344171d3f709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eca84024-550f-4378-9b16-60e959374c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a81581f-6a76-44e0-9246-c72c4aacf4ef",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b66dde-64a5-4dd6-ac78-e1108c1e6c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a28874-1df3-45ab-965d-5bec32027a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa03ba1c-a84a-47a8-b921-b480f6fbe707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbdf7478-1ddf-45f8-987b-4e758d14093a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47d8543-e12c-40a5-9fb5-e04986954178",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac22e7b1-419d-464e-930f-b4b05c794fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b839e93e-a3d4-4dd2-9a9d-fcd544ebf6ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609090ac-78dc-4cc6-970d-c16d9ab689a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1467fa4-66bb-4e60-8b78-2dcd41a00a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be39876-be6c-407b-baaf-c8cce1c5b21e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b3d216-e523-4f99-ad98-3ccf7098b92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e54940cf-3d81-4a67-a97d-aef5cdeb12a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622e11d4-8a17-419d-8ff0-a7833e83613a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "53a38c88-2863-4fdd-8030-3c37bd8c3598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367e686c-d614-48f2-bbed-225f4bc436d9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3266e1af-0ea0-492e-bcd1-5b1cb15fa651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b31c3e57-15e2-4ef8-9acb-65463f3593f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b80dec8-9e30-4484-9910-54678b826340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d46a872-ca92-4f1a-8724-2308f05d769f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fc71ba-59a7-4334-87e4-ab9befd90b98",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "024e16fe-0247-4236-aa98-10b260b5c66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94776e7d-0c9f-4c99-8b60-9287ba374221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaea3625-d825-4013-b519-92d33ec81937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "349249d8-7b69-47a5-9903-e2e11e438c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992c191d-6d4f-4f13-b4a4-e653c873d2ee",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da36d5c-8637-4301-bc5a-c90d59064b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ba6a5bec-e7d7-4b5a-8080-a99ef9e0d90f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac15a92-9275-4de0-80d1-82586300433c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d2d6a81-bbdd-42fd-9572-ef88eb2616ca"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b4cf4b69-2f61-4dd1-92ae-aa8d8e785800",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ab9a0619-8238-43c7-a608-3132e8f33225",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd29c4c8-af62-4d67-bddd-c57c88e4c7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "811c4e22-8779-4cef-a742-16ea2446c945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b7b274-707e-43f1-b605-057d0cdaec98",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5b76a71-340f-4145-84db-44cc1e098cee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "453feaa6-b79c-4a48-bf62-5bfd7335fe6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7466c47c-6b78-40c8-9aef-d4c73e4fc9ae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e23645f-3ab2-42e3-89e2-90cf75d97769",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8953aaf7-a510-452d-81f9-6566a5461e19"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3229aeb7-dee0-4863-82b4-35d76c6babf2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2df9314f-5515-4b83-82e5-c57ed9801f96"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a980a9ed-87d8-4418-895e-5cc63e3f8ae1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "347f443f-312d-4095-b258-15482ff6bacc"
                }
              }
            ]
          },
          {
            "id": "eb6ae4e8-6f8f-4427-a72a-94f141e59292",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4e3bf4c4-bb1b-4cb2-b7fa-0fe1452f7449",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "bf7a1fde-c0f4-4f74-9a94-920b205d9a1e",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21acf8c5-c8e7-44fe-9fe2-b4256921ace8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cb45eb22-423b-4d58-9e71-14095dec3489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6bdf94f-89e6-400a-917e-96106ca5a494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cbe9809-239a-4179-8042-97804f0606d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e2aab5e6-c539-45f6-ba09-e3548d984595",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c7b0cdf-c3e5-4bab-879a-490d65244c93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8932d4a9-ba70-45b3-8006-53ac220f5424"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "524d9a03-1880-4f68-9a65-b008bc62fcc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ab470766-9636-4e4a-9c7f-a02d9af6afb4"
                    }
                  }
                ]
              },
              {
                "id": "984506ee-c7e5-42bd-a5a1-240cf76676e4",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1b1e917-28c0-4f4b-bc1c-d949db854350",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78b88614-cee5-4397-8232-5324bf941df9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1cdd4af6-2190-4103-a6b6-9b23d27cb5a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ef7f7600-b88c-4f1c-b1ef-6abd4db45a4a"
                    }
                  }
                ]
              },
              {
                "id": "379f8659-614a-4446-a1e9-1395fba49126",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "808146f5-5b5d-45c9-b11f-8d675afd457b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b7cfecdf-fae0-4fda-8753-68af79cd52bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e48499d-3774-4021-a92a-ecf68c61f494",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "999d92f7-ab2c-4076-ade1-1eea8f327144"
                    }
                  }
                ]
              },
              {
                "id": "c0347f2e-c1a5-4d52-875e-38ed100d8c7b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cbfb4e21-6c16-41ea-9894-1c2ca72f072e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0df3092b-2448-4491-ae75-8f798e7b7920"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d24a32c2-160b-43cf-a2e6-f97097a69f34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0f53d39d-2f63-4cf1-929b-7aadd1bf34c9"
                    }
                  }
                ]
              },
              {
                "id": "d42cf80b-4e54-4770-be96-11653790fce1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d14a18a-1a78-43c9-89d8-99cbee3c1058",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b8bf0518-3d71-46cd-b3b3-c6658065ac00"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9773308b-ceea-4588-8f44-21f302983bf2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a882abe8-59e3-4be2-bbb7-1f9d896d9f6c"
                    }
                  }
                ]
              },
              {
                "id": "cd5b016b-c706-40ac-b718-96275e62c857",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "735ee5a3-201a-4c63-a4a7-95bee3bb84bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ad09d56-ddd3-4762-a817-e14821323eff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d59b834-9842-4a7d-b62d-f41a1ae842bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e5cfa777-82b7-4308-b899-cc02884fcca2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c6bdf10a-245b-457f-84e6-78ad199b947f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9657a4d4-1dd3-4c48-a922-93d9d2ea3f75"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "83a9a4dc-b631-4324-81d0-4ca64fb9b45d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2172c0a0-fc2f-4933-a4d0-86c24ead8dc6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50630ea5-3abb-47e3-b7e9-531767fa5a91",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1382a1d3-40f7-4cd6-b8d6-b1acc1eff073"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "abb076bc-a568-4670-aa42-eab54a706585",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "961aa0b3-6388-4dc9-b967-763f4a5f6586"
            }
          }
        ]
      },
      {
        "id": "c3795e9b-1c6c-4775-9427-3d88418412b6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "349a24b5-ff08-41b9-8a2b-65e23b5a2184",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f302e48-bd01-4782-aac6-6c14ec5d26e9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1db641a4-0cbb-4971-be70-3eb914c1d5db",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f934b957-6216-4831-b3f9-4f24d869bc4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f9dd8c7-6fb0-496e-8f09-f29d1d48e86a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df844932-d406-49ad-a6b4-9869e28dac46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dfdc652-fe9c-4b8f-aa7c-87085aca3977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06c9b6e-c938-4a74-8925-cabc663e420a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be53e56d-7806-4812-aec1-4452abcff505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3fe772c-be70-497f-b5e4-2e0b144a7b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fcfd56-66f8-4037-bcba-cbfb9720d7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac3875d2-410c-47e1-9e76-95f5b6bd7d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a5f052-51f5-4729-91ca-43b36c3068b2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39cd1e19-c5ec-42e0-8a41-b05203cfa7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721b44c8-69a7-473d-a291-38540d0f55c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ad10f5-1189-44e2-b94b-3afca2ceb7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10913165-8278-4d85-bfef-15c32d62c098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fadcb398-4b70-4ee7-b5d1-d77a98bafaa2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6deeefd-7cc4-4423-9cd1-6a6b5b99f0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3c0ec15-706c-4e7a-8494-b2a9e87e8e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c75cabb-979c-414b-aa37-8324594c8308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11e72f0f-5992-4ffb-b5ef-3dd571aa8e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ecdc7b-b383-4594-92af-1f3789a7c6ef",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80b2d78-14f6-4079-9a71-244cb5764e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae802597-6385-406b-b959-43fbddbb6480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505356d1-cca5-42df-8d34-083fabe766c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "979314cd-438d-4943-a49c-15fbb2a2a07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace36e4e-54f4-4d8d-bf13-e6c928ae6c99",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df0f569-d2fa-4d58-95b9-f895cc7f6f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a689d3-6cb6-417f-bec4-814ff9ded9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a00c15-07f0-401b-b220-eeffbe1fce95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "820d33d0-aa2e-4991-8698-8bb7cf96531a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f653084-5216-4b4d-99ef-6ff97e6cc5de",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1bbbf45-f578-4a09-9ebe-fb8f94db6764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf4a6b9d-18e6-423d-955f-0ae420ece6c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28bc4560-8b4a-4c2c-b136-876755781328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "eaad03ac-ef9c-44fc-83d9-7948fb5eb121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb650be3-41db-4d76-b8f9-25ba2975cfe0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd31701b-567b-4517-80a1-7731a53b9ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ca1169-f7a5-45a3-8fc6-e7012e8357f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4e50c0-3b4a-487d-8d4e-02de73f8f220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c59167ce-7f5c-4e6f-81b2-c303aafd6327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4930ca21-1863-49f7-b148-e100bd06ae30",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2a418d-61d5-4f5f-a147-4f56b9431b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61d89af-ae7c-47f3-8990-18bb0585ec45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100be25e-8de3-409d-91a8-ae5f2069238f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d76a61a-4385-4d83-ba12-06bfa35aeec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb68074-de7f-424e-96ac-c666958ddd6d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac8dd18-4506-43df-8b40-dd8ea862e186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce32be5c-e236-4303-ab21-26edaba62497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb87648-5512-4691-b6cd-5a8932613e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71188578-bda4-4943-9a00-fa9f97f1e47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd95bfb-99b7-4106-8345-e7571363d047",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd82b0c-d02f-4d2c-a42c-3988e8caf9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff12b87-5357-4e38-bb08-e746bb926629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e03c87a-0160-4f9f-8e79-a4689d77ccca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ab7c9d32-e3b1-4e75-9193-e0f6324c4835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424d91f7-8fee-4bc3-bc9a-1bf6e9a19f28",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d461f663-1ef0-4217-8fce-e7ad96902c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a870d53b-eac0-4c9f-8fd7-4df57641e662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cc5c55-9f7e-4400-bdcb-62be9f854aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "71dcad1c-029a-4d33-bb4e-4aa11627f14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295dc46e-e45f-4afd-8fca-11f4edf7ee50",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "192de710-57f8-478e-ab6f-5f6f007db759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56818242-85ff-4e38-a638-ff4c34746ba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb4f25e-5fbb-416e-a9fc-26eed43cf66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a12099-6c05-4b5d-9fbc-b5452c2a25a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4179d7-3f98-426a-969e-3c9fde2e0057",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59faa523-0077-4c40-95f3-64ed25696961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7290c7c8-2680-4cc2-af30-8aa700a228ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65da7a54-df01-47d3-a2d6-9ac8a94b2ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c34d5c01-44e7-4249-8733-746b15c63ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd4788a-f54c-461c-99c2-cf6d913d1809",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d2259e-fdf0-4a49-9830-cd9a6b335c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c487ef-52f9-4fca-ae36-b4a6ddb0d70a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef17353-c4c7-4b5b-a4e9-dfd403c9d015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d8e642a-4be4-4cb9-b187-efc57eb44388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d040f3d0-57ab-49eb-b1bd-853ccc7474df",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8272cf79-6140-4faf-aec2-c037deb16c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0829ab4-4bad-4414-bdb4-4932ff41763f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f98cda-70ad-497c-aca1-2d0a82dc53fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "dadcdac7-d681-4e77-bec5-678df290a6cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eab0dcf-b752-407a-b1d4-e280f9c7271e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fcbd194-c2e4-4e10-ba09-8b72a8af1de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a2d7c68-a7dc-459f-8731-07e168646e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2440fb3b-6ab2-4fe2-a620-bfaf8264ebbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "78c9ea28-402e-40aa-b2f2-ea102d8af16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92f2b36-44f3-43bd-a380-cd7790e91847",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b03eba5-ae56-403d-8ef0-5032807e357e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ef95f3-e3f4-483b-b9e2-ae17f9626eec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f07ad49-59e2-4db7-ac5d-b4f5fc422aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "db908949-8cf5-492b-b679-a67726c54ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129672af-e4d7-46fd-be76-6709c131d261",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2269cf71-8a5d-4442-a221-205c243b9198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ecb47a-de77-48a8-a86f-deab19fe1051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1cb0c58-640c-49c9-87ee-d65b40422f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "334c5b3e-5211-4020-98e1-af71193b6bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7ced04-21b1-47e0-92f4-345db44b8d11",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0adb0f-7b1c-4802-8892-7deb59e903e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d11d2b6-6e3e-4f49-909d-dbb5dd8a2f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e07cb7e-25a7-4d22-b810-9eb9151a9013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "815db590-5d05-465b-a3f0-0a9d1b4a9735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea23fd3-4fd1-47db-877b-3a8dff352de1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a266582-1916-46a6-ad25-5169518b0234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf63e598-0392-4775-9d43-5b9095d34d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a02ebd-520d-4e35-9c13-21cce2524b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca96f929-7d01-4e6e-9bf7-14528d50c575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a22017-d751-481c-bb6f-13f4dfd8af44",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3d9625-51fe-43ee-818c-1ecfb537023e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82f59c6b-453c-4d30-8fe7-c55e7b16a9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a448fe3-43bc-4313-b924-ad6e53ca586e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8da8228b-2795-45d3-ac23-0a7ad31c1958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6cf4734-1662-417c-a6b6-2b2f866c54d8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34234069-6baa-4980-a9c6-17fac906a531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce63c064-99f8-419b-b605-5b8830ea4aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282a12df-566e-40e5-badd-e774a68d228f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44df0560-2e15-492a-b305-c5e7859f23d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf3d235-dd66-4ff2-8660-4f60970d0588",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe58dcd5-d895-4e6f-b324-6a93bd2a23d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4505d1b4-564c-404a-8ffc-37f02da7dc8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ef1859-e9b2-4f6f-9c5c-cee2b156592d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c83d94-a7ad-4eed-a2bc-24609a9418ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c47963-4a8a-492d-ac6d-2427d6251584",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346ae7a3-373c-489d-ad56-7270506d2d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4829dbd0-4125-4217-bd72-d7b46cce13d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beeb59bd-2746-43bf-820c-7b4932016fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c32e70b1-df5c-4947-a153-049f3fe261c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19f8e87-80b9-4a4e-afe0-c3d40cc1e889",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b827a116-695a-4071-a3a4-5a45c72a8667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa6b0c66-4fec-47be-8845-1504e3bbb131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ef8945-e0d0-4c9f-b8ad-0e83de928a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81b3bf1f-7288-4d96-a0d1-bb0db290a368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65219f57-0d0e-445e-861c-82562dccc426",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1bb3ca-dfa2-44ab-b64f-8bb3e3af6b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9403b000-b14e-4dd5-8963-e60ae08d9a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f79a8f2-7114-4d0a-9c1f-2efa54af6510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c56a1afb-c0ee-4827-8ab6-6c5566134f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79c87ac-c236-433a-86d9-e526d7640303",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f039b592-d4a7-451c-8d48-690f96d62462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be8f3c3-7b94-4beb-aec5-d401e2a70b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b20918-828b-4976-a302-78734bd05704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7968e13-accc-409d-9a62-b157ebc3b353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5c00b9-94cf-4f16-8b11-0b47c028664f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e801c7-f507-4b09-863f-d020c4efc75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1893b0f-04cf-4c2e-b37a-86d70673b4f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad73bff-1be1-46a8-9294-58b932777210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7be919e-e2e4-4fcc-8e69-bb0a543b15ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e4c208-a7cd-454a-a2d7-1fc0b73d61df",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb95e98-ec18-405a-a3fe-52c77362bcb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "450e4e10-213d-40fa-92a9-815fdb5ed749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a2e906-31ec-4173-a8a5-903119426431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fde7cbe-5a26-4149-9ef8-3b2490eb8780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60df4bc5-8c0a-40a1-92f0-cfd4229381d0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58a0810-7143-4cb5-b672-0d829ced9a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49fdb026-15dd-4d5a-952a-d15a9b0a1470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57cb6897-b08e-4b6f-ab96-67ad5baadb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfcd9d83-b2a8-46ac-b78f-46aa5a3c5fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9790aa9-18a5-4bde-80e7-c95c0292b05c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8768a4d7-0e07-4a93-ad9c-ddc31d9d3e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c81c9f52-f992-4a11-bb3c-827bf6541e33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41295ca2-4e00-4cda-b299-6a839a7858e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cbd83dd-8f36-4a20-b1b2-9aec4b64bd90"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9811b88d-eb98-4c49-a690-fe36cd647694",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6558dc07-29a0-472d-9830-7108913b625a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93340666-ab95-46be-b34f-c317688a83b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e0507b38-932b-4775-b4ca-0f75dc5dcc31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6fd275-588b-4afd-be4e-9b63133a742c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee4faf6a-c4e4-4855-9790-1d63845c2d25"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8852fe5-136c-479a-ae63-ce2f308a3cf3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "835bb3a3-6766-4c65-90f7-73393a9866b0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad4033a5-b8db-4dc0-beb6-522c88733076",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29c05c7f-239f-4f3c-aeab-5b8a27cba223"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4cd7f86-9808-4859-aa41-18e349f66096",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2dd01f90-0386-4a5b-bd2a-5db8f9b285fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ffda4c96-f370-40da-b203-cb07dfcafb39",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e6eef3c6-cf47-4d78-9202-e146079d1eeb"
            }
          }
        ]
      },
      {
        "id": "7b4bef02-06b4-4141-be5c-8c448ffeef33",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "cb0a87b1-80d8-4bc7-ad06-5aba5952c2aa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b22415da-9caa-4bc8-9b09-532db91b2a07",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7c111a44-b660-46a8-92c3-e26152aad9ee",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193a4974-6073-453f-894d-4077fbdf6be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc057fc-c77c-4659-8113-c12a2897b81e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9d3ca7-4cc5-4c85-93b8-9f5d4ca46069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "caf9bfce-d307-48e4-8f78-051aa6ad0398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f766d84-e4f5-4953-bb44-b1d20b8c7a0b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b02792a-aa4a-4628-a49e-ecc235b2221f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9dabf28-66cd-4397-b218-3cab32bc494b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2cfe2a6-8400-4c0a-88c1-e725a90d56e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "90ccd573-e6ad-4c20-a2e7-dfcdf02b77c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d001b34-5925-4a75-8e82-09533632067e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b418858-1bb9-4674-920f-46ca228862ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d223904a-9b2b-4616-9f7b-c8ea848764d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5149cc6-e038-4785-961d-e7abe79d7431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb62ac2-d0a4-4af7-9ad0-20abef138a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989c7d97-7354-4619-b2cd-1909c7990946",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762c92eb-c554-44fc-9074-7f12e40f64d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e58f8a-bd7f-4903-86c0-1c5c85bbd380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f055ce54-6bd8-43f5-9e87-fdf99c4b5afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d440a982-e5c7-49a0-a297-8a6237350e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fe0d16-0454-4322-88bf-4be6678c0cf9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9295b9f9-0082-4719-a317-c1419f61a9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f23c1f-8b4b-4189-b9e1-807f9459a3d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c81763-96ca-4137-a9e0-5a1942ad3fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "55778955-c4f7-41ff-a578-2e6cb9f8248c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214d9e0a-d5e6-4ea4-bd14-e8b9e1be8817",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a488402-1922-425b-8490-3ecf7ac57f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1f7870-3c05-4340-bebe-65e6c9ee6f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227bdcfa-cbd1-437e-91ae-96b4f969306c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9940c6e-c9d5-4f06-99e7-1b1867d21db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e306d1c7-1328-4df4-aba3-9d908f8ed65c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f1a9e0-a7ec-4b3b-b440-ce510d0aa4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b4e392-b265-4e20-99b9-6321d34ae2db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08692a0-f146-46cc-ab94-71709dbc7bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "99f47017-0284-4f5a-abfa-b3edb07b692f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d20a1d-e91b-4ef9-955f-137013960098",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca23d06-4b7b-4656-b38d-0cd642e19bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebadefee-0a1e-4d6e-944d-756c3ae45ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1d00b7-836b-4603-a024-a91c276b4f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08865a96-1274-4107-aae9-7cbede3715f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7f24b2-67bc-4ded-913e-b78c00d775c3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25cd9cd9-3211-4cd9-95a2-4baa46ae5bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba630271-456c-47e3-b5b3-7b70e7b485f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eaf28c4-54a6-44c5-9898-c448a0318c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "497a0a54-73f0-4310-8588-fa93a366f95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cde632e-7c69-4713-8a88-af5bdc4e7928",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e22e5b-89af-4b4b-85b9-383066f68419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04de805a-9355-44fc-bea7-f1bed4b61630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "febaaf4b-f625-404f-95b9-054173369817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af946463-1732-4ebd-895f-7da7eb50c46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a6cbdc-bf4e-4417-9b5f-b2b16e5911ae",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1365beb9-bda8-4f96-928a-db2550656471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91a0d10-d25c-49be-8523-78aca9522039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6837eb39-2218-43cf-9270-ad247fada376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9f584b4b-dfd3-4f9d-8333-f9e961c39dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35da0886-d520-4d33-90a0-0747ed914001",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493afae9-a259-4979-926e-1d2e4292c93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7336dd56-d718-4588-8505-70ba69095e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad04995-4b68-46eb-bb68-820a479c55bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "abdd02dd-a6fc-47da-9416-edb7b976543b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bdc1c11-94d0-4789-bacd-844da1ba23a3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da65bdb-0bee-4628-a712-d2f5db32011e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1406e0ee-65e9-47ee-926e-de0e90776000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0af8f80-dffd-4b57-8f22-6574720a60b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "131b0ea7-d198-46ac-90e0-13b15a35da01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a4cba6-399f-4cd1-a99b-635693766f0a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a877261-817a-4a2f-8810-9b3148a39612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c5c9de-22a4-49fb-bcf6-743bdd3a1234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df9c483-65f4-4aa0-ab67-a70b451ab432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9296b6de-7764-47d4-82f4-4d26c823d4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cc33b8-b4bc-48ec-99eb-e5086207748a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641ad32f-afa0-4cef-9c66-a200ca15fa61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c2ece8c-e91f-4893-85a3-aec905a9f007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397fa2d2-019c-4438-bcd5-bc84ff9c8b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae7c03ec-fb58-4adf-b1a3-f71874412152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69cf78d9-f50a-492d-ac09-2a4bfb199918",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f4ad94-054c-4d13-8c7d-c63d5a324a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6269613e-e226-4b75-b784-acacf6034267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff232cb2-af15-4ad2-ba1f-354ec76c947a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "01023aa9-1f60-41ce-adc0-b5dc33e45d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726052ab-cf3e-49f9-943c-d936356387aa",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76019c3-df7e-4180-a11b-96fd4d820835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05992f03-d40a-4011-896f-f749b20fb519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976d1ebb-9f01-49e2-8af4-42fd5c331cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "07600465-d251-4e33-939e-7da86aeadaf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0663a1f4-e874-48d2-b902-96be9357b6b8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df666f9-bf38-42d1-88ef-3a4db5d32cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1fa1a25-a12c-4eb9-8f5c-f501639d8bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98202c37-96f3-4df6-b937-8a5c3e11560f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fec09371-8d21-4ab7-b9ca-4415e8e9fbc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31027123-e0ef-4237-8909-890902119bc5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d5e228-1aa4-4430-afa8-14aba2c66a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d876ba2f-03b0-4adf-ae48-21f3467e1754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f21231-b2fb-42b9-8bc0-ca53c7462235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b96f6f8-4fc4-49bf-864c-07a335668916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a47a4f-9613-405c-980e-c22f6995f672",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa58e9f7-5c9a-42ee-be13-ce5e5e81a0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3b19468-899b-4c3d-a185-cfee08e9b5f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc4e399-a150-4af2-9545-b8aef0ba1f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f88ea250-4817-42d5-9d0a-7b0fcab99111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac2379d-b114-4465-9b92-50b82da78fa0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f812c8f4-5841-4761-84c4-f7d60879ee73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a361903-5fd4-4ad4-8f3d-cf9a7abd1ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc7e011-cdc2-4cb7-bc20-6d11ebc5089d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5948509-c63c-4207-8362-4d762d96fa52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1286a34f-8dab-4986-9416-d8589404a81d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0494bb-fe84-43dc-b1a0-51b5fbc31bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df238ec7-7e06-45b6-b550-776b4b248f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31da15f-398b-46c6-acc7-43eee37a8bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72064645-5bf8-45ab-86c1-e2b728091c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5bf4e5-1a98-4757-a189-348ea178c97b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb37245-ef9e-4888-ae66-ca126556df80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab8ffd85-3684-4665-a390-f7ff47d0978f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea58975-d66e-4eb4-a7e6-6bbdbcc5ea7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab30e3f-dc8f-4fa7-b739-42e686499b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59f9c02-5769-4aba-9452-1a174ab767a5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a60054d-af3a-42a4-b83f-592e6fa0b7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa37882a-cad8-47d3-aaa6-09ff2b411f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b20acc-5d8b-4005-b209-32b8e6ea6cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb1d811b-89ab-4cde-8932-a22670c68092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a4cb47-36e3-4a8b-92f5-44e95f8f9212",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be55d6b-df1d-4849-a7c0-907d4ead017b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0c034b-01be-4a85-8f3f-52ce1244478d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f154e132-dfab-481a-94dd-ccfba4824b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e69c8ec0-613c-4dde-af4c-619bb85f61ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc556c7-dbef-41d5-89e2-81b2a54166c4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e271f1a5-cb52-4c5b-9bf4-6bee00e686d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ba11a6-8756-41fe-b529-1ced6b02f343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da37153f-8730-45b9-a4db-0535a651e398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fda916fe-48e4-467b-a4f1-67991449a63a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8635f37d-e839-46de-b30b-5bafdc1430a2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25a155c-3de4-49e1-b310-245340330037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20dbcf96-2651-4a92-bd78-0a51defe554b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a18010-2fea-4aa4-856b-dff267571fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc37d47-8e20-46d4-8f77-71e354b50378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f78f51-bea7-4283-b40c-54a26e3a2bce",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d48650d-3ec7-4c27-a85a-d2100e556bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab8f54f8-eb56-4be2-9dfb-0e7a20b9dbe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f47e2a8-e593-47c2-99be-4afb65d26e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7487d1bf-0b12-4cb2-b770-3c19dd600eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d00794d-e6d3-4a46-a97b-5729f49db207",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f974b5-d416-4c73-b2b8-09c836e637e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee342dbb-cfda-4a2c-a83a-51b5a78b96fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b4e122-b134-4161-8c7a-278e57f4f756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "030aa746-87ad-4b34-817e-9e41786aac21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d02784f-0fee-43a7-a65d-c3f1afb3cbc6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c27be1-7b14-412e-b95f-e824ee12a311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3301cbf-7061-4f55-b484-316c3d3b8923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11675c72-34c7-4271-ab25-fc8363ee4310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f27d0032-ecb8-4b98-8bde-aa851c067849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9c36fa-24fe-4591-959c-2ea006d7afab",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9842726-7a04-47de-966a-4b242ee3a973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103e3b2f-ddbd-4c83-9c11-ec03fb1019e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627816b8-aa0e-4c7a-81e6-d056ae9c85ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc2941c-029e-4970-9af8-c96ace50b187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5a6422-ca60-46dd-90d3-eb2851248ae2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fda741b-4b53-430f-9c2f-bc2ba837929e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0051c57-9720-495a-8ed1-4cb9c98a741e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38251d79-cd19-4a00-9d63-a6abb469aa01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fcc435d-1a0a-4c15-930d-a5ac6377b1e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a71a24-536e-49e8-ac23-a8d9dec44a74",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0eaad1-7032-48bf-a720-ca51877e3d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeeec9de-9e06-457a-92b6-9aaec18cf8ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f39053d-c1e7-4c2f-9558-e91d98398a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81d539a2-8f82-4f32-ac6a-99e350071304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7058e9-5ff2-402f-a8e2-b9bcff4aca1e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c5a6d9-d180-461a-ab5e-814c9dcd3a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc0dcdcf-3723-4470-b12a-76490a03347a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d81c72-24e4-4114-b01d-f225a0ecabcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "752bea49-c2f4-40ee-9c95-bc2321464957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50437387-b721-498e-9f74-c7f0aa5a569f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea378f95-3e01-4e0a-a464-a767f6d82543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86a2eb1-6d59-4408-adab-f38d32f44fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045baf06-f0c0-4852-93b2-0acbb4f08a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ae0850a-9aa9-4a1d-9842-8a3cf789de27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a801d245-c72b-45a3-9899-0af5ebceb0e8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2272fb37-3272-4b11-86bb-2188375a549f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b648e3a-d015-49ba-bfd3-2051f3c0eeb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9b92d0-5c23-400b-9170-2c8f4b098442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f9e1a4e-d76e-4558-8bbf-4cd78ae0555d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd6bbf3-99c5-40ce-8be7-3c8298f621d9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2f1430-cc85-4fee-9d59-e89f949ecd8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16d7712a-2988-465e-8ebe-e92d08cb2ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8c64b0-cc27-441c-8aa3-af87f1be17e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c40b626f-9bfd-4215-a176-67c62913ca36"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "45887371-a89d-4cff-83cb-b4c0ac886f11",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae8a0472-da7e-4950-8c55-f76095636d03",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171de5ac-e0b4-4984-9c5c-5e83b818a0fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2445568c-aace-4718-99ec-d0e5d5fdfa3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3044e553-b415-49d7-9aba-60f8bc5545f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20333866-4836-408f-8500-a13754d50bdc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76f1f164-a9ac-4222-8dfa-07beae8ac9b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55f9d9f6-6f4c-447a-bbda-41007cd56de1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a440dd16-2a26-49e4-9d14-3d9ff84d4c2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e53eb28-def9-4d84-b011-cf8259df6779"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01067339-aab1-47b9-bc1d-0d63ea0e7e90",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "457a8def-2847-400b-b9d9-4cf8c4e8e4ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c90b44b6-0530-422a-96c0-9ef29dc1c2f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "017aac3c-1c27-44d1-b9c5-8cbd5144f720"
            }
          }
        ]
      },
      {
        "id": "e8863f0e-f11a-42d0-ab3a-978b1f859426",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "90d438ba-1977-4fcf-b09d-23ab4f3d2a5d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a407e78-ac78-4b62-96c3-f735f03d192e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3719c0dc-0c5d-41cb-a588-68f318ffa782",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce457011-db33-48f2-bf19-5d19e025bad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d30793-390c-4505-a391-f708c0e20587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd42defe-a7be-42d1-aac5-cdd5f6ea5a5b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8f4fd1-57c3-4123-a3d4-b4ebbde37bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd0092bb-05c4-45c8-aa31-53f3e261c7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56694ed-9a10-4c7b-a186-c469975733c4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "348930f9-ef28-4078-a35b-06926ba69940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94eefc83-e37c-4433-a6ec-0d3ff1ede891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4091a9-8455-49ae-8e24-5f2aa676b269",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c76e73-15b0-484b-aa73-e8d2737ab329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4ea168-6bea-413d-8feb-c858ddcdc003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25483aba-3bbe-48b4-b1b9-471b9d3fe9c5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b794d43-0748-4a03-ae24-8785c7b062ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "508f5654-1c69-409a-a58f-93e6b18a2bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3083fa38-955e-4203-acc4-c31d2ad21e50",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e63fb2f-3598-464d-9c3b-ac9b68621bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e001df-0706-4eef-8041-3ecb3c5871b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8964e01-4cd1-4c58-88d0-72a38dd43d1a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ff3211-ae82-4d03-90d4-63ee509dea00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5dbe488-96f8-443d-85ad-65f3cf8a86d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3558dc2-9d6b-40e9-a90c-fa9036a70a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad36930-fd4a-4dc0-b3a8-92d1e3d1a638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd47165-e357-4cf1-90ca-2580796e4625",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6aa485-a5b7-40f8-9439-595d1cbc0666",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f4a7699-eb9a-4ebb-a826-32f8f38886b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9fa8dc3-4750-46b2-a20d-047b6bb94447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbec640b-b4b5-4a8e-8bec-7d0a1d0bf574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5e72ed-f7b7-4645-b0ac-d11bd9c6a289",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4831fc7-f244-421d-a4d3-e99611d39e5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71c87c88-59d5-4c6c-be35-aa2bba5beab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79ffedf-0a79-40af-98ed-290386c4f01a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "747cf1c4-793b-4291-8159-d17c91fecd0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb067551-a5de-455e-a85b-e607f3f2488d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c39eb7-e947-4c97-89f5-69ebe4943f0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "671d5ea8-a865-4196-bbae-98d4e7d8a338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4fffbf-5b6a-4e62-bb98-d28c4abd77bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f30b86-96af-4692-ae28-ce3fc00191b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad79ccc9-a3c3-49ea-a3eb-3a30e7745eb9",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea25cfe-e9c6-4f29-b4c3-1f92f9e68cdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb8ed313-24f1-4818-80d6-5cd84eb56169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5655c2a1-177f-4c31-845b-eeb302c3f8f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa543a9-fb60-4def-b772-23aeea6a1d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444a0eb3-13cb-424d-855c-1b48dee92728",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b41eed-dec9-43ce-a398-d0e9aecdd7e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e50e77-4fb0-469b-b504-fb351a0ce0f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d1d81b-6f9f-4000-bd06-90a00f358f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0bbab52-c64f-4e4e-8238-036f4daeb724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560a5377-0f8f-4c53-aad0-ef13e86925cc",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da9e8a2-9c62-4d05-b8af-b1a51db76a08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20fe500c-f745-4980-af2d-5bf7359adec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09afece8-084a-47fe-a240-761ef8fcfd10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cced9a9-676b-458c-a164-62e908790c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4709a6b-50e9-412d-a54e-7840338d02b8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a166ff2-5bd5-47c4-860d-e6ccc5905d09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b2f8738-417f-46e9-8db4-c73b00c7e232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2cc427-396a-4751-b889-63ee5b5d8be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03c0915d-00ab-4e56-8e47-bf287e3f9c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a286d81-c2f6-44f3-8f4f-ce16048d50a2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9b9588-bb5f-4086-a38c-3277354c6518",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74f270e8-bee7-42ce-aabc-108f4d34588f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97312faa-fe96-41d3-847a-9fa5b8500b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a3299b2-f834-4c65-add0-7bf8d26d2a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4bad8c-4f87-4551-a595-44554c880b85",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0baeba-7c21-4fbd-baba-6dd0909aab61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17ca9113-1022-44f6-b367-f9b5235b70c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "330520e7-d285-40ac-9698-72131fcffd89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "addbde8d-bb73-4f3f-9995-a5e8a06f73d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d19b7f-195b-4f40-b2c1-4b5b9be38671",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca68a560-24bb-4a04-bc5d-258df945427b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0422c133-17fb-435d-8ab2-beb7d34809d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90563dde-3ad8-4e9e-af6c-d47a4831a9fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76eb7ed2-7a68-472d-9db0-99632269d17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3a7e61-bec3-413f-a9c4-6034eee98bd5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88eb742-97aa-4783-8345-052f20e90f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9d8ec5-186e-466e-8cb6-86bab58d26cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca5a4bc-e7aa-4ea6-a4da-e3548e2a87a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3acbe82a-2e7c-40f8-a613-ffed6ff030c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0cfdf1-5645-4b18-958f-5889c312ea6e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cff7b08-24ba-4d2d-81aa-41eef8238a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e8d5c2-b3a3-4b7a-99e0-e6e7e9c7db00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46332d25-221b-4920-9ba8-e2c70c54e61d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0f4c98c-0e95-4393-bfb7-ee4cb70485b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a7da2d-07ff-4ddc-9dc5-c8127a961c81",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947ae08f-c19e-4689-a01a-9e72b3b39b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d67e322-6e0c-417e-960c-8b4037f35274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f7c2ae-ae33-4274-b72b-1826616d2392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3808411f-4926-4d1f-9d6f-1f2752f2da2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0da8ac8-13f1-4e38-ba2f-6969dc2907bf",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16e66b9-5029-46a8-9874-fdd1921e7c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05643043-5597-447e-aa67-0e00d507e942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f513948-583e-454c-b75e-98d62d7159cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc0d430f-547c-48e9-b48b-8aad7ed6645e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6fe33a7-d268-4279-87c0-9e249209af05",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d951898-b872-40f3-a2f5-a97b8b124a0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e776242-ba9e-4c9a-890f-a9ee5a67949d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6844bb2-11f1-40ba-9436-31b86f626f36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c71e9085-a4fc-45bf-a5b3-7ed0c8083436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7caa3e-5e40-4048-893f-456503fdc902",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70db0cd5-fbca-4023-89cc-35960028999d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d1c76f8-0c21-4053-912c-2f84fcf39d94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "896369d0-a339-4d2f-973e-0253169aab7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83cdb1b9-c85e-4710-bf9c-55de353f09e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8c4e8e-f627-47df-baba-45e892f6d3bc",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b81e1bc-ad2a-4518-9aa5-d7eec92cd3be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a4d0c33-59ca-4ae4-8762-a92496c69e78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "646fcbad-cf25-4eed-bd26-8ce24e33a621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e4dfabd-f719-4237-957b-58742471a918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc491fa-b7bd-474a-b946-aa8a5272d130",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba11d924-948c-499c-a610-e0d0b34b78f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae6c0b4b-08e8-4231-9c2c-151bb348129e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2a7da1-4235-477c-ab18-bb508f7189ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93eddbae-e408-443d-a5ab-4193d7d26b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fbe7ac-3165-438d-a1c2-9dfe4a305095",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4358b11d-20d3-4e0a-b563-e659ae3f5327",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11ad607d-21dc-473f-81f1-4f9f1bc6d8da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12876a66-681a-4421-b78c-c1b8e85c7b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "368581bf-0e12-4b81-b284-e84ba60b8105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9fbb23f-7a36-4170-8daf-97d7665e63ff",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc574ac4-eb11-4c95-821a-fc08ed9e83cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f603c4e-56d8-4cf2-ab53-d0da34d13d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b7cc45-3af6-409a-a53d-8a536e08affd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9fbc309-e048-4d8d-b2e1-a1b305d3efca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5d9a93-3f71-409f-bd23-dfd66935ea0a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d15c6d-e479-4d17-aaa8-3830aaba9648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf1abacc-cbd4-4989-87c2-bdef95f56ca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b378e7-f2b4-427e-a518-a6d031649e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42fb36c9-858e-42c9-a508-9659721f1602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad955115-ea51-4e7c-9ee3-0cbfb7dff522",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1757b2-9e4d-4a06-9e20-3538be635364",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbc9bea8-7cbc-4720-9da5-b96706f20906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "959d5258-416d-4aad-951c-72ad1fda8934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b1cfed1-6d55-40fb-8d75-09fae065f463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af402da-b351-4e4a-9736-b40fc0ec4696",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bc747e-3d0b-49cc-a116-582d94f02b2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d47553a-f103-4254-8ecc-27306c78de88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ffdb49-7387-4565-9fe1-aaadebb3cb9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9f6891-b136-4faa-a861-51cd227e2238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb61eeb-36ac-403b-bd21-fbff26c22ef1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ea3adf-c37e-41c6-96ea-0c13595f2f7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "835e91ac-77f8-4e22-ba01-54c9f66e85c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77899560-1bfe-4aad-b1d2-5c16374e569a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350c1219-5dcb-4274-bdae-79f6a084bc66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a915e1cf-9835-48db-938b-559c20070704",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3440603-b333-4482-8e53-ef95a409b7d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b3a89ad-37be-4083-aaa6-0c8d79fcd1f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a7234b-1098-4ce2-a107-216b4d998645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1f2f30-01b2-4c30-8c35-23216722a49b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420f2880-6889-44e9-89b7-0848c081f009",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a99f8e-80c3-48de-a4a0-63fee1f25785",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37b08608-a857-4ec9-ac46-e24a69960c75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f72c45b-8f6c-4f8a-a0be-36b45e9d6fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea8c20f3-f838-495f-8bc3-914d307037ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48be918-6376-4324-bfcc-69fda57fbf96",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75114aa6-a343-4c58-b678-37488b75bdb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2282d6ed-d88a-41f8-95e0-f536ecfe6f20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "020f7ad9-8e7b-404f-b799-dfa6e003468e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e111a092-2b98-4588-9562-3cd91a3b5be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93cb7eae-1f2b-4618-bd08-4789a95c4840",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce85ac65-4389-4e57-9eab-8dc4f9a0ee7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f2feaa2-3b5a-4756-8e53-578c72e46de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a2ca88-d283-4abe-b985-672ec8173a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df20f1cc-09b6-426c-a9c4-61bcd12c0ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9e7afc-f3f6-4425-a875-16b8d9b60301",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca28c6a-f271-4f73-8e2b-593f3a7f4a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d3ca4e-4c7b-44db-bf77-4fd5cd82681c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "831ef44e-8a9a-4043-a586-d4c49c2d8bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4447f7a7-9b76-492c-98bc-b30322d54e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc71189-7452-49e8-8543-e4c16e2ea55f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb51673f-c7ab-484c-97ea-3c881c2ae3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e1a6ee-06bd-4333-909d-10c0141fe58e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc62c285-0545-4d54-af85-9bc0f894428a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d6eb0fe-c25e-4a9e-9105-581ebc05c021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d7f04b-0ffd-4789-8a43-ac1c67a51ae5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e831f4-09d2-47f5-8412-1751d82c7810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5be16044-f011-4819-81cc-cc6edf78ba9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6243d0-c55e-40c1-8162-032419597a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba4abd1-f4e5-44b3-9be1-b6e3ae4b5a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b55935-fd67-4a27-82de-6151833919af",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57930a8-c7cc-4081-81d0-c5fdccad36af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b48d90-7c44-4cdb-acdd-929aa78ec512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f44d28-2786-4794-ab36-5cae7804e081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73956151-eebc-4540-82ab-a2cb9af5008e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f88245-d6bb-43a3-9f7f-1c7cad589900",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3d0097-24c0-42f0-8061-46fbc93d1322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53de17e7-e0f9-479c-b81a-c05697741b6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f84398-5ce1-434d-8a33-20eeb0223e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c574e8-6315-4558-a0e7-392c95baf6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6168892-2d1c-4976-853e-59a564f7c5c1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8752d6d-21be-4738-8eb5-74d49fb083f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51fc58ed-a3ee-4ca1-bf56-df2d732db47f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf036b4e-8ab9-46e1-a5a9-f2e327125d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b1863b-8d93-4aca-9d27-056fe4349669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073216c4-84f7-49f2-be96-fb9fb41959ce",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3327dc0d-3204-49bb-b27b-5771b2d9a586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c672cca-e1ec-4299-8991-653c14346b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80506f5f-0da8-4c1d-b443-18a75a7feed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a9f916-10ec-4e7d-9b95-91448bde3fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a778a7-3a3a-460c-9801-5cb4fb709ef8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9aba17-5f99-43ad-84eb-a49f100f210c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95c0b918-f5dd-4b17-9e74-634c0777c322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1afaf6-652b-433e-b683-b0bdd646204b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13fd4cb0-147b-4b14-96d2-edfa76762360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c529b570-c7ac-4d89-8f2a-d353d5a64be5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5bbc3f-ca8b-4170-a797-5d41378826c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50705aa8-ca47-4b68-8242-081e282b4bf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cd568a-d6d6-4c7f-894c-931bf65817a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667ac2ef-8766-4ae8-8b64-6539a5514d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b01622-fdd9-493a-8c71-b9a5654437fe",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a84d0b3-9bef-4cba-9a91-dafb854d9569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65212626-ca18-4126-84e0-95948d91590b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e4898e-0337-4c02-82d7-b49859310472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f4f6c3b-4372-4c90-8433-1169b12c2702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ebfb4c-ddd8-490e-a1fd-ca712960af71",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e722f9c8-6a0a-40d2-ba65-e323503f1e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c8e7e2a-c4ad-4c9f-8866-74d59a20a367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ec12db-5b35-438e-8e2f-36eabdc624b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02aaa988-55dc-4217-9d2d-49ee7bd81ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2d5fc1-c351-4677-8d7b-3a2d90932c55",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d3ea8f-1a44-4dff-8bf7-307b4e57ffd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c5a3a8c-79fd-4c30-95f7-bcb1099b987b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fca13fc-722d-4a45-8b93-9ec67db390a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c4e8008-20b4-4204-9140-1f4f594e6469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb69793b-94be-48f3-b40a-5757ca704903",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fee4a2f-95f0-48f4-9450-9ce8873ff68f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa96a3c6-7123-48b6-8da5-60a56332e7dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb20619b-00a6-45ea-896c-0432ce181265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81060ee2-3ce8-4e53-b70b-faa967e72661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87440803-c349-4570-aa4b-e482e9fee704",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f382f764-1aa7-4eeb-a170-70f0fb0df473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8a3d63-fca8-40f9-9f8d-5aa5de245fc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca2831a-71fd-412f-baee-2798f794df0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3976470c-e577-4615-bb47-310c789424bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7834a513-a195-4172-9c8c-88369872d580",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f2f116-2e95-4b06-a9b6-940bd077fa7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f2c0a7f-5d16-41cf-a42c-2b06fc73bcf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a63b5cc-8561-460f-ac3c-20afda3a3fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb34b99-6400-4de9-bd1c-89e6a09641e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b6c6b2-4811-4c9d-abf9-0ac753f01120",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e34946-739f-469d-848a-97a590f6a503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "926d7961-725f-41d2-ac9d-bf477486976c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48a033c-96de-42fb-b11e-b4f56ab54acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e896588-2065-4c22-92c1-b57488997175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c63ea9-dd9c-4b3b-b765-6cda4bc30136",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2318128-a952-4194-a936-56c2db36e034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb785aa-4516-43b2-8204-41e569947ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0bf5ef-0a55-4f0f-ac1b-59184cd49f59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f165cc57-2094-46d2-8102-85df6190e892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b201641-0884-43e0-9a5d-22e9711e4b21",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fb35d5-4d82-4977-9175-03c92b464aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8bd9f9-de71-4788-871f-015618b0b9da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa59b542-e9a7-40f1-b31b-23468ccc0132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e357c4e-78d0-4b56-9af6-4e396947545e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f989251a-53b6-4768-826f-2600647dad78",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d6e422-0391-4dc9-945d-fd307354bb7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f3aec7-f359-4adc-8454-27ef178ac42f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d587d1e1-d233-445c-96fa-ac9fa0fafad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2d63a51-8ece-4083-9c6f-31b774e7b5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb19512b-1dce-452d-9739-ccfa66f721c5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bce81d6-45ec-4183-ae54-fee07ce306ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c9823a0-8528-4027-a3ae-bbed987274cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "212d8c78-d246-4649-93e1-46f98f4ee4ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3571c57e-6129-4329-998b-15b1f43f9854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb562d82-2881-4ae6-b21f-81cb7c40dc2b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87513f2-df57-4304-adcf-9a2b9c589eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4dc5eed-84b6-4bf8-b236-be94a87daef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4db7209-5570-4a4e-ad7d-d06a474b55f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26335b20-488b-40d6-8067-7e84f15fe905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600ac93c-7d1a-42d3-8757-477ec4fb7261",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b37bb1-9f74-41b1-84a9-a2e9fc9dd6f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ae6666c-9495-479f-987e-344bff026b7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "021edfa1-f4e9-4841-ba10-1f02355c415d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c7dc5c5-99b5-439f-b64d-06275e9fdd85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35134f3e-5353-4334-96ff-80b3c03c2d87",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f32aec-945d-4bf3-9ace-5df2c2f0f969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2190175e-948a-432c-9f46-8f22132c4c38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0cf0816-3b3a-4b9c-8efc-92ac83eac8c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5700f79a-e231-424a-be09-2490cff7b252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f549d344-c065-431f-aa7a-73b68bdcd8e2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f61e45-8424-49b4-bb93-cfebef51e5f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e450a86-dd84-443d-85ac-35a57714bb4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eebfe21-94b0-48b5-8d65-8e7c3f7f2cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e171e2-e86a-4a5b-817c-cc8c15dcfd02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2ce6b3-502d-4243-86d6-43166c023ea8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2858184-4002-4d27-a215-9a967f57b51d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9397df6-ae9d-43bf-aad7-670c5360f660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c97e575-f4dd-46b9-b9c1-c9be2e6c6e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f8794e4-9a6f-47e8-9e44-762fac3d8b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c233ae11-6d11-4700-831f-0e43c0cde7f3",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2df84d2-3fb1-4bca-a585-a155bcb9cbd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "228fc7ba-7c0b-4226-9703-e731c60697a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f90874-917f-40dd-9076-447c26c38345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd05408-4398-49e0-ac5e-1e7576603943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d2553a-b6b0-4b1e-aef1-244a17e6b04b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bbdf5f3-b990-4112-80c2-740e26499327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d805157-010f-4db5-8364-1ba5ab5223af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ec1f11-f952-4dad-890a-af80119943a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ca6039-da0e-4899-a65c-998a3d3fa5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f98735-2b79-47fa-9370-6bde78eeee07",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa586fa-b7b9-4a21-9dfb-3cf941e0679c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8692a6f6-5ecb-4b0b-8ca8-8a116414ecdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8586983a-bce7-447e-8e84-75bd675204e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e85e63e-d53c-4383-9839-330817980c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae803f09-44e9-442b-a973-235de0d8ce39",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b923fbd1-12cd-4cf9-bbe6-8af15481da17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "350a1cc7-b25f-4676-877d-371d242c709c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3f3819-d1e9-4e4b-a1cd-1cc23fb2869f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8afa675-d415-4b2e-91ae-178b5ae9a92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c21f7d-56d3-43c9-8b2c-519563aa3b05",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a76cd0e-ad04-4f43-a60b-33d2a6d709a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84fad2f0-9ce7-40f2-9397-67c6cf3baec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b6f8b3-2491-4aee-937a-0e6535bc1301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a8fb19-66bf-4c2c-b83f-91b9a490c280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f75ba5-db2e-4bce-aa8f-2eb31be15928",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04af8733-31cc-4be2-a87c-cadccf4fcb82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb82f5b5-2a96-4b21-8a9f-bd64f92bd13c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1480dc6-fb70-47d0-88bc-260de42cf05c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f52d76ac-4a7c-4a1c-aa45-917a37549c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9297c417-b181-4006-b48f-29ec2832e0eb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22248f8e-ad18-4909-9a24-42323d6aac99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69abdc73-abfe-495c-8204-a56837a082ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a304352f-ece4-4506-8e13-d32a18245541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6523a025-3fd5-4aaa-a667-9a6f50022736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4be28e8-afb5-4e1c-bf28-03d5e7219b59",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690c15dc-3c8a-43cd-9c8b-6a55a0fb3d71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f5d01e9-99a3-4eb0-8e09-013fa5bf6ee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7baeee48-778f-4e73-aa48-7086559b2630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef09ec1-c33c-45b7-95f1-1b35cb386191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d86160-ac76-4151-990f-18d8bfe166cd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559dfccc-7614-4c92-8c5b-79cc423dcf4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61975326-44c4-477e-8bfb-9c5bd3ea1c0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a5e740-e006-4817-a780-9e9dc8eae9f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3952ac1c-e28f-4daf-87a5-5bbfb558b1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c79c875-7d5b-4bc2-b759-504c9c79240b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d5ce57-cd2e-483c-aa69-61a8fea8c4c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "990dea0e-c6cb-41a2-8d3f-f63f2146aef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6837c92a-c082-47d0-b36f-f2f5824bc669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6db1659-97cf-4bc1-a75b-6482b256d1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177f7ce1-f199-4580-ae87-1cbee4275744",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e518de-d92b-4822-ae4c-cdfb3b2d186b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "add1982f-8784-4501-917e-5b11f0d69057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e78ae0-09ac-45a0-9197-568714fa385d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16123326-d668-4c57-b299-0bd0d13ac96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f315be4-0317-49ad-a531-a0d67a66b08c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c9d7cb-3977-449e-a4bc-77c09d0ab1c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f722b8f3-6576-4119-8142-8fd9021d711d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab6b549-9b92-47d7-b8b0-67e616edc789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98dcf55-9f36-4e1e-844c-54a28f126a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16175d4-28b2-4f6b-9ecc-2a457759ba9e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a2f007-a782-40e8-ba68-6c4556d54073",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8afdc561-4e62-4925-be43-605cf2a053fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd847ffe-cf05-40b0-871a-456abdf316e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e72cfe5-96c2-4bec-a1ad-3fbf079bd486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f33e344-84a0-41aa-aa01-39c19b1e5447",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba89ed52-30bf-4f39-a066-bdc29f9e4811",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cab08d09-5da0-4a12-9c8c-7237c6615680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffb62ab-fd9b-419f-b09d-b8198edbc80a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0c8bf7-cf39-4cda-878b-c596eab9bafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa6939d-5aac-47c4-a5d4-55e4887766b6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71cc02f-1103-402c-ab2d-e004d46196f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fc295ec-eb6b-4d2e-b0e6-19a27da5d532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "595751a3-28d6-4223-9194-0fec7d7cdeac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5d73ca2-3a1b-42fe-a04d-fe3e7c260921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf4b44d-5230-4a6e-b4b1-31ce15b7715d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf5a166-5460-4014-86ab-64517ccd10b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "891f6e77-ec9b-4cef-a708-e50674666f8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc3264a-1485-43f6-ad32-6b45cc2be67b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d26f01-6a2a-4a2e-86dd-a5905afb9f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91eda93e-0e75-4b6e-a097-b29a46a93f35",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6263520-166c-4143-8bd2-9f23d2ffe2a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a0b93b9-5a85-41fd-8bfc-ccce1d1534d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4749e8b-67e2-4322-b22f-62a2bdf536b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c639146b-87c5-4f32-8076-44f29626c9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8cf2366-3181-4e76-9abc-d6149061f7b8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a727cddc-6c25-4450-9e9c-f8dc39a5acb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7302fd6-cad9-4bb7-a718-c601be032b71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a580c7-99a3-42ea-b7a4-c51539f0d8f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de4ceaf-74e3-4b6f-9027-38034169898d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e4d56e-11d8-4d2e-b1c9-5a140392bbbb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6faffa81-8e7e-4520-99fc-69868d2467aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e9fef73-3476-4006-b1bc-437969e86aef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "742ee319-1982-480e-9f1c-a3386773d1b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957935cc-cff2-45bd-8009-d66e4c288b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa90541-1212-41c0-a0f8-d000b0537305",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2e5704-5345-464f-9307-7f234190a512",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "144fb3c6-8785-4d21-9224-6c90e442e10d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cec366b-5f78-4fd8-b0f4-b1b57336113f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29334c99-a78c-4df4-8e8b-6661d326c093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f28538-9904-489d-842e-50298c6a2198",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ab74c7-f2d5-46d0-bc89-5dd11040d50f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0922aebe-80ae-4598-b931-2579342826ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c21056a-27d7-4ba9-a7f2-67a4cf939092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a674c85-b712-4f3c-bde8-d47855f48ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997fffe4-61ad-49f1-bd01-899e21ab4d79",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ef490f-c05f-4d8c-8b26-8f8969e03376",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec9a51b5-d529-4976-a2d2-08a6c174e733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e42c5d4-8f54-4c21-9f63-511121f3863f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9356f132-ab68-4835-81ff-dced7e7b6abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25158b36-c67e-4eec-bcf1-f961cbd65c4f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b5d259-7e0d-4344-bb3b-22df4274a45f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14e276f5-3cf7-4b77-ad2d-9ae3b2091411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c01a50-d9f1-4f44-b1de-cfcd9fe30327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98e112f-4839-49c5-9bb1-7f8e5e3f483b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a79882-d145-4ed2-a47b-3dde1d34409d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18f1ff3-7b47-4350-b204-238f510ba74d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e570d92c-a4ec-4b40-a9d0-2cf60ca62fd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1b1760-cea5-4d45-99cb-f39a046a7e98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27805a8d-455f-4f1d-bbb2-64bdb6e4314e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f76af6-f822-43f3-a811-9760bd6c892e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26cd0a0-4320-42a2-9b87-b7224f09deae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6430b55-cdb6-4c32-b7fc-f8abfb19adc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6eb74ad-15a2-403a-8b82-b107c6ec5d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f030fccc-d392-49f4-86bb-128fc5541a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec10f3e4-4936-4031-9e71-73da79992b94",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ef1a31-e902-44b2-bb5b-b529b69b4014",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d76cbad9-3522-4265-ad72-d70e0cefadaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74987b86-0fa0-42fd-98ea-f02e4889b356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "869221b2-38a9-4edf-87c5-ffea1dba1801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650dfe06-f2a7-43a1-9222-1e0ba550c3d8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a52354-5585-4943-a404-d6fe9e26c666",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "641efee1-6b17-46b6-923d-fa1b1ca6a18e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d26c70-0231-4786-a17c-d516e89f6a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188a7dc7-634d-4e11-bf85-edb8bb8628c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2b254c-206b-4d2b-b8e0-f5b2e86da378",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f89eb843-e664-4fb5-ab59-ebcf6c361944",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e66598a9-c97f-4ca6-9c78-721427023464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0115105a-e15e-4435-8490-3054495e553e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "437c49dc-291c-43cd-9eea-bbfa28c07cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee222346-2197-457d-92b2-36b85687c74a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235050ea-4446-44d1-a334-c659b0e8aa23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93d4f684-444d-4acc-9b44-66f3eb2cbc3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "000aa524-aaf9-4709-8018-c320ae3b682c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e9c220b-18b6-43f2-9fc5-9c1c042aaf87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94cf309-b54e-47b1-82e6-2e79bcd113bf",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563b876a-662c-43eb-8aaf-2a6c26b45927",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60865403-aca5-4e73-a370-1787c9a770d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57882460-138d-4769-8a48-a11b3792238a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0595b91e-ea99-4754-968f-c713c024d803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae318e0-351e-478f-a282-e9af9f7a0562",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5f3ef6-316f-4e43-9a06-11fac6041606",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee0a9842-b0ba-4632-bed9-4c176277f2fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c200b6e6-a0d7-492e-9fd8-b0a55f544de0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038fb4ba-98b9-4dc8-9d9a-2961d5ffcc14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a660f2-3aa6-48b3-bf09-a88d12b6674a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c008a4-2df2-4bc1-b13a-a1e9def2d59f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf2e0638-0773-440f-932f-d4a3d407c736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a31caf6-e153-4279-a874-3c8c8301b769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "599ef1b8-9063-4348-b8b8-18580cb25858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36da37c-00ee-4529-86a4-ca46e5fd3b4b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e5c042-697b-45a2-a568-ec4654e63c02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b2c4750-4253-47bf-a678-c3336f020e1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c675033-4b55-4e5f-9ee7-b1e3bf8742d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c4fa36-fa7f-4cb7-8d8a-4363840a352d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd45478b-867a-4e17-9172-1260740d2320",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240b63d4-29fa-4a1f-b36f-b6f315c9caf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7517e12-a7be-4e34-99ad-702709f65ed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d508cc5-c1e2-4282-ac39-5e103ade0b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35cd335b-3f44-442d-902a-7f5ef3dde392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e3e897-ddea-4531-bfa4-fa86c6c76e07",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4c8489-4155-4489-b64e-1547468c5f3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d41415af-5f61-4e3b-9dc5-ec5380bc2d90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd64eb4-6acb-4e55-91d7-a6e1337019ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f76cab-61cc-4b13-aae6-e847878ff13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d19a15f-fc96-4df3-820e-2ad40588aa05",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5fed51-4a88-42c8-9769-44d7ea3e36d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df02c517-4397-4b19-b4f1-880b1e5d293c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98a5d8a-3bcf-4e6a-ad5f-67f9a55f6547",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe7ab683-8156-4641-a9b3-f4998927caaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6861b21f-fb8b-4250-8e72-11cdf30622fa",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e350e15-698a-48dd-af80-0c52f873be86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89e0a69b-4553-41ac-a03f-07d4907c11ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb0a3ae-c73d-419b-910d-801187be043c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c8101d7-d62b-4c6d-b759-dbaf2145bdc4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d0642d0-e0cf-4db0-bffd-47e6264c549f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac0508b8-9d82-4b7c-b54b-fa7c83eb5a05"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d762e7d-0748-40f5-92b2-1e14a1df3dc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8feb9a0b-f50b-4504-8778-7897fe12d0e8"
                    }
                  }
                ]
              },
              {
                "id": "8287fadc-49a4-4bd4-863d-568212812bfb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00d90c47-3eeb-4e2d-b579-dddf792e2e3e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b3f62f-9475-48f8-8372-3a3225cc269f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3d80f361-2dd7-40ad-b51f-b7726d42c7b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "317aeb09-2d62-4f0d-aa70-6b74d92505c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a644a80c-d8d0-4562-9a1c-7c639cb0adf0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1725ef20-4c2f-4785-b408-daad74eb1a1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e04ce2d-a967-4749-b8b8-684f445ca293"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6dedb877-138f-4cf5-91a4-c29e9d8c4b07",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83f7ee81-c025-4a33-9fea-f34dd27574da"
                    }
                  }
                ]
              },
              {
                "id": "de4dc9fe-80ac-4f18-b382-545b5d311cd9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bfc210b3-e388-4c82-9a77-a1817e3d0555",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdcf8ce4-e725-4986-87b7-b1988222623d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "375956c3-0086-410d-9c71-59fb14f349e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bf07bb-044e-4062-989f-d86b023301e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d6de73-f345-4a64-bf39-3d2e5ccc4cb8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d4485b04-612f-4ddf-bed1-5c15f33a7bd7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3bd3a5d1-07eb-4431-a473-c5af7c0010de",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a61d8c7a-1fb0-4bde-b822-94167711b050",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b334d303-0f00-4be9-8e58-0c304d0f63d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a446b4a3-19e6-47bd-b176-d789ca93e64e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6832e63-184a-4a24-807f-2dff4140de59"
                    }
                  }
                ]
              },
              {
                "id": "c61f88b9-1ce3-4abc-b7d6-f5aba7675c62",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "022cde81-93d7-4b95-b900-b00f20fdb338",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c6820ac8-ccb4-474b-89d7-64a9437f617f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ce9992a-8093-4c82-9bc1-77b147a959bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5cce6aa-60dc-4fac-ac85-7e234fa41d57"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34c8ab04-ac17-4840-b93f-8a246a29ca40",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fa462117-77b5-46c8-9882-fea0e2bb4ebd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc3cdc23-e9a1-4b66-8d67-703e05fd64c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "99d4609e-79d1-402e-86c5-a56ee733cec6"
            }
          }
        ]
      },
      {
        "id": "e26687fb-fe42-4d84-a9ef-527fa8655527",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e53885f1-2901-4e0b-91e7-b902ccd22a76",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7adc96e2-20c6-4fe0-a93f-a8e72acf66c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3b14207a-c90f-4081-ab74-bc7785f64c7c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc41ef7-7087-43e9-8e7f-727c25c1237d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "57792517-811d-4e0a-aa7c-5dcb284317a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af4a199-76dc-4413-a1e1-d75cf153d3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a9bc569-7202-480f-b6b2-994c6967db9a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d335ec3e-7df5-4b6a-afd2-07a69a127b4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "425e86a4-f56e-4d9f-9197-fcf566402f8e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2524e8eb-c607-4167-8dcf-c223e063d0a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ce83d5a-a8f3-467e-8845-036dcb3067db"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "471e1c07-df79-46a6-9929-de6886fb5a64",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "64b153d4-47a2-471c-8a8a-72592ca48998"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa514083-97ac-4418-8c0a-2a6d847cda3b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "45ffbfa0-a1aa-426e-bb46-be7dac88c173"
            }
          }
        ]
      },
      {
        "id": "a373cf60-a5c8-40bf-92f5-6e89faa15698",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "21785fcf-ae92-4390-96fe-ab2d89e9a18e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c97fc03a-2ab9-4041-8a5c-c6f4b1a08ec6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a6f3df59-1644-4bb7-8aa7-680f51f3a8de",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4891d1-b99c-49dc-9d28-97f939481d44",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb929f5c-7885-4c03-9538-8e76dc2eaee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec34f25c-78e0-462b-8be5-a342cf9d8976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af212e8d-d1e4-4aed-9823-e3f322afd005"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "500216cc-0298-4553-9143-6629dc71b549",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e9039cd-2849-4b3f-ac77-f7fffa1ac271"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6c98f28-92b2-4017-b9aa-08a71cb72f1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9e7ca66-528c-4b59-b18d-256539117625"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e2dfdf6-a7c8-4565-8572-2fcde00a34a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e5120749-33b9-4ae7-a119-8efd74c00005"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e5f9e25-b51c-4c88-a474-c459d9b9908a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "41584beb-d554-4100-b717-7002a84aa0ba"
            }
          }
        ]
      },
      {
        "id": "99887dc2-f852-47a3-9f6f-d47c78a6dc8c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "eec81e78-4c3d-4fdb-81b8-0797663371ed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1677de1f-5641-4445-9978-ff2b4b3c216b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d8b8bc34-a157-45b0-8f14-1ef2998c8d25",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c8d6fc-d45d-4bb3-be75-8994fb4a168e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13ef00de-4209-4e19-a58f-8efa94f5355c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f1f906-49f7-41b0-84bd-d8d511b60753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71156f2e-3d26-4710-89f1-25ca01727a2d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f7e683b-988c-47d0-b9ce-10f7269f1f18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f84d0b25-74dd-41bb-b92b-c79aeeb4e353"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a4b04ab-111a-4ffa-bb0d-f241487b74cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "855684a7-09c7-443d-9d0c-b75cb9d08460"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d877cdb-6811-472a-8416-69fdfd1a26a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2e52d554-f1b0-4342-9564-d039cd8bd69c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e5d3489-8f81-4955-a5fd-c5cc4fa49d1d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a9d17f1-3ddd-4ddf-869d-a883e8ae200f"
            }
          }
        ]
      },
      {
        "id": "bec7e674-3ffc-4e11-a8c3-4e925203582e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06856d2d-a786-47dc-bf84-3fe17447798b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f203784-16e5-4f58-b649-a9057c441c22",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e167021e-1b2f-4529-a6fd-2f17fcddcb6c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2a277e1-2264-4015-b315-ffdef62b19ac",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "615bf82a-7dde-4c24-9390-042ab8e870ad",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 255.5719298245614,
      "responseMin": 10,
      "responseMax": 9249,
      "responseSd": 1192.9299559965052,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698626061795,
      "completed": 1698626147011
    },
    "executions": [
      {
        "id": "bf90974e-7585-4946-843f-877c3bc5f58d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "47e9fd66-1fd6-478f-8f43-2b693add33d2",
          "httpRequestId": "73cfc095-31f2-4fc2-9f2e-15d8dc67826c"
        },
        "item": {
          "id": "bf90974e-7585-4946-843f-877c3bc5f58d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ae5e3abd-6be4-4899-8a81-25f07b5eacc1",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "54b1ed0e-a7ed-48f3-b7c8-370f2bd52211",
        "cursor": {
          "ref": "18d63087-4d89-4e50-8a44-2fd6470fde4e",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6c7550f3-53cf-4407-913e-f0c61dec6f11"
        },
        "item": {
          "id": "54b1ed0e-a7ed-48f3-b7c8-370f2bd52211",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "948827d5-13ff-4f55-bef8-647c6fdf99af",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "627c57ec-77e8-4f84-8e2e-f927b6ff2918",
        "cursor": {
          "ref": "e074a48a-a4cb-45a9-8655-35b477677be8",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7926844a-66d1-43ee-a22e-8b5d9f6c3f72"
        },
        "item": {
          "id": "627c57ec-77e8-4f84-8e2e-f927b6ff2918",
          "name": "did_json"
        },
        "response": {
          "id": "06c96141-14ef-4c15-8ce0-dfb38be7a90a",
          "status": "OK",
          "code": 200,
          "responseTime": 2056,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6474e652-823a-4256-aaf8-461e491aab72",
        "cursor": {
          "ref": "c492a904-9694-4a51-8882-14174cd37106",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0b3f01c6-5cd8-4503-b1fa-34c59b75535b"
        },
        "item": {
          "id": "6474e652-823a-4256-aaf8-461e491aab72",
          "name": "did:invalid"
        },
        "response": {
          "id": "b5963934-8c32-4f59-9b09-102ebf49f4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6474e652-823a-4256-aaf8-461e491aab72",
        "cursor": {
          "ref": "c492a904-9694-4a51-8882-14174cd37106",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0b3f01c6-5cd8-4503-b1fa-34c59b75535b"
        },
        "item": {
          "id": "6474e652-823a-4256-aaf8-461e491aab72",
          "name": "did:invalid"
        },
        "response": {
          "id": "b5963934-8c32-4f59-9b09-102ebf49f4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5f39f1-c407-4eba-ad1c-8b24d29a745e",
        "cursor": {
          "ref": "b572eb58-afc9-462f-b286-d53d7f6356e1",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "32765e29-a693-4d87-ad1e-a0f8d18fd2d2"
        },
        "item": {
          "id": "3b5f39f1-c407-4eba-ad1c-8b24d29a745e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "66862040-4260-4779-b6cc-1f207011e560",
          "status": "Not Found",
          "code": 404,
          "responseTime": 118,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e311b977-2504-45a4-8233-50013a832af3",
        "cursor": {
          "ref": "21dee50f-1b5f-4bbc-8891-7902d19ad6b8",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "70367197-d463-4bd1-be7d-dfab03c104d1"
        },
        "item": {
          "id": "e311b977-2504-45a4-8233-50013a832af3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5ed5bde6-44f3-4ac8-8cf9-c4732223a3e8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 61,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e0aa48-123f-4531-b7cf-c868dbd36475",
        "cursor": {
          "ref": "3867912c-00a0-4a38-883f-1525d9ebf970",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4470b54c-daee-40cf-89f2-14650a601ed2"
        },
        "item": {
          "id": "97e0aa48-123f-4531-b7cf-c868dbd36475",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "73c8dd75-f5d8-4138-b5bd-bbd8faf384db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55450f4d-46ca-4e46-9e45-1b0c144fa77f",
        "cursor": {
          "ref": "360aa6e9-a9ef-42de-86f0-a81ea4a0a60a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e29a09dc-f85c-483a-bc47-2eb6a410f446"
        },
        "item": {
          "id": "55450f4d-46ca-4e46-9e45-1b0c144fa77f",
          "name": "identifiers"
        },
        "response": {
          "id": "4b504e4e-28f1-450d-a182-bd4732422d3a",
          "status": "OK",
          "code": 200,
          "responseTime": 1292,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f752b7f8-466a-4d96-b221-1ffb2083d5c9",
        "cursor": {
          "ref": "c10cb0af-917b-488c-b02e-d3fb85dbcc6e",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fde36f3f-abbf-4f5c-b73f-2e2bc806781c"
        },
        "item": {
          "id": "f752b7f8-466a-4d96-b221-1ffb2083d5c9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "986eb1dc-dad2-43b4-8783-d78a55bd807c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0152745-6701-424c-b548-0c160432c710",
        "cursor": {
          "ref": "e4f0cf33-fe93-48a3-8ecb-695b0e7d82d6",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "be40c943-3458-4bb4-ad74-3f23e2460015"
        },
        "item": {
          "id": "a0152745-6701-424c-b548-0c160432c710",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "dc02accb-50c2-47aa-bbbc-1820027d4ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34760f4e-523f-4e62-9911-3e1405f0b884",
        "cursor": {
          "ref": "e4cfb549-8958-43e9-a8e3-e0da57aa1b67",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2761d3f6-4d8a-403d-adcb-27ffd719d95d"
        },
        "item": {
          "id": "34760f4e-523f-4e62-9911-3e1405f0b884",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f7a8001e-340e-49c4-ba39-52ccb4ea6910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb645fa4-946c-45bc-931d-e90162b74a15",
        "cursor": {
          "ref": "ef728db9-3063-459f-bda1-a7afd07001e8",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ab6c16de-0947-4f49-a064-3ca90fafac12"
        },
        "item": {
          "id": "cb645fa4-946c-45bc-931d-e90162b74a15",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "fa7b3ad5-0b0d-4806-9e7d-b7aee6ef9daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc6b580-8760-4410-aa09-fab072f75f64",
        "cursor": {
          "ref": "8b3d554f-a83f-45df-be6c-0d54e4b97dfc",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "509c893e-fddf-46c7-978c-917b76699c5a"
        },
        "item": {
          "id": "ccc6b580-8760-4410-aa09-fab072f75f64",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4356217d-20ae-48e6-ad0e-c442b0de59cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb5b959-29e1-4892-bc84-232120be3a23",
        "cursor": {
          "ref": "0e48dc81-0055-4fd5-9246-f73e2690246f",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "798a1175-d747-4831-86e4-d8bc15ff6c03"
        },
        "item": {
          "id": "beb5b959-29e1-4892-bc84-232120be3a23",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "23b3f7f4-ebfb-49bf-bf18-ba02968d6c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce0a71f-3662-44d4-9b76-ce5580d1f10f",
        "cursor": {
          "ref": "45207e98-0892-4f32-931f-9501a1549315",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "91d10846-f032-45a6-a0be-e934152c0058"
        },
        "item": {
          "id": "cce0a71f-3662-44d4-9b76-ce5580d1f10f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "50529227-8019-42c8-83da-ffb93e180e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37845e87-5fad-4185-9717-d1c86ae1267a",
        "cursor": {
          "ref": "f059b9b2-1219-45d4-ac46-10e77ee8376e",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0cd0de3f-7bfa-4594-aebe-427522c7bb52"
        },
        "item": {
          "id": "37845e87-5fad-4185-9717-d1c86ae1267a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "222f3821-039a-4412-ab45-73655ca4e134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15036eea-5cfe-4b2b-8896-d0cfe678b482",
        "cursor": {
          "ref": "c0307a15-60c3-4f4a-b96b-42403a6d3267",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c6d81a7a-2908-47f1-8a29-2615ec977441"
        },
        "item": {
          "id": "15036eea-5cfe-4b2b-8896-d0cfe678b482",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "aec21477-ed7e-4fa4-9264-78bb6917361a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f09a6c0-6dd5-49e9-b82b-6ee0ec61a9e1",
        "cursor": {
          "ref": "09e550dc-be84-4afd-a29c-44e6524fc304",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2ad980cc-677c-4b6f-bc86-22ea4b72cddb"
        },
        "item": {
          "id": "3f09a6c0-6dd5-49e9-b82b-6ee0ec61a9e1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e81e8b76-b558-4bef-ab06-cafb554c09b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c271c6-6e85-4889-9a7a-679c4fa3d8ba",
        "cursor": {
          "ref": "118611ed-469a-4fed-a401-81704e1ddf63",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5fc5fc27-e005-4faf-a8c3-e0d9ddc27f5d"
        },
        "item": {
          "id": "e9c271c6-6e85-4889-9a7a-679c4fa3d8ba",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6d86fcc5-6ef4-4fd9-8e83-35fa965c255f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9a74e2-c569-45bb-b9bc-d138cfd0d314",
        "cursor": {
          "ref": "c91f2b83-f4b2-49a5-b2df-25de639a02a0",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "530b8c0c-743a-404e-b673-d80150736b5e"
        },
        "item": {
          "id": "ff9a74e2-c569-45bb-b9bc-d138cfd0d314",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7f57f2cb-605e-4ae6-95a6-9590013f9ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debb094f-d24c-4cb7-adbc-8f15f7711991",
        "cursor": {
          "ref": "cb624cfe-f12c-4c36-8caa-868ece5d5fa6",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "090a4fb5-fb2a-495a-94b7-73df25b051fa"
        },
        "item": {
          "id": "debb094f-d24c-4cb7-adbc-8f15f7711991",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6984225a-f284-4714-bf66-fc740334b002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2136c774-bad4-41bc-98fc-af22d298c30b",
        "cursor": {
          "ref": "feb9466b-a0d5-484c-a652-e252424335e6",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "cf75a331-fa44-4f81-ab9b-decd663513d3"
        },
        "item": {
          "id": "2136c774-bad4-41bc-98fc-af22d298c30b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1465d6e7-3308-4c9d-94d4-384584182cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e04b59-0cad-49f4-ac3a-94cfc0bab0d9",
        "cursor": {
          "ref": "6eca5d6e-d44d-4743-85bd-e94c5e9a899e",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b529ecf3-02d6-45b5-a574-87fc00278be3"
        },
        "item": {
          "id": "e1e04b59-0cad-49f4-ac3a-94cfc0bab0d9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "796b8197-5605-44e0-aaed-ab413cfcb4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0daec9c2-9576-4149-b5c9-607627eb115e",
        "cursor": {
          "ref": "ea36e455-756b-4356-88b2-8075dbbfdc33",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "696a7e48-e7a9-4948-9f52-3ac0732fd074"
        },
        "item": {
          "id": "0daec9c2-9576-4149-b5c9-607627eb115e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0e4065b4-11ec-4e96-8ea3-7e92008dfddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263d8f49-d417-4ba6-8951-2f40eb503eef",
        "cursor": {
          "ref": "fd606912-dc6c-4387-a0f7-8c0b6fcc5bb6",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "84f1af88-932f-4fbc-81a9-5d9145ee29a7"
        },
        "item": {
          "id": "263d8f49-d417-4ba6-8951-2f40eb503eef",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7a67d655-557a-41fa-bc11-636ea641111f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd1e0ee-9810-49b8-95c4-11bb8faa2052",
        "cursor": {
          "ref": "fee49119-3fc4-4619-a8e5-f0c7521d8190",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a4e85357-7a63-47a5-9f2b-b72d27407f7f"
        },
        "item": {
          "id": "efd1e0ee-9810-49b8-95c4-11bb8faa2052",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2e8c8a02-fe99-45b4-8206-ad7c91910590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a6c440-1a44-4672-8088-cc69440a03c6",
        "cursor": {
          "ref": "18169701-dd52-45a6-9a14-87f8311f7375",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3c181d4b-a18a-4aaa-a0e6-7da450f9d04c"
        },
        "item": {
          "id": "74a6c440-1a44-4672-8088-cc69440a03c6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a5bbfb39-1cb7-46d1-bb20-b8cfbaa96157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2c6787-be1f-4454-ade1-8efc3eedd3a0",
        "cursor": {
          "ref": "84321779-f95a-4036-9018-2bfefa59ad1b",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "23ee147c-19cf-4c83-99a4-3a0713b66537"
        },
        "item": {
          "id": "bb2c6787-be1f-4454-ade1-8efc3eedd3a0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "db28934d-bbdf-4f7c-920f-48e4576c26c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25e91f0-9fdc-4e71-8808-8fac38e318bc",
        "cursor": {
          "ref": "2cb670e2-7371-479f-ae8a-a6f5eb89c619",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cc3ff139-b6b0-44f3-a184-6265235ded40"
        },
        "item": {
          "id": "f25e91f0-9fdc-4e71-8808-8fac38e318bc",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c57c2b28-a92e-438a-a354-7efd03eb1e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e5365c-7f83-4ef0-9d42-f88c99eb6b7e",
        "cursor": {
          "ref": "fc34483e-4935-4c29-a495-288f3b977113",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "409df2f8-0312-4d7c-a1ba-8768e8a5df83"
        },
        "item": {
          "id": "06e5365c-7f83-4ef0-9d42-f88c99eb6b7e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3979f0dc-e2e3-417b-bd86-78106bfdf787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97d3fe4-f9d2-48ff-8d24-7b4d8d29a08f",
        "cursor": {
          "ref": "716ec7dc-0549-4d42-8ee5-10ccfd0c7473",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9ac32cdd-e7eb-4404-be8d-4fd656b00e54"
        },
        "item": {
          "id": "d97d3fe4-f9d2-48ff-8d24-7b4d8d29a08f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "aeb94e3a-b859-4e34-9bd5-8b2120786574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22207359-cdd7-4c09-a91d-717876047f53",
        "cursor": {
          "ref": "55414c0c-2a1a-4499-add5-424ce0940ae2",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7ec1aa7b-2586-4afe-9d24-9bbfd9196077"
        },
        "item": {
          "id": "22207359-cdd7-4c09-a91d-717876047f53",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a49bbfd5-6451-4a7f-be4e-a2ebcfaf3f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9498f3-8bf2-4e08-963f-7ae4f27f6fe6",
        "cursor": {
          "ref": "977b5592-c08c-4e08-a327-d39f35c75eaf",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "69e0a620-05d5-4b41-9daa-c8832189b608"
        },
        "item": {
          "id": "7d9498f3-8bf2-4e08-963f-7ae4f27f6fe6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a6b01af5-e3f4-4be6-943d-44c70bfa8b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee0b141-abbd-4fd2-8031-6d846662e939",
        "cursor": {
          "ref": "b69fe519-ae55-4573-9a4b-acbd781c4cbe",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "45faaf1d-2936-4d8f-a6df-19cc50b0667c"
        },
        "item": {
          "id": "4ee0b141-abbd-4fd2-8031-6d846662e939",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f31c624e-a1d3-4dc7-94f5-2f308b1e374d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11338e80-2d66-4af6-953c-b2838c8c4aa9",
        "cursor": {
          "ref": "1c9a88e8-8930-4f71-a66d-a7ce540fd80c",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0431f651-feac-4c3b-a0d7-775bf10fff7f"
        },
        "item": {
          "id": "11338e80-2d66-4af6-953c-b2838c8c4aa9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a452f480-8d8c-4737-8f4f-1e5d5f92ba20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb86f36-4ea7-43fe-9183-d01cae613019",
        "cursor": {
          "ref": "38614700-d1e4-4a87-874f-fd5906c17e5c",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "38e89ec2-2928-48e3-afe2-ce46a8755d37"
        },
        "item": {
          "id": "ffb86f36-4ea7-43fe-9183-d01cae613019",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3bf201a6-c1d4-4b12-983c-bb19b8053c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9212fd64-4ee3-43cc-b2b4-7f65d35579cf",
        "cursor": {
          "ref": "00dcaf3c-1a1e-405a-b794-f7a1812682dd",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4c43075d-20f7-47b5-83d3-75090ba2e22c"
        },
        "item": {
          "id": "9212fd64-4ee3-43cc-b2b4-7f65d35579cf",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "448b5019-3af8-4d96-8a25-7ffc83292df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40983f2-471b-4805-9565-10f855f50910",
        "cursor": {
          "ref": "6420bf0f-328e-4364-ad62-3356ba2e6a9d",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d28dea81-6562-4d87-bec5-6d7718ef05a0"
        },
        "item": {
          "id": "e40983f2-471b-4805-9565-10f855f50910",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c7f70c91-0d09-4dce-8d2a-9b5a6d7fa9ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80336d3b-0a64-4f7c-9903-64ba392d66cb",
        "cursor": {
          "ref": "62a48a35-86a9-4d6d-9e0c-be67225b9dfc",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a81ad2c7-98b6-4710-9f63-2b0fa5692be5"
        },
        "item": {
          "id": "80336d3b-0a64-4f7c-9903-64ba392d66cb",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fdda7a42-d460-4dde-9a70-7f07c57da3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46147f90-52d9-450f-9243-9da8a18354ca",
        "cursor": {
          "ref": "9b2229af-f9e0-4fd8-951a-fc18f456aca9",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d0534f77-bb5f-4851-8337-dfae153fe4e5"
        },
        "item": {
          "id": "46147f90-52d9-450f-9243-9da8a18354ca",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b39bf077-292b-4f56-ae8d-89dc75e35b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fa2e10-f0f6-4458-91ed-5a4506aeb30f",
        "cursor": {
          "ref": "b543d678-7651-49e0-b621-70d42e5261e5",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "49859095-69c7-4c32-8ace-fcbd5cf40314"
        },
        "item": {
          "id": "58fa2e10-f0f6-4458-91ed-5a4506aeb30f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8da07484-aa5d-4f14-ae25-ec7697e6a8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5b6a19-9108-4274-870a-48520bc124c4",
        "cursor": {
          "ref": "d9c4add8-e490-492f-9f90-d25592400d98",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c66b1549-f25c-49eb-8af1-116c953aaa7d"
        },
        "item": {
          "id": "6b5b6a19-9108-4274-870a-48520bc124c4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "aa2482f9-71c9-47cd-87c2-fda4ce24c62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecff87f-cb9f-4589-8a85-764493cbedf8",
        "cursor": {
          "ref": "b2afc611-26fe-4a24-a316-e6bbc05505e2",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "068d217d-1a89-453f-b701-58be9f1be5cb"
        },
        "item": {
          "id": "fecff87f-cb9f-4589-8a85-764493cbedf8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "49f6fc05-6ac4-4fdb-86ab-adf6e320ab38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9dc953-a873-4342-86c4-8e50cbce0b79",
        "cursor": {
          "ref": "88c3c0b0-3cdc-443f-adb1-af255a47a668",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c4314304-462f-422a-92ab-dd26bbbb6b78"
        },
        "item": {
          "id": "be9dc953-a873-4342-86c4-8e50cbce0b79",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "df8153b9-41ce-40de-8cd2-cd6d818d1311",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1495,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db49e01-84c4-481e-b31c-7410d10c0d35",
        "cursor": {
          "ref": "56a76bfe-b445-4318-9d4d-e8618770638b",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9b9627dc-bf5f-4ae2-a992-e304a34ed9b9"
        },
        "item": {
          "id": "8db49e01-84c4-481e-b31c-7410d10c0d35",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3e211cbe-68ce-494c-aeac-d80e637d58b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c788c7-ec0a-4b08-8e66-09003196910d",
        "cursor": {
          "ref": "b72aaa63-1dd4-493f-a1d5-36ebc7b7b83f",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3d1b0c90-efaf-4b56-b3ce-aa80674c93aa"
        },
        "item": {
          "id": "b9c788c7-ec0a-4b08-8e66-09003196910d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "65445798-06db-4f70-9790-5372a09b550b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7bac46a-f144-4438-a9a4-5d5deca3c99d",
        "cursor": {
          "ref": "bbe66b8e-f9e0-4d9b-8d2d-25ca684a411d",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "765948af-311f-47e9-9f56-ca1262ff02ac"
        },
        "item": {
          "id": "a7bac46a-f144-4438-a9a4-5d5deca3c99d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "fe2f0607-7b70-4afd-8e9c-b670099b72f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ca98fa-080d-4c16-8431-015589f4a337",
        "cursor": {
          "ref": "8d6040a7-b24b-492c-8324-ed77626015ab",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0885cf50-f570-4d0c-a190-23293cd6f80f"
        },
        "item": {
          "id": "e3ca98fa-080d-4c16-8431-015589f4a337",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "54408a45-659d-446d-922d-ab520cfed1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542c224c-b33a-45c0-ad94-3a62dfda303f",
        "cursor": {
          "ref": "9568eef0-f681-4918-bb6f-d0c84327442e",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "197d2fcf-f176-4199-8272-63745034c953"
        },
        "item": {
          "id": "542c224c-b33a-45c0-ad94-3a62dfda303f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f5db509c-2b7e-4c1c-a8e6-417fc9658ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e89b64-65f0-4adc-9340-89fc31fbc2fb",
        "cursor": {
          "ref": "0cf06ff1-85f3-46a9-b051-ef7a1570c445",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c542dc21-9dca-4dc8-b620-6cd2108f55a7"
        },
        "item": {
          "id": "95e89b64-65f0-4adc-9340-89fc31fbc2fb",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b1d792a0-1c75-4654-b6c0-d533e0a0d7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf44eeb-bd75-4ad9-9e18-b5cfea02ed4a",
        "cursor": {
          "ref": "c9b4d8dd-4f2b-4952-8062-632924f7e604",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2036b25a-162d-4d8e-b70b-0d1450cba76d"
        },
        "item": {
          "id": "bdf44eeb-bd75-4ad9-9e18-b5cfea02ed4a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "45aa9635-f7a7-4a51-9c22-afd8755913c7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1505,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5118b5bf-5d8a-47dd-b9c7-e41fdbd1f4f4",
        "cursor": {
          "ref": "e9b038ce-7f23-4ca0-9036-b6db204c4301",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9d46ba61-9bd9-4191-a400-fafc9bb4b764"
        },
        "item": {
          "id": "5118b5bf-5d8a-47dd-b9c7-e41fdbd1f4f4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "94c57f98-72ec-4a9d-8b99-9caa42594269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d836eeed-57a7-4465-8e19-5c02558d350d",
        "cursor": {
          "ref": "30b45450-371f-44b3-9366-21c7132a579e",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2e1c44a1-4d67-401d-8b7d-81a254ff195a"
        },
        "item": {
          "id": "d836eeed-57a7-4465-8e19-5c02558d350d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b16cd3e8-5087-41d6-abf9-f08055d9f4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237b126f-027a-4687-8f74-8fe246872a45",
        "cursor": {
          "ref": "3ba43e45-3145-47ef-bdfd-30eba3cf6c92",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9ae724e1-8f9c-49cc-9a39-45dc95d0379b"
        },
        "item": {
          "id": "237b126f-027a-4687-8f74-8fe246872a45",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3b0b892d-0e13-42d2-b7b8-4f6988f2e8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0168b494-0721-4589-b85b-5ce26d4b697b",
        "cursor": {
          "ref": "7c1508e7-3c0f-4417-b6fb-5ee80bce9a3d",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "05932a2a-f567-4175-a9b7-faebe7f4471b"
        },
        "item": {
          "id": "0168b494-0721-4589-b85b-5ce26d4b697b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1b2cbd94-9131-4edc-b96f-5ec0ae491d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13297aab-fb7c-4825-af93-cf10d608e979",
        "cursor": {
          "ref": "f61959a6-f250-49a9-bcf7-5eaa8d091013",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b900d6a0-8605-426d-8e1f-0e24d48187f2"
        },
        "item": {
          "id": "13297aab-fb7c-4825-af93-cf10d608e979",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a7459df0-9e34-4641-8296-2ef0b6f7d85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1f30d7-fd6b-4ca6-95c4-14a28c567605",
        "cursor": {
          "ref": "9620e024-7657-488d-a903-302a325ee866",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "97b0d034-a00c-47d9-8f2d-eb2c128ab1e7"
        },
        "item": {
          "id": "6a1f30d7-fd6b-4ca6-95c4-14a28c567605",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "df75fc38-57f0-40a2-a23f-470422c72e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4f28a4-f644-4c86-bf81-a76acda8c19f",
        "cursor": {
          "ref": "60a3cf71-a45b-42d4-9f79-a18afdf66ca2",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "87069bbc-1a5f-467d-a0d2-ecc7a93c8787"
        },
        "item": {
          "id": "2d4f28a4-f644-4c86-bf81-a76acda8c19f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "cb9c7707-721c-42d9-bfa6-b0c07045077e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0e837d-92df-4151-888b-f119e1229ee9",
        "cursor": {
          "ref": "a390f4db-bb8a-4e36-b3e9-a172f6abc057",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3f5dd5a9-1166-41e8-9c58-5abf722baa29"
        },
        "item": {
          "id": "ea0e837d-92df-4151-888b-f119e1229ee9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8c872bc2-7d13-4e03-84d8-a60c95b47bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d1838c-9330-41d6-95b9-c960936d46c0",
        "cursor": {
          "ref": "e2685760-f57e-4ce0-a720-832968395b60",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "097164b8-f54a-4d5f-934f-8652428ed13b"
        },
        "item": {
          "id": "28d1838c-9330-41d6-95b9-c960936d46c0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "aaf9d635-0dd8-491a-ac2d-9cca47fa21af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75036ca-21e2-4582-907b-959083435002",
        "cursor": {
          "ref": "2236be2b-b5c3-491d-b848-0b33cbc83e9b",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ba4dc34f-eac5-4666-b529-3caa0d6e8d4a"
        },
        "item": {
          "id": "c75036ca-21e2-4582-907b-959083435002",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "584c70e4-4d6c-4315-b60c-47921415f3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b84f4ad-c999-454f-aa9b-2da254bba507",
        "cursor": {
          "ref": "98e3b74c-1484-4c08-8b02-089440417a11",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "01770be2-f99b-4186-b78e-20d24eff0e10"
        },
        "item": {
          "id": "1b84f4ad-c999-454f-aa9b-2da254bba507",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ff61ca70-7543-40f7-b6c8-35e5ef3b2d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa11e42-d53f-4ed8-90c3-5fcc11379077",
        "cursor": {
          "ref": "3c607a63-d7f5-41ea-92fd-b38efb31c385",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9b79db0d-95c4-4871-8720-10071bfbb0f3"
        },
        "item": {
          "id": "0aa11e42-d53f-4ed8-90c3-5fcc11379077",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e2fcac51-31a0-46a9-a42a-209eeaf8b49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce2e23d-a787-4cfc-95c8-9cdf94bc384d",
        "cursor": {
          "ref": "a2307f22-df68-470c-957c-80980f642bd7",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f83e4a33-5c91-40e1-9bef-f52ef2c95c4b"
        },
        "item": {
          "id": "5ce2e23d-a787-4cfc-95c8-9cdf94bc384d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1a70a9cc-ec4b-47a1-9fca-a63683d00484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e6b2b0-b2ac-420d-8f4f-9de3a8e1f31f",
        "cursor": {
          "ref": "7c02c79a-64ac-40bf-9bb9-139d54cd8f87",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "737ebad6-3359-4263-8779-fccd06ee6c67"
        },
        "item": {
          "id": "97e6b2b0-b2ac-420d-8f4f-9de3a8e1f31f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4748c676-592d-49fb-ade3-c647c5209ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ee57d5-c8eb-4d06-b18c-cb4c3f39f6f0",
        "cursor": {
          "ref": "d8ceebab-f164-48c3-92a6-9b1b7e9e95cb",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "23c892fa-0e84-4e20-8247-81cde73087be"
        },
        "item": {
          "id": "86ee57d5-c8eb-4d06-b18c-cb4c3f39f6f0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1adec473-cf9a-4231-952f-03f061781c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf4191b-c92c-4747-9d1f-16b80f02b772",
        "cursor": {
          "ref": "eb250a32-1a16-42f1-b7a9-bad231afb7c7",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9ef2c22f-343e-4da3-96fd-7cd9521f658b"
        },
        "item": {
          "id": "ddf4191b-c92c-4747-9d1f-16b80f02b772",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "394dae67-25d2-4485-b35a-6a357ec3041d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7fb7278-e4e5-4f64-accf-bdd63fe92a85",
        "cursor": {
          "ref": "ba5b073a-1db4-4e31-8feb-66e5e916fc6b",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e559b9fa-ee02-4a1a-947e-6a18f95bd7db"
        },
        "item": {
          "id": "a7fb7278-e4e5-4f64-accf-bdd63fe92a85",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7cedd6b5-fb6d-4ae6-97e3-54a01dca95bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b702a48-a483-460d-82d6-fd10a3fd7dea",
        "cursor": {
          "ref": "634c19c7-c19d-4e04-9785-9fc20285a162",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "99805bb6-3a84-42b5-a9fc-e347cf1fef73"
        },
        "item": {
          "id": "6b702a48-a483-460d-82d6-fd10a3fd7dea",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b991c8c6-924a-40bb-b53b-05fc84cae90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6548a00-8087-49d0-80ec-b726321f5fd0",
        "cursor": {
          "ref": "73c68a8c-ae71-44ca-aab6-6ad7744f6e2c",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "fee52671-b4cd-4708-b2d1-051959fe8b12"
        },
        "item": {
          "id": "d6548a00-8087-49d0-80ec-b726321f5fd0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ffb758e9-e02a-451c-8bfb-92a16e8241d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6773471c-8f99-4c5d-bd2c-6c3c678e0e1c",
        "cursor": {
          "ref": "d628abdc-d1ac-4be6-9a3c-cbb131319c5a",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c1c251e8-2495-42a3-97a7-e17eb06f0a83"
        },
        "item": {
          "id": "6773471c-8f99-4c5d-bd2c-6c3c678e0e1c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6d9aff7c-e58d-4d79-9f0d-ab18da84e8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ece017-c356-4202-ab71-caf2c13632b0",
        "cursor": {
          "ref": "9a825fac-3d14-48b3-8dc8-aa46b3d537a2",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "59b47f9f-064f-4229-a0fb-71cbaf62dc4a"
        },
        "item": {
          "id": "c3ece017-c356-4202-ab71-caf2c13632b0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c65c891a-77f6-4d4d-9f92-b408324551be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4321b452-8a83-4b2a-ae30-5a78ed437a34",
        "cursor": {
          "ref": "624861b8-3617-4c76-8d3f-70f8c8115e2d",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "92643069-f617-499e-9536-d7dc79ab2411"
        },
        "item": {
          "id": "4321b452-8a83-4b2a-ae30-5a78ed437a34",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "aa06b520-5bae-4c03-8c1f-1cbbc64fa6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8a934e-f59f-4a53-a325-bd71495c8d1e",
        "cursor": {
          "ref": "47b27705-1bca-4723-b428-700100935e82",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c5055a69-7ecc-4dc2-8d46-64755bce610d"
        },
        "item": {
          "id": "6a8a934e-f59f-4a53-a325-bd71495c8d1e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5a7e294f-d871-41f1-be0d-9e88b55a63f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1965f335-b133-480d-872e-2ef3bfb9f3e4",
        "cursor": {
          "ref": "58c27c21-ac93-4ccb-b972-c206c6782259",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "20d4779e-b29c-4aa1-ad5a-e8db7c7324a8"
        },
        "item": {
          "id": "1965f335-b133-480d-872e-2ef3bfb9f3e4",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d2f70dae-ae37-476c-8107-6756212d3315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4cd3cc-d098-4779-9b06-f9caa8b7a1ee",
        "cursor": {
          "ref": "c5261c6e-e966-4b5d-8633-a8aca342d782",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "43f5d3f4-ae34-489b-9e21-d0948a6f5928"
        },
        "item": {
          "id": "ed4cd3cc-d098-4779-9b06-f9caa8b7a1ee",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8cd3607b-566c-449e-8d02-da18684ba607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531983d4-29ac-4c49-835a-54128aa5b605",
        "cursor": {
          "ref": "9335f4af-4e00-42ea-b98f-6bcf4b153674",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "175a4050-1ffa-46df-9729-f7e78250c60e"
        },
        "item": {
          "id": "531983d4-29ac-4c49-835a-54128aa5b605",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1c77252b-850e-4fac-8dfc-45d2615a2c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d526fefa-d7e0-4c7a-bf2b-a3e882dcc972",
        "cursor": {
          "ref": "d2a79e97-b8d5-4539-ab94-d9d02119de8e",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4cff88d7-24ec-40a9-9319-a83b710e2bcb"
        },
        "item": {
          "id": "d526fefa-d7e0-4c7a-bf2b-a3e882dcc972",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e922be95-33d9-4bf9-be7e-1c853614c072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cdea77-bb4a-42cc-8e7a-0b1e49e95fdd",
        "cursor": {
          "ref": "385deefc-2701-446b-8aee-f009b8d1459b",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8dce29f9-b31e-4b79-bda9-8671e32dd99e"
        },
        "item": {
          "id": "26cdea77-bb4a-42cc-8e7a-0b1e49e95fdd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c23af33a-7a9a-4db1-984d-fe117c510b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebd1184-8901-443b-97cc-defdda680ead",
        "cursor": {
          "ref": "a651e8a2-ef32-4b48-a2fd-33e38b00bfdc",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0ab62fc2-0fc4-4f03-be5a-30cd6c1b5d1a"
        },
        "item": {
          "id": "9ebd1184-8901-443b-97cc-defdda680ead",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "673db5ec-5e3e-4d91-9aa7-4feae140fec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6366cf57-3a19-4e44-90ec-8a0419ad6bd7",
        "cursor": {
          "ref": "3fdf26ff-e335-465d-ba7b-6282b263346f",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9b75a785-4d9a-4949-87b4-c1205daf5712"
        },
        "item": {
          "id": "6366cf57-3a19-4e44-90ec-8a0419ad6bd7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c6ba928a-4ddb-4864-8e07-9c1daa05bbb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356ae03d-3ed4-445d-907d-66a0efb4e1cf",
        "cursor": {
          "ref": "282b5fe6-b979-40a5-9370-e36cb917c4e6",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a6c8f739-d9ff-4989-af19-15d7b8d9f7b4"
        },
        "item": {
          "id": "356ae03d-3ed4-445d-907d-66a0efb4e1cf",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9ec0f921-1a99-4ec5-bc8a-37268d40b05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3fb53b0-b261-4f70-8937-eb437e727cc9",
        "cursor": {
          "ref": "b02e2755-288a-46c3-8c95-663033a4aaa5",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5183247a-f1b9-4779-bced-30d69db3b2f5"
        },
        "item": {
          "id": "d3fb53b0-b261-4f70-8937-eb437e727cc9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a0581735-97a5-4fd3-9c34-652f6a1c2e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf029fb-e5ff-4b7c-a719-c228a14d49c7",
        "cursor": {
          "ref": "968106a4-1254-4d36-9984-5ac5f9db81c5",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b9f31149-8d84-4b1c-901f-27923db64173"
        },
        "item": {
          "id": "4cf029fb-e5ff-4b7c-a719-c228a14d49c7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "55853a62-6603-4e27-8dd6-439b11bbd87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021cb7eb-9034-45ba-8bf4-544a68babbc3",
        "cursor": {
          "ref": "875452a5-d6a5-475d-a109-8f4a1d3373ea",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8e95c1bc-d3c8-428e-ac95-5a310cb25560"
        },
        "item": {
          "id": "021cb7eb-9034-45ba-8bf4-544a68babbc3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0705f4f8-0368-44ac-a95d-1a17357ecef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ae736f-0689-4a94-a371-9e3cc8a0ebb3",
        "cursor": {
          "ref": "5b9b3839-a7a6-4f56-8288-d1ad797fcba9",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "06040052-50a9-458a-80ac-f8a4f2dac6c4"
        },
        "item": {
          "id": "90ae736f-0689-4a94-a371-9e3cc8a0ebb3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c243b1d3-deef-4dc7-bb2b-b7f7d1e300ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b879c5-fd49-43cd-b9f4-447131b4fde6",
        "cursor": {
          "ref": "301d5453-1a1c-4597-ba39-64093db645af",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "efcfc591-ff73-41f6-88b3-f1a598a1f311"
        },
        "item": {
          "id": "b7b879c5-fd49-43cd-b9f4-447131b4fde6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f802b2c9-b9a1-4989-83a1-27eb1b7d4a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01eb2c26-bac9-474c-b7ea-564a95fd2f2a",
        "cursor": {
          "ref": "c6fa9477-b99b-4cbb-ad37-1cd8c1eee8cd",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c76e4521-2893-4cc6-9459-c529b0ce8987"
        },
        "item": {
          "id": "01eb2c26-bac9-474c-b7ea-564a95fd2f2a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "616c7f2d-1b18-48f5-a5dd-48ae9f764612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7903c2c2-62b6-4f91-a615-6e2841ddd5b6",
        "cursor": {
          "ref": "d6c441d8-5546-4aaa-aa4b-b2e6ce545201",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "af67c74c-1b14-4aa2-9687-1fbbe546a06d"
        },
        "item": {
          "id": "7903c2c2-62b6-4f91-a615-6e2841ddd5b6",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "16d3777e-5cfe-465b-baca-cd6be3146428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68bf19a4-880d-4f42-a7c0-6bbcd22e7681",
        "cursor": {
          "ref": "2bbc5b03-2df8-4012-b934-3408a97d21f2",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f80de223-c140-4d89-98b0-72d0e0d49dbf"
        },
        "item": {
          "id": "68bf19a4-880d-4f42-a7c0-6bbcd22e7681",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f5ce9868-2b39-4c83-a1be-b7a361bd0f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb2df5c-119c-4631-b3b8-b42768d0935f",
        "cursor": {
          "ref": "eac176b0-d300-4c16-8248-06b40d088b1f",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1adcb5cf-1335-4479-8389-73e5bb792c59"
        },
        "item": {
          "id": "6eb2df5c-119c-4631-b3b8-b42768d0935f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "128e3049-4612-4a93-b785-0fb31e2a44cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8043c62-a611-4571-a1e1-0f7bb8f6c440",
        "cursor": {
          "ref": "49e8830c-8b12-4502-85a6-5638bd11cbf2",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4df9a703-97ca-44b9-9b65-a59284702b52"
        },
        "item": {
          "id": "d8043c62-a611-4571-a1e1-0f7bb8f6c440",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a5099117-66ec-4298-acf2-c0ffc372ac15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7407ea8e-7a7b-470a-8ecc-1a373200532c",
        "cursor": {
          "ref": "37214c32-1a33-4c21-b152-7ce88af0f8c8",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2ff2c607-0cc9-4608-8d02-14765141fcc7"
        },
        "item": {
          "id": "7407ea8e-7a7b-470a-8ecc-1a373200532c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "66ae17dd-bfc3-457b-82b1-313065e39c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f19597a-058a-42c6-a5cb-b1727a9be6d8",
        "cursor": {
          "ref": "f95c8820-72a8-4b6a-8d6a-14cfe3cfe110",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2aa2e00c-96c1-4fe5-9735-243dba81fd6b"
        },
        "item": {
          "id": "6f19597a-058a-42c6-a5cb-b1727a9be6d8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "34ae98d4-9181-4281-94ac-e9a14481ae99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a81581f-6a76-44e0-9246-c72c4aacf4ef",
        "cursor": {
          "ref": "03e7cfc1-4b6a-416e-bd7b-4b7b75709eea",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7bb8f806-044a-4889-a150-6a1a648d09be"
        },
        "item": {
          "id": "9a81581f-6a76-44e0-9246-c72c4aacf4ef",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "aa084173-73ca-44c3-9306-201a29a02b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47d8543-e12c-40a5-9fb5-e04986954178",
        "cursor": {
          "ref": "773f2cf4-b012-45a3-8c82-f0e1e5da6823",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "16bc2dc8-28fd-4bb4-a66d-836e065c39b6"
        },
        "item": {
          "id": "f47d8543-e12c-40a5-9fb5-e04986954178",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9f0b3f43-92bf-4799-8805-3b51d7c915af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be39876-be6c-407b-baaf-c8cce1c5b21e",
        "cursor": {
          "ref": "30b2e203-c1bb-4abe-b7a1-39c49c2d8458",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ef6419a0-a4a3-4b7b-a9df-cdd57e71ca3c"
        },
        "item": {
          "id": "8be39876-be6c-407b-baaf-c8cce1c5b21e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2f045492-bc6d-421c-a148-abe71e6bcda1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367e686c-d614-48f2-bbed-225f4bc436d9",
        "cursor": {
          "ref": "792a6251-f24f-414f-bf1a-e54ab21c7089",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "985a07b4-0346-4625-8346-650bf557d028"
        },
        "item": {
          "id": "367e686c-d614-48f2-bbed-225f4bc436d9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b4cf81b2-e96c-417b-82a6-c84ef72fb007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fc71ba-59a7-4334-87e4-ab9befd90b98",
        "cursor": {
          "ref": "c5b3e38a-fc0d-4195-a4b1-d1544de1359d",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1bddabbb-4f49-402f-96d6-09175ca63b4f"
        },
        "item": {
          "id": "c7fc71ba-59a7-4334-87e4-ab9befd90b98",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "21301de2-0460-42ce-aa4a-8ccb24aa3842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992c191d-6d4f-4f13-b4a4-e653c873d2ee",
        "cursor": {
          "ref": "ac6c3529-a690-4ca8-ab55-4f98e6cd5801",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ea815d88-e22b-4439-99a8-84e37ebfb288"
        },
        "item": {
          "id": "992c191d-6d4f-4f13-b4a4-e653c873d2ee",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "afe1d8a7-bd17-4aa4-b1b2-5aff3c5ef02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9a0619-8238-43c7-a608-3132e8f33225",
        "cursor": {
          "ref": "e5fc3b8d-2329-47e1-a748-a3897f31fb8f",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c286843e-3afd-4e24-99eb-a164955ac830"
        },
        "item": {
          "id": "ab9a0619-8238-43c7-a608-3132e8f33225",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1f618651-310e-42c9-91a7-1f10556ca687",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7a1fde-c0f4-4f74-9a94-920b205d9a1e",
        "cursor": {
          "ref": "5e9f8f0f-13bc-44fc-b85a-bf35041fc9ea",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9279779d-99a4-4d00-aaa9-7bd615e730a9"
        },
        "item": {
          "id": "bf7a1fde-c0f4-4f74-9a94-920b205d9a1e",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "856bd701-efa2-4a4c-87d6-45c0c8bd5537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "e2aab5e6-c539-45f6-ba09-e3548d984595",
        "cursor": {
          "ref": "8faaf532-a34f-4cbd-b9c3-28ad2c5a8836",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8bf620e5-13ba-439e-b7d3-e6160028eee9"
        },
        "item": {
          "id": "e2aab5e6-c539-45f6-ba09-e3548d984595",
          "name": "credentials_issue"
        },
        "response": {
          "id": "90be7b35-b59b-49f6-9fb8-862d63cbe146",
          "status": "Created",
          "code": 201,
          "responseTime": 9228,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "984506ee-c7e5-42bd-a5a1-240cf76676e4",
        "cursor": {
          "ref": "69e680bf-0ebf-42f7-b8ef-b3ad66d1f6e3",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "fc9d67e7-2063-42dd-bc51-d11ededea891"
        },
        "item": {
          "id": "984506ee-c7e5-42bd-a5a1-240cf76676e4",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f7744712-8f43-4033-ab49-31d83ec95988",
          "status": "Created",
          "code": 201,
          "responseTime": 8941,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "379f8659-614a-4446-a1e9-1395fba49126",
        "cursor": {
          "ref": "0f670c9c-c9ac-4270-91fd-b99bf20c25ec",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0247fb9e-85cc-448a-bebc-293151e8b56d"
        },
        "item": {
          "id": "379f8659-614a-4446-a1e9-1395fba49126",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4e3269e2-df51-4283-a57c-a0d11087e9d9",
          "status": "Created",
          "code": 201,
          "responseTime": 8927,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0347f2e-c1a5-4d52-875e-38ed100d8c7b",
        "cursor": {
          "ref": "34900c8d-bca9-4c22-93f5-bb30c5eac48b",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "678e40c4-c33a-4c7e-822d-2d7391e1580e"
        },
        "item": {
          "id": "c0347f2e-c1a5-4d52-875e-38ed100d8c7b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "deacdd8e-0566-4c9c-9f03-c6fabc139438",
          "status": "Created",
          "code": 201,
          "responseTime": 9249,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42cf80b-4e54-4770-be96-11653790fce1",
        "cursor": {
          "ref": "25bb6a70-466a-4ff0-9de3-2399697bd3b0",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a7eb70c0-f8f3-43eb-a9d3-d8802389d4a6"
        },
        "item": {
          "id": "d42cf80b-4e54-4770-be96-11653790fce1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "cef0ff53-b9d0-48b5-81b1-75316fa4fc8d",
          "status": "Created",
          "code": 201,
          "responseTime": 8660,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5b016b-c706-40ac-b718-96275e62c857",
        "cursor": {
          "ref": "a8d1bbef-25b1-4f5a-99f8-a7dd6668a01c",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d0217640-2f30-4212-a89f-5c309e30b410"
        },
        "item": {
          "id": "cd5b016b-c706-40ac-b718-96275e62c857",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "72d4109b-d452-4db3-a91f-f359cdbf92ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "1db641a4-0cbb-4971-be70-3eb914c1d5db",
        "cursor": {
          "ref": "5f6bd580-3a5e-4a06-8f5e-06b9d58afb69",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c8851b03-70d1-4563-93e1-5bd03af67119"
        },
        "item": {
          "id": "1db641a4-0cbb-4971-be70-3eb914c1d5db",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f657c342-ff9e-4bf8-9bcb-9c408c7c65fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06c9b6e-c938-4a74-8925-cabc663e420a",
        "cursor": {
          "ref": "b7c16c16-9957-45c4-823a-b266f4d73077",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "31699d20-b708-42c1-9507-382f077d8bfb"
        },
        "item": {
          "id": "c06c9b6e-c938-4a74-8925-cabc663e420a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c584076d-b9ec-4d4d-8cc6-a06ea4c487d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a5f052-51f5-4729-91ca-43b36c3068b2",
        "cursor": {
          "ref": "fa5be4e0-6c96-4108-915a-a3bd79db8b09",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b8bc65b8-a395-4ccf-84ab-75c16d47c695"
        },
        "item": {
          "id": "f0a5f052-51f5-4729-91ca-43b36c3068b2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e524d76e-6e92-4ec7-b295-966288af211f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fadcb398-4b70-4ee7-b5d1-d77a98bafaa2",
        "cursor": {
          "ref": "4024b419-5e48-495d-abcd-4519e62f7b16",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e8cf07bd-64a7-4bd2-8a15-5101112c1b5d"
        },
        "item": {
          "id": "fadcb398-4b70-4ee7-b5d1-d77a98bafaa2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0eed80e8-aa08-4010-9625-0079f5fc6de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ecdc7b-b383-4594-92af-1f3789a7c6ef",
        "cursor": {
          "ref": "c4c727c2-ba9f-4650-8e29-352213a96fb8",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fb845b1d-7836-4237-b41f-6af47bd83f82"
        },
        "item": {
          "id": "26ecdc7b-b383-4594-92af-1f3789a7c6ef",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7dd99376-4a00-4936-9489-bc4ea2cee072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace36e4e-54f4-4d8d-bf13-e6c928ae6c99",
        "cursor": {
          "ref": "f8aaa742-b5e2-41fd-baad-21f74bb63c86",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fb111ff8-cd07-478c-95cf-a2963751acac"
        },
        "item": {
          "id": "ace36e4e-54f4-4d8d-bf13-e6c928ae6c99",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3757bb6d-fdef-4bcd-bcb8-985d33f46e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f653084-5216-4b4d-99ef-6ff97e6cc5de",
        "cursor": {
          "ref": "dcb1ca6c-f674-436a-ab9d-8a45d02f1fab",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5325d686-4e49-448a-a635-7a993161bbe4"
        },
        "item": {
          "id": "8f653084-5216-4b4d-99ef-6ff97e6cc5de",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a4c0c84a-521a-4c79-9e1b-27e5d7956d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb650be3-41db-4d76-b8f9-25ba2975cfe0",
        "cursor": {
          "ref": "cd83211c-157d-4a48-873c-0156373988a7",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "addc4baf-7903-4c2b-aef4-5ca65ea7ad52"
        },
        "item": {
          "id": "cb650be3-41db-4d76-b8f9-25ba2975cfe0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b6981e16-044e-466f-8d30-9febd5e5a8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4930ca21-1863-49f7-b148-e100bd06ae30",
        "cursor": {
          "ref": "ba4b6caa-0d9f-4ce7-a3a9-18a7653d426d",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6bf8969f-6252-4ba1-b227-b86872bdc103"
        },
        "item": {
          "id": "4930ca21-1863-49f7-b148-e100bd06ae30",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1a5cbdfa-abbb-4cbd-a8e5-d96d5d286383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb68074-de7f-424e-96ac-c666958ddd6d",
        "cursor": {
          "ref": "a909924b-7905-453a-a66f-4fee89900afc",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "688e1ee3-8586-4c86-bf71-0c7acde8fa0e"
        },
        "item": {
          "id": "efb68074-de7f-424e-96ac-c666958ddd6d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b41ba39e-120b-4619-b66b-0dbbebbaae60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd95bfb-99b7-4106-8345-e7571363d047",
        "cursor": {
          "ref": "f22e65c5-dbe2-4923-aa2b-a9ad79e27d56",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "34398ea9-d38c-4976-a959-1b3335df5810"
        },
        "item": {
          "id": "fcd95bfb-99b7-4106-8345-e7571363d047",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "66b2287b-35d7-447f-9439-cc9fcd667e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424d91f7-8fee-4bc3-bc9a-1bf6e9a19f28",
        "cursor": {
          "ref": "efe3c954-73de-41b1-87e5-e8858911d69a",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cba8acff-6592-4915-abcd-4f892650314c"
        },
        "item": {
          "id": "424d91f7-8fee-4bc3-bc9a-1bf6e9a19f28",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "81a802b3-cda4-418b-a30f-7bbd036ef867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295dc46e-e45f-4afd-8fca-11f4edf7ee50",
        "cursor": {
          "ref": "c9f53520-0bce-4b5f-98d1-4bb368a1ac50",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7f9d643b-3b9a-4745-884e-4c5292041b53"
        },
        "item": {
          "id": "295dc46e-e45f-4afd-8fca-11f4edf7ee50",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "136e74ad-82c7-4a29-b9e0-9c6d0cab126b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4179d7-3f98-426a-969e-3c9fde2e0057",
        "cursor": {
          "ref": "22f260ba-95f6-491b-93e5-34f61394c906",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a09c88e0-bc3b-4fe3-88ee-47f5a7abad7d"
        },
        "item": {
          "id": "4b4179d7-3f98-426a-969e-3c9fde2e0057",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cb327f05-21c0-4cd9-82f6-ae611f3ffdf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd4788a-f54c-461c-99c2-cf6d913d1809",
        "cursor": {
          "ref": "52ab8ab7-d6e4-4c3a-a3a2-d4016d3d1afb",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "450f20a4-ad95-4337-972b-13f74a537030"
        },
        "item": {
          "id": "cfd4788a-f54c-461c-99c2-cf6d913d1809",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "97930593-d71e-4acf-bee1-9253b2dabe6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d040f3d0-57ab-49eb-b1bd-853ccc7474df",
        "cursor": {
          "ref": "4a75e083-5a97-43fc-a7dd-00fc98b68dca",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a18abc5d-4674-49d6-8005-ac9e1ec28a7d"
        },
        "item": {
          "id": "d040f3d0-57ab-49eb-b1bd-853ccc7474df",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7dd3d7ca-fadc-4ade-a5e0-d9f351dc6653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eab0dcf-b752-407a-b1d4-e280f9c7271e",
        "cursor": {
          "ref": "80a1b80c-2ab9-4768-94b7-a40eafb4a11e",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "940d7a30-031c-495d-a97d-20f908750f71"
        },
        "item": {
          "id": "0eab0dcf-b752-407a-b1d4-e280f9c7271e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a7bac77a-f9ac-4597-b136-ef86b8579134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92f2b36-44f3-43bd-a380-cd7790e91847",
        "cursor": {
          "ref": "252a9898-4ba2-471a-8ac4-1f9516d16fe3",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9d39a02c-3cbe-4530-8633-d0cf8dd55d82"
        },
        "item": {
          "id": "c92f2b36-44f3-43bd-a380-cd7790e91847",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "51635f87-4c76-45ae-b395-3e8d85bc1841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129672af-e4d7-46fd-be76-6709c131d261",
        "cursor": {
          "ref": "79154f20-f457-4103-be62-b16e7f33cbc7",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7ae04106-7cab-46db-9cb3-6e3432bfad69"
        },
        "item": {
          "id": "129672af-e4d7-46fd-be76-6709c131d261",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1af9e1f5-6db0-4a08-8469-6d9ef679c73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7ced04-21b1-47e0-92f4-345db44b8d11",
        "cursor": {
          "ref": "c347b4f1-e12b-4148-9bde-d6638228a60a",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "79291d2f-ba09-4fef-ba24-42c2f4638523"
        },
        "item": {
          "id": "9c7ced04-21b1-47e0-92f4-345db44b8d11",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2b3a41e5-c4d8-4314-b7b9-7536657695ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea23fd3-4fd1-47db-877b-3a8dff352de1",
        "cursor": {
          "ref": "4e751a0c-e3cc-4ab8-baba-6626fe29a464",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8fbf24fc-e921-4b0e-b154-a247bbc91a3e"
        },
        "item": {
          "id": "bea23fd3-4fd1-47db-877b-3a8dff352de1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2db0ca13-0a74-4ae9-9325-090faa093541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a22017-d751-481c-bb6f-13f4dfd8af44",
        "cursor": {
          "ref": "72da60dd-14a0-438a-a1ac-1c293133a259",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "024aea49-e407-42ed-be5c-fa2ce65f3cc3"
        },
        "item": {
          "id": "e5a22017-d751-481c-bb6f-13f4dfd8af44",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "316533e9-9df4-46e6-8d6c-b202e229cc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6cf4734-1662-417c-a6b6-2b2f866c54d8",
        "cursor": {
          "ref": "4211d6c0-541f-47d0-97ee-340a289a6060",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "51b2afc7-b18f-40df-9ab1-e535195b3185"
        },
        "item": {
          "id": "e6cf4734-1662-417c-a6b6-2b2f866c54d8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c5082aa5-5265-4725-b6a0-ab2f1c7fcec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf3d235-dd66-4ff2-8660-4f60970d0588",
        "cursor": {
          "ref": "10018d19-8d83-44f6-b009-20dcf0530312",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8aeda639-4728-42b3-a3b7-6772fa6b267a"
        },
        "item": {
          "id": "cdf3d235-dd66-4ff2-8660-4f60970d0588",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4f4509b5-bad6-4078-bc91-95851f031d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c47963-4a8a-492d-ac6d-2427d6251584",
        "cursor": {
          "ref": "ce1e42e2-ef1a-4550-a81c-fa7566439524",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c8fdb1aa-2321-4cab-a41f-708f36efb7c7"
        },
        "item": {
          "id": "58c47963-4a8a-492d-ac6d-2427d6251584",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "87f01fb5-3b03-4baa-b99f-66d055f1eacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19f8e87-80b9-4a4e-afe0-c3d40cc1e889",
        "cursor": {
          "ref": "c001428e-dda3-49ae-bf6e-6f656ef53157",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b8806d4a-06f1-4e54-897c-cde06aa07dfc"
        },
        "item": {
          "id": "d19f8e87-80b9-4a4e-afe0-c3d40cc1e889",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8ff74986-5e14-4ecd-9fe1-47e3b0656c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65219f57-0d0e-445e-861c-82562dccc426",
        "cursor": {
          "ref": "d0b4176a-e83c-44df-bcc0-4e8e27e738e2",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5c54ec44-b662-4f20-8f2d-4fa4508cbd46"
        },
        "item": {
          "id": "65219f57-0d0e-445e-861c-82562dccc426",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0d0697a9-0c98-46c8-b44e-0261b4cd5547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79c87ac-c236-433a-86d9-e526d7640303",
        "cursor": {
          "ref": "c4cb5b63-10dc-4d8c-b2e1-54fc50c09e70",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b78e3668-6cdf-4a9f-9eba-2453662c271b"
        },
        "item": {
          "id": "d79c87ac-c236-433a-86d9-e526d7640303",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8d8a3f0e-342b-4a13-a412-a32ca00e5eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5c00b9-94cf-4f16-8b11-0b47c028664f",
        "cursor": {
          "ref": "0c14f135-efa5-4db0-a593-ccd19cb481a7",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7d624211-8953-403c-bc1d-de8c7c001cff"
        },
        "item": {
          "id": "fc5c00b9-94cf-4f16-8b11-0b47c028664f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c9bbdcee-6a31-4fc8-a820-982d0ec55ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e4c208-a7cd-454a-a2d7-1fc0b73d61df",
        "cursor": {
          "ref": "5ebc2bea-d217-4cd7-a1bb-e44dff5e0647",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "459370a5-a953-4a61-8311-777d3a52ddbe"
        },
        "item": {
          "id": "02e4c208-a7cd-454a-a2d7-1fc0b73d61df",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a0073c7b-9ccf-4a8a-9688-6372a64bcb5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60df4bc5-8c0a-40a1-92f0-cfd4229381d0",
        "cursor": {
          "ref": "e6bd486f-f589-4962-8f06-c98aa2b3b973",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4877d7c9-6a5f-4747-9e99-5425b3265a49"
        },
        "item": {
          "id": "60df4bc5-8c0a-40a1-92f0-cfd4229381d0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "226ae8a1-3192-454d-b418-9b756b7acfaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9790aa9-18a5-4bde-80e7-c95c0292b05c",
        "cursor": {
          "ref": "3621c455-1387-4e52-8d04-7fabf796989b",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "34f648f1-a803-4f02-a6c9-36f0624497d9"
        },
        "item": {
          "id": "d9790aa9-18a5-4bde-80e7-c95c0292b05c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9ee79e35-42e4-4238-9522-ca90b65fe014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6558dc07-29a0-472d-9830-7108913b625a",
        "cursor": {
          "ref": "406d2f19-0881-4be6-9f55-fc236cb881da",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "09a6d68e-22e5-46fa-b63e-d66b641ac267"
        },
        "item": {
          "id": "6558dc07-29a0-472d-9830-7108913b625a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8ed82a1d-6660-4cc0-824c-58e4a2d882ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c111a44-b660-46a8-92c3-e26152aad9ee",
        "cursor": {
          "ref": "7434f4b4-e941-47c1-b421-fa7021d38bbb",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "499238c1-9818-48d9-9399-6da1bac2f8e8"
        },
        "item": {
          "id": "7c111a44-b660-46a8-92c3-e26152aad9ee",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "00bf9579-7973-4cce-a3a5-38c87c313ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f766d84-e4f5-4953-bb44-b1d20b8c7a0b",
        "cursor": {
          "ref": "9e080fe8-ada9-47ae-bbe7-c45390a08a3f",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9ea9aaef-5d84-47cb-b164-c8a91f989eaa"
        },
        "item": {
          "id": "9f766d84-e4f5-4953-bb44-b1d20b8c7a0b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cc9fa85e-f2dd-4550-acb6-cd0651f99fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d001b34-5925-4a75-8e82-09533632067e",
        "cursor": {
          "ref": "a09a75bb-2a4d-4d0b-8b61-50457929a971",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a6ed72cf-c117-4fda-a2ff-016b55d09c72"
        },
        "item": {
          "id": "1d001b34-5925-4a75-8e82-09533632067e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c63a58bd-ae5c-44ed-b02b-bbe98a2868b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989c7d97-7354-4619-b2cd-1909c7990946",
        "cursor": {
          "ref": "f1000cea-b614-40fb-8e50-1925f84341f9",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "939952e7-8979-4e64-a6dd-51922d50c7dd"
        },
        "item": {
          "id": "989c7d97-7354-4619-b2cd-1909c7990946",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "704b8d14-9987-4107-a537-4776dbb41577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fe0d16-0454-4322-88bf-4be6678c0cf9",
        "cursor": {
          "ref": "7a1674c6-4491-45c6-aed8-0a9fb3d63c06",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1b630766-b141-4cb1-9952-4755cfe3347d"
        },
        "item": {
          "id": "f2fe0d16-0454-4322-88bf-4be6678c0cf9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "df9b2109-025d-4983-b818-df70416f1ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214d9e0a-d5e6-4ea4-bd14-e8b9e1be8817",
        "cursor": {
          "ref": "17ca85a6-394f-4f29-b8ae-1c9342b87a18",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "db9e4961-2913-4a9f-aab4-3c85c106bd53"
        },
        "item": {
          "id": "214d9e0a-d5e6-4ea4-bd14-e8b9e1be8817",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8506bda7-8549-4820-8dc2-499083f83ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e306d1c7-1328-4df4-aba3-9d908f8ed65c",
        "cursor": {
          "ref": "4fa3c3a9-ded0-4f54-a451-78e769fa14fa",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7edbc91b-a287-4eb7-9539-fcb8d6389718"
        },
        "item": {
          "id": "e306d1c7-1328-4df4-aba3-9d908f8ed65c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4edb51a5-ddef-4648-b961-4c16eccce0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d20a1d-e91b-4ef9-955f-137013960098",
        "cursor": {
          "ref": "a53b3eea-6fc4-4bc7-8b68-c9952c5b4e3b",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "69a5ee02-0a0b-42cf-8724-f47fe667e20b"
        },
        "item": {
          "id": "e4d20a1d-e91b-4ef9-955f-137013960098",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1946efe1-a73d-4359-8ee3-47ce16cd1906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7f24b2-67bc-4ded-913e-b78c00d775c3",
        "cursor": {
          "ref": "229e754e-e305-435c-a5ad-56f5a4f43811",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2d6ed7b5-314e-4440-9c01-b535a3a7d0bc"
        },
        "item": {
          "id": "df7f24b2-67bc-4ded-913e-b78c00d775c3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f9d534ef-8086-497b-b011-6e16c218672c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cde632e-7c69-4713-8a88-af5bdc4e7928",
        "cursor": {
          "ref": "ddea7465-0e5c-46e3-883d-df640f1d23a4",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "89b659c1-af48-44b3-8ceb-f1bbebf7f3d0"
        },
        "item": {
          "id": "6cde632e-7c69-4713-8a88-af5bdc4e7928",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f9c5725a-726c-4ccc-acf4-dff824def321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a6cbdc-bf4e-4417-9b5f-b2b16e5911ae",
        "cursor": {
          "ref": "ed1c41ca-a501-4cb3-95f1-bf635e0e3f79",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9e015b5e-87fb-4405-b610-eb2ee32c7818"
        },
        "item": {
          "id": "c2a6cbdc-bf4e-4417-9b5f-b2b16e5911ae",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e9c397f5-5f8c-4c24-bbfc-954156e91cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35da0886-d520-4d33-90a0-0747ed914001",
        "cursor": {
          "ref": "ef0b751b-e2d0-4056-8f5c-c7b6ef2e4266",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7ce21329-09da-4508-9c11-7dce5d0dc821"
        },
        "item": {
          "id": "35da0886-d520-4d33-90a0-0747ed914001",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "408d9e05-ab52-46ef-a059-4bd20ffbd1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdc1c11-94d0-4789-bacd-844da1ba23a3",
        "cursor": {
          "ref": "4b6f3cd2-34f5-4ad1-aa15-88e18bb3a7e0",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3558b1ac-b17a-41ff-9a44-a734b7e04b64"
        },
        "item": {
          "id": "8bdc1c11-94d0-4789-bacd-844da1ba23a3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "054b9003-b32a-403e-bdd3-4d3a81079558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a4cba6-399f-4cd1-a99b-635693766f0a",
        "cursor": {
          "ref": "8f615f44-9890-407d-8f72-e60a94e83e4a",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "99120737-6977-4c13-8955-e4513a1b4fe9"
        },
        "item": {
          "id": "c3a4cba6-399f-4cd1-a99b-635693766f0a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c0cef991-df54-4f84-81d6-0bf3efbff83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cc33b8-b4bc-48ec-99eb-e5086207748a",
        "cursor": {
          "ref": "8940b291-837d-43f9-a652-0dff351ba68b",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "699e678e-c648-4cd5-b889-516c29d3b694"
        },
        "item": {
          "id": "11cc33b8-b4bc-48ec-99eb-e5086207748a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a7e98a32-58da-4e17-a316-c55bcdfee46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69cf78d9-f50a-492d-ac09-2a4bfb199918",
        "cursor": {
          "ref": "353497c8-d8af-4973-b88f-5c96ad60057c",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "778bad83-297d-4a5b-8f43-d41f0615f5cf"
        },
        "item": {
          "id": "69cf78d9-f50a-492d-ac09-2a4bfb199918",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ed5f57dc-89a2-41cc-acf1-1ca79a449122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726052ab-cf3e-49f9-943c-d936356387aa",
        "cursor": {
          "ref": "47272afa-74c6-4b04-8d7b-d38f2800bd4c",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8a3d28b0-72ef-4d0a-a801-0e5273ec4179"
        },
        "item": {
          "id": "726052ab-cf3e-49f9-943c-d936356387aa",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "884f053a-f7b1-4067-bc8f-06a4195aab7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0663a1f4-e874-48d2-b902-96be9357b6b8",
        "cursor": {
          "ref": "e21fee42-e07e-4755-ab48-18ac72305f05",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "42a97ac8-4ccb-412e-98a6-4ab293103448"
        },
        "item": {
          "id": "0663a1f4-e874-48d2-b902-96be9357b6b8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1a66c101-4e49-4422-8d82-f051a89c68d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31027123-e0ef-4237-8909-890902119bc5",
        "cursor": {
          "ref": "2c9ca58f-71e8-4756-aa8c-172acd72f2a3",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5fe204ac-0f55-48e0-868d-97defed9a396"
        },
        "item": {
          "id": "31027123-e0ef-4237-8909-890902119bc5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c060bac8-885b-4c02-82ba-0849fee026f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a47a4f-9613-405c-980e-c22f6995f672",
        "cursor": {
          "ref": "a3c4af5e-6c64-416e-9903-d6e7c4874a90",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b8891df9-c3de-424b-9e04-41f40e1ea352"
        },
        "item": {
          "id": "e6a47a4f-9613-405c-980e-c22f6995f672",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6774f340-0b65-49d5-bc01-e5f1b322e9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac2379d-b114-4465-9b92-50b82da78fa0",
        "cursor": {
          "ref": "7f6f0ed3-3666-41d8-8219-d5ede97eb5f9",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "de2f8fdc-3623-4bba-ae88-2f7540799ed0"
        },
        "item": {
          "id": "fac2379d-b114-4465-9b92-50b82da78fa0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e25b57cb-ef5d-40fa-a378-08b30cd619e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1286a34f-8dab-4986-9416-d8589404a81d",
        "cursor": {
          "ref": "00beaa9f-c515-4605-a3ac-97638e38b59b",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e5a07eca-9b8a-478f-94b6-dad3c3c83adb"
        },
        "item": {
          "id": "1286a34f-8dab-4986-9416-d8589404a81d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "89650371-2006-4212-8b31-cb271df4592a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5bf4e5-1a98-4757-a189-348ea178c97b",
        "cursor": {
          "ref": "8b4b8075-3249-4482-9f47-f06e9f1282a3",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b521f0dc-52ac-4dc9-8340-943a850e6ce8"
        },
        "item": {
          "id": "8f5bf4e5-1a98-4757-a189-348ea178c97b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a0556dd2-e42f-4c2d-bee8-b9d558be132f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59f9c02-5769-4aba-9452-1a174ab767a5",
        "cursor": {
          "ref": "5f540838-026f-40bf-9711-0a4eb1bfcc3b",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "82c25e14-6e1d-4a13-834d-5871d58db9a7"
        },
        "item": {
          "id": "f59f9c02-5769-4aba-9452-1a174ab767a5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "dbc6258d-cf03-4f8d-9181-94b3f3d911e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a4cb47-36e3-4a8b-92f5-44e95f8f9212",
        "cursor": {
          "ref": "f48790f8-495b-4d2b-9fc5-a3de779c901a",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b0dc3c59-42a1-4e0b-9a3a-9a7b90201a91"
        },
        "item": {
          "id": "b5a4cb47-36e3-4a8b-92f5-44e95f8f9212",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7c63fc69-f13a-468f-90a2-e4d4266286d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc556c7-dbef-41d5-89e2-81b2a54166c4",
        "cursor": {
          "ref": "f52ced1b-f539-45f4-8569-224b29d3bbd5",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8713393e-ec91-435c-8b57-0abad5b108e8"
        },
        "item": {
          "id": "8dc556c7-dbef-41d5-89e2-81b2a54166c4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fb3e17b6-af82-470a-a4f0-a0d3b2cb7fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8635f37d-e839-46de-b30b-5bafdc1430a2",
        "cursor": {
          "ref": "9d3fe62d-6e8a-49d7-bc17-fb96bc5c8ada",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f03a9769-333f-469a-b75e-22632308fcd4"
        },
        "item": {
          "id": "8635f37d-e839-46de-b30b-5bafdc1430a2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "927d36c7-ea39-4dc8-8ec5-98cfa3071bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f78f51-bea7-4283-b40c-54a26e3a2bce",
        "cursor": {
          "ref": "cab1a997-0321-42d6-8ba5-4ef4f3a293bd",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7c7eee90-9f9d-423e-a7a8-56a6cf4032fb"
        },
        "item": {
          "id": "d4f78f51-bea7-4283-b40c-54a26e3a2bce",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cea63f61-2dc7-42ef-a5e4-3a9fde90cb46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d00794d-e6d3-4a46-a97b-5729f49db207",
        "cursor": {
          "ref": "e56efb8f-49e2-4f03-b36b-a7ca7e575f2d",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "fae81c5e-bd67-43ff-ac68-db2da9d7f01b"
        },
        "item": {
          "id": "0d00794d-e6d3-4a46-a97b-5729f49db207",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5efb905e-0aaf-473a-a7cc-b2d6a387870e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d02784f-0fee-43a7-a65d-c3f1afb3cbc6",
        "cursor": {
          "ref": "137f7a78-9732-47d6-af64-5511b376ec29",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7f3dccdc-1ead-4800-b546-b8649bfde7b9"
        },
        "item": {
          "id": "7d02784f-0fee-43a7-a65d-c3f1afb3cbc6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "19dd28ec-2f2b-489f-a968-be11ee8d9426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9c36fa-24fe-4591-959c-2ea006d7afab",
        "cursor": {
          "ref": "e2a0ad1a-ab98-4160-bea6-2d98d42c97e9",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "71cb45d3-93f5-4019-b6c3-7ad115a9fda2"
        },
        "item": {
          "id": "1c9c36fa-24fe-4591-959c-2ea006d7afab",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "38758d84-5140-4724-ad9e-1aa2e69958e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5a6422-ca60-46dd-90d3-eb2851248ae2",
        "cursor": {
          "ref": "5f4f4bd5-eb66-4641-9e47-304fe5e0f7a1",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f69bd8c6-c95f-47e6-adb6-c571544f3bb2"
        },
        "item": {
          "id": "df5a6422-ca60-46dd-90d3-eb2851248ae2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "85c223ba-3298-4c58-9358-43627c985896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a71a24-536e-49e8-ac23-a8d9dec44a74",
        "cursor": {
          "ref": "a6f247e4-fc9d-4d43-8158-fa45185ccd1a",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ab97f47f-8de4-47a3-bcc3-a4398689a9b6"
        },
        "item": {
          "id": "56a71a24-536e-49e8-ac23-a8d9dec44a74",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a075c681-37ea-470a-8552-d23f658d0cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7058e9-5ff2-402f-a8e2-b9bcff4aca1e",
        "cursor": {
          "ref": "1d73d950-09b8-4239-8868-4a2f330c923b",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "429eb0db-b875-47ca-8432-16b0a365a16a"
        },
        "item": {
          "id": "3b7058e9-5ff2-402f-a8e2-b9bcff4aca1e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2e075b03-3207-4e23-8cc9-dfb1f7338ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50437387-b721-498e-9f74-c7f0aa5a569f",
        "cursor": {
          "ref": "6e46d398-9a48-4394-ab2e-f070f8f1ec11",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b0545d7b-6cc1-4b1a-9867-ca28b5017042"
        },
        "item": {
          "id": "50437387-b721-498e-9f74-c7f0aa5a569f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b813c29c-cc51-437b-82f4-fdf52fe2eee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a801d245-c72b-45a3-9899-0af5ebceb0e8",
        "cursor": {
          "ref": "50834427-838c-4725-90f8-ef7d842960b2",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "16605f44-cac9-4986-a9a0-f4b34dc4d2cd"
        },
        "item": {
          "id": "a801d245-c72b-45a3-9899-0af5ebceb0e8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "03900b30-3f9a-4519-be82-b136a475f276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd6bbf3-99c5-40ce-8be7-3c8298f621d9",
        "cursor": {
          "ref": "23a2b553-bd8a-4162-b411-af9ba34868e2",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "05eb2278-1f52-4b4c-9f4c-0fba96a705ee"
        },
        "item": {
          "id": "dcd6bbf3-99c5-40ce-8be7-3c8298f621d9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2e6c1688-3b47-4576-8106-740980376901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8a0472-da7e-4950-8c55-f76095636d03",
        "cursor": {
          "ref": "93c8f3a3-b01c-4138-ba51-f700a0e32d7f",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "cae4aa27-1a41-488f-861e-a304a2144aea"
        },
        "item": {
          "id": "ae8a0472-da7e-4950-8c55-f76095636d03",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "df628f52-87e2-4ae9-ba75-980e35805e19",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3719c0dc-0c5d-41cb-a588-68f318ffa782",
        "cursor": {
          "ref": "b5756020-09df-4509-a508-3f5bd30c67c7",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "474638f2-5ca3-4025-a010-a0d4a51ddfa9"
        },
        "item": {
          "id": "3719c0dc-0c5d-41cb-a588-68f318ffa782",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "977d1ba1-f105-4ba6-8897-0a1c63fe2611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd42defe-a7be-42d1-aac5-cdd5f6ea5a5b",
        "cursor": {
          "ref": "3bdd07f1-b692-4c90-a369-38d3f9c54d3d",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c270c028-c748-43e0-94f7-31a1567b11d8"
        },
        "item": {
          "id": "cd42defe-a7be-42d1-aac5-cdd5f6ea5a5b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f69cb3af-bc22-4c9c-87e6-e7749a468200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56694ed-9a10-4c7b-a186-c469975733c4",
        "cursor": {
          "ref": "2b39ad83-c78a-4752-9886-12de271d9ea4",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8aa1cff6-3fd9-4e12-885a-52cde8559d9b"
        },
        "item": {
          "id": "a56694ed-9a10-4c7b-a186-c469975733c4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4728c42f-810a-42cf-aebf-d61c6d25dba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4091a9-8455-49ae-8e24-5f2aa676b269",
        "cursor": {
          "ref": "c572bc72-e89c-48e3-9c46-bc908c5f6509",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "78a1aec1-3a9c-4526-881c-2c02458ecf8b"
        },
        "item": {
          "id": "ba4091a9-8455-49ae-8e24-5f2aa676b269",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cd2e9dd2-af95-4e68-a164-9b7bb1f9c52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25483aba-3bbe-48b4-b1b9-471b9d3fe9c5",
        "cursor": {
          "ref": "ddcf1346-4fe6-487a-840e-d03f32e13a59",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b4e7c642-15e0-4184-9326-ae190f1311c4"
        },
        "item": {
          "id": "25483aba-3bbe-48b4-b1b9-471b9d3fe9c5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "158c16be-5fa2-48ba-96a1-65278b5caf10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3083fa38-955e-4203-acc4-c31d2ad21e50",
        "cursor": {
          "ref": "ad94009f-6b84-47c7-85a5-62ff261bdf1a",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3a859e7f-06f3-4991-b697-95c46d1335b9"
        },
        "item": {
          "id": "3083fa38-955e-4203-acc4-c31d2ad21e50",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "33b08762-c219-490b-bb5a-80d8cf842f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8964e01-4cd1-4c58-88d0-72a38dd43d1a",
        "cursor": {
          "ref": "2194c759-752c-453a-abc8-317596c7353e",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3753a977-6dd0-4ce7-9fc5-238d7fc26726"
        },
        "item": {
          "id": "c8964e01-4cd1-4c58-88d0-72a38dd43d1a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2f4b8c3b-be15-419f-b560-e336b277bd4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd47165-e357-4cf1-90ca-2580796e4625",
        "cursor": {
          "ref": "1f526ee0-a451-40f2-a5d2-5694553fa7c5",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "03231ce6-9c8c-4524-b030-0dec317aae5e"
        },
        "item": {
          "id": "6fd47165-e357-4cf1-90ca-2580796e4625",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "05eda7a7-d6cc-49ed-8687-45f2af996cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5e72ed-f7b7-4645-b0ac-d11bd9c6a289",
        "cursor": {
          "ref": "657cf37b-ab7a-4c02-bc5c-8e818d185bbd",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ac0b87c3-cfa2-477c-80d3-61ba23edd5ee"
        },
        "item": {
          "id": "4d5e72ed-f7b7-4645-b0ac-d11bd9c6a289",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4c73ff8d-0d95-4731-bb16-3c8fc1d3510e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb067551-a5de-455e-a85b-e607f3f2488d",
        "cursor": {
          "ref": "d93a4d57-50d0-4125-99c9-beef23863cbb",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4d180927-cce6-4448-9e05-6d8cc763bbdb"
        },
        "item": {
          "id": "fb067551-a5de-455e-a85b-e607f3f2488d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "44181569-1cfc-4d97-b6ed-c90c7c406fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad79ccc9-a3c3-49ea-a3eb-3a30e7745eb9",
        "cursor": {
          "ref": "6722eaa0-4ba8-4ace-a493-fcc49dca3208",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "871b57dd-a411-4bc6-bd0e-39a036ca320c"
        },
        "item": {
          "id": "ad79ccc9-a3c3-49ea-a3eb-3a30e7745eb9",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "95b28318-561a-4284-8a88-6986a4063a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444a0eb3-13cb-424d-855c-1b48dee92728",
        "cursor": {
          "ref": "315d5986-ccd8-44e8-af1d-15de9f76279b",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "deaef22b-65b1-45fd-a723-67eec41433ca"
        },
        "item": {
          "id": "444a0eb3-13cb-424d-855c-1b48dee92728",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d5f9c31e-9e78-487c-9a21-4ff4d1151ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560a5377-0f8f-4c53-aad0-ef13e86925cc",
        "cursor": {
          "ref": "99c49354-5e74-42e6-9045-d1ba861c61e2",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "55fc8af4-82ea-4321-a823-5b88eb9ad41c"
        },
        "item": {
          "id": "560a5377-0f8f-4c53-aad0-ef13e86925cc",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4748c748-cdc2-4929-a052-a5dc206405d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4709a6b-50e9-412d-a54e-7840338d02b8",
        "cursor": {
          "ref": "6a8abdec-8b53-4e75-ad76-2e5a816cbf18",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "181b3701-d43c-4876-b4ca-7a78b4d370f1"
        },
        "item": {
          "id": "d4709a6b-50e9-412d-a54e-7840338d02b8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9be8c1f6-2bab-4cde-b3e8-c05fa70123f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a286d81-c2f6-44f3-8f4f-ce16048d50a2",
        "cursor": {
          "ref": "0dda20bd-636d-47d3-8134-1aa14b975708",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "efc1bba6-0c86-4f15-a8c1-d82bc7d75402"
        },
        "item": {
          "id": "3a286d81-c2f6-44f3-8f4f-ce16048d50a2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c9e98433-1f23-497a-9a12-bd73128acdb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4bad8c-4f87-4551-a595-44554c880b85",
        "cursor": {
          "ref": "48444a23-83f5-44ea-93c5-b6a6c6801979",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "44098ec2-e9ca-4f16-9129-07bfc26665f6"
        },
        "item": {
          "id": "1c4bad8c-4f87-4551-a595-44554c880b85",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "311075dd-8a33-43cc-a270-c4d05843bc8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d19b7f-195b-4f40-b2c1-4b5b9be38671",
        "cursor": {
          "ref": "4a52b8c3-6e6d-4924-b7f8-3e04042a5768",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8f774922-df39-44c5-a903-485aa68a9ce3"
        },
        "item": {
          "id": "64d19b7f-195b-4f40-b2c1-4b5b9be38671",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f258bf89-f115-471c-802d-2b5ff8ae66d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3a7e61-bec3-413f-a9c4-6034eee98bd5",
        "cursor": {
          "ref": "5b658d58-398c-45aa-9519-7d61def8688a",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f513c074-9081-4e4b-a28c-f59aae52b816"
        },
        "item": {
          "id": "8c3a7e61-bec3-413f-a9c4-6034eee98bd5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0313d2ea-0190-4b90-b26b-1e566e6addde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0cfdf1-5645-4b18-958f-5889c312ea6e",
        "cursor": {
          "ref": "39cbeb5c-3039-4fc5-972b-b1dbbbda9868",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ff8ec020-a620-40c0-8d1c-cd9769bdda79"
        },
        "item": {
          "id": "1a0cfdf1-5645-4b18-958f-5889c312ea6e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7a8cad3d-f9ac-48be-9222-023277878797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a7da2d-07ff-4ddc-9dc5-c8127a961c81",
        "cursor": {
          "ref": "e222148c-cb68-4539-9501-83853e7ede26",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f80280e6-e5b1-47a7-b2ea-5c4c3c2bb8bc"
        },
        "item": {
          "id": "17a7da2d-07ff-4ddc-9dc5-c8127a961c81",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "222d4123-8212-46ce-bd1a-ff99ff952f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0da8ac8-13f1-4e38-ba2f-6969dc2907bf",
        "cursor": {
          "ref": "aada3358-48e5-416f-b2d7-ccac92b4573a",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "04e529bc-7181-43a8-85d4-6afc3b7179bd"
        },
        "item": {
          "id": "d0da8ac8-13f1-4e38-ba2f-6969dc2907bf",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9245f2b3-029e-490e-a807-6c65e2d9f471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6fe33a7-d268-4279-87c0-9e249209af05",
        "cursor": {
          "ref": "512ea949-e131-497b-b69b-23e990c6ba62",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "094d4822-7ab5-416f-a94e-823e9c1646cd"
        },
        "item": {
          "id": "b6fe33a7-d268-4279-87c0-9e249209af05",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f374e968-348c-405b-bcf0-a6fc8e32db53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7caa3e-5e40-4048-893f-456503fdc902",
        "cursor": {
          "ref": "15b9ff31-bbde-41b7-9299-af2f2023338a",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "535d684d-7f2a-4c3f-baf0-0aab9704f73f"
        },
        "item": {
          "id": "fb7caa3e-5e40-4048-893f-456503fdc902",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "68a95f14-f00f-4c6b-a986-b9a9bc1ca9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8c4e8e-f627-47df-baba-45e892f6d3bc",
        "cursor": {
          "ref": "08523dd0-53c3-465c-bbd2-c77b85fdf8e7",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "00d640d7-3343-4342-afe4-75151afa9449"
        },
        "item": {
          "id": "7f8c4e8e-f627-47df-baba-45e892f6d3bc",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f5c8535b-0793-4fe9-9db2-15bb19f87de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc491fa-b7bd-474a-b946-aa8a5272d130",
        "cursor": {
          "ref": "b6852f4f-e5ae-43cd-b493-2bdc4f097f67",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "929b083d-99dd-49f2-bbb0-ed774a1f896a"
        },
        "item": {
          "id": "ccc491fa-b7bd-474a-b946-aa8a5272d130",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d0d60fdb-2583-4307-8243-e254f9d210fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fbe7ac-3165-438d-a1c2-9dfe4a305095",
        "cursor": {
          "ref": "feec59fa-41cd-461d-b73e-f625ec71cdde",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1aebd173-e952-40ce-9916-877e31713c53"
        },
        "item": {
          "id": "10fbe7ac-3165-438d-a1c2-9dfe4a305095",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6891d210-bdf6-492b-9c42-6fe69d4c07b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9fbb23f-7a36-4170-8daf-97d7665e63ff",
        "cursor": {
          "ref": "0dbe18a7-e6ab-4685-b797-5966c83eba82",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8ff27bbc-0111-472a-bb63-5423cab4bd98"
        },
        "item": {
          "id": "e9fbb23f-7a36-4170-8daf-97d7665e63ff",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bfad3434-5201-406f-843a-c967112dfaf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5d9a93-3f71-409f-bd23-dfd66935ea0a",
        "cursor": {
          "ref": "3a9ed0c7-b986-4cd7-b67d-6dd96e528e08",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "bf2ca94c-8f5b-4447-a15f-9336ca2e0317"
        },
        "item": {
          "id": "fb5d9a93-3f71-409f-bd23-dfd66935ea0a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7114bbde-0323-417f-be4d-4196f551a239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad955115-ea51-4e7c-9ee3-0cbfb7dff522",
        "cursor": {
          "ref": "9cd063a6-6d42-42d1-9528-698000f859ed",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "396c8664-2562-43d2-adee-c230682bf13f"
        },
        "item": {
          "id": "ad955115-ea51-4e7c-9ee3-0cbfb7dff522",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7979d283-5a1d-47a4-94da-04fde856f6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af402da-b351-4e4a-9736-b40fc0ec4696",
        "cursor": {
          "ref": "9a5d1322-27b4-49c1-8e57-4fc4a611216b",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7e4d9754-de60-43bd-96af-e4eaf1a24940"
        },
        "item": {
          "id": "4af402da-b351-4e4a-9736-b40fc0ec4696",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9eccadad-b31b-4b10-824f-0d6a6c37c0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb61eeb-36ac-403b-bd21-fbff26c22ef1",
        "cursor": {
          "ref": "9e931149-69b4-481c-89fa-bd35383680ce",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1f93ff6d-161b-4d0c-9e83-6818fdbed93d"
        },
        "item": {
          "id": "efb61eeb-36ac-403b-bd21-fbff26c22ef1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3070c412-d577-402f-9bdb-fb83af38642f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a915e1cf-9835-48db-938b-559c20070704",
        "cursor": {
          "ref": "78bcfdf7-a5f4-4344-9060-805dda3888cd",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ec70a9f3-411e-41a8-82f1-fc37978d32ef"
        },
        "item": {
          "id": "a915e1cf-9835-48db-938b-559c20070704",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2d891996-c2bc-4268-9d18-08199e73597e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420f2880-6889-44e9-89b7-0848c081f009",
        "cursor": {
          "ref": "d3318ac7-9580-49bc-886b-daed80d76b68",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b10fd01c-e5c4-4fca-9e6d-e622101d0c8f"
        },
        "item": {
          "id": "420f2880-6889-44e9-89b7-0848c081f009",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5e3c327e-775b-4bbf-85fb-a8fa415e8750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48be918-6376-4324-bfcc-69fda57fbf96",
        "cursor": {
          "ref": "bbf0d837-04c5-4dd2-8bfe-98a56d5571bb",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ce1acea4-fb15-480a-beb7-d1b626e15852"
        },
        "item": {
          "id": "b48be918-6376-4324-bfcc-69fda57fbf96",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f0b85cad-e7ea-401e-a0d5-c80b6fa3d675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93cb7eae-1f2b-4618-bd08-4789a95c4840",
        "cursor": {
          "ref": "27059bb6-1fc4-48eb-824f-a0c94baab305",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "712f6e15-229e-4bd7-891c-24dbc2429a32"
        },
        "item": {
          "id": "93cb7eae-1f2b-4618-bd08-4789a95c4840",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d29200e6-166c-4fa7-bb3b-636041b46031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9e7afc-f3f6-4425-a875-16b8d9b60301",
        "cursor": {
          "ref": "a6fc423c-4658-4a79-a863-28d2c0d4af38",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "33a2ce7a-14bf-45d5-bab5-61bd4032c520"
        },
        "item": {
          "id": "db9e7afc-f3f6-4425-a875-16b8d9b60301",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d7bceefb-070b-4585-a4b4-df0911947d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc71189-7452-49e8-8543-e4c16e2ea55f",
        "cursor": {
          "ref": "8a3de26d-99a1-4df9-b958-789b153506a6",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f05d13a0-4054-4b0e-96b4-a692c787db20"
        },
        "item": {
          "id": "4dc71189-7452-49e8-8543-e4c16e2ea55f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7ae12550-5de4-40b7-8252-ba81ffddd52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d7f04b-0ffd-4789-8a43-ac1c67a51ae5",
        "cursor": {
          "ref": "a795ab7c-714d-4229-b781-9817418bbd56",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8c32f530-ef98-42b4-bb68-d82d900a2ac2"
        },
        "item": {
          "id": "51d7f04b-0ffd-4789-8a43-ac1c67a51ae5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ad6638ea-b32f-4cfe-88d7-6ceb4496fd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b55935-fd67-4a27-82de-6151833919af",
        "cursor": {
          "ref": "fb82d1e5-c5b4-43d8-a31b-3f3ff1491c0f",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "dfc01aea-955f-4a78-8d8e-7d5abcfdab69"
        },
        "item": {
          "id": "73b55935-fd67-4a27-82de-6151833919af",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "07bc960d-1ea2-4f14-bc09-415576f0ceaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f88245-d6bb-43a3-9f7f-1c7cad589900",
        "cursor": {
          "ref": "670f167f-3a9d-4135-bfac-67f2ab95dd19",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "606730ef-24fb-4870-ab2a-3b7d40438481"
        },
        "item": {
          "id": "79f88245-d6bb-43a3-9f7f-1c7cad589900",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "75d20daa-e8bd-48dd-82f5-194d74ded100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6168892-2d1c-4976-853e-59a564f7c5c1",
        "cursor": {
          "ref": "68af089a-e76a-4659-a30d-d080f661f3e0",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "70e952fc-81c7-474a-a427-aa8e972397fd"
        },
        "item": {
          "id": "f6168892-2d1c-4976-853e-59a564f7c5c1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c4899667-73c9-4997-a850-4554da5f312d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073216c4-84f7-49f2-be96-fb9fb41959ce",
        "cursor": {
          "ref": "963a4130-682f-4e7f-8799-e608c7630958",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "879ff562-2988-4ed2-8904-c7fc8a600b75"
        },
        "item": {
          "id": "073216c4-84f7-49f2-be96-fb9fb41959ce",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "06f8f9c1-5299-4d23-bf5f-a8947b7aebe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a778a7-3a3a-460c-9801-5cb4fb709ef8",
        "cursor": {
          "ref": "bb21c185-d49c-4796-b5eb-62c19e2a5e28",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "298c9024-1601-4f84-8d3c-9d92048a864a"
        },
        "item": {
          "id": "52a778a7-3a3a-460c-9801-5cb4fb709ef8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c53dc3b6-ce80-4197-a996-8f2cdf7e3fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c529b570-c7ac-4d89-8f2a-d353d5a64be5",
        "cursor": {
          "ref": "9ef6b038-be8f-4f1d-8f9f-9610aa733ba7",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c9473f1b-1b09-4db3-8290-1162280a37e3"
        },
        "item": {
          "id": "c529b570-c7ac-4d89-8f2a-d353d5a64be5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9ed49178-e135-4cee-ba02-0a4acddaaaa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b01622-fdd9-493a-8c71-b9a5654437fe",
        "cursor": {
          "ref": "d69449ec-65fc-41ff-9761-5152564af208",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d383b37b-856d-48fb-9029-a066c7a534e0"
        },
        "item": {
          "id": "81b01622-fdd9-493a-8c71-b9a5654437fe",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5aeada24-3091-4490-9b80-319d538efa52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ebfb4c-ddd8-490e-a1fd-ca712960af71",
        "cursor": {
          "ref": "cc92dc45-ba6b-44cf-b635-03c078f4afa2",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "68b10011-f418-47cf-bb4d-41f59441ba68"
        },
        "item": {
          "id": "86ebfb4c-ddd8-490e-a1fd-ca712960af71",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d4bb2918-cc26-4666-87cb-4dc2c52c79ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2d5fc1-c351-4677-8d7b-3a2d90932c55",
        "cursor": {
          "ref": "2ae0fe28-12e0-4653-94a9-41c1ba5f8b02",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2181a682-3b08-47f5-a7a8-9aa56b85f079"
        },
        "item": {
          "id": "bb2d5fc1-c351-4677-8d7b-3a2d90932c55",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "57e38f57-edd8-48a1-94d3-5e14229557da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb69793b-94be-48f3-b40a-5757ca704903",
        "cursor": {
          "ref": "364d0cc1-83d6-43e5-98e3-3ae829b3822f",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c2b98aa4-851c-4c35-b7ef-0a2579ad8698"
        },
        "item": {
          "id": "fb69793b-94be-48f3-b40a-5757ca704903",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "06cceeb8-8bc3-466b-858b-6973877e5d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87440803-c349-4570-aa4b-e482e9fee704",
        "cursor": {
          "ref": "3e23bfa2-55fe-41af-bb9e-e61d34a5533f",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4ba1e1cf-ee1c-41a0-b6e0-a039c24aa9ed"
        },
        "item": {
          "id": "87440803-c349-4570-aa4b-e482e9fee704",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "327514a9-6c2e-4010-afa6-742cdb5a0193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7834a513-a195-4172-9c8c-88369872d580",
        "cursor": {
          "ref": "09a97bac-8c70-4f7a-a3e8-39b8bf7d3d58",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9acfbd85-1a8c-4620-9cd5-78ef451c7e8b"
        },
        "item": {
          "id": "7834a513-a195-4172-9c8c-88369872d580",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ee4ff2da-61c0-4412-8b37-8a73ae02b5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b6c6b2-4811-4c9d-abf9-0ac753f01120",
        "cursor": {
          "ref": "ff930c8c-e1b1-4cd2-bf8a-73552f645e63",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b83f26a8-42df-4684-aad7-1a29989abfdf"
        },
        "item": {
          "id": "91b6c6b2-4811-4c9d-abf9-0ac753f01120",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "54da0066-7b82-4957-b9d0-3e10b0e0653c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c63ea9-dd9c-4b3b-b765-6cda4bc30136",
        "cursor": {
          "ref": "f3a96c2c-80f9-49c8-b858-913241392fac",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f3ee4385-63ee-4501-a709-cd843c216e03"
        },
        "item": {
          "id": "08c63ea9-dd9c-4b3b-b765-6cda4bc30136",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0fa70e06-5c26-40ee-b7ee-1a67e35db7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b201641-0884-43e0-9a5d-22e9711e4b21",
        "cursor": {
          "ref": "18a1eade-b1a1-4617-8567-01abcd1e002b",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ff727344-3ebd-4b28-b8e7-51c4a777d3df"
        },
        "item": {
          "id": "2b201641-0884-43e0-9a5d-22e9711e4b21",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "dfbafcee-1874-4779-923f-46e54d9c81c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f989251a-53b6-4768-826f-2600647dad78",
        "cursor": {
          "ref": "7f2af671-1074-48cf-8cd3-66f28acb0695",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d72c59f9-eda7-472d-a042-2f97c59ca477"
        },
        "item": {
          "id": "f989251a-53b6-4768-826f-2600647dad78",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8cc0d3b1-6636-4882-9c54-c54bc7794714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb19512b-1dce-452d-9739-ccfa66f721c5",
        "cursor": {
          "ref": "c83dc817-2dac-4ecc-ac30-93f31f42239c",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c5db77f0-0f87-4620-ab7f-81960313a7fc"
        },
        "item": {
          "id": "cb19512b-1dce-452d-9739-ccfa66f721c5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f8af6c8b-0a79-42a9-b945-214d094c4ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb562d82-2881-4ae6-b21f-81cb7c40dc2b",
        "cursor": {
          "ref": "22149135-a9e4-4815-ba15-ba69124c1e05",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "dc875497-164f-4fbd-b8e5-e1503bd53ff8"
        },
        "item": {
          "id": "eb562d82-2881-4ae6-b21f-81cb7c40dc2b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "893f53ca-d998-4e7e-b038-b2e4a9c3e27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600ac93c-7d1a-42d3-8757-477ec4fb7261",
        "cursor": {
          "ref": "8543eac8-32de-4cc0-bfff-9c91d0b863be",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "90bb17fd-154c-4372-a2e7-b627c333a047"
        },
        "item": {
          "id": "600ac93c-7d1a-42d3-8757-477ec4fb7261",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2ba1689c-c5f4-47cc-a440-ffc25e29eb15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35134f3e-5353-4334-96ff-80b3c03c2d87",
        "cursor": {
          "ref": "c0ada3f7-1f4a-43de-b7d1-93b4036fd07e",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8c887297-530d-4cca-be8c-c9f23b229f35"
        },
        "item": {
          "id": "35134f3e-5353-4334-96ff-80b3c03c2d87",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "953789a6-1e1d-47d3-9424-455449707411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f549d344-c065-431f-aa7a-73b68bdcd8e2",
        "cursor": {
          "ref": "623d4e15-7eef-49b4-a95a-8637899f1892",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d39df939-c80b-45d6-9f52-9df4c9a3e50f"
        },
        "item": {
          "id": "f549d344-c065-431f-aa7a-73b68bdcd8e2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8baa82d0-e1b9-4c89-80fd-ee15b5b51d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2ce6b3-502d-4243-86d6-43166c023ea8",
        "cursor": {
          "ref": "96aa7b9e-4927-4f0c-a46b-7b5b188e3f03",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2b49dfd6-ce9d-440d-95c9-9501ea070b15"
        },
        "item": {
          "id": "df2ce6b3-502d-4243-86d6-43166c023ea8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5170beeb-3c10-4f2a-ab75-db36a6eee4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c233ae11-6d11-4700-831f-0e43c0cde7f3",
        "cursor": {
          "ref": "2996f1e3-51d3-49f3-8060-33a247e80fc0",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "eb480ae8-b7b6-438e-8c3d-969bd97012e3"
        },
        "item": {
          "id": "c233ae11-6d11-4700-831f-0e43c0cde7f3",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "41108af8-8e1d-43b7-ab91-ee527809b77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d2553a-b6b0-4b1e-aef1-244a17e6b04b",
        "cursor": {
          "ref": "9dfe60fa-f0a8-4d59-bf1b-cd296a8254a3",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3ebe7bef-269d-4191-a4c2-301ec0ff0334"
        },
        "item": {
          "id": "a9d2553a-b6b0-4b1e-aef1-244a17e6b04b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "07b393ea-6485-4683-b4be-7d749ba740cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f98735-2b79-47fa-9370-6bde78eeee07",
        "cursor": {
          "ref": "8c34987a-f2b5-4f48-ab53-3f13ccbababd",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "29e84d36-a67b-4d3a-ac35-6666066f4b37"
        },
        "item": {
          "id": "27f98735-2b79-47fa-9370-6bde78eeee07",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9f85ab84-d1c0-4930-93d1-2e9a7280894e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae803f09-44e9-442b-a973-235de0d8ce39",
        "cursor": {
          "ref": "6846117f-9c55-4c7f-a18d-34cd1bb28d99",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a50c02c6-c041-4b5c-923b-554c75dc464c"
        },
        "item": {
          "id": "ae803f09-44e9-442b-a973-235de0d8ce39",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "bb31dadf-93ca-473a-9ca4-1503e371e810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c21f7d-56d3-43c9-8b2c-519563aa3b05",
        "cursor": {
          "ref": "f81a5de8-c8c0-4d12-beb0-8bb9058bc87e",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8d3c0c46-3ff5-4b73-81da-940e802eedf1"
        },
        "item": {
          "id": "10c21f7d-56d3-43c9-8b2c-519563aa3b05",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "cb8585e7-cdd6-419c-b29c-a67d8d04a0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f75ba5-db2e-4bce-aa8f-2eb31be15928",
        "cursor": {
          "ref": "705eab61-bafe-4945-a744-21305b08d23f",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5c94a1cf-abe8-4402-b861-06688d9bb539"
        },
        "item": {
          "id": "c9f75ba5-db2e-4bce-aa8f-2eb31be15928",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d67f5524-3374-4020-81be-80282419caf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9297c417-b181-4006-b48f-29ec2832e0eb",
        "cursor": {
          "ref": "41ccbf97-6d70-4e29-9272-dba924c4e828",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c2387f2c-e303-470b-a048-34eedab04fb6"
        },
        "item": {
          "id": "9297c417-b181-4006-b48f-29ec2832e0eb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7d66003d-a21c-4d4e-ab18-3151ccb02f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4be28e8-afb5-4e1c-bf28-03d5e7219b59",
        "cursor": {
          "ref": "794e6f74-9272-4f83-a87f-b922223188eb",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "db0785c3-022c-4b1c-8382-23c28f98a988"
        },
        "item": {
          "id": "c4be28e8-afb5-4e1c-bf28-03d5e7219b59",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2b7b573b-3fe9-4724-a6ca-d06e0235c872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d86160-ac76-4151-990f-18d8bfe166cd",
        "cursor": {
          "ref": "7b85378c-3a80-4baf-a541-ccfe67d95644",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8142f64f-f02a-4aa9-b2c8-c2d77d22f389"
        },
        "item": {
          "id": "c4d86160-ac76-4151-990f-18d8bfe166cd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2dcb7117-29cb-468d-8b63-964d44447bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c79c875-7d5b-4bc2-b759-504c9c79240b",
        "cursor": {
          "ref": "29fd69d7-9688-4332-95d4-337edac0e21e",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e0a364a6-78dc-45bd-9ecb-585ec9174cc9"
        },
        "item": {
          "id": "2c79c875-7d5b-4bc2-b759-504c9c79240b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a9ebf552-5aec-4caa-980f-67f2d032d3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177f7ce1-f199-4580-ae87-1cbee4275744",
        "cursor": {
          "ref": "b3467a25-b0ad-4d5a-8ae0-3c94ab72d827",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "973f3dc9-0d4f-48ad-8016-8855f3f75522"
        },
        "item": {
          "id": "177f7ce1-f199-4580-ae87-1cbee4275744",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3cc96a65-4b28-49cd-9304-5f1edf3683f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f315be4-0317-49ad-a531-a0d67a66b08c",
        "cursor": {
          "ref": "a3b835fd-61cb-40e3-b194-72a59322ab10",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "43d1b5a4-77e0-41c6-908b-1604f51822c2"
        },
        "item": {
          "id": "9f315be4-0317-49ad-a531-a0d67a66b08c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "02e7d453-7440-4a78-b455-5be2bb677a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16175d4-28b2-4f6b-9ecc-2a457759ba9e",
        "cursor": {
          "ref": "f3b6404f-780e-41fb-aeb6-55166d39f0d2",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "658a4be5-4016-493e-ad87-eeb7b04ffe76"
        },
        "item": {
          "id": "f16175d4-28b2-4f6b-9ecc-2a457759ba9e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6cf8a7c6-93a1-4d1f-b7dc-3ddbb8c0bf25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f33e344-84a0-41aa-aa01-39c19b1e5447",
        "cursor": {
          "ref": "1d0783cb-f9ed-432b-be72-d0e26ab01afb",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "08e27c1f-a158-485e-a388-26a93cf0ed9a"
        },
        "item": {
          "id": "7f33e344-84a0-41aa-aa01-39c19b1e5447",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4db43b1b-101e-46bb-a72e-75bc7910fe44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa6939d-5aac-47c4-a5d4-55e4887766b6",
        "cursor": {
          "ref": "ac527dde-5155-4713-ad90-7052356782e2",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "4348e575-54fb-439c-bba9-72181ba547be"
        },
        "item": {
          "id": "eaa6939d-5aac-47c4-a5d4-55e4887766b6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0cbf9d47-84c1-475d-a4a4-5efc98833677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf4b44d-5230-4a6e-b4b1-31ce15b7715d",
        "cursor": {
          "ref": "80159011-f0a5-4cc2-9043-8f04303db9d9",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "54fef95b-ec10-4a11-81c1-93a8244dcbdc"
        },
        "item": {
          "id": "dbf4b44d-5230-4a6e-b4b1-31ce15b7715d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "077893e6-de12-4aab-9556-9efd1940d559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91eda93e-0e75-4b6e-a097-b29a46a93f35",
        "cursor": {
          "ref": "2368255d-5c3a-47ff-9f6c-0c60483be596",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "66e5e980-dcb4-46e4-ba0d-031bc825f8a9"
        },
        "item": {
          "id": "91eda93e-0e75-4b6e-a097-b29a46a93f35",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d6ba8c97-d649-43a7-96f1-b642992f48e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8cf2366-3181-4e76-9abc-d6149061f7b8",
        "cursor": {
          "ref": "00d3268b-c97b-4ba2-b1a8-c653d74bb296",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "16bd7076-07f7-4ea6-8e6b-295f67254144"
        },
        "item": {
          "id": "f8cf2366-3181-4e76-9abc-d6149061f7b8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "56083625-9abe-49a9-addd-5d2df8940da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e4d56e-11d8-4d2e-b1c9-5a140392bbbb",
        "cursor": {
          "ref": "4f95d1f9-97ef-43fd-be5e-4d69f202356a",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "9423b2c1-99d6-4e39-9217-cd85b958d93f"
        },
        "item": {
          "id": "59e4d56e-11d8-4d2e-b1c9-5a140392bbbb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b0878e3b-0a84-4166-9f68-88866c3801f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa90541-1212-41c0-a0f8-d000b0537305",
        "cursor": {
          "ref": "20297963-de1b-4b12-8315-11695b1cdfca",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "05aa98c7-4e2d-4234-8df5-2c8202e2f3a2"
        },
        "item": {
          "id": "9aa90541-1212-41c0-a0f8-d000b0537305",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e53b56b1-07d2-4439-a8bd-25e828d8fcea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f28538-9904-489d-842e-50298c6a2198",
        "cursor": {
          "ref": "ca4dd14d-cad3-4dd8-b819-edd57bf69a69",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "baf5e1ca-3567-49f6-82d3-a8559f59b510"
        },
        "item": {
          "id": "f5f28538-9904-489d-842e-50298c6a2198",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6c82482e-ecf2-4b3f-8465-f0c6466a510a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997fffe4-61ad-49f1-bd01-899e21ab4d79",
        "cursor": {
          "ref": "f526ee8b-df38-429b-8b7c-ec5683b5d3f2",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d3cd4a84-9ee9-46c7-9816-01ce621acb77"
        },
        "item": {
          "id": "997fffe4-61ad-49f1-bd01-899e21ab4d79",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d3cbdddf-60cd-4bf3-9506-90d8c6ce7525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25158b36-c67e-4eec-bcf1-f961cbd65c4f",
        "cursor": {
          "ref": "c91cb549-f359-43d9-8f98-b060748e5da3",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "49737cd4-9e72-4e30-8591-d02a8c0d4ec2"
        },
        "item": {
          "id": "25158b36-c67e-4eec-bcf1-f961cbd65c4f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "00830dd4-51a9-4207-9a2d-efe1513445e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a79882-d145-4ed2-a47b-3dde1d34409d",
        "cursor": {
          "ref": "249563c5-5acc-4333-82ef-22835ae7d0fd",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7f089f3d-2dac-4aea-8ba3-3b0a3f4fa978"
        },
        "item": {
          "id": "e6a79882-d145-4ed2-a47b-3dde1d34409d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f491b2ac-a361-41b5-b0ca-e452e2ef3ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f76af6-f822-43f3-a811-9760bd6c892e",
        "cursor": {
          "ref": "726562c4-fa0c-4837-bd49-b7da6e3cbcd6",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "4582ff1f-a757-4e68-9532-66705414b6c6"
        },
        "item": {
          "id": "b8f76af6-f822-43f3-a811-9760bd6c892e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "63152e54-05d9-4d5b-9b05-c3e42723e89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec10f3e4-4936-4031-9e71-73da79992b94",
        "cursor": {
          "ref": "65c7cce8-40b6-4dc6-b55a-eadc022e427f",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "60c01fd8-c387-483e-89d7-18c4f1652641"
        },
        "item": {
          "id": "ec10f3e4-4936-4031-9e71-73da79992b94",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "45da83c0-d002-42c0-a5dd-4f2ebb2619a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650dfe06-f2a7-43a1-9222-1e0ba550c3d8",
        "cursor": {
          "ref": "d4393269-b37c-4437-ac7f-15a18c50b6bf",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "fd75b638-f90e-4b82-b907-719bdefe6a24"
        },
        "item": {
          "id": "650dfe06-f2a7-43a1-9222-1e0ba550c3d8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ce5f8a84-1416-447a-b7d5-567f588642f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2b254c-206b-4d2b-b8e0-f5b2e86da378",
        "cursor": {
          "ref": "0f4c9f89-00f8-4d6f-b4d2-d55212d618ff",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "1ce9734c-6afa-4c4f-995f-f96a7000bb0e"
        },
        "item": {
          "id": "ea2b254c-206b-4d2b-b8e0-f5b2e86da378",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "42b9e5d3-ff49-435d-93c6-efe89c277b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee222346-2197-457d-92b2-36b85687c74a",
        "cursor": {
          "ref": "33eea348-7932-453f-b19c-a84ed4e2ea14",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "00686886-33ce-4739-a17a-d5bf2322cf77"
        },
        "item": {
          "id": "ee222346-2197-457d-92b2-36b85687c74a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ae37a152-2ab6-46a1-91c9-3783539e833a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94cf309-b54e-47b1-82e6-2e79bcd113bf",
        "cursor": {
          "ref": "156eed5a-807c-4d0b-b05c-885301877233",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "9d225cdc-564f-4337-949f-e913a4ba9c64"
        },
        "item": {
          "id": "d94cf309-b54e-47b1-82e6-2e79bcd113bf",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "57286a5d-1b54-4798-9609-0e8e8b9e5772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae318e0-351e-478f-a282-e9af9f7a0562",
        "cursor": {
          "ref": "aed8e27d-64e4-40ae-aa3f-50352e962e16",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "f21fa231-95a9-4b07-93fb-c149b7284631"
        },
        "item": {
          "id": "bae318e0-351e-478f-a282-e9af9f7a0562",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2c8a8319-402f-46e9-a9b8-f34aa73ad558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a660f2-3aa6-48b3-bf09-a88d12b6674a",
        "cursor": {
          "ref": "92bdd150-3762-4258-8e70-224154882d15",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e8c31b2e-e631-4970-ac92-b3f454530687"
        },
        "item": {
          "id": "d5a660f2-3aa6-48b3-bf09-a88d12b6674a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "95ce3af7-29c7-42be-84c1-4dd296a7aa53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36da37c-00ee-4529-86a4-ca46e5fd3b4b",
        "cursor": {
          "ref": "fc0f75a0-5fd3-4035-81d7-e885a29bd130",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a7c8b9a0-642d-41c9-932c-35b625605082"
        },
        "item": {
          "id": "b36da37c-00ee-4529-86a4-ca46e5fd3b4b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "396320f0-d762-4f95-a8d9-d48779348aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd45478b-867a-4e17-9172-1260740d2320",
        "cursor": {
          "ref": "39fb8f70-c162-4d11-be0d-81d5d3044184",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "697dc725-c90a-427a-af85-738000ea0f26"
        },
        "item": {
          "id": "bd45478b-867a-4e17-9172-1260740d2320",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "368d940e-a834-4161-a599-83ac76b6203f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e3e897-ddea-4531-bfa4-fa86c6c76e07",
        "cursor": {
          "ref": "97f2956a-091c-494e-a615-b3fdfee0e51c",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e06bb2c4-cb42-4aaf-8112-5722f1138309"
        },
        "item": {
          "id": "35e3e897-ddea-4531-bfa4-fa86c6c76e07",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7d6933c6-0241-4c6b-9ff9-994ed7c1fe64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d19a15f-fc96-4df3-820e-2ad40588aa05",
        "cursor": {
          "ref": "97c2dc6a-d4d4-46e3-bae3-89cef00d67e2",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c7b9e1d1-02ad-4694-9288-a9e75c19abbf"
        },
        "item": {
          "id": "3d19a15f-fc96-4df3-820e-2ad40588aa05",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ace859a5-4544-4f76-862c-23946dd6bf42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6861b21f-fb8b-4250-8e72-11cdf30622fa",
        "cursor": {
          "ref": "5d18d947-eb72-4e3c-8562-ac109461f609",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "94c7379d-2ab2-4bfb-a045-306fd10dd605"
        },
        "item": {
          "id": "6861b21f-fb8b-4250-8e72-11cdf30622fa",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "64df61b2-7fd0-4c9c-9cc5-9a3c06de31e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d90c47-3eeb-4e2d-b579-dddf792e2e3e",
        "cursor": {
          "ref": "41c4586a-52b8-4909-a27a-6e299d3ac45f",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "2b627dc3-2d99-4325-ba26-5b3f596de377"
        },
        "item": {
          "id": "00d90c47-3eeb-4e2d-b579-dddf792e2e3e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1de2e7bb-d8e1-4bc1-a0ad-4e1da4177fa7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc210b3-e388-4c82-9a77-a1817e3d0555",
        "cursor": {
          "ref": "57613daf-b354-41d2-88aa-0d6aec10c31e",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f391894e-560b-4427-b2cc-c3f9fa08f9d6"
        },
        "item": {
          "id": "bfc210b3-e388-4c82-9a77-a1817e3d0555",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5c2ef77e-440c-4b7f-8e0e-2137154ff0a0",
          "status": "OK",
          "code": 200,
          "responseTime": 99,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd3a5d1-07eb-4431-a473-c5af7c0010de",
        "cursor": {
          "ref": "3b95f985-2b5e-48c8-b3a6-bcb79c63d7a8",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "c63fca57-3e65-4c84-bf17-bb95691ad838"
        },
        "item": {
          "id": "3bd3a5d1-07eb-4431-a473-c5af7c0010de",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b839bac6-7a62-4b5a-b61d-e33e49e79403",
          "status": "OK",
          "code": 200,
          "responseTime": 1820,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61f88b9-1ce3-4abc-b7d6-f5aba7675c62",
        "cursor": {
          "ref": "94d63e7e-0a4b-468c-9f4c-7235d24e7a63",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e4c0112f-e2f6-423b-b844-052c7a578904"
        },
        "item": {
          "id": "c61f88b9-1ce3-4abc-b7d6-f5aba7675c62",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b85d35b1-a77a-413f-b0d7-0424be7347ec",
          "status": "OK",
          "code": 200,
          "responseTime": 1456,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b14207a-c90f-4081-ab74-bc7785f64c7c",
        "cursor": {
          "ref": "7eb355f5-9322-4d84-b0db-777787b95f04",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "01b722dc-a0d8-4c9d-a42f-bd28b8f707d9"
        },
        "item": {
          "id": "3b14207a-c90f-4081-ab74-bc7785f64c7c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5a1c3d5f-ce04-45b8-b603-6e245aa47b5a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b14207a-c90f-4081-ab74-bc7785f64c7c",
        "cursor": {
          "ref": "7eb355f5-9322-4d84-b0db-777787b95f04",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "01b722dc-a0d8-4c9d-a42f-bd28b8f707d9"
        },
        "item": {
          "id": "3b14207a-c90f-4081-ab74-bc7785f64c7c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5a1c3d5f-ce04-45b8-b603-6e245aa47b5a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f3df59-1644-4bb7-8aa7-680f51f3a8de",
        "cursor": {
          "ref": "31bbf3aa-cd5f-4ef5-96c3-1a254ebe1b2b",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c6807f8c-c749-4bb1-bec8-813a3ddfaf35"
        },
        "item": {
          "id": "a6f3df59-1644-4bb7-8aa7-680f51f3a8de",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d969265a-bc3c-4a0f-9cdf-adb5a94645d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b8bc34-a157-45b0-8f14-1ef2998c8d25",
        "cursor": {
          "ref": "b6981fc3-f6b9-41e0-bef2-dbc1a11ea17f",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "ab9ecbec-b2e5-4857-a539-9336103d60b1"
        },
        "item": {
          "id": "d8b8bc34-a157-45b0-8f14-1ef2998c8d25",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e22118e0-f019-4101-9593-db06d6194c37",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}