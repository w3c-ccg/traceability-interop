{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5a404b1e-f3c4-4381-a131-fa561f4e24f5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "313c0e8f-aa9f-4f6c-99e0-8cac2503b613",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2e55e3f7-279a-44cb-ae35-fa977595faac",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8a1288a2-c3a9-4b62-8a59-bfa4867364d0"
                }
              }
            ]
          },
          {
            "id": "b262757e-10c8-497d-8466-be28b2380af0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a3a9f937-6ec7-4d36-a106-4facd4bc8bcd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "277371ee-4cf9-40cc-85b3-4e79535f441d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b7edc267-716d-4618-8d23-37e7bbdd2751",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "cd10b6c9-4221-47ca-9ccb-dfc7dcd4bae7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ce2b98ef-70af-41fb-958a-ed7471550c66",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20369a97-3d03-4814-8353-9ca89316a278",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "16045b79-a64b-41b0-bafb-e6996995583c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "75a06ade-c5b7-43e3-bce9-2f253759065e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6f70b191-6e6b-49c8-aa64-be4cfaa6b1ea"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f31d6aa7-1779-4e35-9a4c-fc6daf8383da",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9a90cc31-1610-4873-83b2-0ae7f97c9182"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "defa828c-a22c-498b-9e0b-bf8382c9e4b6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2315a431-eff8-43ae-a8de-1d1f8159de23"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "043c5a2f-b49c-4c97-bffb-c2583453cad3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "910cc5de-26a1-454b-9873-ec18f10b9812"
            }
          }
        ]
      },
      {
        "id": "d92a6595-c7c5-4515-85e7-3b5ab0ecf825",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "209d8ec8-f9d4-48a3-8dbb-0fc12ea63c6a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d027ca7-03d4-4716-864b-52ee61652c59",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eda40f61-c5a3-44da-9405-89907cd0bd9d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dafff29-fcad-4a68-be4a-167be121acdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43a9676f-1f19-4ccd-969f-bb4b3787819c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261b0030-c1fe-4b39-a79a-82f5d5a5438e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d2315f-03fc-413b-8ef9-f93a90a1b314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4385f524-a05e-4037-8395-e055e7535750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22db01d2-4dad-4c9d-b790-bda6a1172b4d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daad2b60-dd72-4bd1-b50a-256370ea76fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc8787f2-7897-42d3-ae57-804084aaa4ae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c91c5688-9e79-4681-be12-d3434eaae2c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d82a3903-2197-47a7-a2da-b6b65011488d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ef7990-55eb-4320-a311-7973a7094ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67b57d15-306a-4168-ab52-55e42f9844df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60e69f7-190f-46cd-8f2e-241c9da66fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2efb422-3862-4403-87d3-290f9afa8dcf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8dd7fccb-c1ca-4220-8dd7-6ac7da2aeb72",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bf5f460d-6951-4914-8354-622de44060f3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4193286c-edb0-488a-b0a0-3453216bd0ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6d65a59f-2649-4e53-9b05-c9a404087638"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e511693-dd14-42e4-9941-6e6567b38f3d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "efe74c00-4a0d-40c8-bbb7-898f8595d1c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d1f7585c-ca15-41e1-b056-64055d81c7a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ecad80f-b55a-46fb-bad0-c53cd4e1f51a"
            }
          }
        ]
      },
      {
        "id": "c812f9f2-6381-42c1-bbcb-8e08d2d659b3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "142bc017-75e5-4aa0-8fa0-e84c088d6d37",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b29f0cc0-ddde-4e89-95b1-36a0ef845324",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "09e9ac77-d33f-4051-af5f-da149596bac4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d47f8a1-0430-4f90-82b9-46833dc348b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5c4ffc1-cb01-4ed4-b2ac-7b022dad567f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cebdc2-0316-4875-870b-9650af4ffc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5a19e22-200c-4a0d-97a8-43ebf95dbf30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd94d1b6-5499-41ce-85b8-473a129a0217",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aebec2f6-e466-4820-b57c-0fd7122b5b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f2b4c1e-6765-482e-b42b-6519ab1e24c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59234ae1-c5c9-4220-9e5e-4cb68266bfb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd6c6606-4302-4a94-bba2-baf1fd7c8cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ff5e60-3c67-4a6e-b47e-3e0002a9c5e3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b919758b-c707-436e-93e5-fb3e19e5db8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b084318-ba5d-4b6c-8e5d-c332c7308f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43345e39-4746-4a63-b0cd-b57a31fa5a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1e54f9a-a88b-469f-87a7-42571eb1a42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e53ef4-c6b0-492b-86d5-e3456565bfd6",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b44c66a-9919-40f9-b90c-25552c6e873e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7ff23b-d662-413a-bfc6-59fa0a6f2e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72014926-f22a-4645-b54d-d9242b459973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c503ce2-5f50-4152-85b9-ab7d34390c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8ac1a0-8385-4c25-a558-a9d078b5c8ab",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d480b7-8106-4b01-a542-a39deaebc25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78c259e1-3f70-4a35-b3f4-14c80fb438ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ff5fff-a235-4ca2-a6ba-3da683165bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5251cd0d-a7a8-4398-b6f7-2a9b5b2d0390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e033a25-10fd-4130-bf80-cb3019e2d698",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73af8b6a-0a6c-430d-baff-5dc6daac0209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e6e2ac-0059-41c4-adb4-8bce1f71f103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9bb487-311d-4168-9c0e-2901c95c49e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aee180e1-59eb-4df1-a2ba-a51be5403d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a17bed-f572-4ab3-82d4-a1e0daf0d5e9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec8a8a9-2517-4253-a567-ebab92103f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f67a769-4481-4cdc-81de-8f96df13cb39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b851162c-a8e7-48eb-9ac3-d1dd3f606963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3adf6803-a2c0-4092-8ff5-8b7e00f02dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611e5195-cff6-492a-9f73-671436d903dd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5022417d-e9d1-42cd-b985-a59ca55c110a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8074b41f-df47-4709-bc9d-874f2356d927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa8f2d8-381c-4fc5-a9d1-879bbd5a2e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8aaa0b10-0f22-419b-8e71-dc91fd899d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f66382c-e534-4a9b-84de-899432c27ab2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9bdecfa-0861-461b-97be-0411992fd9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c5c432-7e20-4888-8a02-bcc660a29ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6aea6b-f74d-40c8-a28d-4ad901784ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "051b46fa-0536-4821-989c-c0f783a1d598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b093b0ce-c2d1-42e4-9dad-4ebff013eca5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a649374-4a1b-4e36-83de-98d6671d498b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a062794-18d7-4e68-836b-f6ddf32bf837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47417516-7721-4f06-b916-2f5cd18c156b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd9eaf4a-7254-4704-a8d4-47fa088d088e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb55532-a1e3-41e2-a141-1965ec48aa28",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "435ee2d1-aeb0-478e-883c-89efdd9602d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd5f81f2-75db-4753-968d-da3098fc67ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f778b1bf-c65e-4693-821a-122385cc91b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efe87768-9f6f-4f09-9692-f98e761d0703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf7ed69-d287-44c5-aba4-4baa0e91e4de",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6152dfb-bff5-4963-8be1-a7ee864f3761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0328dc4-f888-4934-ba63-df3370d4c719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73fd221a-6769-40ef-9b3f-d8f2d9cf24ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "676089bf-abc3-4a00-a957-72c4406d5509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8984d7-4616-402e-a630-fc99b0440882",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9763ad8-7245-4f8b-822b-fa677bbc4a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787895e8-a072-4f5f-a092-468459c71773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35a85d8-7da9-45a8-9595-d4c8e39c36b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1ec7da2-ed2b-4003-8f93-4a3bbc24a874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9fa9d6-a241-4b91-a7ea-4b83b9121022",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34905c30-36f1-48f4-a0a7-0e8c75b0cfa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d131db3-dc51-4230-ad45-81a9f8ff8e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869b3804-1918-4e62-b77f-6c390c84eced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2422e569-bc1d-49c1-88c7-06414fd2eded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2006b151-5b70-40d2-bb0c-f2991a1e77c0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5b0928-f396-49c8-a6bc-57e4b99cb077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5700466a-af21-4982-a105-6ece2bae4d55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501ad760-4707-4198-9be7-3af1284eca09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46321e2c-486b-4c52-8996-971c8b6fa6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767c1228-bed1-4805-84db-4236b7ee96fd",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebfe98d-6d18-47e5-a52f-e0cbe5ddb210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "077e5a09-f2cf-4db1-8aed-d80d2677bba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f04c492-d86b-439e-9a42-02d7ebddf859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "832b0ad0-e651-4720-8261-492c1494469f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2442599d-652d-4326-9e91-c699a19fcfdc",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e11f9b5-3400-4372-9ac0-4aa24cf3966b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c3422b-ea99-4f3d-8dff-74f92c625ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a72de6-1b0e-4cc9-82ec-351180acf362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "049eaf87-7d64-4884-8f67-9f676cd9313c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604bfa56-9902-4da7-b893-06a5f073b679",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebdaf61f-afe5-49e0-8136-18ebdcc0721f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93871f33-fe35-4ab2-a213-f699fab0ef37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ddf3dee-ba2e-4d37-9512-e950345c7df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "404e8edb-abfa-40ec-99be-73c7601ab086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083a9623-865c-4752-a05b-ce8902d7d3b3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90e5121-b76c-43a0-a545-7b5fda339907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd5554b-5c91-4679-ad78-4773653ab3e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249335dc-6dbf-429b-8c5a-79150171d2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03da1d49-cf06-4cf5-98ab-26c04d672883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872c3117-efbf-4b99-be04-827302d4d41b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d35c703-e183-422f-894a-a283a478f241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6081b6c1-137e-48c0-ab64-5d05c6801a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f66ad51-e08e-4080-b2db-02f903914793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38601457-ddb9-4cbb-b47b-0fbb3a04d6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2c223b-98f0-4efe-bc86-2ff1c416d2fc",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42478c0-924d-4036-a0d2-affea444a255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf4bfc2d-e5ac-4e32-99c3-d7378e87fe8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c00379a-be84-4966-aaef-5244bd68c33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76c1bdec-6a1a-46d7-9be4-3881be2176c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9650699-a437-4635-bbd4-8f5ce282da2a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4153ce74-6817-4b0e-a3f9-cd994f75c0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91871e39-2f69-4012-a006-8c6fbad55913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d702fb-f1fa-4ed9-8d97-85220f0bafe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bdc679a-3dd5-4cb7-8897-db061d766330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045a5909-3e56-4f15-80b1-dc3b06903860",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b2ab7f-7b6d-4f82-9b1a-287bdca6d7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c137cd6-3651-4569-99eb-ba7aefc82250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f183748a-66f9-43f5-89f8-5930bd83e1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da06e8a7-c6ad-4d43-bb25-9428344d2f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04515e7-6a6b-4967-bc13-23d8a44889c3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00430755-4a33-40f2-9df3-c9306be84849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "985af7dc-5a2a-4a4a-b76a-3adefad703a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c50e2ef-b9c5-4b54-acdc-28e55fa24677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f68ac2a-7a28-48ed-a933-ebf3acb5ba68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75496633-a910-4161-9a9b-b6b6d167f60f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18149816-8405-494f-be67-becb62115dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e5f7c6b-dcb5-4685-a781-fe7298653438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4cca71-55ab-4231-84f7-0807b4ac5408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "12b04fac-3158-49e9-ba4c-82e25f18f289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7c7d8f-65e2-4500-82f7-315f12628fcb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ced92d1-0eec-43a1-99a5-f56839d972bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed4bb843-0a0b-443f-8189-7ae88c0a3ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24ea60d-3066-466f-ba84-1b4989895794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e3bc456-a5ec-40e4-b499-12cf98b6acf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5994616-3399-48ad-af74-2d75f4c0ba36",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa691d2-4a4f-496d-9c04-2adf57214841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a834da-46f8-46ce-9452-064902528e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca518c66-f43b-4b59-a29b-3df560b85c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dfbee69-266a-4290-a304-18bdf6dfdc07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50862f29-e5c9-48b2-ab4f-c2905dbe17d7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797764d9-1b0c-4c43-9f20-10acaa47b702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5293c5ee-a09e-46c5-838b-520fdafb63ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f88aae-80af-497e-9b92-84dbe13361bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7f758a7-a2b8-4db4-ba0f-d68132a14599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08dceb07-e4ff-440b-8f19-2fb1c9c6f698",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0684368-6526-42c3-b84a-39234b205dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7587c9c8-8abc-4261-a3fb-60c7918aa799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15477668-bdfd-4f48-9465-199265244320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cdf26a2-909f-41f3-8b0e-4f037577aba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5da0258-6f25-44e9-bd52-a40070d9022a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46a0b41-8431-4f3f-8971-8cf03379c8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e5f615-2df9-49c0-9f6f-2d90428283d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e3b3e0-8bc7-40c8-8efc-bc3dd1a0229a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e8b0bc2-82ff-4ebc-9238-a2d22fc10559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b006ed8-68f9-4ff4-80c7-b27690c06058",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae668b52-d27c-4feb-987b-b5e5f73bea12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5895114-6a38-4f97-bc0b-aca49173466c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239d484c-f237-468e-8f9e-b0ac293c8329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1374a390-7c25-4f37-a523-7e4f6269fd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673eeafa-661a-4418-8342-ebeedaa371a8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "829a4f92-db9a-48ca-b1cf-9700b434b45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd885c3-528f-4187-a9eb-63df326c52dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44801ba-a5f2-4d0f-ad7e-2b6bfcddf57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "505381b5-79a0-4ece-bb77-eb114c15f0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f968fbaf-063e-4c39-a2c6-015aa6d0b92f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60113344-bf32-4181-80de-3aae795cb088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d0bb6e4-22c0-4e00-93f1-220d14cb461f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "febc6327-5e00-4d73-ba37-e81a15e658d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "697a681a-c35f-46b2-a7dd-56cee9970101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25a692d-cbb8-4924-8f1f-81371b1f362b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa5c9b5-ac67-45a6-89c3-a5327ecca520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3667d51a-34f5-4088-a13e-76178be905d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ccb566-d836-43bc-8d11-8d2b279574a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5304720-bcb0-4ef0-a908-dde16193e0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d891fc-991e-42d1-9632-1e960f0ff36e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7c1b0e-8ee3-4faf-b100-0b98f1eb7d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b705a2-b261-4cdb-9750-79da0f7dae6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38fe687-eb84-48af-8dce-35ee461c7059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "914e0dd0-6e9b-4df9-914c-1c5f429bd0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1b4841-2423-4193-8ac1-2c1adc3f0cb5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b23eb1-b852-4e2a-afdd-8e7259c71744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2bcc539c-3768-4238-a717-39bc82c1e676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e91333-1de6-432c-8aa0-1c133a69f2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98da43b0-02be-430a-be9f-175fa79b3fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a703fe-8f53-4298-9e97-5d9c85597d23",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a93d084-824a-45f0-a1a9-c635e4701476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81334c21-9092-4941-a7e5-98159275c405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1203f5-6bd2-4025-81d5-97b8ed1201b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93078aae-0d1a-437f-844a-652d92eee3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d42aaf-5c15-495a-a4be-4f471043975f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1726e3-9fea-4611-baca-028d1e2b610d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93213823-6513-45c6-806e-c6df322c3704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a0e982-5366-4955-bcc5-2c883b91228f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c18d46a2-f2da-467c-86f9-e062506f18ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794f02c6-de27-458c-8197-96e86c7f2519",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e704d5a6-72dc-49e3-82e4-a4b73bd3630c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9820aa5b-ea4a-4643-bc18-a5ebdc2a8e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f4471a-c02d-4435-96ce-9fe6a2afc980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "408c5d72-3fca-4e12-84b7-5f340d64069e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59316400-0f40-40da-85a2-dc2b4c077db6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d7a50d-95e0-4fe2-b81a-f9e5e933cb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7b6a5e-f299-41ed-b30c-4d64eb5fad61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f955c9e3-31c0-451e-aa0e-ec6a80ae602a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c9cac7e-23ba-4729-82d9-38b687377501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff1bea2-e99a-4a70-a100-2c9c94dae96d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a397aa9b-2b4c-4235-a2b9-77ab25ccce4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a8c445-a70b-436e-a0d0-8f3102f88121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7ea0bf-b418-4035-a4d9-e744562f501f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f602be3a-d68a-44e8-af9c-e69dc5e2f118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bfa7ec7-8ff9-4be2-b43b-12fdbcaf62ec",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7661605c-e27f-41cb-aafc-d47a8e2b2a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53f3e136-a702-4dd6-9eed-963761f2fb37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208b68fe-ba5a-410b-a315-f09130be5feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "053916a1-c8be-4dff-8c05-e1ba1b4bbf21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256c83bf-fd14-4372-9c48-a20b9da3570c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff87dae-2c12-462c-ab56-167881d42773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a871ec3-08e3-4b91-8537-c635cdf19f7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96b4cb1-d16c-409f-afc5-0da7c61a12fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f1ec927-9383-4c46-b55a-a99c97422d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156c9df3-0373-4502-b7ce-bb4c31a7330a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa50f60-e1e5-423f-98dd-dc2b1acec218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b76e1e6-7403-4f87-9a4f-570560a019e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab57ddf-a67f-4798-9906-79ad0eda2c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0b5e79-e825-4441-bcdf-ed0e17e16eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a269df-84e6-4ddf-838c-0171d84889e3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd549c1-1568-42a7-80f3-583b04219f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979d03d2-770d-44ba-ae82-1b6d93f489a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750518b6-deb2-4376-9b18-b832c24e13e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a1a4a09-d860-4452-bb8d-84853009deb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0734c1ef-d9c8-46ec-8da5-1e340cb947be",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a07ede2-c4af-41a1-9139-60b47a736867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fbcd84f-1ee0-47bd-9076-f32eb59cd214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e808328-2a44-473b-85cd-836437ce7ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40974eba-f4c5-47e6-b53e-3bb4522ee534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b3363d-c9b9-48a2-9ba5-977b7c225283",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e529091-3ff7-4cd4-a6ea-066182f08a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f28616d-f5cc-4ea3-9f96-5838c631bc12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93377a19-a2f2-4316-a286-ac1b29612ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16565c28-1431-4e06-8b1c-fd04f8ebc23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1ab57b-5f85-4f12-b657-3f82d3f68a01",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed48b24-a02f-4f46-9014-f48790b310eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e60c90-4649-4c36-9097-b8aa3a21925f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1617bcd0-bb63-47b6-b143-60d4839e3b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8243b1e1-c493-4c68-bd11-2d01eaf8e812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356eceef-6798-43f7-bf76-ea41bdbb23eb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672d9070-47f1-4800-8411-efd3a6b8a596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b9e054-0110-4f3c-a60c-53b126efc936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664f112c-9c45-48fa-a5b2-50905adc43cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "21b49d4d-deb6-41de-aa88-fc288905a977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ef11b5-8b88-47a4-9ce4-3ded53ffb04c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e45391f-e886-4741-8ce7-1c025d1d95e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070cf0e8-25fd-4269-a12d-e02b3f98551f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa5840b-ec71-44d0-9cc2-7a79d3b3b9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e5a406-966a-4159-a48a-aa80808b3f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b4722a-1a1f-4ba1-8c1e-337328c4bd79",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabc8259-87e2-4608-8d2f-bea3a8ebec8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4adb2b-f264-48fb-9601-a37e3d99e966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eafd50d-58b1-4267-aa3d-5deba99f34ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0838151b-e8ec-4972-bace-537f0da7b36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24c9f46-29b1-40fd-8a5a-c6a58d50341c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "035258a9-dd74-4035-a11d-9e23b0f80b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3027dee-6a60-4994-bc7d-601e5ad97def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd21fef-78e7-4da4-a313-2ef9e677e2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "14b7ef34-a9ed-4a4c-bd38-fe4a36c7a3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e38f6cd-a9bb-4181-a331-d13d9c000f35",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec2cf57-0b5c-401d-a800-9b12ff7275d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf3a9a0-bca4-4eca-9fe3-2b5fa77659a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df382f9-45c7-4af3-9fcf-1c50c9640a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed501f1f-a3a7-468a-9984-4d0230c623a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce578890-ff1f-43ef-b082-5d6898ca51ff",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0c1006-670b-405a-87f5-e1e8b362c39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "891df3fe-f132-4e60-b20d-771b8735c529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2445f193-6c1c-4a31-a34b-f9b0ae1ad3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95160ecf-d7f8-443d-b36b-53a9217f7b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f023a0-2300-4d4d-a1a1-3e308d887165",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d93bc6-d492-4ebf-ba35-9d9c1d13c15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adcf542f-2979-4b51-82f9-5d22a27eef66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc49e3a4-0a8f-48c7-b93c-77b40ce985f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e94d0f9c-049c-4740-9cdd-f8e23ac3a637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785be869-e668-4760-82db-b3febdb76b26",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64a6d4c-4272-4999-8c3c-cd095ebcab0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cea80f3-4ed7-4dca-b2f7-8ebb8dc1dc12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbcd1cd3-7ac1-4be0-a031-9a1c7498d0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "add0722f-acf0-48b3-8e9d-ad11cd2decee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c048e435-d892-4ed7-b927-63da962529ef",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca38ecf-3b69-4485-b7a6-ff510fd6b863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79539840-9b4e-494e-a0c0-4b0021555d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd084f3c-e1e8-4766-a282-918b3a7338c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d30c53af-345b-40f3-babe-d80d6cf9a361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7159439-7d0e-480b-8bdf-191b3e458fee",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4f78e3-6962-410d-a583-810527968f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e008bf6-1727-441d-b812-f36909e7bca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add2f6cf-8761-475f-8143-f9e6ca8f5980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "defdf168-d3f3-4572-ba38-e23f0093d702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b9d4f7-f617-4b29-9632-f8f8eb957a38",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ae4d1f-ed81-40bd-bd76-2b1e0e553d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9820d47-76e5-47d0-8e8f-14aa4e96bf1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7748df6-7be1-42cd-9308-3bb9329ce016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "51957c98-2a60-4ca2-b19f-b0d4726531b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb6b65d-4859-46e4-979a-eff821488105",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae846931-cdf1-4de9-ba8a-9b39addf7a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0fee63-3eec-41e6-809b-2161b272e912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208a422a-c6a2-4fda-9845-7d61a0a540fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b1c47c1-bba9-47bf-a1f4-0a09b98f6fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220b7b94-5d07-4cf5-9b75-9a2a93c7e858",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b84199-6309-4e5b-9e9c-0d4efa272a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df5325a1-b581-43e2-8e38-d0224174d788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc06bccd-03db-4b01-8c1d-7a2c4046ea39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef6bd574-409a-4cb5-aa57-deb05778c177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b120fc-e74c-4b3c-8a2e-1bc57fe9452e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b238a0ff-fb51-4b90-aeb3-a37076ba33c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7dbc736-b0ec-475f-a4db-674fde0bd2e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f945e0-6755-439d-9181-2a885c6f0dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4f202b-5cd2-4298-b833-f4072fa2ce2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ccae51-7d4f-4891-b856-1c79f8029b7a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6b8a87-3224-41ec-b3ff-fdf73766d539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "356a3679-7e35-4e64-8a7e-9a102dec2f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9a7a97-7b37-4532-b1be-deb4619bba82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "08387866-9d3c-424f-9338-cad3490bce82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8241da-6f3e-4685-9a2e-0d7f0e44df04",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93df8c64-d08c-44c2-ac67-27f3de7f1ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd054c91-581d-4914-b8bd-49ad72813b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3036f3c-22d2-4146-9f2d-e92ef6716936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f1bdbe3-7268-43cb-af00-0784f95eac5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9997bec-52cc-4624-aabb-dfc990c66c02",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3373c883-4301-43c4-8143-48dd10181fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6048d51c-9c53-435e-a492-e24feee59849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce39ca24-ced2-4cf6-ad88-0ce12c479bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28192465-a880-428e-adfe-96cb24271ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de223af-7bc5-469b-b72b-37506ce4c6f5",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35c4ef7-ff4a-42e8-b6f0-1664d4ae57fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c59c21-e629-4c72-b1b8-3c185e266554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52a3fec-145c-4490-9742-3174b2604b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0d7a2f-ec13-4315-bf74-3598b7a749b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc19484-8ccd-4141-b11c-28ce96352acc",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f23b777-705a-4f9d-b90d-9a4c930d5df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b48e7ea-5e2d-4b59-a7a7-822e17ed0d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5325f0bd-2b37-4215-88b4-32713b623ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "223e81a7-cd94-4aee-a7f8-a1d899f81e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dcc3ab2-b67f-4cc0-afec-8279b8bbe0a1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2142c1e2-0ad0-4a60-8293-9e5da0b2b2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a9aa335-5c03-4f1d-ae0e-b6e140c46710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c6dcb5-6231-463f-a9d8-2d6ccf081a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7aec8da9-5bca-4b14-b840-69c79a784f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541ec37b-d636-4eb1-8798-ae792eec3da9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641d4d1c-1da8-475a-b9a1-743d0f8acc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f658cb-c02b-4f0d-b437-3b7e9da687ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bdbc46e-a0e6-467d-89a2-621f37c7970e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b07d03b9-33b1-4abf-92a7-b6d7deb34f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5fb5b39-9a6f-4d94-8b41-c6a69d7c41e4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36654e1f-76cb-4cc1-ae4f-58372d6b4b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16cd1d99-80b6-425a-90e8-127790a2d05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1359cd17-9b51-460c-8636-2566ef782d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e75e8a4-9650-4968-8c13-311a00c086ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84bad1a-2d5b-48aa-b78a-28bcb0a683ab",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ebb664-11e9-4c4c-a3c7-277a61bff15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23d4b44c-3676-4db7-a5f4-5e66d3708512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea69e02c-1a07-4563-a448-bfd5b7cb9f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6baac88-7f60-43e1-8dad-75ebbd45f03a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c66710c-53b9-4d34-aa10-29d2f4ed4e3b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb48f00f-6170-4822-ba7d-9d9ce927aaff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fba3677-4d79-473f-a8dd-b7686c194bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194601f8-2a6d-4150-bc18-f68ad9e2fa8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "955be538-00e3-4808-82c4-224f55be2740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "714ef610-7c04-4f4e-ad60-362fe30c15d6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97dd4c2-6095-4d02-9f64-a8f9ad499d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c2bae7b-4fc9-4447-8055-582da88bdb5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62a5cd0-8012-4044-8172-ed25857a0b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5cbd564-f43d-4471-8aa7-60bd1bced2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e764bd00-cab1-41c2-ad7e-b9c3a8b44edc",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "723683c4-6dd7-49e9-b1e1-ce2e61c1d5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950c288b-d5b5-4c14-9abe-edd4229cb634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c45ca34-0a67-45b1-9364-864c76db5b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4d28d1b9-724e-4fe9-a195-a7d9ccbbc4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768909b6-d52d-461c-9349-8f8e3af15c26",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9a612c-808c-4744-901b-d48bf88682f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "560d8cf3-2d3d-44ae-9132-b4759444fc1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f08fcb-e19a-430f-b4ee-914e69905141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5161ad05-6f02-47cc-a005-f3f753573547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae895460-f8e3-4136-84e0-f8012ebbea7a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7029a0a4-33f0-4b02-ba11-4b1058dd8562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6158aad-8517-4009-8ab2-348853123f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072648ed-62fb-43e2-872e-731ce2a3bae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bfb1223-62b1-424e-a49b-5df3f7eda51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20b72b8-b58f-4651-bafe-61e8935163f3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94830ad6-438f-4137-b5a2-0e86525f905f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2c37df-bcf9-48f2-a206-272d67341a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5d1bf0-b09b-4b40-b315-a23b790dbf08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d826135b-0932-48df-9404-5f0b7620e850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e462a8a2-0cab-4f04-953c-b24469e73aa7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad21405-5dc1-4608-a031-2456f1e9d0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cbd92ca-e9d4-4578-b489-9f80ed180c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e3073e-80c2-4044-af90-78f80e766f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "068b3810-cbbf-4935-b2eb-85990aa900b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf795d4-1ad2-4dba-9817-ed474b995773",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b800c855-6ff1-49c9-8224-b01efe015442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f68ba1-8616-4eb0-91dc-a55330aface5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d0ef3d-3ed1-41ab-afac-7b66083da608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9631e20-ec11-4c13-9b4e-6aa97e78caf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844d856b-2f86-4d63-bdc4-e535b2fc8999",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c4cdab-0281-4470-b7cc-b901d34178a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37516c35-d417-45d1-b600-9b5ebcdf2c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e3c2dd-11d7-4b94-9268-25257abb98fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95b595bd-ebaf-44ec-aa6e-c6664b106530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c00682-7db3-4cdf-b67b-3f96381d7906",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d00407-eb22-4297-b0aa-e9adae5f297a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06996fc2-40ef-4e14-ad32-fe9372ab4561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd57dc08-05a3-40b3-b640-4c7d6bd5f52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8673d6b-c52a-44ef-afc2-89efe00bf0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f28e41-278d-4a6a-bdc2-da0ae63962ba",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b551a48-cfcb-4914-abe1-4fd95d70421f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c810162c-f027-45eb-9801-e4a648a32954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b390367-26c5-4a4a-ac4c-0af6a51a3187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7786bd1-563a-46d2-92a7-677a6e9bf824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f6ad77-34b0-4889-b44a-b94f2d8881bc",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc32fdbe-eb7d-42c7-a7ee-e54a14e08105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cbdda4c-c951-4995-a9e1-14e73eb87752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd21db07-b01a-41bf-b428-79c5633560f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73761a76-9451-48c1-98df-12d3981b12f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f40225-99b7-42ab-a698-2dc183148b85",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73590c2-8d7c-4a86-a0e3-0adc60cc0d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06cde810-12ad-4b8c-acde-9c0126f1e82e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3eb23f1-92ca-439a-a535-7f2bd50d35f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c887a9b-69aa-4989-9cf5-f9beac26a9af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11f15f7-7370-4cba-a4be-b10b88b30a91",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0114a36-7c85-41b1-919e-ee3e4843b40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3bd1712-c953-4570-b22a-a2df8ddcc8c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69a928d-e0f4-4ac9-a640-da36ac9e9f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c69f411c-444e-4d0e-90b9-97ab1a3ee0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba300c8-cf56-4ef3-8fec-a122f1d7902d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "782a2986-4880-42ad-8483-519cf9981c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9fde2df-a233-4988-9ea5-f3e2550d00f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03766513-4f97-498e-a4c6-e8fe284030ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa13b95b-c760-460e-ae0c-977ca0c2442f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f714e9-ed24-493d-ba77-2c34152a0679",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af55fbba-2053-4c17-a1c5-bf21ecdd6a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "314291c5-fa2d-4b82-8827-f54a33d65975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21d4d16-f59e-46e2-b35b-9b7d64afa240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2852501a-a711-4874-a542-faee5fa2fb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d3ada9-4836-43f5-aed5-36f62cb68d07",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c94944-aae4-4b9f-ba34-5224d35ee635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa00f215-95d2-47b6-888f-9a592eecdcce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c2eeaf-e4d0-4e35-b5cd-2e871236d54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8de4c92d-0f54-4aa9-b42c-1c0e3daa5f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c118dd-ec2b-473f-adc6-6a898fba33e4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5bf608-6c96-4a01-9858-ec1bce7c60d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8b2ec3-30d0-425c-a0a8-70c850f33c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39002c3-907e-4fc1-8e07-ee14048dab2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d75379b-3805-4247-b70e-d41024c291e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3ba3c6-aea4-43d4-873d-edf2d016b2cc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f96f0e-37c6-4770-9910-56a73ca47204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e36fcec-f6e8-4678-b267-96e1c943c658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363f679e-d80d-484e-a506-5d5a62db1006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "850a807d-64e1-4ea7-b842-a2d50aa5c015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d840cca4-b5d4-4654-8c80-3c8dcd15ca5d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508be3f3-6fff-4abe-9574-36625bfe42e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a93cdcc-f77b-4c4c-a80c-a396397d197c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b796687c-a2ab-4d68-a508-89b550128d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7215b828-dbff-4aa9-873f-be655fb2a4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704cca4c-2506-4be7-ba9f-79bb39d748fd",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3e7a97-802d-44f7-84c3-23fa50af39c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "89796e2e-3a77-4071-a8bb-97e9ac5c1d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bdc3432-518b-4e93-8571-05168eda9bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "38510179-94b3-4653-899e-2b54ae29b044"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "10f6eb4a-4486-4d38-899e-57e136079041",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0345384c-371e-47d3-a6d8-fcacfeb19547",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08484066-f106-4431-96bc-a02d62ad806a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0aa64b8f-d667-4a07-9f37-4703623a5fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381ae37f-cdba-48aa-b44f-8b5d7b6a4c39",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "806fe5e1-d7cd-4f39-afb2-a067de3a788e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d13b20cd-8f07-4152-b49b-85e747c93286",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b92cd2d-a7f8-449d-a966-7e189c27ad49"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f59e9d8-a9ad-4b12-9f6b-5aa6e31093cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14f2c67e-8e65-41eb-8704-64e6d2c2e259"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6e2ab1cf-d408-45e2-aa8d-bae39ebd5dbb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2edf0814-3492-4530-b526-4af717527363"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c9b9e2a2-53e2-4d41-be25-7dd47d9d4789",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "662f80e3-7d18-4f70-bbd7-a3e47109524a"
                }
              }
            ]
          },
          {
            "id": "f75dab23-262a-430c-a3db-5529ad952557",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1df046f8-5302-4a6d-b864-2d70f1d67e6c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3546a2af-27c6-4914-907b-6f4ee763ea8a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3583959a-5556-458f-ab87-b8af7a26f4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "da4eedc9-5f8b-4832-9ba1-8baea07d0f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1766d6d-0188-4dca-9173-95793e800a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1144a2-b234-4665-ac06-ec9ed42ca495"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "49a2f8d2-a7a0-4cd2-a45a-a5c8843ad78f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "960a037c-775a-44c6-8d91-bd18cc041b94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5074553a-a281-41f4-9197-255e0ee5f87b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f6e8af1-ea48-4cc8-bc38-4353060fd8ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c08f446f-d7de-4940-a2c9-7929885a1af4"
                    }
                  }
                ]
              },
              {
                "id": "3c196a63-bbbd-4abf-8288-669bc099a3b6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9dbc86ac-20b2-42de-9321-02bf83a39790",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cb4078d8-55f8-4d96-a27f-454622807ba0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75934603-7673-4bee-99f0-aa9f870431dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0f6577ff-9845-4a78-a6d6-db6221b5baf1"
                    }
                  }
                ]
              },
              {
                "id": "862b38e0-01bc-4a36-a294-74d311be841f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8acefc6d-9659-4480-87be-47ba2709a5f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b76242b-aacc-499e-8a62-f6c45698f6c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98e4fe72-f351-4264-a272-279e8a57054d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "77564771-1a61-49e6-b1ba-5c4266ea75fc"
                    }
                  }
                ]
              },
              {
                "id": "8ba251ac-e1a9-4d6e-8ea5-a50f11d665bd",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0943a57b-c19a-4451-b081-2bcb6986aa1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0bee2660-561d-408f-8a2e-462b796baed4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0d9baa9-881f-4efb-8d63-4cbe90a6511c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "bc2c7537-7f9b-4536-8082-8e18c20fbc53"
                    }
                  }
                ]
              },
              {
                "id": "b097bc94-a033-4437-98c7-67869e34c536",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f56af86-aef6-414d-8eae-040bcb68da47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c89db0ef-d640-45b1-ad2f-f32c5027c88a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8c2ef0a-e2d5-48c0-8dc5-53875263105d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2a45baf6-2735-4164-9ebb-ec9b01c9e933"
                    }
                  }
                ]
              },
              {
                "id": "31c75fb4-c5bc-4418-a21f-f40840001fdd",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20f4bf46-8180-4a2b-95e2-c3b341ef1273",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5acfc270-c6c1-4245-a854-393caff44cb8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bec620a4-f8e6-4f39-af52-801280a59b30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b2e78381-4dfd-40aa-894b-62d9b05bdfad"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f9e20ccb-e253-46c9-a345-8419e8b82eaa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ae8ff8d4-b8a7-40f1-8fc6-ec0a33afade5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1761c46d-084a-4c39-8354-ee261fbf076b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d3c88ed6-aacf-4e1e-bb98-a6ea3b45100d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5571df46-5a27-4ce2-9c04-7d5a5214d8d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d901a21c-754e-40e8-b9c0-134b6128f107"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "55fc382b-1dc7-44d8-a8da-86f3bd7a4ac5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd58ec91-564d-4f10-ada2-ddf5f8800b36"
            }
          }
        ]
      },
      {
        "id": "965a59ab-d2b8-462d-99c2-ea0960bba4e4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5838dfe4-29c3-40ca-bc52-602c4dc6955d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08fa164c-a79b-48aa-a577-8ec64301c0cf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e7d11818-4e3f-4ed7-8c5c-87020627a4b5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78264ae1-145e-4b80-99af-60e40586b75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c006f157-3dc6-4564-ab0a-4f93b9c88a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c222f06-004e-4be0-90c9-1e29a9092b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa78464e-293b-4854-827a-541270581205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7deaddce-6ba1-4aff-bf1b-85076e90b1e2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a71795e-d76d-4d80-97fc-31f381c37944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "911d485b-c577-41c3-ba10-eac2db992687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83770a4-dc8a-47dd-abaf-b64970ccbbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "428ecc9f-ffa9-4162-8ea0-ba13db75982c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33f88db-da2a-40ed-bad6-758d9cab895e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae982034-4ca5-415e-8ca4-4aaece05c97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8522b6cd-7445-4d1a-ac30-bb53d9a1ae87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1c1ab6-ff7f-4e40-9d61-97687c074e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da0bf891-bf6e-4d43-b117-89c0da9948be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4d154e-ba59-48fa-ba9a-b80fb3461a07",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271e852f-36b3-4de7-9974-7228ac3a4e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30cbb87c-38f5-4c01-bdf5-7240231691d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3dc0a49-7b52-489b-9c31-5da147011a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb95559b-e402-443c-8eb4-a71326262351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ae02d3-8dd5-472d-9274-4e243686e191",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c658214a-cb7b-426b-bc85-e863b381e248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad303e7f-b2f2-4dee-ab9d-845b32ccb5cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c42c9e2-efa9-4f25-a17f-673a6969030f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac03ebd2-f8a2-4db3-b1a1-6b5d06e5d9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944fed17-019f-43c8-8b30-a9610772d078",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0320a32c-8c91-4b40-a4aa-ed2e5e0fc296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c20fdf54-cfd9-4f91-a567-17e1e14cf4f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d256f170-cfd6-4d4a-864c-62cffe6f497a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "284d5a8c-840f-49c9-b802-73c9c38229e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5abcd5b-0a0a-43fd-9f14-196c876462f2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a068ddf-8b45-4092-9dda-135b9a9e47e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e3c081-40d6-4bc9-8fcd-1ffd8ae204dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd48699f-7746-4be0-9b7f-eed0bca228d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fbe9158-19e9-41ee-af5d-d12b3bf09454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4590a52b-eeef-4e45-8772-275e2c6dd818",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235127cc-36b6-48b8-aefb-345f581dd5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc47065-2d7c-4a0e-84e3-776f8702d014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97bfaf76-d967-4999-bdc3-16559cd4dea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d82c368f-a6e5-4406-a6fa-c3a866f0a6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337968f6-7aba-4a62-b319-31991586360a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5574e0a3-5d3f-4f84-9e33-d32bdedb2de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fbd3d79-e0a6-4d65-94f2-96383ee24ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab22779a-e055-4084-9cd9-9a057e60f0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52d794b9-f39f-4c5c-acbb-50c487d804ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b75d9e-0d11-4d27-a237-135841976eff",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990ad1a8-1ff8-44ce-b342-e6d2bb28de20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e2feac-9f3d-4122-9c65-8617d98ab5f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b50da3f-f377-4580-b967-bf56a3bdec25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "659e7a53-06b4-4c8a-826a-05190f7c83ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3852eb62-e282-44f0-8e7a-b189f85f0c66",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a8b2ce-3164-4561-b234-bccd84aac4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "177df703-dd7d-42ef-af74-608baa9f0aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2432b030-f852-486d-90a9-dd53c79bb6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b146e4-bdda-44e4-a640-3c9b8731a132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df36fbb-9bb8-4b2b-bdc3-16a8416921ca",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb1dda6-4582-44b3-a22d-27c5e5f9a105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5dc88ee-b7ef-4391-bf36-511fd6e5612e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d4790c-ba71-4f4d-8d0b-2d81fb02bd05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66f01b27-be24-4bed-8035-c31aed64ba86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc8c5e0-357a-4004-8f2e-d089e3dc554f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ee3055-a1b9-479d-992d-83f6fa664022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eafed915-e0e3-46c4-a256-2cc113578b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03e3c05-41b3-4b3a-93bc-099bf078f925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c8273f-d5e1-452a-8aa4-30e551d5d2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec21b369-7859-4ca0-adf1-b24c71b811f1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c186f68b-cbb9-4fb6-b45f-d5f6f5eb37f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7188e7bb-cd94-4a3f-9e9e-7da3a8ff198e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d19343-6d34-459c-ad89-d01de45a265d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d2aa727-77c3-40d6-8ec3-8b6e7af23fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae28300d-0e15-4564-8e44-f068a753b38d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b4538f-35ed-42ff-966d-4d426bd3daec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc5e89d-d0ab-4086-be4a-948cdf8756f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81097d35-8089-4327-94eb-057ba90460b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a895e14b-a6de-4032-a290-8f51a87ce29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af936e0a-253d-4209-8950-658f840c0acf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee66497-17d5-4c93-9bf0-53eada42148d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed30d83-b552-42fc-92be-256cd17c3b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f27164a-2a2f-4566-8aa4-926b8f08b884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f780d74-b276-419d-ab8a-bb1d2475bb29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed9561e-9c98-401c-96d4-8d19d72924a6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8360679b-1294-4ac5-a388-3f1927c04f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb42976-4e32-42e4-88aa-8af83d44893f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea23667-b97e-48b0-bb40-306f2d22b2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2548d3-5800-42bf-b2ce-a02d42a19fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717de969-b464-4020-adc0-087fda01f30b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f25ac0f-afb5-437a-8604-97d5c4cebc35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b21f6f-3c5c-448a-b0b5-5e3236febbf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36b585d-3c79-43b7-b9ab-fbc3e5eb1ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0657b6b-06bd-46b1-8a30-405f4154bd8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c757dd2-d44e-45e7-9e50-a353d3530df6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be79e32-fa17-46bc-8830-c2f527e92ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81603d1-f248-47cd-9760-dcef791f3d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14eb11c8-6fa6-4449-9051-565ad8f638dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b084297-6ba0-441a-b226-92d86cb66952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420bef2a-2912-4c38-94ca-0be06365c186",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9420f989-0ce1-47ea-9157-cd8076c2242a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf6a6ee-1815-42bb-8b98-81d44b68abc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21fc401-ac38-432b-b629-c95ca741838f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "261b6b54-d387-483d-90c6-f7a6429bcf10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a49de9-92c7-45b6-a430-7805b5910dd2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9813fa28-5e23-4cfb-ab80-4ad9caaaccf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9f9394-f76e-4934-b132-f45fcc2ae624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1feeb8-1777-4f43-b642-334bb8d3cb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e29ab90b-d9e5-4c38-80ef-3c213c883906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e31a0e-acfe-4ecc-919a-16e1ba91a38c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c468ed-68ac-4d26-b3ff-a7a29b127700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ca8285-161d-4fb6-93f6-849af922ea91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d73112-7d07-4f84-964b-85e9ec082aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "761f8d89-6fa6-4eb8-9ffb-889cbd7c2049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e77bd2-cbbf-4970-bfa7-bfc4a10b17e7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "106858f1-f085-4921-bc73-0f57df9ad49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79310983-d465-41c4-a10c-b4a2f18387a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289310c2-e1b5-418d-bd99-3bbfcda92da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d45e44-33b5-4a63-ae31-51d0c532e924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b22514e-af07-4da4-9bfc-464857b323fa",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1deaf4e0-fd45-4c7d-a7ed-6d6ec64fc655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d198ff8b-aef4-4b50-b721-6c07aa016c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eadff52d-f05a-4b56-a80a-dccbfb86bae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4c3eee5-4129-4d05-9bd1-b6b3ef23c8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d846a4b7-f732-4e83-8d4f-53d7309a8ba9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9dd753-7165-4a54-9019-187143431a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4781a7ef-9a5e-4350-be7a-35a655a2df43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e9a5f3-29d0-4fa5-a5b4-409301620d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00a27247-b553-4e53-a9ff-1e4a62103174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd28d796-1c24-462e-87c1-cf2ba350ed2b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ad35fe-3144-4783-bcaf-104fb23fd3b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "809fa2bc-06ca-4e34-8f4f-67896b0935bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8f2e9a-b494-4e20-ad6d-6054fd26c094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b689b75-7913-434b-a137-e9a9b71c1f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3024ed66-575c-4d4b-8693-02609494457a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b7ba62-ec4c-47b3-aebe-de420fdb928c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea58b7c-0b2e-48ab-9267-534e03952054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afaa35fc-a1a3-4433-9d36-3c33fe7d9cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f6714cd-ec16-4a6d-ab02-ca598d10228a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5869cba-b017-4870-8100-ca4bf804b6ac",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f48706-2cbf-4ef1-8c7e-284f9d29e49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d886f1-da04-409f-943d-d078d597d8d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14c4ab8-fbcc-4775-b4ff-f89e116eacd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a5eb42-d68f-49cb-a4dd-62f273c660da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b98784-06f1-4405-bc23-bb78e5833339",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965a85de-1330-4cf7-b164-4236c0748896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a856f2b4-6f98-48c7-be78-3ef6003ebd02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e282a11-3f6d-4731-9b62-74199f6d119d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb5bd250-7877-4583-9e17-58eb49aecd44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdd761d-28ca-473e-b5b5-da799011c4bc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49db6c6e-3dbf-4aeb-8038-b6c24ea68669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9ad197-6b92-4859-a3aa-8e87de699126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37abee8-cd52-4a05-8fad-1a391507d1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "063cb9d3-ff02-490b-b45e-29b85dd7e80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4ca7bb-8ce0-4e18-ac60-9a9ad810a56d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658eaa03-3e84-4b95-a9cf-08426bd74292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "382f3aa4-1bcf-4ade-b75a-edf29c1c172e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a57eea-7e2d-4013-b80d-e5cbee852f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31786c22-465d-44e6-992f-54cbced3c0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d74cc14-1ae6-408d-999d-b887bcb3ab88",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac3bc03-f879-4a71-917c-3a96556a9c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28149ec-ef85-47de-aa1e-5e605bd37ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73436ac8-5c4d-4e02-a161-ea234b8d1311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c9d952-fae8-4a5d-8ed1-052f4bea668a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fdad2e17-b339-457b-9af0-fa0b97906b9b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ef5975c-36e3-49c2-9408-fadcb0c0bc58",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70034e25-9d37-481f-bd7e-c8ad7c284326",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ffdfffb8-9d2b-490f-8642-fd7904bcf923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6e07f3-28a1-4ff9-98b7-8b8a69d66804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4a3ea1b-f121-416f-8a69-aee7ad0de642"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9fe293d-4b7e-4955-9219-d1e67f3ffa3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2a5a785-0f0b-4f90-9312-e33c10bd58b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d23fe03f-f5ca-4d26-9e97-96075dca9670",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "653ceadc-000d-4149-af4f-dfd1c1b694b2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03b4ed56-83dc-4c9b-9777-a297d4f84ba2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ea5bbe87-19e0-450c-9b5b-b293f4ccb6b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "072d7436-bdff-4128-998e-0537382eda73",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eda417c0-12a9-48c5-8be3-76a421047d5a"
            }
          }
        ]
      },
      {
        "id": "57a14102-035c-482a-b1db-514b5da55948",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "7f1081ac-3657-4895-8397-7c7e2afe4b3a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89e6248b-ca44-4670-a19f-38764a60f011",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "72040d41-8bcc-4e9c-a285-8c1157d26b50",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892bf81a-7123-4edd-a628-c473156411ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79b71e07-ed5a-48d2-9abe-55258c254b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529516ff-e26b-4ed3-9d2e-078249803a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "23711317-4bcb-4db2-a73b-4f8013f27fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e108f1e5-1bbb-4738-a7ee-95e042e03e89",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da101a84-843e-43f5-bceb-c700d291f9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef3f5259-2de6-4750-bd68-0852a27c93d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b0b750-198d-40af-a61d-c440cfa5894e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbfd8527-9e62-46af-bb8e-dc917938519a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ac2a7d-b134-4c8e-a873-a8992ef31751",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "086d6909-f5fd-4b62-85aa-ce0f60f38135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30b60fe-125e-4e1f-a9e0-a3afb9d564dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf602a2-3a64-4d6c-93b0-88bd27ec2e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1182cc23-aba3-4128-95f6-e1ccee125315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2459bc46-832a-4fb5-8797-79a2b2fdc945",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc4a587-4225-405d-bd53-b0380edeaaae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2b0a70-47b6-4bf5-8b45-5c4dee8dea8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add8517a-a40f-402e-aedb-90ce5fa4033a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06ab6977-63fc-4d51-a0ab-68e12c96f4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62df01a0-78e5-491e-b070-8cd56605ca64",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d631c1b-b2b5-4c66-81bd-b9c6010aa5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41f7bf6a-ff94-496a-9251-c4fed4bb3a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e9185e-250b-49ea-a7fa-2ca80fe8c3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b5dd85-1e35-4bb7-a922-d7bda7a094d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22110d5-44c2-4bfe-bc01-a3c66124f078",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed59730a-8d61-4c18-bcbe-47aee8bd5c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0a4d17-b92a-463e-b810-c138dd368055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e089e6-a998-44d0-be72-b24b0ef58194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9a8f1a-5d8a-4e45-80ef-95937aa25f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecac090a-5861-4e20-a794-2f7b4752217c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7b3150-2d36-4662-b37b-dc1b8328a800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb75b70-f370-41e5-82c8-7918c9edd2e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ca43a4-1738-4db2-9c25-88706f2263d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba3c3a97-e53f-4bc1-9b9a-701f63729bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8690d4-8e85-4c09-8e78-95a66d25e6b6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33280b9-d1ee-492a-bba8-df9a5871b577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb34f0f-fcf1-48a0-9fe1-5fea40d0c021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1f19f2-59d6-43ed-a4df-f18097646b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ddc6461-5166-4a1e-9823-b1c25d9c588a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a42cc89-ddf7-4541-9eb3-26c68291bddd",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e47dd79-237b-4157-b147-c7a4ac052928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2625f1f-2acf-4736-8aae-5f70dda5aeb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ade8a0b-9d51-431f-afb8-ed6ba2790878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfe811e4-f207-4421-922d-5a5e0079ad6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a17e70-510a-4793-8633-6e03c3b30604",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de80b756-7a4e-4d4b-8f26-effbd2b1063d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7eaf849-8960-4445-8158-fe1ccf690ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48aa3f2-f3a8-4b03-b693-f0f09e2c259c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb3638b2-ceba-49f3-b7ce-ea640c052e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029149f0-cb2e-4d22-b16b-34c12c7cf086",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f089c0a-7e90-4e64-9d0e-d51ce5e0fc90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba86f084-83d4-4e61-8613-08943d3e263c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f4105c-9b19-45b4-8193-3d70ce3495f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0bbbd5-4dc7-4966-8bd8-ff1bbabe39ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e2b003-b4e0-48de-89be-0ea51a0b2928",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e887a9b2-28fa-4b67-9c68-148e4b22755f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47cddff1-7f76-421d-acba-6db6899a9788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c19a0cc-93c6-4468-b377-cfdbf445727a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "995283b3-7d0b-446b-b65a-9e5e27e46b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6db995c-5f18-481b-819f-04855541016e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "343db9a9-569d-4f37-8138-8fdc280b5460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5262d5ac-6106-4c27-b2a1-482d3d6907b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabd2dec-86c7-4c09-8449-736f78f7537a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "49ee5dc1-31da-466a-a96e-bedb41d156a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5cc4c5-1086-4b9b-97b7-4954cf87016f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f68b91-88ec-45f7-82b0-acd45a747f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "522e8021-638f-43df-ad01-62a89adca0c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d243d51-ea04-46db-99f8-8f3877f0e0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5fe990b-a918-4445-a9e7-57a02a8a6186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd8e6c1-af99-41ea-a80e-3dbefc7093d1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba57093-2365-4bff-a340-ca472db7cfc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4521e74d-773b-435c-99e5-72bdbf133222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da74264f-5e9a-4334-9ffc-3c2c1101dbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "097909fc-b505-40b0-b4ca-54e095c48e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ce196e-7d99-4a86-a3f9-cdadc8768bc6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afce4f1-d57b-4e7a-ad21-7bf6ccd88402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c214b23-243b-4156-bc48-436367cd2420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5507a3-c8b1-4caa-8434-0e846a8345c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc869b5-4648-4816-9e96-f4ee5beac8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5c52db-e94c-44e8-a655-470d7b1e6f63",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289354a7-78f4-4e86-a5c8-de8b1b2186ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c04a4453-d3d0-403e-9f3f-dbaacd07afd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05157521-b058-4806-9233-8cb4ece87cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6007d81-9a99-4172-a061-443305dac0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2084fa41-30c4-4972-b75a-89f29e1ede46",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8deb6c2-2111-4c6f-97b3-2f7068f22003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b15925a-efe7-4222-ad38-02a7e8252255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76691baa-3383-4bc1-aa5e-4f02be1bd9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "241abbf9-6aae-4426-93a4-bd464496a322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7090fa9c-5ca2-482c-8d1e-b7b600897724",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ab60c4-9cc3-4706-8fef-4b3c73ace595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa82a5dd-9d1a-45a2-b386-a94b2cdcd64d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c050512-2f3f-4321-9291-2bf909377ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc898e77-560f-4339-a80c-dd8937bdc1e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6576610e-023f-41cc-9a09-0bd72d7bcbee",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03114035-f776-4548-9d4c-6b218c19960e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1dbf8a-2d43-4cfe-b0de-00d958a882d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7710da8-1410-4297-9ebd-db74364bd1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "daecc71e-fb2d-4b76-ad0f-41e9e6cfffbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5178d988-da41-42b8-acd0-ef0efe22705f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144c2533-e356-46c6-8289-6bea0d9f95db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b5deb2-79aa-41b6-a59f-2a5f5247a416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78b8230-b715-47b8-8009-b40b28a362d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "425b0cdb-c812-46c8-8140-8625fcacb805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22068791-4a64-4586-ba7c-b38710586153",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "953696ac-576d-44d7-91c9-6031f2c440a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99f3e3af-f602-4fed-b2ab-bbc696f030d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e748d8-2e4c-4f8d-877a-46eafa7f8a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99274426-dd56-400b-b125-38d81d2dd6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2085bf9-004c-4bea-a4d0-43b33ff3a93a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e73d612-f72e-4b73-902a-8f24d08a4c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69883317-4afd-4ee4-a427-53efee4fa7da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50104569-6f6d-4c80-bbad-1c81c714db51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "716f74d5-2094-4827-be72-f6bebe624a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a3e502-b4fd-4f4f-9d75-126c32009239",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ffc252a-1981-4a98-b6a1-5520d2d97403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd956534-0652-41b7-8bf2-7a1f8592f171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556a9029-07fd-4ece-9a64-a1e29216a2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56de8bf2-af1c-43fe-bae2-de77cb32c124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff1376d-8476-43b2-b3f5-685d3a8fcd7f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b86698d-6000-41a7-84e3-25f2d7cced93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "559eb90f-1579-4d2a-8eb8-e32dadc46160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d0667b-f40c-4d1f-bf7f-1d0e9fbc3281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6c7190-0f36-4bd1-85a6-d22f2cada842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fdbbb9-a2f4-4d97-ba54-f03e2cc275a5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3e0e68-4695-4eb3-8f84-3474bbb06c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff9d8e58-25b6-43a5-9926-fb4a06b9cffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7340547d-f462-46a8-8453-c72e1fa30d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc94e3fa-bc33-4a53-9926-516c7ac15510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3613971-60a9-4455-82b1-9cbbbfc13c33",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b93a62f-b52a-43f5-b456-f31fcd15f932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a59b6f-82c1-45fb-9083-c51051e151b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12acddf3-9f92-467b-a887-59180a700c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54b7b5b5-7709-41e7-a228-23a628cbdee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6817f6e4-57b9-431c-8019-5adf2546cc08",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae11bb3-3551-4fb1-9df9-9010125115b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b924a6c-7f0d-42f4-a0c8-a3888f3f3011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6050b9-fc81-4bf8-94d5-58e402988736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "058031a5-a7ef-4116-aef7-a4903437432e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07cdf891-2f1b-4a33-a5e1-0420b91054e8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9975224a-4aa4-4c61-9e25-7ffd462b8f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7201de2-c1fa-481f-b7bd-510215ccf56a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350da56d-8826-4489-9b30-d69a6e6957d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b582a313-0bc3-499f-b49b-7769757e915c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75567e4b-90d2-4e33-8a04-48a82bfe4db5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c058d340-5078-4de2-878e-cb3ca01b9b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b8e330-c31a-4b8e-9940-7906a7e90857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa9c2a8-1749-46fa-b5d6-293b02221a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66456d60-819e-45ec-a9c1-4b9ab90095f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8362def7-71da-492a-92c0-61d1369c1302",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9244aa-22df-468e-a25b-ae5ee6a414ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9bfaaac-483b-4e9d-b267-0665d30ff97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbcdaef3-c618-4834-9274-9230f4325bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "816c668f-8e97-4c53-a7c0-dc55b22153fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ce1629-e8f2-46d9-9638-d5ef799fcbc8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a292d59a-bc0f-482a-ac34-3da52a87aca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42e173e-b8c1-423b-b512-58d0ef2d6ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4bc2e7-4d21-4f40-abe3-39b30bb74374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db7086b5-1365-4ade-a845-3a6d7306ebdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c72b42-c13d-477b-aad9-4858e5666cd4",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b3951c-b459-4bef-bf45-5233f9e2d2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ba681c-6147-4c85-a6ae-31deac1a7ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e7af8b-e679-4f10-87cf-8b7e19cbd9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07687fba-2fca-4fb2-9092-97eef88acad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be555b14-c5e8-469f-8afc-5d77a3cc0d8a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffd8bd9-24a0-4842-b68a-550ec1da0461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7580b979-5a5e-4282-b4eb-4eb3d697380f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ad9995-6337-405c-adad-54eedb903af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a419bdd-7055-4209-9a9b-bb6b6bf48b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae462ce7-3e4c-4aa8-b56d-06ff6e38e60b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1885c38-c80c-4059-8bbb-487ef0858ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "333ea3d3-1e02-4b44-970a-961f03fb5103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1dcc45-e590-419d-839c-666ce17b42c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec31da5-e252-4d26-9646-e55b97d6413b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721dd7f4-8fd7-42e0-b443-83887e84ffdd",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248503a3-1c28-46c8-babc-3e0b9eb10a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b7a900c-c769-40cf-a81e-dfd330ab43ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a999d6-d7ea-4711-9fe9-7a6aafd342f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7408ab1d-7591-47b6-a738-a59fd9ddd790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42625d4d-ca18-409f-be10-586c47285f96",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbb23ee-b1df-42c5-9420-0cb30bbbd0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf388b9-f388-4718-9d88-df3d5e085c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc52bc31-2c46-4707-b848-f5060fea7ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef531488-06ef-46b7-92d6-0935b021ac9b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0c1a9b6c-5240-44ab-8905-abcdc3374270",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2d9d635e-5f44-40c9-bf33-18e24dbb3448",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87552343-fa64-4548-af20-85c1073f4f1a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a21095e3-8813-486c-869e-19ca5e779395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bce00ea-2c5e-449a-8b88-92ff2d8eceb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7846c3df-6f5d-46c5-b34c-93f60816a698"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ced18e53-af63-464b-98c1-21ff0880169b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3a63b70-f829-4fbc-b070-d9373eca8406"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "de2f77df-d361-415b-a2d5-8d79349851af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c78187e2-0c41-4e31-bc53-f8270aae2d06"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d0973d1-1219-4946-8de6-c84ca18c00e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aa727824-04a6-4bc5-a7cf-e75846e1a878"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36361518-ee48-4664-8449-248b2ee21ff5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f88ec2a-7154-44d8-a12c-a2537e994026"
            }
          }
        ]
      },
      {
        "id": "fbc0c246-7d3b-46a3-b669-d0472b736576",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2e787028-cd6c-495b-a8f8-5486ee260e48",
            "name": "Negative Testing",
            "item": [
              {
                "id": "942d49c5-f569-407e-b97e-c446d3807a0e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1de9ede7-1863-4992-9cf9-2ee813dff568",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0eabec1-5631-45d9-b355-ef26f5642191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b614fe7-0bdb-4638-8ee1-c820bb4a6b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a60e43-3ead-460c-941b-7f112bcd5d42",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8883dc-4cb7-485f-8fe7-0d52f5660dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a95c54d-cf36-4aa5-b835-f3bf8c6e6331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1368724-a8ae-43f3-98a6-96e3869a257a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f88829b-fc53-4f5f-818f-5f7e16666521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f3db69-856e-4ac9-86cd-0214e9a2116a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0dc2492-804a-44b7-bde4-5cc4b36fb1f4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33758cea-f615-4672-81eb-bba567221991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "290f8fc6-82a7-4582-8555-f909e53ec63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e657106-8fcd-4da0-92c4-51356b1f538d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01b9b6d-8b8e-4f11-a408-34dcfecebbec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8907f10-d15b-4f2f-a16b-2449ebcac143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1605188e-57cf-43f9-bd79-eb0447b48a61",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e1c514-0853-4c7a-8480-9a001d7525a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "527419b3-68ed-4bf7-a9dd-f6bbe6356ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a12af74-4ec8-42bc-a8db-50148e57ec6f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592756a9-f7c3-498f-a998-dcecd11e05ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ac66cc-a5d4-476f-95ff-bf4117323240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8fa57b-055e-47b6-a20c-54b42737c63d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3dcda37-1548-427d-b320-6c5825ace511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69db5fcb-7d9b-454d-95bb-fae468cc76f0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2229cde-8cd5-4aaf-8fa9-32eb12eb7cc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f7c8330-56d1-45f2-8f90-351c24420bf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69e18b6-dc02-4369-a4a2-9fb9ea884b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3263d1b3-d4ce-4dc9-a427-098fa6b57ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77cab457-c66c-4c34-81c2-ecbb3c78fa49",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d847fb64-9636-4f26-baa4-b4b3afa46eb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b0e14e2-9a1a-4113-a7e4-d4de3beee440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d96f40-bd94-4402-97f9-241b39198ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a199960-5fc5-4c9e-8aa4-aa79d2db8411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd058bf-c27b-46a4-b1fe-21a4787dea71",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f609ee-280f-4e17-b48b-73037f0da48d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dd83ab9-21d9-48a3-8d28-2543dec8658b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "166564ab-98cc-414a-a4d0-500f8cb40c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f49e9aa8-6789-472d-a482-e1bb0f70390f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323ddccd-3fbe-4670-b0e6-300f027fd14d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5cb206-989b-4f9e-ad60-f07e5f22d626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a35c164-f12e-4168-af31-4052892e1291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7dafcb-8503-4bee-866e-594e928b2b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e6b987-4a8c-442b-8e5f-ff7848e7650e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0373a7-56b2-4bd4-96e2-87c0dbdc73ed",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9477ee21-ba83-4615-8e11-4444165b7455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aeb90d6-8436-4d2b-8074-af7fd5c1122b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be5138f-b0e6-46d3-a8ef-59a88805d997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bcca1cd-e20b-42da-a4b3-ec1abe0b3897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2573fb63-b2c5-4686-a52a-a3ee8f4600cd",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6304ac7-8797-4719-b93b-3d36840ee3c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b05ba76-c11b-4bbc-8c40-8a8cd08ead67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d0732b-439b-4e6e-9add-a38b1b70f819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c5e9ba-3b57-45b4-ad94-1ef44b5d3bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d5d564-a444-451d-8695-f2cbec229716",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d905d4bb-ceff-408a-b4a4-dae8cd92f73a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6315d0c5-0cd0-4409-bbe3-2b9876dc8cbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e64e11-682c-40dd-a0ff-1923775ca6e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b44f68-248a-46f9-9658-7ebdb601447f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326f7e36-704e-46ff-81d3-19e9e3c5d09c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052c5963-4958-42c2-9ec0-41e4bf4c6d86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77b60639-4863-4877-8431-26e8a78a45e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ca3aaf-9e94-4ed2-9788-0c5fd34416cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f55acd-f4b4-4446-ac22-d7c4a5c40c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f083d0-fdb9-41fc-af6c-f1f17da5d9c5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a991dff-9af5-4016-a280-cccd8619436f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8947750f-a676-4220-aa18-1333ef25188e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8171a2-b34b-49ea-bc32-262ae92878f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c6718d1-1ae9-49cf-bdbf-bad6ecb99a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67121e46-39bc-44f4-90d0-f8251bc46e2b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e217fbf-703f-4baa-8c03-fbfef00ba9fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ce1f90-8742-416f-b5ed-783a862205bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb78cb73-a8d2-431d-afe4-a4dfd6275007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d8eb4fc-69cc-4ae9-b558-2eded9a32f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4752dda0-1b0a-4d29-be69-9fa8fd2d004d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258fac17-c29e-40c4-bfb3-293e9b9e3eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6587bf5-0522-427f-8383-677e459da944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3bdf3b-df52-4aef-8784-883452f78ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69842460-c160-4583-aac6-c709d09c1ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d0bc7f-b480-459b-9241-5fdc44b6bacb",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8367a9da-ea76-4a92-92ec-808d77d647d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e263d89-32e3-4fb3-956c-21f0441b8e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bdee8aa-579e-4efc-a328-e3362e3141cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a5fb22-5a35-4da4-af56-c883d92d6bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2902b6d5-688a-4b9f-9eee-a11ff4d64fca",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b05e59-3de8-4536-b5c4-7e92e1ecdd27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e1a04b-3d1d-4f09-a155-da0fe1cf945a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d35ac96-32b6-455b-8cfa-07a7b311f03e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "612d279e-e17c-48c2-b2e0-058cef506009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfdf7d6-798d-4bf7-b265-cb86eb27b19d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05dc3da4-c567-4731-94bc-679b660284b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425667c3-63f7-4d87-97a7-9ee4e3548195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a66fc27-c3ea-46b5-9064-92fb3b1c27f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df9a2a56-19bc-41c3-8f35-067d96c80d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbc8fed-23d2-43a1-9647-d9a5d72e5d79",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b58169-d09f-4d55-a16b-706efcedf1ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd52943-7476-48f5-a068-28f9d598a0db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff90249-43e4-489d-9bbe-335c534c2084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "420ca63a-3e00-4355-b2e8-248f04298823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368b9b68-e47a-4fef-acd8-57f92701d1af",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e92843-de4c-4628-b95e-7d78fb30c6fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af7511d-36d6-40bb-81fb-3f0ec8588da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d994d4cf-2996-4060-b0ae-4ebae4b3c8a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2a6bc6-0b63-4f11-937e-5f93408f674f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a5482f-af82-4190-87ff-0453068bfd22",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7394e1f2-9caf-4032-9566-e2ba5829432a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5c22063-e5f8-4d83-897e-b255caca3641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d740e9d-dec0-4af2-8989-ae25acc028f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "761442d6-bfc4-4f4d-afa0-81213b7f4f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11c7b87-b049-448e-ba22-f979704a7191",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2c8451-1e4b-4e44-ac9f-4496c4415076",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecf7b975-8c36-4042-98b7-482839c56f6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f832d452-62e1-461b-a19e-20f268d88433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1f767a8-70d4-45f1-8718-9f5b90740850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad8f809-1dda-4fb1-9c7d-6da0f5772cba",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1579659a-9d2c-47f5-a061-371be7eb6946",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eda432b-c9bc-408b-851d-c101338459e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0169ee8-51a1-4edc-adbf-0d864a2055d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2888a8da-656d-4b09-bc63-e5fea1499b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4946f4af-a15c-462b-a2fd-6275c9be74cc",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267ba959-c17b-4a09-a6e0-a1bc2736c714",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95efc418-aac6-4a01-9483-21f019eeb57c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d15cec-0d52-44b8-ad9b-30227410fc6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5758f039-bafc-41b1-8bcd-b8c14f7b78c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ae3cb6-824e-4afa-ab4b-e39525bc9b8a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c817e91c-c27e-4ba7-a462-bcfde24e49a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb5d644-8354-4001-a396-355516cd7b4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3bbbbf-1352-4461-b261-eedbf839f630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be1c5874-7ebc-4291-8d5e-d3b04ea36d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5594523f-65cd-40cd-b635-789fc3dd66fc",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f41e525-c4cb-4a01-ad02-ed12e0b8d0f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42dbe357-4d85-442e-95bf-9bd9a7964131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6d546a-e169-47f2-964d-4d58941d4b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c586f9-8f5b-4fb5-b547-04bf0b7adf78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd41f3e-fdaa-4521-8814-6bb391f47981",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02560e23-c781-46d3-b7f3-66f423dee621",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40145d99-7c17-48ae-869a-a3faace34516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8f4123-9c57-4388-9e96-9933c42390a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40cf647b-6f2c-4a4b-a615-b90b10a3a83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13bbb53-b525-4957-8773-9b92a3e4a1e9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2786d023-1495-4fd5-9815-a6be7269278b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58f9b986-bcd2-4dfe-8f49-8253ac2768f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a621ac-0aaf-484b-8ab3-37cbc3bdb7d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1abe41a-69ae-4e3c-b3ae-22745779ae15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6016ea3-4045-403a-bb3b-b64fecbe9904",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c52bc35-90bf-41c0-ab66-944297d5f059",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f01d056d-da6a-47f6-9786-0ab3b98c5d19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44fa2f35-2f5f-4112-a636-f7bdec519b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e3d013-f550-42d9-8ff4-1c290ecb0f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c69480-847a-4d9b-bb91-c75e8bbc86ca",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fc4a81-eee4-43f7-a8eb-9ab6d53c7bba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33836d1c-d650-4fae-9d95-baf56c433d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf381910-9d64-4af4-ac6b-03c12a3d9a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c31f52b-3171-4f88-8702-e413e341bc5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98954e8b-49c3-4cd3-9533-849c65c4b6ac",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f962b19-9dfd-42b4-9b1e-1f84b3a9f917",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97639b91-09b4-4ad4-b2b9-a48e5e6e1dd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c1c01a-5190-4f78-8c70-25c2e623fff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb95c59-bcd1-4dd8-8a0c-da66bad3adb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18fd9603-16d0-41bc-83f7-e7fc5e9b66e6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2e8577-5131-44fb-b1ef-5ed15b8ef660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55adaec7-7704-467d-ab54-1e6c8c3618da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4afbb4-2f48-4b5a-be99-34503268fdd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e1e8b1-9834-4ae6-9fde-03c8f734a6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd62f58-a870-49d3-a2bc-0829a6c11001",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19279beb-7c81-4aef-a4ee-5e7f4f512872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d483e82-23f7-4154-8812-6d9defceaae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bea2fe1-0936-4bd9-8469-00551b51cc22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76458fc2-000b-4dec-9f6c-8669a7512d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78b0d25-e114-4f6f-873f-b195973352bc",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6173df64-817b-416c-92e0-d5e00b57971d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7088e93-7164-43d7-b0a2-68884a245e0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f414c392-ac86-4e3f-aa49-9c6b5359ccf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58eaf9b-be22-4c06-8f67-44c10e968578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f412b7d7-b32d-4e4a-b717-fb82009f474a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12080f3b-0bc8-488a-9ef6-702525145faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8dd9b8a-fa99-4496-bddd-33527ae2ff31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5cf763-1b98-468e-ae46-4b7a880e981f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb772e6-b4ec-43df-8823-074c65eae9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cb0778-d93e-4008-85c8-bafeb2473bc3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5803afd0-d88f-4520-bbcd-081c3fe79ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f879bcd-e186-410a-ab96-b53e54c896ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9ad16e-4482-43b8-a98c-7cddea452513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e5c5bec-17a3-4417-8d70-91644ec4a232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eaaaccd-d9d6-4313-9ff5-a1209cecdd41",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe580e7-e418-4a07-9704-67b2f8b8b0fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814b3f98-6474-4ce1-a7f9-a7227e1fcd04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f877172-d5cf-415c-a95e-b2ee6177c2ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d76f2d0d-c87d-419b-91e0-faef2282c506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4afd5d-4eba-49dc-8f0e-88d4b22069ea",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6472e2-b816-4757-a27e-edbf463f70b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34991f29-9151-4de6-a88e-5ba771a2eec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5cbf44a-7f21-4a31-8c1b-bab2a82470f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc4ba6d-912c-4abc-8709-c67c9a998df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07eefe0c-7c16-4323-9924-6bd11a27cd7d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a348161c-034a-4cdf-821f-7608d1647102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eccad865-fb29-40d6-bfa0-663ccb7fadf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e2ef66-f8cf-422d-a9f4-32e03762fc79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16030dc0-7823-4900-88b2-75536fa536e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441ee04c-f7ce-4440-963e-e463afc1d1d6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafc596e-0d33-4ed5-8f2e-a6510e0b2bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e7c6988-fc69-446a-b617-eb3a4750f8c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e9e250-0552-45ab-8233-351b1adf134a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0097221b-ad1b-47e2-b150-bcc9f407be32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d47cdd-c0fe-4186-b869-2f7d23c6999f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc85b774-dac1-4280-9fc2-c115666f5c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ede67e-d1bf-4126-8d60-c424a55e0650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35dd6ac8-2964-4ec5-821f-cfab090d78ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "953a1afa-31ba-4078-abad-d342546125e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063d8891-febb-404c-b941-f8520d1c2319",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deadc9d2-3bc2-4437-b349-e03db4843deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c143098-845c-40eb-ac85-29ff3cdf6b0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8348d20-c250-48f8-8935-5e1f7fdcd886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4004926a-8f49-4979-9e06-8d981c877d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21568343-903f-45d9-93ae-d88c74ac7ded",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3933381-8937-4421-843e-a7849d4a75c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c88b0a68-894d-4755-aa5e-b97d7213207d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d8a9c7-8dbd-431f-98bd-2d6db0b82ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd0bbcc-1db6-4729-8b8d-465df9ac5c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42597eb0-ee53-4a40-b4b6-276665c07d96",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d450920d-e4b2-44ef-90e5-1208cd6cca1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "609e89f7-46c4-46a7-9c9f-aa1c14e73bae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "092d1042-3557-4f1c-929f-092842770036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f11dee67-37b7-4238-860f-95068713126d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d55cb5-7e0f-4de5-8522-5918115e809d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd66aa65-70b9-4b4b-b879-e6378c2e3019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb7dfc1-9b52-452d-b4fd-d17b2d40f6dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe03d90a-f02c-41c1-b94d-43f8576df079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e36a55d2-349d-47c6-a48a-33f63e32143b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2eaf713-23a6-4004-b42d-dd5bf008c98b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b59668f-fdd5-413d-817e-ecd4892fe459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42841d59-e4bd-4419-becc-f3232b395932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c611194c-a3ec-4ea2-92a4-05c85cf88488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae101c20-e539-4f32-811c-0bf5b984fe6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613e47ca-5a9a-486f-92cf-e7f516a80cc1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e311a03b-0cfa-4f79-961f-829aae6e6c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f36a5f6-a1d9-42a9-9e33-7b5b1775471a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6645bde6-415b-4875-9077-9ace29ff31c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae354c32-90b3-406b-98e9-97019edf1916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59caf13e-5e4c-4a25-94fd-62767227e781",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f104a3-d00a-41bc-815e-5a869abf1893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61944eb8-2269-4a9e-bc26-a2522ebe29e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f13209-9861-4a11-94ad-5ec5e295c02e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb953674-7364-4d7b-a5a3-56db841c13dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f399ba-4222-47ae-b5a6-fc196e63615d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bdd86b7-fd9f-431f-aeb6-521a08ff4a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f925406c-9180-4b4a-ade8-c442174ee6cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7a1798-9b43-4336-b2e3-f33cc0b40ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6cc36fa-f2de-4a5e-9b02-967554f43ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bbc24f1-4cfe-4a05-9292-5a0962da78e7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683bc98d-8a14-46b5-af80-7f0002b680b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ada77e-db53-476a-8eed-fe61ac128dd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8398ad-493e-4e6e-9375-01ec455bc24e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad15a477-7083-4263-96ba-bbf7cd03596b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6998f6ea-4771-4b37-97f3-b8e51633a3a6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813c40ab-9243-422b-b641-8bc77a9b9338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0ec996-4f44-4b4b-91ae-28760e76244f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3025f280-b5e3-4a25-8895-66363640a63e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "755d9707-efef-4498-b536-a071c84b112a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d821b9f-5dd7-4c41-a232-78aa281d63c5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436f5842-b71d-4cf2-82f0-e5a5a522b79a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e98e40b9-cd3b-4146-8931-c82aad390ff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2f583b-ea7c-43d9-8951-5210ace64140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaebad3b-c474-43fb-865a-510c153e4773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467324a3-e95e-471a-8494-732e0b955a42",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75389ca7-54f6-4819-817c-53ecbc5c1dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d8ef132-8e38-4f3e-8dbe-aa032464e9f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8031a7b-e83c-4e97-a759-3446e4c89766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b155105-e1e7-4129-90ca-4a20be69eb9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78bfba00-d522-4c5d-ac54-785fe3c6519f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8910ec53-be45-44fa-b40b-2e9c3ed32237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5f3ff2-20a2-4987-bbe3-38de928fbef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1192eaca-2d57-43f8-806e-9f04d1bf1fde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "560e493b-9ce0-4165-bd94-7d24fd4ffcea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ade7d34-ab8d-4fc3-8fb2-46c011f30ed3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdf7169-8409-4e8b-8bf9-be48c3b4e956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58bd6dde-312b-4dcc-b209-646107773f22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc6595d-b893-47d1-ad4d-19ad43750733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f67a3f3c-5029-4bc0-acaf-b25349113be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d5a6e3-4e1e-4179-958c-a76b9342adb8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0547789a-086e-4db5-964e-8031e5d0c6a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc5c878-5844-4aa7-ab0b-5189a65f6c6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3246c0e-c2ec-41ed-9e61-841a9ccd7e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de1f9bf8-a210-4a9e-a582-ba9468d5c15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9d3300-957e-411b-a2df-36088f61d04a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72583c3b-5a61-43e9-9b7c-1ad34554ee89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aba15989-95d6-401c-abbd-16209a6d6475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5475807b-6e5f-40fb-896b-59ed6f6f396f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf1c090-4e99-444a-b943-376146d19171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a424caee-006b-4e2c-9d41-5b4de83b494d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb2dad0-6f05-4b50-b0a1-144ee4775637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f167ebdf-b961-49a6-ad49-71d6e63d6d0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4bca3f5-872c-42a4-8acf-26febaf71879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6016e6e-7b6b-47f6-bb29-59d9f5f697eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383f9684-f1d6-42fb-b41e-8e5777fd9593",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83983aaf-8a9e-421e-9ec4-7030d229d038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7357fe1-11a2-4a75-bf37-1164d54e611f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbfc529-bcbd-4ed1-991f-ab232765ebae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f08288f-4c1f-45f4-930b-58290b4f8f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a53e2bc-9f13-418d-b67e-6ea94bf034d3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c952cf62-32d0-4e3e-9c7d-ca2345fb093b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0213d38-7709-4c77-b9d2-4dcfe3bc5216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b5ad40-10fa-4f43-b3b6-34d9af081337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba55113d-957c-4690-b92e-1c129547539b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb09599-776b-45f0-9ac6-ea9bc6af843a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d256bc-3cbe-4e07-92a1-71d30243eb48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0ea627d-9b5c-45f1-901d-571140683793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8be303-78e2-416d-bc3a-794b6b752488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c5b0c9-1775-4c9d-96e5-8921c3f86ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4be6568-b5c8-4884-9f33-fae8f7f808b8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c9e6dd-f6c1-4d96-9607-0627da0a5e9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f418b088-c308-4c9f-8399-5f8ee8639bce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ecf85a-1f6a-42fd-84a0-4d804f8c613e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e80d5ac-6b83-4d83-aeda-2df0a296d6d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806c13ff-08fb-419f-b65b-604686acf66c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b46a852-3ef3-43e8-a7f7-2252d99a28b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "439191a7-e1f8-42fe-bda3-9ecb1adf112f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d889a8f-9187-4fe2-bee9-1dcd6e772fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48902ec7-f502-4bb1-a632-ddb8875e93a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b762a10-707a-473c-a61d-232269ce4ec3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec48900-3195-49c1-8785-c134ebd4c01f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bbbba01-a70b-454f-aed2-1e050010be4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ea5ec0-f5fc-4468-af1e-73159aeb939b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8621a27-2ba8-43a0-8e55-584888660071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea161f5b-c637-4577-89cf-e70e06ea2bd1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5401486a-9177-4116-ae86-1ec3ab3c939d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9b24a78-523a-42d4-90c1-4c1cb84db152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f67bb0e-40c9-4361-99cd-2df48cdef515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ff04c89-0c5f-44ef-b180-d3131f905122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d15c74-2fd4-4262-9345-a78cc16ac4a8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3765141-16c8-4258-b770-d9c547ac7a2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24d4154a-7eb0-433a-a678-2da542909916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbdd297-3c6e-4c1c-b981-8714d9b91180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf4738f0-10a3-4e1b-b6cc-a6cfeee4d9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ddd7b10-41c7-4d77-ad57-1bcfaa8b3b5d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9f5a2e-dcb4-40e1-b965-7f542638dbbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0efd580f-0ebc-411f-ac03-e7dde7e8cda0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2c2a4c-b93e-4de5-875c-2dce21810672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f89936-016e-4099-9de9-fda1e03ccdc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a474dd6-06dd-4ad3-8680-5ac10c5cfeae",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfd2a65-fdb2-4e05-8697-5d26933455b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4abe513-88d0-4c76-bf31-dc9a75606a53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b848d42-1a82-487c-b463-91f8039418b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40717bd0-0389-4b79-819c-1f5e603034a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f3ed41-e327-4542-b1d8-8ce714199d79",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1678ef8c-91ce-42d0-831b-a2276b319b23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36903efb-04ba-4e93-bf30-56b825dda3bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50324d9f-1569-435d-870d-3a8bc68c03ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f2d1f70-21ce-49e0-a5de-8c681b6e77f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70d21e8-6ae8-41cf-8e72-219119cc850c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6426104-e77c-4bc9-b142-0df000b65eed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22a7312f-ded4-4600-8e5c-f3ab3dda09f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0b144c-bfee-417e-a132-ad4de7e30519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80858fc8-6828-4704-b522-386566303028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012e8785-6bb0-440a-bef6-ed385d59bb66",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad180e3-a963-4839-8cd8-d0842530db78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e83afb3-4731-4663-bc65-ca25c97087a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8733d89a-464f-40fa-af20-be26b192bb05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a1293fb-9483-4bc1-ae1b-d8f7d239495a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1d7762-6b0c-4075-ae5f-173821a847d4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f369778a-0e85-4527-b620-23d84693ce7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb418899-a1e5-4792-92a3-577a3eacd432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bda170-847b-4648-86d5-c7684a943016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fdbb16e-d91f-49cc-bf74-c6c121dacec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16786599-f127-41fa-9690-76a4bc7f8e58",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceaa242c-b25c-4e05-9dee-bfcce52e5260",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26bba8f5-c6a4-4749-9001-05286c276e75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119bc6a0-d33f-44b4-8c57-f71f75bdf6a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98fa6df-8716-4c28-86b7-d2505295b56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66257f9f-f95c-43dc-b949-b26606d2ff56",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de86109f-84e4-4138-9150-d9544e075fe2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b4b9879-54f5-4af8-81db-0b4a0cfc260d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "715cadae-cae6-483a-9b40-ea0512e5ec08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c08037-f04a-4f63-9b3a-01181d6f4eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a26400d-8986-4099-81db-70f763d730cd",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335b0565-0ca1-48ba-adea-a9f30c16727e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca0ba9d1-8206-4ecd-98a1-b959944139ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9f167f-6f25-49da-a245-bf3b81428ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03475bd1-328c-4544-8e7b-978543e17492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b822c8b-998e-4974-9b1f-e820eeb04323",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71efdbf7-580d-412e-b88e-49a371c4a7e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f76cc7b-b55f-4dd0-ae33-f64f218d2ada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78462305-821e-4859-8a9a-f5849febcce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11580b06-d846-4e4b-a87d-8c1cac3641cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f498065f-32c1-4d14-b113-2c6cf7efd4f9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca8b909-40b2-4d49-8413-7fc01b1c1e42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "767d3109-19aa-46a7-b234-46f9adf7248c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c81c56-8d74-422b-9889-ddf533a3eefd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc60c397-7de8-4d36-be5a-031f7b143d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38162e55-0df2-4fd5-ada0-4550c1aef539",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb110b10-925b-421b-a84d-feb8033b2b7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9a22dbd-41ce-4f6d-9e61-e0922ef6607b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ffe96e-2599-4dfd-8e22-2a3b2f613156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "982d8191-a9da-4868-9fbd-71a50965fa18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c468f6-108a-41ba-b9f9-9316b1f1dae0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc326d9a-c947-4f0f-b589-186fd890ff7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "475751e9-16a7-4cf7-96ec-e8910138375d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88742dca-1695-4558-ad45-20cbf9046b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76de1754-e71c-46ea-8c4b-77f7e494d692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32f7664-4463-4b05-9ae1-f77f5e1f4995",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4441671-3cd2-4df7-b246-fb93aad8d850",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4198d15-c90e-4678-941f-cbb896e2e478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c41a669-6840-4e99-9d84-52723aa7ea5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c11c3f1c-644b-4baf-a657-f03c279a2b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831bdfd7-3725-49f3-8957-173fb8fef9b7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8d52d8-24d9-4ff4-8790-3585b9e373fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54fa532e-25bb-405b-8689-bca159cb2aef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0df180f-7e00-4ce5-902b-4b067844ce96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f062444c-21ac-4966-bd93-48d4cfcd59f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28740b38-7dfe-420f-b0a5-31f426417f01",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44812615-17c8-48ec-b0e9-b4616e394286",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b13b0c35-793d-42bc-bd4d-86c823d72bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2471c56-abae-4244-8a04-03cb4a08ac31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3cc704e-7c62-4245-a1a9-4aa45eb92ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f89ffe-f1d3-4b80-9b4f-9d0ef0ffbcd0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a982c89-e661-4b0f-b657-7e88bdad30ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c23cd08a-7666-428f-8682-83e4a21a48df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d599bf95-8445-4991-833a-3da12ec5c516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e2b9fa-69d9-4e14-b273-af483bcf27a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c48f241-900a-4c4d-b5f4-445af754f234",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ebaffb8-962f-439d-a53e-9151a9cc358a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30e1b301-580a-4133-8899-e662f595e581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49972104-21fd-4da2-87c4-b226208e29d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b69a39-1575-47a9-8eec-6c07dd6d1252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd08b53-d9fa-44d0-b2b5-ee469bf497e2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b28531-c9fa-41d7-965a-f110ae820bfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4ec6c65-67de-4aa4-9b4c-db39ff6da744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a05ab3-3708-46b8-ae94-f7b409b72cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51810d22-f503-4f08-8398-00040d8127f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d1b674-8a21-4e5f-9da6-3235104ab04e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd60c97-782a-4847-8555-f6299c2f28cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b634a13-4fb1-4f7a-ab36-0eee9b233a91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afcc3c5-e6d0-48a5-b119-137240cfe9ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edaf2e92-bbb3-437d-8cf3-8f7825e780a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437e6a87-5e48-4996-bc37-a91c7e68a8f0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8634f96-98d7-489b-805d-7c21e1fef0d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1690dc83-5c00-4f14-af54-4e560280fe8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd6e9af-cff4-419e-9fdb-9be17253e07c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cc6f151-31c3-4753-a665-c72b2d3c50b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8fc1e9-dd8e-49d3-a22b-cf59c90c9b36",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b9d061-9c64-4708-b316-00679226082b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f50fc673-d1cc-4628-9c84-ff97eecd6a43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25dd78d8-0c7c-4247-9cf0-46e4388ae418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d8778a1-2261-42b3-8a28-f91fa6b8d458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902e5998-dd35-42b7-9f84-d83fd9862c05",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45894a0b-aa21-4772-b616-f7d5fb0166ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cc2b439-c508-49d3-840e-d3b1ac573bb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc834a6-b4bf-43e8-95bb-2e1ab0033e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "338d515a-dd9f-4f95-b0e0-d209a2607a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d7c829-b9dc-48d6-b983-254acf514723",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b522c94-ed48-4f6e-a9ca-d09b0dca892d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72038209-e2c3-440a-a137-21dd2899f006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41634656-10c3-489f-be55-3ef65067af1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f72bb3-bc34-45cd-9dc3-b351f66fff17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d46308-614c-4371-b310-e74d9934b3ef",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eeedcbc-be88-4c05-95ef-e7c90d9cd7de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01becf0e-b9ea-493a-916f-c0f529eb0806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a240c1b-fca4-4304-bfb9-a92aeaef5095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7155a96-438a-49fe-bead-3f4c76f024fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5ed18f-c847-44e8-9a3e-589133efd51d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36f70ba-7ca0-49de-902a-59079c958727",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b362d69e-8c62-4985-b6e0-66b39ecdd723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5510f1bc-8739-4e24-8f89-e678ce714e1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ddb3eb-7fd2-4759-a2a6-88f3997eb5db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7127b7-b9c7-423b-9c62-66b6d8d88b9d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cadea81-8b3a-4c7b-bffa-c3cf082d8823",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cddfea8-abf9-4dcf-868b-e3cb470e87a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66572c94-c405-44c5-9b52-3edb548acce8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df00681-8a72-4f2c-89c8-a092ee0a0cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9c5a81-64ef-4e3a-8a82-d7146d840733",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838a8fb8-6a16-4eb1-a704-9d0ce7224d97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1228cf4-bf98-48a9-8395-7f6ab54bd67b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0768324d-0620-4ec3-812d-7a84c9efcc91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e5ed813-0171-4de4-88ec-76bee43db1f7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb12b4e2-d7a9-4f02-a142-5dc30651051f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7714167f-0ce8-4047-900f-c043259c391c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc93d716-c345-49b0-b69e-2b82f1670d2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ba4eec81-c5db-4af9-879e-935c68acbeb7"
                    }
                  }
                ]
              },
              {
                "id": "ca64cfdc-2404-47f5-9cdf-2ad15c7d6330",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7d79d8c-0e9e-465a-9875-f4584058c9e1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ca1e93-41b6-4bdf-9837-ff5f4db123c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6c91dd01-2165-42ae-8201-a64039b8d08b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c08c6b9-3d6b-44db-b3f9-c4a1d85bc7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e378e36b-fe45-42e6-b46e-d6527a774636"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a2ec6dc-f53f-4746-8135-00e643de02a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d927fc2e-a2f6-46ee-a8f8-ec169445b4ae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "12557ca5-2a2c-4e4c-bc89-6b6a15b1e6c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd56ce64-11d7-47ba-8dd7-8bb145424d5c"
                    }
                  }
                ]
              },
              {
                "id": "19b3c1a2-93c2-4006-83ae-0dad5d1dd237",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ae5aa282-94ad-42d0-9957-8ac5754a5815",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b59898d-bc43-469c-bca7-190a0a857f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d96f8bec-1a4e-4f9b-825e-a90274aa8f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88aea76f-7946-460b-97d4-d296ffd65d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "004cb6a3-c79c-471f-a0d5-f16cd8dbf019"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9cb8a205-5525-4627-9c3c-b5c58cbef855",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8121a2ff-3363-44d3-83bc-0931bfb81666",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a603d58-3240-4bc5-862f-1366a3009394",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "aff1b7ba-622b-4e8a-9bda-b4ebcb6a3ce5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "767a3a0f-6ace-440e-b277-7261f73efef0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "911d9607-be45-46c0-aae1-c0abfc89a5b0"
                    }
                  }
                ]
              },
              {
                "id": "0ad5456c-537b-4d47-b88b-8386c49c41d9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc52fe42-d246-47ac-9d55-6e491e8fbabb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cdc48203-1b96-43d1-9a9a-60484e96522a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10a8f217-5ff4-4df4-9a55-9089b898fd21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1598fcb2-67f7-45e4-87b0-81b4329b1b1d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a356fff-8baf-4ecf-bc10-b3851e0a6f58",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3b8a9bfd-06ca-4b91-8029-cbeb0b844ba7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "635743ff-3fc1-4083-aac8-026eb8145d3e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27fb347d-6bb2-445c-94b0-436991bec5a0"
            }
          }
        ]
      },
      {
        "id": "46ed3bd7-7ac1-4624-8d62-4db26b528eea",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bcaed48c-6d3d-4e70-af7e-6e7559395c67",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e6f8b3e4-f5e3-4874-9418-b7d2ce84842e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1e76aee-d6ec-4745-86c3-3bdf615da78f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a0f912-ac02-4e38-8595-89ad60d50fe9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5207f98b-73f8-439c-a920-34c79a68437b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8387a100-8677-4f12-85f9-01266dbd6fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9202cf2b-99da-47ad-abc8-779dcdc8aeba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a10129b-ea7e-47e3-acf0-7cc211e996cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e36bdd9-3ad5-4ca2-9de0-0448427ca666"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a6b9e86-53a3-43db-a99f-859095593c47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f2eda10-4981-49c6-9647-df41772ae118"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47e552ed-8c76-4ca8-8ad0-ba144cd1d739",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "abcfd945-d58c-45ff-87cc-f16ca3c50d9e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80ac9bbd-8f8d-49e1-82c0-10423d918068",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d9b2c809-0f1a-480b-9edf-656aa674cb3f"
            }
          }
        ]
      },
      {
        "id": "a5d97115-4343-44cd-b215-2d0e535b474a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a50cf93c-a3b1-4a96-b153-dc06f07a4ff2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d2cceaef-a239-49b1-b41f-5f66687bdad8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "017babe1-2e37-40d3-9c4c-86e85e4dd1e8",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a173f708-a5d9-4494-ac06-837c8e7ee24e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c050072-cf5d-4bbe-9580-c71715096dc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0311acd-6e10-44e7-8f1d-8760f3f44c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0a1e069-6cda-4d5f-8876-ea8aeb3fe3ec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a96cfcb3-10a4-41c8-b6e9-199c850c2632",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "faa95dcd-9b63-4446-9238-1343be3505b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "724f85a0-85a5-42f3-9345-ef42533696be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd0d69ab-f86f-4600-852c-7ce47ed73114"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb9b29c0-4ad3-4969-a5d8-0ea1e2f74a2c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6f7ef540-2139-41f7-871f-80f3a5809363"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8337dafb-129d-4e2a-8bfd-878c99e857cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2bf8b2c5-67d7-48d6-bb21-ccfb40085847"
            }
          }
        ]
      },
      {
        "id": "f417273c-de9e-4dfc-9fc5-f3f8ff950e88",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6ef9b785-e9e6-41ad-a72f-f516e77d659f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15d2ccdd-bd87-482b-9b98-4839863c8a8b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "084923f9-e6cf-48f9-b6b0-80d77bae4a82",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d8b8fe-bc75-4d29-8b73-35f429333b55",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64c67731-9a62-46a6-a09a-82669c3dca65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bd2307-53a2-4354-8ec4-3e07f0fc14ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "077d8d9b-404f-4f3d-85a4-88464b3d7c8c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "688ca3e0-100d-45d7-b407-3af8a077b2ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b564475e-8e92-49e9-aa5d-704a9ac8133e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "000ef215-c56f-4359-ae54-357afe9c53c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45f8b080-a7d7-41d9-b6dc-d85f71737421"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a33368db-7189-42d7-a0c9-971b60840fef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2f6afb9b-529e-4cbc-8de9-af155995e901"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4830b7ee-7a76-425b-9214-9c6dc7f030c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "800be33e-eaa8-4b99-b485-51401c5bd471"
            }
          }
        ]
      },
      {
        "id": "bb10791e-7289-4e7c-8484-7674f7124a15",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bb93f6b7-e570-40d5-bc34-05459ead585d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30cb0937-6808-42fe-ad7d-ae77fa1b5b90",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b40ef723-9cce-4662-a7f1-8737f807ad00",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31c1365c-bf8c-4aa5-af89-92c6c76758c9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13f8ccca-0b41-422d-8c13-014d47c7bb8c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 115.28421052631582,
      "responseMin": 8,
      "responseMax": 4904,
      "responseSd": 424.311859735379,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698626074677,
      "completed": 1698626123479
    },
    "executions": [
      {
        "id": "313c0e8f-aa9f-4f6c-99e0-8cac2503b613",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "373d402d-9015-499a-8f66-9a03d03b9864",
          "httpRequestId": "37b3de90-fd2b-4b95-8042-cff478fa2aa8"
        },
        "item": {
          "id": "313c0e8f-aa9f-4f6c-99e0-8cac2503b613",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5aa86e59-f1e5-47bf-ae00-fc01b5c7b8d8",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 0
        }
      },
      {
        "id": "b262757e-10c8-497d-8466-be28b2380af0",
        "cursor": {
          "ref": "e41f3548-28bc-428b-8333-6fc80790db34",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e2ae5c9d-a63e-4c94-b3af-84cc22e0ced7"
        },
        "item": {
          "id": "b262757e-10c8-497d-8466-be28b2380af0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "17d1f43b-a37d-4cde-8b0a-1b1c4384eb74",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "ce2b98ef-70af-41fb-958a-ed7471550c66",
        "cursor": {
          "ref": "a12438d3-2077-44fd-84ee-bb0f8c87963c",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a613f81d-715d-416a-9d1e-68eb099d197b"
        },
        "item": {
          "id": "ce2b98ef-70af-41fb-958a-ed7471550c66",
          "name": "did_json"
        },
        "response": {
          "id": "992e6901-7b59-4fe9-aa02-921dc0747619",
          "status": "OK",
          "code": 200,
          "responseTime": 285,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda40f61-c5a3-44da-9405-89907cd0bd9d",
        "cursor": {
          "ref": "85b0538d-8023-4e69-a591-64d07b9134ac",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3912b7f7-fb15-420d-baaf-6f1b275f43ef"
        },
        "item": {
          "id": "eda40f61-c5a3-44da-9405-89907cd0bd9d",
          "name": "did:invalid"
        },
        "response": {
          "id": "1bb759cc-43bd-4a04-a175-422ae36a86ea",
          "status": "Not Found",
          "code": 404,
          "responseTime": 549,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda40f61-c5a3-44da-9405-89907cd0bd9d",
        "cursor": {
          "ref": "85b0538d-8023-4e69-a591-64d07b9134ac",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3912b7f7-fb15-420d-baaf-6f1b275f43ef"
        },
        "item": {
          "id": "eda40f61-c5a3-44da-9405-89907cd0bd9d",
          "name": "did:invalid"
        },
        "response": {
          "id": "1bb759cc-43bd-4a04-a175-422ae36a86ea",
          "status": "Not Found",
          "code": 404,
          "responseTime": 549,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261b0030-c1fe-4b39-a79a-82f5d5a5438e",
        "cursor": {
          "ref": "e9831b6b-1919-471a-a4bc-5c2a92773c37",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ad03beef-d93a-44e9-a7a3-9101fb754704"
        },
        "item": {
          "id": "261b0030-c1fe-4b39-a79a-82f5d5a5438e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a069b2f1-fd8b-4f64-b8e3-6abff4427aa9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 105,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22db01d2-4dad-4c9d-b790-bda6a1172b4d",
        "cursor": {
          "ref": "dc65aaca-2f74-47ec-98e7-c190ef52ec8d",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a5c85600-8eba-4d77-9e5a-85570c79270e"
        },
        "item": {
          "id": "22db01d2-4dad-4c9d-b790-bda6a1172b4d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c0b64f23-7e94-4488-ae22-37301611e48f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82a3903-2197-47a7-a2da-b6b65011488d",
        "cursor": {
          "ref": "9fa7979a-1ff4-458a-998c-4132209653cb",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ab44ab7e-351a-4363-9186-4fd63df67765"
        },
        "item": {
          "id": "d82a3903-2197-47a7-a2da-b6b65011488d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2c68a6e0-b736-4191-8969-83a7fbad0ad1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5f460d-6951-4914-8354-622de44060f3",
        "cursor": {
          "ref": "bc621720-11b4-4caf-a21d-9eabf886a4df",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "88621113-307b-4d1b-9b2c-a406f3068570"
        },
        "item": {
          "id": "bf5f460d-6951-4914-8354-622de44060f3",
          "name": "identifiers"
        },
        "response": {
          "id": "8cc660b0-beea-447f-97bc-eaa0c30430de",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e9ac77-d33f-4051-af5f-da149596bac4",
        "cursor": {
          "ref": "b954192a-7a0a-44f9-b049-bd603a7d4154",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "cd23bb15-9166-49de-9f4f-6dcd31255eee"
        },
        "item": {
          "id": "09e9ac77-d33f-4051-af5f-da149596bac4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3cc51a7b-c51a-4c10-914a-26c51253d6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd94d1b6-5499-41ce-85b8-473a129a0217",
        "cursor": {
          "ref": "1137d0a9-2b2b-44cb-9cab-d85fbc3bd09f",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8f670d7b-45f1-40a8-9c70-681cbc7b68e6"
        },
        "item": {
          "id": "cd94d1b6-5499-41ce-85b8-473a129a0217",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "edc483a6-0eae-46a0-90e0-1319d564b430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ff5e60-3c67-4a6e-b47e-3e0002a9c5e3",
        "cursor": {
          "ref": "d851ba5e-6433-4e52-8320-d54ad4883d12",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "11524d36-b4fa-4e7d-8923-6fde18d8d8da"
        },
        "item": {
          "id": "38ff5e60-3c67-4a6e-b47e-3e0002a9c5e3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4c359412-1913-42d8-b249-1508678ea272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e53ef4-c6b0-492b-86d5-e3456565bfd6",
        "cursor": {
          "ref": "7b12d582-6a91-4e93-a017-1c90b5da421d",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2ec3ca9e-ce9f-4024-9d8b-d3f2f14fd311"
        },
        "item": {
          "id": "a6e53ef4-c6b0-492b-86d5-e3456565bfd6",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0ae8f31f-ff07-48d6-a32c-8369898cd3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8ac1a0-8385-4c25-a558-a9d078b5c8ab",
        "cursor": {
          "ref": "47529791-76c1-4879-8a96-388f7a808e01",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3c80cf73-ad9e-4d07-9729-149d073fe0b1"
        },
        "item": {
          "id": "8d8ac1a0-8385-4c25-a558-a9d078b5c8ab",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6269f957-74b3-4429-9a1f-c35b581096b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e033a25-10fd-4130-bf80-cb3019e2d698",
        "cursor": {
          "ref": "8a2698c8-85ad-4329-9a38-04623e7af47a",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6ab56065-bbf7-400f-a726-6793ca7cfda7"
        },
        "item": {
          "id": "4e033a25-10fd-4130-bf80-cb3019e2d698",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e97472a2-790b-40d3-bebf-cd0ec086faa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a17bed-f572-4ab3-82d4-a1e0daf0d5e9",
        "cursor": {
          "ref": "d8dd967f-3455-449b-9585-eb098d422b95",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9dd0cd49-5289-427b-b160-5eff5dcc0386"
        },
        "item": {
          "id": "36a17bed-f572-4ab3-82d4-a1e0daf0d5e9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5a1bf807-f5d0-45b7-a645-6300636b995c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611e5195-cff6-492a-9f73-671436d903dd",
        "cursor": {
          "ref": "b652cfef-77c5-48cb-a8c4-823993d37bf3",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "84b85bbe-3ddf-4614-81fe-c7aa99717bb5"
        },
        "item": {
          "id": "611e5195-cff6-492a-9f73-671436d903dd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "02dbf4d0-e09d-4363-b189-53dbdedcf2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f66382c-e534-4a9b-84de-899432c27ab2",
        "cursor": {
          "ref": "93f7e7cd-893f-4643-8a3b-871bf6ec1710",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "79e6a8bf-762c-4496-8f31-bc9bc3d6716e"
        },
        "item": {
          "id": "3f66382c-e534-4a9b-84de-899432c27ab2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1539d2df-0913-4308-add8-b6abb77b6c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b093b0ce-c2d1-42e4-9dad-4ebff013eca5",
        "cursor": {
          "ref": "bd87ea07-2b66-436e-8c95-06534b558d65",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8249454b-b28e-47a8-83df-2e75712c75fd"
        },
        "item": {
          "id": "b093b0ce-c2d1-42e4-9dad-4ebff013eca5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "562abaf3-c906-48c6-b0a4-1f52223fa4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb55532-a1e3-41e2-a141-1965ec48aa28",
        "cursor": {
          "ref": "07270ae7-eef2-48fd-82f7-ffa537f3ace0",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fb65c5c2-280d-4442-97ee-63991a762636"
        },
        "item": {
          "id": "ebb55532-a1e3-41e2-a141-1965ec48aa28",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "39c9dd5d-36ae-4c57-9af4-c5fcda1c9ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf7ed69-d287-44c5-aba4-4baa0e91e4de",
        "cursor": {
          "ref": "e721d0d1-012c-4bab-8160-18632e9635da",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "909c9348-7722-4d82-91c6-c5d958909c0e"
        },
        "item": {
          "id": "baf7ed69-d287-44c5-aba4-4baa0e91e4de",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "dde2dab0-4b65-46c8-a880-3095f47d98ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8984d7-4616-402e-a630-fc99b0440882",
        "cursor": {
          "ref": "521204eb-e293-49cf-bd6f-d1e44cf3a7c3",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "dc793a79-ad24-4d16-b565-be3728a6a031"
        },
        "item": {
          "id": "ae8984d7-4616-402e-a630-fc99b0440882",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "77775045-205b-4c78-8c1d-33767c7d41d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9fa9d6-a241-4b91-a7ea-4b83b9121022",
        "cursor": {
          "ref": "5ca739a1-3de0-4c8f-a2d8-9a1f7427e1a9",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3ecd40b4-f81f-4a04-80d3-3f84b950b672"
        },
        "item": {
          "id": "3c9fa9d6-a241-4b91-a7ea-4b83b9121022",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "07a5b840-4d6a-48b2-a405-495bcf07af9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2006b151-5b70-40d2-bb0c-f2991a1e77c0",
        "cursor": {
          "ref": "ccb89e06-2a3c-4229-aab7-630f8e2edd13",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0b00736e-0778-4913-8190-1eb6c23aa3c6"
        },
        "item": {
          "id": "2006b151-5b70-40d2-bb0c-f2991a1e77c0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9822bb24-8702-4c34-a49c-8e6006acc15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767c1228-bed1-4805-84db-4236b7ee96fd",
        "cursor": {
          "ref": "2cce847b-78c0-43fc-8dde-ab1e85ef9f41",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "23245665-f6b0-4547-8f3c-ac72db2c02fd"
        },
        "item": {
          "id": "767c1228-bed1-4805-84db-4236b7ee96fd",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "142c70e4-6cda-4163-82d0-c9f0d2075cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2442599d-652d-4326-9e91-c699a19fcfdc",
        "cursor": {
          "ref": "263a033a-e319-449c-9a19-fd03044daf18",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f4cc3fd6-6d34-4d15-b1ad-e8cda76691f1"
        },
        "item": {
          "id": "2442599d-652d-4326-9e91-c699a19fcfdc",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "994f6a03-c22a-4d17-b818-ab27cc5d1dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604bfa56-9902-4da7-b893-06a5f073b679",
        "cursor": {
          "ref": "f0991bdb-0d14-4684-a091-eae2b75abc24",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a8e55348-cb2d-467c-8339-b864c5a7ad53"
        },
        "item": {
          "id": "604bfa56-9902-4da7-b893-06a5f073b679",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0a328785-463f-43ed-affc-85b74b05c131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083a9623-865c-4752-a05b-ce8902d7d3b3",
        "cursor": {
          "ref": "84153923-b921-45c4-bb2e-ef2d68c67d7c",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "df09cdb9-f9cd-4a4a-ac4f-b774f88ce924"
        },
        "item": {
          "id": "083a9623-865c-4752-a05b-ce8902d7d3b3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0006f07b-1db3-4958-bf38-97d1854da49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872c3117-efbf-4b99-be04-827302d4d41b",
        "cursor": {
          "ref": "a9a1bb64-ac1e-4ce4-b2a4-8cd820b9dffb",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "98dd6d86-5e2d-4ee1-b7f0-7bb4ba30d323"
        },
        "item": {
          "id": "872c3117-efbf-4b99-be04-827302d4d41b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "100d19c0-e2f8-4a67-87b5-5bb1e8a07e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2c223b-98f0-4efe-bc86-2ff1c416d2fc",
        "cursor": {
          "ref": "a38a9af1-4f5c-4e00-947a-7399c6bab4f6",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7568203c-06ed-46a2-ad1b-d93eea2b26e0"
        },
        "item": {
          "id": "4d2c223b-98f0-4efe-bc86-2ff1c416d2fc",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1a1b1193-83a4-49e8-b855-c00362899251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9650699-a437-4635-bbd4-8f5ce282da2a",
        "cursor": {
          "ref": "97ba1083-0266-4eb0-a4de-dfd255f3cec1",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "059e3590-650b-48ef-86e7-f6a103eb028c"
        },
        "item": {
          "id": "c9650699-a437-4635-bbd4-8f5ce282da2a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ad5715d9-bae3-4a0b-bd49-631af3233564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045a5909-3e56-4f15-80b1-dc3b06903860",
        "cursor": {
          "ref": "ebf8e170-ad60-4293-b30b-493ad7efad69",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d4fd9f62-dc54-44af-9fc3-3e3d3fa05158"
        },
        "item": {
          "id": "045a5909-3e56-4f15-80b1-dc3b06903860",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "bcc09ab1-0a1b-45b0-aa75-e438c0ecb937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04515e7-6a6b-4967-bc13-23d8a44889c3",
        "cursor": {
          "ref": "376087ce-c726-465a-86f3-e7d73c0a2826",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5ef65ad1-9704-43e3-8138-8f62f86ffec2"
        },
        "item": {
          "id": "c04515e7-6a6b-4967-bc13-23d8a44889c3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "13f00177-d45e-484a-9753-572d8f2d217d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75496633-a910-4161-9a9b-b6b6d167f60f",
        "cursor": {
          "ref": "3a57f43d-2005-44d4-bb48-5f968748dffd",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "05f59f14-a592-40fc-85ef-7007134a6f8c"
        },
        "item": {
          "id": "75496633-a910-4161-9a9b-b6b6d167f60f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "52838c34-709d-46f4-bc2c-9367da1fbe0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7c7d8f-65e2-4500-82f7-315f12628fcb",
        "cursor": {
          "ref": "a5e58c8a-844f-4f2f-9ab4-8b725df1117a",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6715869f-af3a-4b3f-9792-121afb6d6f97"
        },
        "item": {
          "id": "1a7c7d8f-65e2-4500-82f7-315f12628fcb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f237ee6c-4c49-442f-b759-338b735a03d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5994616-3399-48ad-af74-2d75f4c0ba36",
        "cursor": {
          "ref": "67c38a7d-233e-46cd-ad20-2c24e0f457d7",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b2f6b819-9e7f-48ea-a60f-8584fece3dde"
        },
        "item": {
          "id": "d5994616-3399-48ad-af74-2d75f4c0ba36",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "929ebe6f-2467-4ab7-8711-602a1150e1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50862f29-e5c9-48b2-ab4f-c2905dbe17d7",
        "cursor": {
          "ref": "3caea81d-5a0e-4687-8cf7-9cc383657310",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2cc4d538-99df-4f8c-a531-b8df532d8407"
        },
        "item": {
          "id": "50862f29-e5c9-48b2-ab4f-c2905dbe17d7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8c825815-dc7d-47f3-8ea5-863582abdb5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08dceb07-e4ff-440b-8f19-2fb1c9c6f698",
        "cursor": {
          "ref": "4796f4c2-36b6-4396-97d0-5de6812d1145",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a6346f6d-0593-4d2c-8e47-092688529f36"
        },
        "item": {
          "id": "08dceb07-e4ff-440b-8f19-2fb1c9c6f698",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "fed8a3c3-ca62-49d2-822f-267c3a518daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5da0258-6f25-44e9-bd52-a40070d9022a",
        "cursor": {
          "ref": "ee8b044c-d795-4115-b560-7fa3871d650f",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4eedfaa8-7f43-4469-8b1d-2dde9b1e0b65"
        },
        "item": {
          "id": "b5da0258-6f25-44e9-bd52-a40070d9022a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "43ccb5ca-0a83-469c-a39f-0a14f8164d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b006ed8-68f9-4ff4-80c7-b27690c06058",
        "cursor": {
          "ref": "0f57e604-9736-4fbd-8f61-0bbb165982de",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "dfa98156-682b-4a96-89f3-24b040067c26"
        },
        "item": {
          "id": "1b006ed8-68f9-4ff4-80c7-b27690c06058",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d97d60d5-2921-415b-9620-aa1652ae1830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673eeafa-661a-4418-8342-ebeedaa371a8",
        "cursor": {
          "ref": "30b6e67b-9fec-4255-97ae-ff3b678ed5a4",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "955329c3-64b9-4f38-8fa5-151576834095"
        },
        "item": {
          "id": "673eeafa-661a-4418-8342-ebeedaa371a8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c2a2c710-d278-49f8-b43b-328a5a5f311e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f968fbaf-063e-4c39-a2c6-015aa6d0b92f",
        "cursor": {
          "ref": "18324b65-6db7-444d-8078-85542ac57024",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c8fa5ff8-9914-4893-bcdc-933d3c672258"
        },
        "item": {
          "id": "f968fbaf-063e-4c39-a2c6-015aa6d0b92f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "05213125-30c1-4803-9aac-9a97bcd64037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25a692d-cbb8-4924-8f1f-81371b1f362b",
        "cursor": {
          "ref": "92c649d4-acaf-402e-ae57-29c6f0e16a12",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "979844e3-a83a-4ab4-8200-693047f6f103"
        },
        "item": {
          "id": "c25a692d-cbb8-4924-8f1f-81371b1f362b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "080cda2b-3cd8-4c40-8567-0fbd0b06b6a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d891fc-991e-42d1-9632-1e960f0ff36e",
        "cursor": {
          "ref": "bca76889-23ec-4535-b71a-f0464756afd2",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "69821083-8b2f-4f19-89c9-906ae32b995c"
        },
        "item": {
          "id": "67d891fc-991e-42d1-9632-1e960f0ff36e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "96032d8d-5938-4959-bda0-1974b5633c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1b4841-2423-4193-8ac1-2c1adc3f0cb5",
        "cursor": {
          "ref": "f0ff6289-1e27-445d-abe2-bbd8114d7e1b",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "06ae5d39-1e08-4340-b8c2-b2895df1da9e"
        },
        "item": {
          "id": "ce1b4841-2423-4193-8ac1-2c1adc3f0cb5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "38cc7d78-ffa6-4fcf-9510-125ee2d0341e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a703fe-8f53-4298-9e97-5d9c85597d23",
        "cursor": {
          "ref": "22753352-d17b-4673-b550-7845c212a163",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bf680234-03ff-49a5-841f-099df2ef13fd"
        },
        "item": {
          "id": "e7a703fe-8f53-4298-9e97-5d9c85597d23",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "098732b7-6619-4067-83a9-e38a368b927a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d42aaf-5c15-495a-a4be-4f471043975f",
        "cursor": {
          "ref": "20536241-8b95-45d0-ad6b-beb7dde26cd4",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2fb8d70c-5512-4547-aabe-6869b0fb0944"
        },
        "item": {
          "id": "e3d42aaf-5c15-495a-a4be-4f471043975f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "44d3115d-736d-4646-b8c9-bd2a15b22477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794f02c6-de27-458c-8197-96e86c7f2519",
        "cursor": {
          "ref": "f17cdcf6-654f-44d7-8f78-b37f9145b100",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f6d5bf84-900f-498a-8ace-5db1b2355fb6"
        },
        "item": {
          "id": "794f02c6-de27-458c-8197-96e86c7f2519",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "96c4704a-4622-4a4d-88e9-19ee29827754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59316400-0f40-40da-85a2-dc2b4c077db6",
        "cursor": {
          "ref": "5a6f4925-1eca-4480-a6e0-2eb1d9803146",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c1781c61-e566-46ae-bb9e-4bc7f4a7313e"
        },
        "item": {
          "id": "59316400-0f40-40da-85a2-dc2b4c077db6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9c759bc7-b24b-48e7-b934-f8d166c09529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff1bea2-e99a-4a70-a100-2c9c94dae96d",
        "cursor": {
          "ref": "ceca5fa3-65f2-471b-98ad-7165aa4daf13",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "48daf25f-5d1b-4636-a2e0-516cc9817b9e"
        },
        "item": {
          "id": "8ff1bea2-e99a-4a70-a100-2c9c94dae96d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "052f4cd7-169f-4e84-9729-820a7768ec35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfa7ec7-8ff9-4be2-b43b-12fdbcaf62ec",
        "cursor": {
          "ref": "bc5ad354-6f93-4685-b91b-85f2cfe5cd35",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3827bdfc-dd3f-4c5a-a4fb-be7833b84547"
        },
        "item": {
          "id": "7bfa7ec7-8ff9-4be2-b43b-12fdbcaf62ec",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "db6c9371-3507-4db2-8a03-ff07698b6580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256c83bf-fd14-4372-9c48-a20b9da3570c",
        "cursor": {
          "ref": "6e8b69c9-a942-43ff-92f6-8cfde3b7e09f",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "56cdbf7f-efae-4960-908f-e36ed862dfde"
        },
        "item": {
          "id": "256c83bf-fd14-4372-9c48-a20b9da3570c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "983fdf17-b699-4706-b9b2-0cb6d21a5bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156c9df3-0373-4502-b7ce-bb4c31a7330a",
        "cursor": {
          "ref": "6f5e1be7-203e-4ade-8441-6eabb84adf6c",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8642d2ef-0bd3-49bd-8fd1-524a171ea336"
        },
        "item": {
          "id": "156c9df3-0373-4502-b7ce-bb4c31a7330a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f8045dad-5bc8-46ed-b6f2-b1f664a790ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a269df-84e6-4ddf-838c-0171d84889e3",
        "cursor": {
          "ref": "8892edb3-58e8-462c-aa4b-df1f667d4afd",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "211a0718-05de-4479-bc16-b8f66d60c1b7"
        },
        "item": {
          "id": "91a269df-84e6-4ddf-838c-0171d84889e3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d78648ef-7a29-4c09-a978-2283053ac1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0734c1ef-d9c8-46ec-8da5-1e340cb947be",
        "cursor": {
          "ref": "a4448585-eff3-4f28-aeca-cfca377a5c4c",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "02ad168e-246c-4788-bb1c-58112ab38d23"
        },
        "item": {
          "id": "0734c1ef-d9c8-46ec-8da5-1e340cb947be",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "03fc5ab8-3a35-4127-aaf9-e9c4b4bdef85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b3363d-c9b9-48a2-9ba5-977b7c225283",
        "cursor": {
          "ref": "d8c86895-d4d3-4c63-9239-ba206cb7d1c3",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "558d605b-7f3b-4515-9d4e-163332e65ef8"
        },
        "item": {
          "id": "47b3363d-c9b9-48a2-9ba5-977b7c225283",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4940b36e-0c06-4063-b2da-3a03f0fb5fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1ab57b-5f85-4f12-b657-3f82d3f68a01",
        "cursor": {
          "ref": "fb83373c-0910-46e7-bdd2-f9caa7910c8c",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3057de5a-d1df-4a59-8fb9-1c694d19eec0"
        },
        "item": {
          "id": "de1ab57b-5f85-4f12-b657-3f82d3f68a01",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7ed47613-d112-48e4-a522-81e6efb169b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356eceef-6798-43f7-bf76-ea41bdbb23eb",
        "cursor": {
          "ref": "bf27eefb-5481-465b-baf4-82708aa4e112",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0a22afd9-7eb2-47d6-b4b2-2a33b8c45ff7"
        },
        "item": {
          "id": "356eceef-6798-43f7-bf76-ea41bdbb23eb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7a3e7b36-a73f-4a83-a96d-71a76aa4d004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ef11b5-8b88-47a4-9ce4-3ded53ffb04c",
        "cursor": {
          "ref": "0b1abe9a-8508-4941-89e4-9cd93f583271",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0b0aa764-1c5d-4b13-9502-28e77b6600d7"
        },
        "item": {
          "id": "a7ef11b5-8b88-47a4-9ce4-3ded53ffb04c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4d096ac5-27db-4d87-827c-a0599636061a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b4722a-1a1f-4ba1-8c1e-337328c4bd79",
        "cursor": {
          "ref": "1b800157-a977-41d9-ae06-0aa826f0ce73",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "be1c7e7a-df2f-46da-a929-57719bceb536"
        },
        "item": {
          "id": "a8b4722a-1a1f-4ba1-8c1e-337328c4bd79",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e5fa2b48-512a-41ee-9971-8cab34da2b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24c9f46-29b1-40fd-8a5a-c6a58d50341c",
        "cursor": {
          "ref": "d85575b7-2c56-475e-9932-6b0541b07b2e",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c6ae3522-29d1-4d0c-811f-7e5eb3a7ecfa"
        },
        "item": {
          "id": "d24c9f46-29b1-40fd-8a5a-c6a58d50341c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "36e91c7e-c03b-49b2-9461-2f60b9b7f84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e38f6cd-a9bb-4181-a331-d13d9c000f35",
        "cursor": {
          "ref": "80d02b80-8b02-4641-93b2-3f5b5e161b21",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e46b3ca1-b688-4b0b-981a-fb5751754fda"
        },
        "item": {
          "id": "6e38f6cd-a9bb-4181-a331-d13d9c000f35",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "817a77a9-e547-43da-8117-f878768be93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce578890-ff1f-43ef-b082-5d6898ca51ff",
        "cursor": {
          "ref": "27d167c6-73bc-4be1-840e-a147a972dea1",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "55dc2f8b-86f4-4bf3-a522-76146384aaea"
        },
        "item": {
          "id": "ce578890-ff1f-43ef-b082-5d6898ca51ff",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b92d957f-116b-4499-a6d3-7df947035c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f023a0-2300-4d4d-a1a1-3e308d887165",
        "cursor": {
          "ref": "178a7ce3-8ae8-4bcc-ac0a-a562a720913e",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2498c8df-610c-4be7-b9c9-ee8271cf88d2"
        },
        "item": {
          "id": "69f023a0-2300-4d4d-a1a1-3e308d887165",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4742028c-1705-4988-b7bd-4d28aceb02f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785be869-e668-4760-82db-b3febdb76b26",
        "cursor": {
          "ref": "87791cd8-4fa1-4506-a229-862ef178d6d8",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7f8f26c2-739f-48bc-a6c5-118c76554528"
        },
        "item": {
          "id": "785be869-e668-4760-82db-b3febdb76b26",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "22c6c20e-de08-4667-b795-71909cd2ebcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c048e435-d892-4ed7-b927-63da962529ef",
        "cursor": {
          "ref": "e4fde1bf-2361-49ab-b1f1-afdd9b18e6fa",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "355d47ae-21ca-450b-a1f6-d0a40ef1e3cc"
        },
        "item": {
          "id": "c048e435-d892-4ed7-b927-63da962529ef",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9d81905b-5899-4228-8f5b-696db9517fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7159439-7d0e-480b-8bdf-191b3e458fee",
        "cursor": {
          "ref": "dc2b06c8-b3a8-475f-ad22-f37781758c32",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9f8d89c0-0977-4a26-ab7f-46bf75470f2a"
        },
        "item": {
          "id": "f7159439-7d0e-480b-8bdf-191b3e458fee",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "85f2064e-eaf7-453b-a124-bafbc008a7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b9d4f7-f617-4b29-9632-f8f8eb957a38",
        "cursor": {
          "ref": "11f4c703-dbf9-411f-bcbb-0243db0d1bdd",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b0e38223-f1be-4262-9128-0e955f11ec26"
        },
        "item": {
          "id": "35b9d4f7-f617-4b29-9632-f8f8eb957a38",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a360c7b4-5ff0-4587-b26d-b4132639911c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb6b65d-4859-46e4-979a-eff821488105",
        "cursor": {
          "ref": "56d98854-48ce-45aa-8c64-76d069798e4c",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b2f1ed2c-b59c-4c3f-99e8-80f9f94d8cb8"
        },
        "item": {
          "id": "9eb6b65d-4859-46e4-979a-eff821488105",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1e95a0a5-aa0a-412c-a5c5-b895174f607f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220b7b94-5d07-4cf5-9b75-9a2a93c7e858",
        "cursor": {
          "ref": "3b24c1a5-df4c-4dd2-a52b-1f9fca3faa9e",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "206ef130-9ce9-47ce-9c6a-3299b3c73d3f"
        },
        "item": {
          "id": "220b7b94-5d07-4cf5-9b75-9a2a93c7e858",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b72e2639-46e1-4471-881e-211f78cd91c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b120fc-e74c-4b3c-8a2e-1bc57fe9452e",
        "cursor": {
          "ref": "1546c3a3-2110-413f-a66e-a62678e92062",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "055292dd-6c51-4566-804b-d02434e3c7bd"
        },
        "item": {
          "id": "64b120fc-e74c-4b3c-8a2e-1bc57fe9452e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7ea9dab1-8a89-41e7-a1e9-a3fcd77b9af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ccae51-7d4f-4891-b856-1c79f8029b7a",
        "cursor": {
          "ref": "c7cd6785-045b-4359-a765-ab81293631b6",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a425e4bd-dfb3-4de3-81fc-df9e6881a2bd"
        },
        "item": {
          "id": "62ccae51-7d4f-4891-b856-1c79f8029b7a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "345b9683-375d-41dd-93bc-2499087ae9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8241da-6f3e-4685-9a2e-0d7f0e44df04",
        "cursor": {
          "ref": "713c0ecd-01b0-468e-9d64-38603e243e02",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "85b5ad7d-071e-4efa-8f85-3e092f696b7d"
        },
        "item": {
          "id": "ee8241da-6f3e-4685-9a2e-0d7f0e44df04",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c44e71d7-fb0a-4782-8786-09aecc033844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9997bec-52cc-4624-aabb-dfc990c66c02",
        "cursor": {
          "ref": "9e77449c-fa0d-4d9c-a75d-518f3aab1c88",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0cde000c-92b9-4a3e-b5cf-6461606c7689"
        },
        "item": {
          "id": "d9997bec-52cc-4624-aabb-dfc990c66c02",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a0d95d3a-87ab-4967-b004-0adc7655614c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de223af-7bc5-469b-b72b-37506ce4c6f5",
        "cursor": {
          "ref": "a6ecb7ab-063c-4ea2-bcc5-caba3d3e102a",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e93a4da7-192f-4399-bf55-d629b8fa709a"
        },
        "item": {
          "id": "1de223af-7bc5-469b-b72b-37506ce4c6f5",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6d0efa3b-0366-464d-a85f-808cc78eea66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc19484-8ccd-4141-b11c-28ce96352acc",
        "cursor": {
          "ref": "0a615d12-3bf7-40c1-ba5c-79c2696ec45f",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ce71f73b-a5da-46e4-b229-e48b0d3b2d1c"
        },
        "item": {
          "id": "efc19484-8ccd-4141-b11c-28ce96352acc",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9b798b25-9ad6-493d-8517-82b7797f8ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dcc3ab2-b67f-4cc0-afec-8279b8bbe0a1",
        "cursor": {
          "ref": "76fbb562-9016-4ae4-bab6-9a78f029702a",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "981e324d-d0c2-4052-acfe-90291b168378"
        },
        "item": {
          "id": "2dcc3ab2-b67f-4cc0-afec-8279b8bbe0a1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8129806d-4a00-4d61-b482-bc56a6191e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541ec37b-d636-4eb1-8798-ae792eec3da9",
        "cursor": {
          "ref": "9309ce3f-54df-45f1-a272-a91d5418a526",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "dce64320-f5c3-44de-819d-9b40351b4378"
        },
        "item": {
          "id": "541ec37b-d636-4eb1-8798-ae792eec3da9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "471ecc03-b8ee-416f-ba53-6a97137779d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fb5b39-9a6f-4d94-8b41-c6a69d7c41e4",
        "cursor": {
          "ref": "deb0b7ee-0c5f-4c35-aab7-2234207668d4",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9d01835b-663a-485f-a23d-314fb4f94768"
        },
        "item": {
          "id": "b5fb5b39-9a6f-4d94-8b41-c6a69d7c41e4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6e518c1a-f02f-4372-9fbc-182f079791f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84bad1a-2d5b-48aa-b78a-28bcb0a683ab",
        "cursor": {
          "ref": "07ed301a-c09e-4aef-90e8-f376dd1e5cb3",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "de86e748-88c7-405a-8d67-70ce3026a51d"
        },
        "item": {
          "id": "e84bad1a-2d5b-48aa-b78a-28bcb0a683ab",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "65f30e9c-8b2e-444e-b6ae-5b3d154540e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c66710c-53b9-4d34-aa10-29d2f4ed4e3b",
        "cursor": {
          "ref": "b54214af-1372-40c5-95f8-7ebaef44ecb6",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "41bb7af1-4121-4bb7-9fd1-0c6ed45bc025"
        },
        "item": {
          "id": "7c66710c-53b9-4d34-aa10-29d2f4ed4e3b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6ee41e65-362f-4cd4-b5cb-7d7679f1cdf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714ef610-7c04-4f4e-ad60-362fe30c15d6",
        "cursor": {
          "ref": "5b01051d-b0b4-4883-8e11-966e7fb725e7",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "98c9a098-ff53-4769-bf38-a5b7b1773a8f"
        },
        "item": {
          "id": "714ef610-7c04-4f4e-ad60-362fe30c15d6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a216557c-8e81-49c1-ad4c-a62abf824c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e764bd00-cab1-41c2-ad7e-b9c3a8b44edc",
        "cursor": {
          "ref": "2d7b52d1-dee4-4894-a37d-fe079915b8aa",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f0503ceb-77de-4d84-b0e6-21bf9536246e"
        },
        "item": {
          "id": "e764bd00-cab1-41c2-ad7e-b9c3a8b44edc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "77f07e00-26a1-4659-9ff3-96adf34211fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768909b6-d52d-461c-9349-8f8e3af15c26",
        "cursor": {
          "ref": "d444926d-3aad-454c-bd06-13dcdef01c5f",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9defcad4-74b7-4f25-9477-a09be53aea48"
        },
        "item": {
          "id": "768909b6-d52d-461c-9349-8f8e3af15c26",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "939d37c9-b502-4dad-a9de-607989091978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae895460-f8e3-4136-84e0-f8012ebbea7a",
        "cursor": {
          "ref": "57fc8803-4b19-4b26-93fb-2c750ae063bd",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "51d1725c-e5ca-4933-bfae-e140b2752fe3"
        },
        "item": {
          "id": "ae895460-f8e3-4136-84e0-f8012ebbea7a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8b11b88d-cbec-48d5-9ba2-725d0aa30c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20b72b8-b58f-4651-bafe-61e8935163f3",
        "cursor": {
          "ref": "412d86f2-5fbc-4880-a5f3-b2a3ca31aa95",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "af5df472-10da-4b1f-b896-e57a20b8376c"
        },
        "item": {
          "id": "c20b72b8-b58f-4651-bafe-61e8935163f3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "bcb5422a-6680-4cbd-b42d-9ecaa1476374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e462a8a2-0cab-4f04-953c-b24469e73aa7",
        "cursor": {
          "ref": "83046b60-7beb-4847-b5b1-ca2383b85dfa",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d26df452-b11f-4712-93cb-dcb0efbb743c"
        },
        "item": {
          "id": "e462a8a2-0cab-4f04-953c-b24469e73aa7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d962c706-0ca8-46b1-9761-203b97f457dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf795d4-1ad2-4dba-9817-ed474b995773",
        "cursor": {
          "ref": "43449bb4-bc75-4379-bf69-b3c29a9655bf",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "52d5a363-0153-4d54-a683-6627d82dbe31"
        },
        "item": {
          "id": "0cf795d4-1ad2-4dba-9817-ed474b995773",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bc3f711e-656f-44e8-b631-91c2c9e1dcb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844d856b-2f86-4d63-bdc4-e535b2fc8999",
        "cursor": {
          "ref": "99c04c2c-8879-46e3-8c61-08bf9df44387",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "31fac7f6-626a-4a18-8d6f-e6438db034d7"
        },
        "item": {
          "id": "844d856b-2f86-4d63-bdc4-e535b2fc8999",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1bdaaa6b-8276-4ff1-a363-00a2c42579f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c00682-7db3-4cdf-b67b-3f96381d7906",
        "cursor": {
          "ref": "d2f1c2fd-7850-4d5a-b4d7-577a475dad4a",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "91a56c6c-e00d-41ee-8526-a8af5c7181a3"
        },
        "item": {
          "id": "b5c00682-7db3-4cdf-b67b-3f96381d7906",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1d77cf43-8310-47d1-83a2-84cbdac7895e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f28e41-278d-4a6a-bdc2-da0ae63962ba",
        "cursor": {
          "ref": "4f9e8ddd-2482-4dec-acc8-12f956543c49",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3273bb6f-1615-4c10-b8b7-6e739a6da6f3"
        },
        "item": {
          "id": "63f28e41-278d-4a6a-bdc2-da0ae63962ba",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ff7a55af-8c29-4b4b-a4fe-6d6631248864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f6ad77-34b0-4889-b44a-b94f2d8881bc",
        "cursor": {
          "ref": "947ad7d8-a9d3-4e6c-8db5-d639d2714f95",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c39e0d80-9c3c-4529-9c13-3274898c1fc2"
        },
        "item": {
          "id": "48f6ad77-34b0-4889-b44a-b94f2d8881bc",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "705f74ae-df87-4b6f-91e5-3289a4549bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f40225-99b7-42ab-a698-2dc183148b85",
        "cursor": {
          "ref": "9b469f7a-ca7e-477f-b672-48e0066abaf9",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "90a764f5-f3d2-407f-8c96-6264179a9b63"
        },
        "item": {
          "id": "28f40225-99b7-42ab-a698-2dc183148b85",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "06da85d5-2ff2-4b69-a3a1-f33473b5cfa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11f15f7-7370-4cba-a4be-b10b88b30a91",
        "cursor": {
          "ref": "57660e59-4c0f-4835-8a02-20298385f2a8",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cbf1d1a8-5247-4e90-82ad-7cfda1182034"
        },
        "item": {
          "id": "f11f15f7-7370-4cba-a4be-b10b88b30a91",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9019b34f-9bd2-45eb-b6bc-28e03c894f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba300c8-cf56-4ef3-8fec-a122f1d7902d",
        "cursor": {
          "ref": "e1aa13d7-d0fc-4562-a8fa-477ab58bc26c",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "dad86d80-efaa-43f6-b548-bb287b6f1c5c"
        },
        "item": {
          "id": "6ba300c8-cf56-4ef3-8fec-a122f1d7902d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "fade25ae-5cd9-474d-8ecf-5514cc45d876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f714e9-ed24-493d-ba77-2c34152a0679",
        "cursor": {
          "ref": "4a7c92c5-30b2-4519-a04d-a91b903bb48c",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a1635d0b-cfc7-4db7-8358-bf39321f76be"
        },
        "item": {
          "id": "87f714e9-ed24-493d-ba77-2c34152a0679",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3ac54d47-a674-4dcf-9a50-092f00f2b14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d3ada9-4836-43f5-aed5-36f62cb68d07",
        "cursor": {
          "ref": "75bd68a2-3084-4a33-8bbf-6237576120ac",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6d16395b-2eeb-4e06-b99e-5fd88a1d701a"
        },
        "item": {
          "id": "c9d3ada9-4836-43f5-aed5-36f62cb68d07",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "81333542-b3c0-4e70-b783-2e458838386a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c118dd-ec2b-473f-adc6-6a898fba33e4",
        "cursor": {
          "ref": "a1fdd284-cb5d-4048-bcb9-c77838c841bc",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0802d378-1dfa-45a7-b1c2-abd028be17f0"
        },
        "item": {
          "id": "f7c118dd-ec2b-473f-adc6-6a898fba33e4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4bbdd842-2eb0-4805-b866-737f62105242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3ba3c6-aea4-43d4-873d-edf2d016b2cc",
        "cursor": {
          "ref": "41e8e5ab-091d-4657-b324-0bfecc93c099",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "dd412e66-c3b1-4a8d-98a5-3a5a993d709a"
        },
        "item": {
          "id": "bc3ba3c6-aea4-43d4-873d-edf2d016b2cc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ab98b386-e619-441b-a3e8-edce6463b9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d840cca4-b5d4-4654-8c80-3c8dcd15ca5d",
        "cursor": {
          "ref": "4096a91a-5aaa-4e4d-83af-a341e9419a14",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "089bc7a1-9a66-4e36-b2d9-8c8df6f5c38e"
        },
        "item": {
          "id": "d840cca4-b5d4-4654-8c80-3c8dcd15ca5d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7ca0a063-107d-4b85-a49f-aa66ad3bc56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704cca4c-2506-4be7-ba9f-79bb39d748fd",
        "cursor": {
          "ref": "34eba4d3-c4d9-49c4-a67a-a8affe37ba17",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "67c9b846-9288-42f3-a96b-d88c9225dfc0"
        },
        "item": {
          "id": "704cca4c-2506-4be7-ba9f-79bb39d748fd",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "17823b27-87b0-4301-80bd-56aabd76571a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0345384c-371e-47d3-a6d8-fcacfeb19547",
        "cursor": {
          "ref": "e381fab7-8856-49dc-986e-e3652ddfba37",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ed69fa2c-e866-4980-aeb0-6dc2b33faa0d"
        },
        "item": {
          "id": "0345384c-371e-47d3-a6d8-fcacfeb19547",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "19dc6da7-864c-4955-815d-13f84a9aa492",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3546a2af-27c6-4914-907b-6f4ee763ea8a",
        "cursor": {
          "ref": "6fa39e53-a3f0-4488-9ae6-b41dd4c225dc",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8b5c99fb-718c-47df-80c9-b63ad26ee1c6"
        },
        "item": {
          "id": "3546a2af-27c6-4914-907b-6f4ee763ea8a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c12b8d43-2a6a-4912-91fa-c3307d09201f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "49a2f8d2-a7a0-4cd2-a45a-a5c8843ad78f",
        "cursor": {
          "ref": "39b4dee6-4ae7-4831-a58e-ce831260ad50",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "236afdf4-ce5f-448b-8353-6d16d20d5775"
        },
        "item": {
          "id": "49a2f8d2-a7a0-4cd2-a45a-a5c8843ad78f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "916d4b80-35f4-4df4-a5aa-f3b9b68b4be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "3c196a63-bbbd-4abf-8288-669bc099a3b6",
        "cursor": {
          "ref": "bb1f9d7f-29ac-43c8-b55c-1279a25d28f3",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "fdd36a42-e711-41b0-ac10-12b83145281b"
        },
        "item": {
          "id": "3c196a63-bbbd-4abf-8288-669bc099a3b6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5fc0ccb0-9b77-4d6e-b3bc-a25206737688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "862b38e0-01bc-4a36-a294-74d311be841f",
        "cursor": {
          "ref": "43499391-51b4-40e9-a32b-3d1b072c914e",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f1587ec1-52d0-4cc2-b867-89107485a11f"
        },
        "item": {
          "id": "862b38e0-01bc-4a36-a294-74d311be841f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "da560200-8d6a-422d-aebd-4a027435502a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "8ba251ac-e1a9-4d6e-8ea5-a50f11d665bd",
        "cursor": {
          "ref": "49a4f85f-5929-420c-916b-6414c7093e3b",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "429b90d6-fa09-41ab-a0d1-e5524d79d6ef"
        },
        "item": {
          "id": "8ba251ac-e1a9-4d6e-8ea5-a50f11d665bd",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "97b10a63-87f3-47aa-84d1-ef468b1481f6",
          "status": "Created",
          "code": 201,
          "responseTime": 4904,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b097bc94-a033-4437-98c7-67869e34c536",
        "cursor": {
          "ref": "a9e1b5fe-559b-42fd-bf0e-4c959416b518",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b9b44da1-5aa9-48d0-9882-11f59b15b84b"
        },
        "item": {
          "id": "b097bc94-a033-4437-98c7-67869e34c536",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7e136072-c8d1-429e-bf63-9933e45e4ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "31c75fb4-c5bc-4418-a21f-f40840001fdd",
        "cursor": {
          "ref": "8be78200-9e35-46e2-81ed-5cffca09f2ac",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6bfb28b9-d8b1-43c1-a410-e5a44e3e2e45"
        },
        "item": {
          "id": "31c75fb4-c5bc-4418-a21f-f40840001fdd",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "576eedb4-5d3b-42df-8624-86a50f9806b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e7d11818-4e3f-4ed7-8c5c-87020627a4b5",
        "cursor": {
          "ref": "5f5914b4-629d-4e34-a00f-7dd693594135",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ddbf334b-b115-4bc1-a515-543fb784d6bc"
        },
        "item": {
          "id": "e7d11818-4e3f-4ed7-8c5c-87020627a4b5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "af365ebc-c371-4411-a23c-ff8d091a914b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7deaddce-6ba1-4aff-bf1b-85076e90b1e2",
        "cursor": {
          "ref": "66ea7f33-afae-4e01-8bfd-574b6762593b",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "34956a4f-4867-49d1-8368-041f478a90bc"
        },
        "item": {
          "id": "7deaddce-6ba1-4aff-bf1b-85076e90b1e2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d6c303b7-9b4e-4d15-a32e-9b33d62e0080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33f88db-da2a-40ed-bad6-758d9cab895e",
        "cursor": {
          "ref": "c91667c8-2810-467c-8944-8b65b33e1111",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6d36472f-e8f6-433f-a7fb-150b3e7ed1f3"
        },
        "item": {
          "id": "f33f88db-da2a-40ed-bad6-758d9cab895e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e62a0cf7-02cc-4a2c-994f-6f7fde35cce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4d154e-ba59-48fa-ba9a-b80fb3461a07",
        "cursor": {
          "ref": "236cd4b9-f3bd-4a52-ac31-3f63579cb700",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "03387ebf-558d-4786-8be8-44defdf2dc6a"
        },
        "item": {
          "id": "7d4d154e-ba59-48fa-ba9a-b80fb3461a07",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "021123b4-c425-4481-b847-7edbe31718b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ae02d3-8dd5-472d-9274-4e243686e191",
        "cursor": {
          "ref": "efd723b7-5232-47a4-8283-753fe2028345",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0558d5aa-8d4a-4419-b31e-fe4558cc6a54"
        },
        "item": {
          "id": "63ae02d3-8dd5-472d-9274-4e243686e191",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cc6ebafd-43bc-416d-9017-816e2e1bbbeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944fed17-019f-43c8-8b30-a9610772d078",
        "cursor": {
          "ref": "f17b7e96-ceee-495f-86ea-b66a292ce149",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a5c0ae71-776c-4332-8eb4-25dea580a885"
        },
        "item": {
          "id": "944fed17-019f-43c8-8b30-a9610772d078",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7e08b638-b428-4a5e-a7cd-c882fa598f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5abcd5b-0a0a-43fd-9f14-196c876462f2",
        "cursor": {
          "ref": "2a0c408b-5637-4aec-ac11-f326534152e9",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3e0353da-a275-4c30-9142-37a5c6a00b80"
        },
        "item": {
          "id": "a5abcd5b-0a0a-43fd-9f14-196c876462f2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "26273a75-937e-443c-b9c5-545ed86e7e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4590a52b-eeef-4e45-8772-275e2c6dd818",
        "cursor": {
          "ref": "2e727192-a8a0-49f4-b255-a51853067705",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f3ee6edb-218c-4e98-a5a3-5d8323c1a4e9"
        },
        "item": {
          "id": "4590a52b-eeef-4e45-8772-275e2c6dd818",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f925078d-f174-48d0-ae8e-d6a248af40cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337968f6-7aba-4a62-b319-31991586360a",
        "cursor": {
          "ref": "fc1f030e-5024-4bc9-817a-e69ae608f14f",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fa107af2-214b-476b-a506-1d3ba8b4c88c"
        },
        "item": {
          "id": "337968f6-7aba-4a62-b319-31991586360a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8475918b-72b3-43cb-91e6-40654bfd5379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b75d9e-0d11-4d27-a237-135841976eff",
        "cursor": {
          "ref": "9a78ac63-247b-488b-b2d6-0ea15061b3bb",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9c1cbf48-4766-4377-890b-9855b7209eed"
        },
        "item": {
          "id": "29b75d9e-0d11-4d27-a237-135841976eff",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0cb32997-6554-4bf7-856b-6858856223f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3852eb62-e282-44f0-8e7a-b189f85f0c66",
        "cursor": {
          "ref": "3f9f681c-9a69-4336-9725-7e87fa9c9751",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f82bccff-6df5-424d-a187-7e66aa4c92cb"
        },
        "item": {
          "id": "3852eb62-e282-44f0-8e7a-b189f85f0c66",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "395dcc48-9e9a-43f6-8737-7fa65029e955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df36fbb-9bb8-4b2b-bdc3-16a8416921ca",
        "cursor": {
          "ref": "de2e6434-ef89-4577-8064-87449228268b",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f91f35ff-1226-4209-92cf-9663c1a9132d"
        },
        "item": {
          "id": "7df36fbb-9bb8-4b2b-bdc3-16a8416921ca",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2a14e611-a107-42f9-b40d-61e7c840a219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc8c5e0-357a-4004-8f2e-d089e3dc554f",
        "cursor": {
          "ref": "92b38c45-f1be-40f4-8c7a-b3cb75b33e9a",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5366294b-cc6f-4ee2-b7d3-3f8ba1d7a80a"
        },
        "item": {
          "id": "0cc8c5e0-357a-4004-8f2e-d089e3dc554f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1ba97803-0c4e-4e0c-b250-b227fe39da76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec21b369-7859-4ca0-adf1-b24c71b811f1",
        "cursor": {
          "ref": "a4fa7a3b-8183-4f3d-997c-8a05d4a9a78f",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "93e62785-3858-4dee-8c05-cbd23b869f54"
        },
        "item": {
          "id": "ec21b369-7859-4ca0-adf1-b24c71b811f1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f35d3392-c6ef-494d-a8b9-db734ed0f7cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae28300d-0e15-4564-8e44-f068a753b38d",
        "cursor": {
          "ref": "a01f3019-628c-4e6b-9212-f0298c6d524b",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1b8a77a2-d85d-4587-bce0-bfab42ad2683"
        },
        "item": {
          "id": "ae28300d-0e15-4564-8e44-f068a753b38d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a6b5fae0-da91-43fb-b809-18a71d045a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af936e0a-253d-4209-8950-658f840c0acf",
        "cursor": {
          "ref": "425b67c3-0471-464c-80ed-c745354251bf",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4fb72a50-725d-4510-af10-73ec84903bd4"
        },
        "item": {
          "id": "af936e0a-253d-4209-8950-658f840c0acf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1081ede0-0627-486a-af0f-9f8b1589f65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed9561e-9c98-401c-96d4-8d19d72924a6",
        "cursor": {
          "ref": "de04e169-9434-4fb5-be54-382d9b672352",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d5a0c1cc-f6a2-4f35-be7b-26db76de68c7"
        },
        "item": {
          "id": "bed9561e-9c98-401c-96d4-8d19d72924a6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "df121fd6-7d0c-49fd-84f3-13cc6aac9d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717de969-b464-4020-adc0-087fda01f30b",
        "cursor": {
          "ref": "0d05ba53-d47c-4289-b5d0-3195a4d71df8",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e51ecc8a-8982-4018-868e-ef68bd41f24f"
        },
        "item": {
          "id": "717de969-b464-4020-adc0-087fda01f30b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "148fdb02-e605-45d3-8015-bd46b09e5ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c757dd2-d44e-45e7-9e50-a353d3530df6",
        "cursor": {
          "ref": "d8a88908-e464-4e13-8fb1-0c858d51be80",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0d8388ca-938a-4d63-a07f-bffbc1e6346d"
        },
        "item": {
          "id": "8c757dd2-d44e-45e7-9e50-a353d3530df6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e7435483-ac57-4ee6-b7bc-b914610908b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420bef2a-2912-4c38-94ca-0be06365c186",
        "cursor": {
          "ref": "d9b47bad-c3d3-4be5-93b7-7a2435038d4d",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a1e92db4-eba0-489a-a832-cb65002b0c33"
        },
        "item": {
          "id": "420bef2a-2912-4c38-94ca-0be06365c186",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "85b3a91c-15a5-4948-a98c-4b58a4eb80bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a49de9-92c7-45b6-a430-7805b5910dd2",
        "cursor": {
          "ref": "6a42f6fb-c830-4c1d-a208-60bd65ea2df6",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ea4e5572-65b1-46e7-86bb-ccdf4428857f"
        },
        "item": {
          "id": "a9a49de9-92c7-45b6-a430-7805b5910dd2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c8fc48b9-c42e-4570-9b1a-d18278cbec9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e31a0e-acfe-4ecc-919a-16e1ba91a38c",
        "cursor": {
          "ref": "d8edf4fa-bbdd-4eee-a848-64fed742d594",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8b570d3c-b5f9-497a-a1df-8f73f5e55acb"
        },
        "item": {
          "id": "06e31a0e-acfe-4ecc-919a-16e1ba91a38c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ef29371e-8cff-4676-ad99-0660c725fca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e77bd2-cbbf-4970-bfa7-bfc4a10b17e7",
        "cursor": {
          "ref": "2ecaf666-f8bd-4d91-b5c9-6cc84b273a06",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "fd83572f-3a47-4c19-a34b-8614e1bb3406"
        },
        "item": {
          "id": "69e77bd2-cbbf-4970-bfa7-bfc4a10b17e7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "068fd475-d961-40f1-9803-1dc3199c0144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b22514e-af07-4da4-9bfc-464857b323fa",
        "cursor": {
          "ref": "08da4214-8463-45c1-9a7d-d6b2ce27fd92",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7ef681f1-3e9e-40e3-b662-cca518c379de"
        },
        "item": {
          "id": "1b22514e-af07-4da4-9bfc-464857b323fa",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a7b09c85-f0a8-4ab5-b655-1aee63bf3dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d846a4b7-f732-4e83-8d4f-53d7309a8ba9",
        "cursor": {
          "ref": "2f98c698-acfe-450e-8cfb-7c6c93f1dcaa",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f5ff3b1a-7d1f-4427-a5bc-0ebb39850e0a"
        },
        "item": {
          "id": "d846a4b7-f732-4e83-8d4f-53d7309a8ba9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b2ff61a1-49e4-4297-8b80-1551eed9a668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd28d796-1c24-462e-87c1-cf2ba350ed2b",
        "cursor": {
          "ref": "aa2a263b-5b4e-4d00-96f8-3145621e2848",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8f390699-08d5-4e15-be6e-8e3b5083aad2"
        },
        "item": {
          "id": "fd28d796-1c24-462e-87c1-cf2ba350ed2b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6035ca84-59af-432c-9c3d-3d60fced7c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3024ed66-575c-4d4b-8693-02609494457a",
        "cursor": {
          "ref": "90bdb2c4-5a9b-4f5c-b9e9-30cfba66cdfe",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0403ff36-e42e-47f4-acb9-38f2538dd2c2"
        },
        "item": {
          "id": "3024ed66-575c-4d4b-8693-02609494457a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d124e1c7-6d15-4c2d-8bf5-696ec416ab07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5869cba-b017-4870-8100-ca4bf804b6ac",
        "cursor": {
          "ref": "ab4eadf6-3175-482a-9bd1-e187afe5cacb",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6b59661e-f53f-475d-81f5-acbb9f836593"
        },
        "item": {
          "id": "e5869cba-b017-4870-8100-ca4bf804b6ac",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f2c34cac-698f-4f7e-9e30-8d84d452dd73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b98784-06f1-4405-bc23-bb78e5833339",
        "cursor": {
          "ref": "004fecb8-36f1-4ab5-b4ab-6104535bf423",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "96e0b414-f5c1-4020-86d7-d81699501b1f"
        },
        "item": {
          "id": "31b98784-06f1-4405-bc23-bb78e5833339",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "07405039-8e1f-42c7-8224-23c509d97f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdd761d-28ca-473e-b5b5-da799011c4bc",
        "cursor": {
          "ref": "dfe79e4c-24ff-4c67-8089-791e6f35b2fd",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "85af38cb-97d3-435f-8b0e-40180c2143a1"
        },
        "item": {
          "id": "dbdd761d-28ca-473e-b5b5-da799011c4bc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c4423b3b-d897-4448-b206-f30adf72ca51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4ca7bb-8ce0-4e18-ac60-9a9ad810a56d",
        "cursor": {
          "ref": "025ed772-0ba7-4bb1-aba9-c29aa2952f8a",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "fffb913d-5ae9-4d3e-a8d1-9063a0357435"
        },
        "item": {
          "id": "8f4ca7bb-8ce0-4e18-ac60-9a9ad810a56d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2e1c286a-dfa6-42e8-b243-cb5ef8272e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d74cc14-1ae6-408d-999d-b887bcb3ab88",
        "cursor": {
          "ref": "27e0512b-4974-4f12-9e30-896f077ac49e",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "187ee641-0b57-4f1a-ae95-d7cbfa2f5a71"
        },
        "item": {
          "id": "3d74cc14-1ae6-408d-999d-b887bcb3ab88",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "59de96c7-632a-446e-866b-d8572a9ff83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef5975c-36e3-49c2-9408-fadcb0c0bc58",
        "cursor": {
          "ref": "0bb70000-e979-4607-a1b7-043d09f6496d",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1d39a0b8-f87a-4c95-a181-86bdb7a665ef"
        },
        "item": {
          "id": "0ef5975c-36e3-49c2-9408-fadcb0c0bc58",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "de506493-c3b3-487b-bed3-51a98e16a1b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72040d41-8bcc-4e9c-a285-8c1157d26b50",
        "cursor": {
          "ref": "347d016b-51d5-4940-aba1-1cb87fe66650",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0df6bb41-dcef-4268-9e50-e91cb6dfb4ae"
        },
        "item": {
          "id": "72040d41-8bcc-4e9c-a285-8c1157d26b50",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "be6ae0f3-b7c7-4085-945a-5c5290dd0eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e108f1e5-1bbb-4738-a7ee-95e042e03e89",
        "cursor": {
          "ref": "74839dc9-b3ea-46b9-bc28-75a9116e43ba",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bfc1fed6-3fde-49e0-9bb8-088a0e062c5d"
        },
        "item": {
          "id": "e108f1e5-1bbb-4738-a7ee-95e042e03e89",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ade54a4b-a76e-4c82-b582-f64b72cef9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ac2a7d-b134-4c8e-a873-a8992ef31751",
        "cursor": {
          "ref": "9bbd41fe-684e-41c4-a3dd-3e92ec4bfed9",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6f8f26ca-ce9b-405e-b27f-bb207b030c18"
        },
        "item": {
          "id": "95ac2a7d-b134-4c8e-a873-a8992ef31751",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "af077594-3628-4794-942c-02062c786aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2459bc46-832a-4fb5-8797-79a2b2fdc945",
        "cursor": {
          "ref": "c4341990-bebc-4e59-bb78-4bec530a31a6",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "eda0bfc6-e055-42e3-9630-174c7e79b1b8"
        },
        "item": {
          "id": "2459bc46-832a-4fb5-8797-79a2b2fdc945",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7661fb6d-29e1-417f-9181-9ee9c402c280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62df01a0-78e5-491e-b070-8cd56605ca64",
        "cursor": {
          "ref": "fea6acf1-fd6b-4d21-9553-10ae4aeecdb8",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a73f1a46-bc7f-4823-9848-98df7389f04c"
        },
        "item": {
          "id": "62df01a0-78e5-491e-b070-8cd56605ca64",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cb561448-c1bb-4edb-a4b4-8162dcbec498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22110d5-44c2-4bfe-bc01-a3c66124f078",
        "cursor": {
          "ref": "0ce63320-45dc-4a9a-b220-88c5d37fc822",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "243db80b-ff8c-4977-9bba-f4ca070bab34"
        },
        "item": {
          "id": "e22110d5-44c2-4bfe-bc01-a3c66124f078",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "383675cc-48ba-440e-8880-ca3115f8a38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecac090a-5861-4e20-a794-2f7b4752217c",
        "cursor": {
          "ref": "0101fa59-b864-4ec6-93a5-f60cc419237c",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a93ef34d-d71f-4b87-9cf6-1be4d62e9106"
        },
        "item": {
          "id": "ecac090a-5861-4e20-a794-2f7b4752217c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5000bf1d-34bb-43f9-bad9-e0bc6c773254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 170,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8690d4-8e85-4c09-8e78-95a66d25e6b6",
        "cursor": {
          "ref": "3aed9ba2-b988-4d8c-b369-c29502339026",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2ec6665c-5801-4aae-b4dd-92fb3c1bc5aa"
        },
        "item": {
          "id": "9f8690d4-8e85-4c09-8e78-95a66d25e6b6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cc12f4a8-6850-436c-b678-2b882942ae25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a42cc89-ddf7-4541-9eb3-26c68291bddd",
        "cursor": {
          "ref": "5bd3603f-c947-4872-af5c-5486baedd2c8",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "fd967d38-9a93-4e5c-b875-0e8c0d8e0f44"
        },
        "item": {
          "id": "3a42cc89-ddf7-4541-9eb3-26c68291bddd",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "97e04bfe-13fb-424b-a535-56e402b5f845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a17e70-510a-4793-8633-6e03c3b30604",
        "cursor": {
          "ref": "b5cb6619-cb4d-4559-8ea7-00cb90363c24",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4df8f72d-d9fc-4ce7-ae86-333f99e7c3ac"
        },
        "item": {
          "id": "81a17e70-510a-4793-8633-6e03c3b30604",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "86543e83-0e42-42ab-bad1-c2f091e1e5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029149f0-cb2e-4d22-b16b-34c12c7cf086",
        "cursor": {
          "ref": "7f61bf40-d24f-4374-a07e-7cfc97f6af34",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "34ccd6ca-ca4b-4bf8-bb11-20134d4c7cc3"
        },
        "item": {
          "id": "029149f0-cb2e-4d22-b16b-34c12c7cf086",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "107b98ae-b7cf-4dd5-a2d2-a4e9199d2b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e2b003-b4e0-48de-89be-0ea51a0b2928",
        "cursor": {
          "ref": "6fbc5648-9595-421a-ae50-d2b0038051e6",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c0dd6952-ae8e-4321-b109-440d895521e3"
        },
        "item": {
          "id": "52e2b003-b4e0-48de-89be-0ea51a0b2928",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "49757750-10ec-45e3-b803-51d73f4b3140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6db995c-5f18-481b-819f-04855541016e",
        "cursor": {
          "ref": "66b3e68e-a726-49d7-8d43-09e287c98657",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3ce28a62-6d05-4a19-a425-adf12bab8a64"
        },
        "item": {
          "id": "c6db995c-5f18-481b-819f-04855541016e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9eb04f7e-66a8-4202-871a-b63146c107a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5cc4c5-1086-4b9b-97b7-4954cf87016f",
        "cursor": {
          "ref": "2c55a1c1-8574-41ae-8727-a5027acfd1d3",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "41f27a4f-d44a-47fe-83c4-144af5c6f583"
        },
        "item": {
          "id": "1b5cc4c5-1086-4b9b-97b7-4954cf87016f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a0abc118-a49c-4293-a3f6-eb6e29d05ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd8e6c1-af99-41ea-a80e-3dbefc7093d1",
        "cursor": {
          "ref": "b4bbd515-3008-413f-826b-2d3a1999986d",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d0d89908-8e21-40de-ac3d-0a7c0af0275f"
        },
        "item": {
          "id": "cbd8e6c1-af99-41ea-a80e-3dbefc7093d1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f6c94d00-2811-4756-856e-c95c5825ad04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ce196e-7d99-4a86-a3f9-cdadc8768bc6",
        "cursor": {
          "ref": "cc6f169d-913b-4ff8-81c0-dc1a5d646ab1",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f69910b7-b3ae-4f1f-bf4d-90772448bea1"
        },
        "item": {
          "id": "24ce196e-7d99-4a86-a3f9-cdadc8768bc6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b1bf7c21-15e8-4646-8af5-ab5e018a7a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5c52db-e94c-44e8-a655-470d7b1e6f63",
        "cursor": {
          "ref": "23d546fe-b96a-4c50-b213-86c407e91495",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "26f275c0-423f-4031-9a84-00dfe5a57de9"
        },
        "item": {
          "id": "fd5c52db-e94c-44e8-a655-470d7b1e6f63",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "93797e56-6b29-4492-a55a-a61f4322aa1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2084fa41-30c4-4972-b75a-89f29e1ede46",
        "cursor": {
          "ref": "1b309b2a-ad82-4eeb-a976-4f4dbfdb515c",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "dabb2cef-3995-489b-b0ad-3d450b2d8949"
        },
        "item": {
          "id": "2084fa41-30c4-4972-b75a-89f29e1ede46",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "10fc41c5-340f-4296-8bb7-5b35a11ecf28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7090fa9c-5ca2-482c-8d1e-b7b600897724",
        "cursor": {
          "ref": "7eb5a1ff-85a1-43bc-9f5a-ea2cf12b08ac",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "900158d5-d553-417d-bfc4-ae967fe86379"
        },
        "item": {
          "id": "7090fa9c-5ca2-482c-8d1e-b7b600897724",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ce6ccb2d-f04f-4b0d-978d-fff7cf9aec2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6576610e-023f-41cc-9a09-0bd72d7bcbee",
        "cursor": {
          "ref": "63088872-12dc-418f-8597-f76e6140a2af",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4e254e7e-10d3-41d2-83f2-90ba15869fce"
        },
        "item": {
          "id": "6576610e-023f-41cc-9a09-0bd72d7bcbee",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4cb93b80-1515-456d-b7b4-f750607dd76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5178d988-da41-42b8-acd0-ef0efe22705f",
        "cursor": {
          "ref": "93647e20-a3f0-404c-ad20-3e46a7990f09",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "fb784667-9994-4a60-b056-77255d61e4cc"
        },
        "item": {
          "id": "5178d988-da41-42b8-acd0-ef0efe22705f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fc18e0c5-2f10-4799-9dc5-f7602f9a0848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22068791-4a64-4586-ba7c-b38710586153",
        "cursor": {
          "ref": "52d724af-a68d-4f9a-a7b3-ab8752d12127",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "58120471-8bd1-4b5c-a7c8-5377644822c9"
        },
        "item": {
          "id": "22068791-4a64-4586-ba7c-b38710586153",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a0515bff-aca8-472f-933b-2681653dc769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2085bf9-004c-4bea-a4d0-43b33ff3a93a",
        "cursor": {
          "ref": "1d6d6257-417f-4f61-bb90-250ddb040dff",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "43bcae26-68a0-4b1c-bb1d-556b3c6953f3"
        },
        "item": {
          "id": "a2085bf9-004c-4bea-a4d0-43b33ff3a93a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b51b2aed-1668-4081-8d00-cb3560c59739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a3e502-b4fd-4f4f-9d75-126c32009239",
        "cursor": {
          "ref": "40ac0ebe-1a76-4bb8-86c2-190014b672b0",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8bf21a19-c00b-49c3-a3f9-1500a36c4597"
        },
        "item": {
          "id": "a9a3e502-b4fd-4f4f-9d75-126c32009239",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ec142027-d90c-4359-8f1c-7e0bd8e3e155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff1376d-8476-43b2-b3f5-685d3a8fcd7f",
        "cursor": {
          "ref": "ca4b7f0d-7140-492e-a4ce-62e694f91742",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a185f5ab-b0ee-4211-9f6a-0500c820a3f0"
        },
        "item": {
          "id": "cff1376d-8476-43b2-b3f5-685d3a8fcd7f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "acb0c580-b094-43c5-8884-b5fb8ffdf11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fdbbb9-a2f4-4d97-ba54-f03e2cc275a5",
        "cursor": {
          "ref": "9917ceab-191e-4a2e-af9c-a8e5d04dbc00",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ed516dbd-39b1-4b6e-be9f-1b5f573d8e9b"
        },
        "item": {
          "id": "36fdbbb9-a2f4-4d97-ba54-f03e2cc275a5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "36133391-bdf5-4eba-9642-45c7bf226d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3613971-60a9-4455-82b1-9cbbbfc13c33",
        "cursor": {
          "ref": "8f24f00a-8752-4ca1-83b0-648e987d7a7c",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8ed251a1-fb0e-46ef-9657-95192430f826"
        },
        "item": {
          "id": "f3613971-60a9-4455-82b1-9cbbbfc13c33",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b8a6ae62-b219-4ca7-a34e-142ff1c1ffce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6817f6e4-57b9-431c-8019-5adf2546cc08",
        "cursor": {
          "ref": "97479d7f-c93e-4d29-a36b-dd8bbed8c708",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ea23dff7-0437-4fa5-a4ec-2036ad6166d2"
        },
        "item": {
          "id": "6817f6e4-57b9-431c-8019-5adf2546cc08",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "77080800-9ea0-4737-9013-736539998e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07cdf891-2f1b-4a33-a5e1-0420b91054e8",
        "cursor": {
          "ref": "a341e2d2-8acd-4da4-b886-310aac405700",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b770ecad-8cfd-4904-88ab-b28564f2fd90"
        },
        "item": {
          "id": "07cdf891-2f1b-4a33-a5e1-0420b91054e8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a69ad453-ecb7-4c44-a7b2-60f0df342ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75567e4b-90d2-4e33-8a04-48a82bfe4db5",
        "cursor": {
          "ref": "fb3189a7-4bf5-4a8a-8d12-ee235067e1a9",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6d717ac4-ca4c-4acb-ad95-2d284da192da"
        },
        "item": {
          "id": "75567e4b-90d2-4e33-8a04-48a82bfe4db5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9f5c2760-0e0c-4c38-8ca6-f279a58aa9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8362def7-71da-492a-92c0-61d1369c1302",
        "cursor": {
          "ref": "e5354828-ac86-4fc3-bc1d-80a020ba194d",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "23516951-63a8-4366-af4d-93949c15aa7f"
        },
        "item": {
          "id": "8362def7-71da-492a-92c0-61d1369c1302",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "518f0739-29a0-4490-85c4-d17c0dc52fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ce1629-e8f2-46d9-9638-d5ef799fcbc8",
        "cursor": {
          "ref": "0dca2dc1-02b5-4861-878c-11ac35883b71",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8eaeb94a-141f-4576-896c-c088338be567"
        },
        "item": {
          "id": "11ce1629-e8f2-46d9-9638-d5ef799fcbc8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4e385eda-890b-4d31-8475-23fb13eaf26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c72b42-c13d-477b-aad9-4858e5666cd4",
        "cursor": {
          "ref": "1bfafa0c-2950-4f7a-a66e-d4eafb2e24ae",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "76e6adff-1519-456d-b8d5-cb1930322e1b"
        },
        "item": {
          "id": "79c72b42-c13d-477b-aad9-4858e5666cd4",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6fb574b7-2dd1-4601-abe0-2c045eadb0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be555b14-c5e8-469f-8afc-5d77a3cc0d8a",
        "cursor": {
          "ref": "b4926b46-57a4-4fae-bd23-a4d4f0f9e378",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1fe861c3-7ab6-4d80-8f0c-98d6eba68e27"
        },
        "item": {
          "id": "be555b14-c5e8-469f-8afc-5d77a3cc0d8a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f1587151-49f2-43c1-96a9-b566273df30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae462ce7-3e4c-4aa8-b56d-06ff6e38e60b",
        "cursor": {
          "ref": "5e30db98-4335-4b56-a6e1-36e3c23997a6",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "935c17a6-23f7-4940-8566-aae281eb7a18"
        },
        "item": {
          "id": "ae462ce7-3e4c-4aa8-b56d-06ff6e38e60b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1bb9d43c-b80a-499b-9543-3ef8d53505d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721dd7f4-8fd7-42e0-b443-83887e84ffdd",
        "cursor": {
          "ref": "3f907346-f619-478d-8491-cd2922c8affa",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f5dc76f3-cb43-4ba5-89a2-803cef25dbfd"
        },
        "item": {
          "id": "721dd7f4-8fd7-42e0-b443-83887e84ffdd",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a6a45fd8-1be5-4373-889b-79acc707f4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42625d4d-ca18-409f-be10-586c47285f96",
        "cursor": {
          "ref": "8587b8d1-568a-48d1-a784-4abf922ed13d",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6bebf511-8884-4dd4-83b0-e89b5b86a7aa"
        },
        "item": {
          "id": "42625d4d-ca18-409f-be10-586c47285f96",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a3b9ff35-5d20-4041-ba66-2a2f80f603d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9d635e-5f44-40c9-bf33-18e24dbb3448",
        "cursor": {
          "ref": "936314f4-5a52-4301-a839-d87f695e9285",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "98c9f9a5-f8e3-423e-974b-8ad9efe2605c"
        },
        "item": {
          "id": "2d9d635e-5f44-40c9-bf33-18e24dbb3448",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "07aaa649-f8a3-420b-bcb7-d2390d20d1d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de9ede7-1863-4992-9cf9-2ee813dff568",
        "cursor": {
          "ref": "b9aa6a21-6dd5-427a-9ab5-70b8f196c1ec",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "376de6fe-d8b1-415d-ab41-649bf0780979"
        },
        "item": {
          "id": "1de9ede7-1863-4992-9cf9-2ee813dff568",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a3ffb8db-ea7f-4c05-9f21-72cbe3815bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a60e43-3ead-460c-941b-7f112bcd5d42",
        "cursor": {
          "ref": "65d4336e-309f-44d3-b879-078f3851f0dd",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c1077d88-7e40-4ba6-bfea-a0db20b12a22"
        },
        "item": {
          "id": "36a60e43-3ead-460c-941b-7f112bcd5d42",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "84b92049-43d3-4f6b-bd9f-2653a499e5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1368724-a8ae-43f3-98a6-96e3869a257a",
        "cursor": {
          "ref": "64d69e4e-bffc-4193-bfc5-082824ac0a89",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5d099058-d909-439d-b978-a6a529e10dde"
        },
        "item": {
          "id": "f1368724-a8ae-43f3-98a6-96e3869a257a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "86dee7b4-6dde-4410-9522-588acbf70915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0dc2492-804a-44b7-bde4-5cc4b36fb1f4",
        "cursor": {
          "ref": "4b33f076-087d-4ddc-b78a-61c822343287",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0ff39298-0e69-4cc5-be07-dfbdc5ccc1ca"
        },
        "item": {
          "id": "d0dc2492-804a-44b7-bde4-5cc4b36fb1f4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c265a07e-577d-45e2-96fd-f6db52045041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e657106-8fcd-4da0-92c4-51356b1f538d",
        "cursor": {
          "ref": "54031808-ba74-444a-8596-c3a81d44b12d",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a3d9d705-a9f4-48a9-a3a2-f44e1c0783b9"
        },
        "item": {
          "id": "1e657106-8fcd-4da0-92c4-51356b1f538d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9c6bb3f1-259d-4b15-b782-35b9f34fd529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1605188e-57cf-43f9-bd79-eb0447b48a61",
        "cursor": {
          "ref": "850b3390-8465-4185-9727-f8c3b8b849a5",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "acaa9e42-88a3-4700-9cd1-6b5e6dfabc77"
        },
        "item": {
          "id": "1605188e-57cf-43f9-bd79-eb0447b48a61",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d558ba25-6821-4ff5-befe-329fdc5af409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a12af74-4ec8-42bc-a8db-50148e57ec6f",
        "cursor": {
          "ref": "ce3b97ef-ca7e-4383-8f1e-a5b2b67f8be7",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "29fc7eef-72c3-49e3-b962-99a882b443c3"
        },
        "item": {
          "id": "0a12af74-4ec8-42bc-a8db-50148e57ec6f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "83b9bd10-0612-4b59-b350-44c4b8bf696b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69db5fcb-7d9b-454d-95bb-fae468cc76f0",
        "cursor": {
          "ref": "6671ff3b-47b4-45d0-857a-8fdc908457c6",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "eec893f3-0df8-4ea9-9bf0-807b06c178e4"
        },
        "item": {
          "id": "69db5fcb-7d9b-454d-95bb-fae468cc76f0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7b68e82f-f7cd-406b-8b03-8738cc3c0201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77cab457-c66c-4c34-81c2-ecbb3c78fa49",
        "cursor": {
          "ref": "1b016865-cfd0-4f2c-a7e1-45a053551607",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "bece4464-16c3-4355-8ae7-609534c3a3d2"
        },
        "item": {
          "id": "77cab457-c66c-4c34-81c2-ecbb3c78fa49",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "62db562a-fe69-44a2-9faa-2150009b3ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd058bf-c27b-46a4-b1fe-21a4787dea71",
        "cursor": {
          "ref": "2987718d-5e84-4515-a62f-63ad01052f17",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c6fe7899-8f92-48d6-84f6-5a692db0efec"
        },
        "item": {
          "id": "6bd058bf-c27b-46a4-b1fe-21a4787dea71",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4ec45b99-95b1-46f6-bd26-dd886b1eb46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323ddccd-3fbe-4670-b0e6-300f027fd14d",
        "cursor": {
          "ref": "222a6a3c-9b84-48a4-aae3-678e5fb4977b",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9a542d70-724c-4421-8fd9-d498c6deee75"
        },
        "item": {
          "id": "323ddccd-3fbe-4670-b0e6-300f027fd14d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "589042f4-5292-47a9-ba4d-7c0e2285308f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0373a7-56b2-4bd4-96e2-87c0dbdc73ed",
        "cursor": {
          "ref": "bdc97e9d-0c9c-4bbd-9259-8db480f632fc",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a1207290-f72e-43e5-a695-d4027a46b633"
        },
        "item": {
          "id": "fb0373a7-56b2-4bd4-96e2-87c0dbdc73ed",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c26ff939-8ab4-4eb9-88f1-f04c4a3d82d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2573fb63-b2c5-4686-a52a-a3ee8f4600cd",
        "cursor": {
          "ref": "58e23e9f-b4c7-42bd-afb3-492aa279a698",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c936b469-e186-4ef7-bf76-7bb472b08593"
        },
        "item": {
          "id": "2573fb63-b2c5-4686-a52a-a3ee8f4600cd",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "803f00f3-0f11-491e-944a-6696712e3865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d5d564-a444-451d-8695-f2cbec229716",
        "cursor": {
          "ref": "d075cc9d-ec51-437f-97b3-763cae5fd3fd",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5a63d415-ae18-4fe2-891a-b59186abc9cd"
        },
        "item": {
          "id": "38d5d564-a444-451d-8695-f2cbec229716",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4a50005e-a27d-4761-9b1b-1699e85d049e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326f7e36-704e-46ff-81d3-19e9e3c5d09c",
        "cursor": {
          "ref": "0f2bb1cf-1ef2-4571-84bc-a50f5410646a",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f0e6bae9-de57-406c-b2f2-7458078ac58b"
        },
        "item": {
          "id": "326f7e36-704e-46ff-81d3-19e9e3c5d09c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f67c8b15-f1fe-43af-8d5e-4cdc1fb2ff5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f083d0-fdb9-41fc-af6c-f1f17da5d9c5",
        "cursor": {
          "ref": "bb86b1dc-eee1-406a-90b7-94427a67613e",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fa3ba235-5581-4d80-bd06-683548d93e25"
        },
        "item": {
          "id": "00f083d0-fdb9-41fc-af6c-f1f17da5d9c5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "686273f3-bf04-4259-8122-4eb03baa26e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67121e46-39bc-44f4-90d0-f8251bc46e2b",
        "cursor": {
          "ref": "6235148a-fa18-4b15-a52a-15d9c91a57a8",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "fc0b5385-f2ad-4203-ae6e-ab9de3a174ab"
        },
        "item": {
          "id": "67121e46-39bc-44f4-90d0-f8251bc46e2b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "959708c0-cfcc-4284-8363-208f8acdde14",
          "status": "OK",
          "code": 200,
          "responseTime": 112,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "4752dda0-1b0a-4d29-be69-9fa8fd2d004d",
        "cursor": {
          "ref": "1dc2c7cf-1b01-4bf5-9e43-265fa25fd934",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f5ce8f3d-86ea-48fb-8d47-e7f9d62ebf84"
        },
        "item": {
          "id": "4752dda0-1b0a-4d29-be69-9fa8fd2d004d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cc78d545-3331-46d9-8ecf-b36f505f7614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d0bc7f-b480-459b-9241-5fdc44b6bacb",
        "cursor": {
          "ref": "4bb129a2-3c41-4ff7-973a-11cae28f6884",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "903e0792-f7d1-4722-9fe8-4d20cf1db1d1"
        },
        "item": {
          "id": "18d0bc7f-b480-459b-9241-5fdc44b6bacb",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d4a4882d-ddb8-43be-bfc1-e4ae5b80fcf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2902b6d5-688a-4b9f-9eee-a11ff4d64fca",
        "cursor": {
          "ref": "c094db6b-8138-4235-a39d-2e4b0d9a4d72",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c8ed03a8-4328-4e4b-a097-7ac4ae49e52f"
        },
        "item": {
          "id": "2902b6d5-688a-4b9f-9eee-a11ff4d64fca",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e6a0c797-5559-4bd4-8b8d-2ee6b2867a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfdf7d6-798d-4bf7-b265-cb86eb27b19d",
        "cursor": {
          "ref": "c953d6c4-4cb4-4efe-afd8-e756578d8e3d",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "99794cf9-5890-436d-bbab-8008517c69d2"
        },
        "item": {
          "id": "ebfdf7d6-798d-4bf7-b265-cb86eb27b19d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "254cc044-18d8-433c-833a-909ab1efabcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbc8fed-23d2-43a1-9647-d9a5d72e5d79",
        "cursor": {
          "ref": "ff39fd4f-ddb8-40e5-a0f0-9e90eaabb8a0",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a2faf503-d8fe-48e9-a0f2-d872f66b3e91"
        },
        "item": {
          "id": "4cbc8fed-23d2-43a1-9647-d9a5d72e5d79",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "89c982f5-c4bf-4b43-baaf-f8889235cc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368b9b68-e47a-4fef-acd8-57f92701d1af",
        "cursor": {
          "ref": "6e751dbf-f4c3-4906-9d54-7694af0befa1",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0a426226-1227-4bdd-9b84-558014594af4"
        },
        "item": {
          "id": "368b9b68-e47a-4fef-acd8-57f92701d1af",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0523eae8-3d35-4502-bc90-665a0eb71900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a5482f-af82-4190-87ff-0453068bfd22",
        "cursor": {
          "ref": "a022eda1-360a-43b9-ad3e-740b0b43b83f",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1212bd80-3794-4f06-838b-689a97cff9af"
        },
        "item": {
          "id": "54a5482f-af82-4190-87ff-0453068bfd22",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5aaa10ea-6180-4e96-a8ce-015117e7f12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11c7b87-b049-448e-ba22-f979704a7191",
        "cursor": {
          "ref": "e5640438-9bbf-4974-8616-c4d3a5f683fd",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "dcc85fa0-0023-4040-8bf8-0828e6c34a93"
        },
        "item": {
          "id": "f11c7b87-b049-448e-ba22-f979704a7191",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "64f806c9-1b9f-44ab-94c8-470262efcef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad8f809-1dda-4fb1-9c7d-6da0f5772cba",
        "cursor": {
          "ref": "8eac12ba-d51d-451e-8f4f-bd1d341b92b8",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "48ecfa13-30de-484f-a338-56e3b163db4e"
        },
        "item": {
          "id": "bad8f809-1dda-4fb1-9c7d-6da0f5772cba",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b0935d62-1ac3-4eef-837e-8c0285499141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4946f4af-a15c-462b-a2fd-6275c9be74cc",
        "cursor": {
          "ref": "5ccf4d67-2172-4e05-a1a5-65a6182adc0b",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5248bff8-838a-4766-a974-dfb23f1ea1cf"
        },
        "item": {
          "id": "4946f4af-a15c-462b-a2fd-6275c9be74cc",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "255abfdf-e787-4c89-8e93-0c4454ac17f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ae3cb6-824e-4afa-ab4b-e39525bc9b8a",
        "cursor": {
          "ref": "1b962451-6711-4a05-ac2b-e743567a44ae",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "664e17f0-485b-4ca9-bac7-564ceaac616c"
        },
        "item": {
          "id": "15ae3cb6-824e-4afa-ab4b-e39525bc9b8a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "dbb60f6b-ca86-40a4-aad0-88d7767b3461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5594523f-65cd-40cd-b635-789fc3dd66fc",
        "cursor": {
          "ref": "5155c856-4cc3-4c7d-84f8-a8ba25cedd14",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "50e4ae69-d8be-4439-a534-2b2feee05d40"
        },
        "item": {
          "id": "5594523f-65cd-40cd-b635-789fc3dd66fc",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b948ba16-74f9-46e3-8610-cb9a69293b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd41f3e-fdaa-4521-8814-6bb391f47981",
        "cursor": {
          "ref": "b759aedd-3bef-48c8-8a70-a8bafc9d2257",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1d4b56dd-eccf-4f0e-832c-a153253d99fa"
        },
        "item": {
          "id": "6dd41f3e-fdaa-4521-8814-6bb391f47981",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ca9b1e70-ff36-408f-b60b-b09e689c6315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13bbb53-b525-4957-8773-9b92a3e4a1e9",
        "cursor": {
          "ref": "509d5c0f-6518-4aeb-81ee-81137b2e13d7",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b9df1f3f-8378-4b4e-b0eb-a9249b4210ce"
        },
        "item": {
          "id": "d13bbb53-b525-4957-8773-9b92a3e4a1e9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a03a198d-38a3-4c4c-80e3-11025c16a003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6016ea3-4045-403a-bb3b-b64fecbe9904",
        "cursor": {
          "ref": "b39defff-af90-4ef5-aecc-39f3567334a3",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3479f4c2-1441-4c71-84cd-db29a0618d0e"
        },
        "item": {
          "id": "c6016ea3-4045-403a-bb3b-b64fecbe9904",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6483471e-ede5-492d-bb1f-3e13dadbe003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c69480-847a-4d9b-bb91-c75e8bbc86ca",
        "cursor": {
          "ref": "4f9c0ffd-c3a4-4371-b7c1-e769c477e4ff",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "57d4bb66-34ab-43aa-8ee4-3eeae5a00f74"
        },
        "item": {
          "id": "f8c69480-847a-4d9b-bb91-c75e8bbc86ca",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "03839063-61ee-4ff2-a894-fd2d824dc839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98954e8b-49c3-4cd3-9533-849c65c4b6ac",
        "cursor": {
          "ref": "6b04af83-edfd-4fd0-97bd-d38000bac47b",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c91cff4b-8736-4f18-b4e5-7a83eda97d47"
        },
        "item": {
          "id": "98954e8b-49c3-4cd3-9533-849c65c4b6ac",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a964aace-ef7f-4ba3-a249-e5f15db81aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18fd9603-16d0-41bc-83f7-e7fc5e9b66e6",
        "cursor": {
          "ref": "cea5a380-a9d0-4826-95c3-d2f0b21779d5",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c8b20898-69d3-4ebc-9e22-364f480c29b4"
        },
        "item": {
          "id": "18fd9603-16d0-41bc-83f7-e7fc5e9b66e6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "037af414-674c-4b65-ba82-cd6ed3654258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd62f58-a870-49d3-a2bc-0829a6c11001",
        "cursor": {
          "ref": "3c22b7d1-6ca1-45dc-ae49-64bafe2b13dd",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9d781275-4534-48a9-bad5-2bfbe5578517"
        },
        "item": {
          "id": "7bd62f58-a870-49d3-a2bc-0829a6c11001",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5d4502d1-6c1f-4a33-b3e4-c4d7c9eb9788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78b0d25-e114-4f6f-873f-b195973352bc",
        "cursor": {
          "ref": "adc52cca-c342-4834-9b60-c42ae9870fae",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "47ba5161-62e6-46f3-a110-e92527f080fd"
        },
        "item": {
          "id": "d78b0d25-e114-4f6f-873f-b195973352bc",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "15309c93-6c6d-4a55-a8c0-34d725c0b370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f412b7d7-b32d-4e4a-b717-fb82009f474a",
        "cursor": {
          "ref": "f57a21d7-0f27-4a81-81ad-7673d554fe19",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e649fab9-4890-4e10-8672-d7549ec33bd4"
        },
        "item": {
          "id": "f412b7d7-b32d-4e4a-b717-fb82009f474a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f86133ec-a3ee-4161-84b6-9b353e7764d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cb0778-d93e-4008-85c8-bafeb2473bc3",
        "cursor": {
          "ref": "65be2050-b136-4907-9b80-afcb97e4081f",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "34ee9695-9a6d-418f-834a-16377b3396e2"
        },
        "item": {
          "id": "91cb0778-d93e-4008-85c8-bafeb2473bc3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8140593e-eed1-4b7a-8d4a-98a1646fabb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eaaaccd-d9d6-4313-9ff5-a1209cecdd41",
        "cursor": {
          "ref": "c784708c-ef03-4b63-b535-d25a20591406",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "39e239aa-0853-4d15-848d-b084415001e8"
        },
        "item": {
          "id": "5eaaaccd-d9d6-4313-9ff5-a1209cecdd41",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3e09e50c-33b8-4e8c-80b7-2798d6194418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4afd5d-4eba-49dc-8f0e-88d4b22069ea",
        "cursor": {
          "ref": "d108eb25-a977-4d04-81db-8902a1aa0fe8",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9c579807-4c7f-417a-a195-57a281c9d454"
        },
        "item": {
          "id": "ce4afd5d-4eba-49dc-8f0e-88d4b22069ea",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6e701e13-c783-4c96-b2b6-6ee44dcccfa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07eefe0c-7c16-4323-9924-6bd11a27cd7d",
        "cursor": {
          "ref": "8223bd10-357e-4b17-9287-dba212fb4fd4",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ccf54152-6676-4bbc-a086-b564fe84441c"
        },
        "item": {
          "id": "07eefe0c-7c16-4323-9924-6bd11a27cd7d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2594cfcf-cd47-4145-9076-34ca6424c53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441ee04c-f7ce-4440-963e-e463afc1d1d6",
        "cursor": {
          "ref": "3da48da2-4fe2-4968-82c3-9d57e83e48a7",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cf6f325f-a29d-4ca2-b4f7-a672caa321cc"
        },
        "item": {
          "id": "441ee04c-f7ce-4440-963e-e463afc1d1d6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bfcd9d3d-b84b-4584-a65a-4806f154cf1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d47cdd-c0fe-4186-b869-2f7d23c6999f",
        "cursor": {
          "ref": "8be35c1f-ddfd-4e23-ad0c-f764d776519d",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "23646e32-3c31-4fb9-897d-5dd2ed692da3"
        },
        "item": {
          "id": "a3d47cdd-c0fe-4186-b869-2f7d23c6999f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6b4a4150-7b42-4d67-9c7f-2fb0b77b4d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063d8891-febb-404c-b941-f8520d1c2319",
        "cursor": {
          "ref": "f339597c-a8ff-49d6-9191-6a53fbe8a55d",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "80ca7c2b-e20b-4cf0-a0e3-1d7e44d224eb"
        },
        "item": {
          "id": "063d8891-febb-404c-b941-f8520d1c2319",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3a166426-8bee-4c67-b65f-67e6b8066bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21568343-903f-45d9-93ae-d88c74ac7ded",
        "cursor": {
          "ref": "9d889f80-3a4b-44b9-820d-0c298b0c70b2",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "94488edc-d687-42eb-9785-6ccedfb035d0"
        },
        "item": {
          "id": "21568343-903f-45d9-93ae-d88c74ac7ded",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bcebd907-085f-4efb-b11f-7203989d0ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42597eb0-ee53-4a40-b4b6-276665c07d96",
        "cursor": {
          "ref": "88587db1-f1a0-470e-9d14-e5c508dd5c87",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1161b141-f649-4bda-a6c1-cd88dac6863e"
        },
        "item": {
          "id": "42597eb0-ee53-4a40-b4b6-276665c07d96",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "71667ba1-9dea-40c6-9816-8774de9103b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d55cb5-7e0f-4de5-8522-5918115e809d",
        "cursor": {
          "ref": "c85ad2e6-70f4-4a0a-bf14-e404376eaf34",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "53a1abf1-554d-4819-ab5a-43caaa68f372"
        },
        "item": {
          "id": "a0d55cb5-7e0f-4de5-8522-5918115e809d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ad1d293e-ee8a-4e68-a2e5-f8c26ff39964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2eaf713-23a6-4004-b42d-dd5bf008c98b",
        "cursor": {
          "ref": "9c1bf754-f14d-4e8e-9601-28dfdb16d51a",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "cc56a13d-caea-4ec6-b3df-35e54613cde5"
        },
        "item": {
          "id": "c2eaf713-23a6-4004-b42d-dd5bf008c98b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e1bfdda9-893d-41d3-b40c-14bfe7e37efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613e47ca-5a9a-486f-92cf-e7f516a80cc1",
        "cursor": {
          "ref": "92a12246-0717-4dda-bca2-7a83a881a108",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "498c3db5-ad54-41a2-92fa-c164ff7ef868"
        },
        "item": {
          "id": "613e47ca-5a9a-486f-92cf-e7f516a80cc1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6cf526c8-2d74-4381-a080-4570c35f9976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59caf13e-5e4c-4a25-94fd-62767227e781",
        "cursor": {
          "ref": "5451d49a-f40b-47d9-9eb9-98eae4871cb7",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b2d2bcf7-44f2-4bd5-924d-329cbd489c2d"
        },
        "item": {
          "id": "59caf13e-5e4c-4a25-94fd-62767227e781",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3d4b95e1-e895-4e2f-b625-82a28b065c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f399ba-4222-47ae-b5a6-fc196e63615d",
        "cursor": {
          "ref": "244cb411-af88-4f0e-a576-4c90838d1533",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "395cfb00-51ce-4646-aff6-ea2de6f410fe"
        },
        "item": {
          "id": "84f399ba-4222-47ae-b5a6-fc196e63615d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3d49cd07-9a43-4013-a9dc-72d0f1e4045a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bbc24f1-4cfe-4a05-9292-5a0962da78e7",
        "cursor": {
          "ref": "3844055f-0aae-4a59-b09b-2285883ffb36",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "04dfbb6a-3fbf-43b2-935a-c1210d9d8e7b"
        },
        "item": {
          "id": "0bbc24f1-4cfe-4a05-9292-5a0962da78e7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b9282d99-213a-49b7-b6f7-f8ebcb995f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6998f6ea-4771-4b37-97f3-b8e51633a3a6",
        "cursor": {
          "ref": "141909ef-e262-48e8-972c-95f1824cf259",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "dbef1bea-e95c-4405-9482-14571a59fe4f"
        },
        "item": {
          "id": "6998f6ea-4771-4b37-97f3-b8e51633a3a6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3df62787-8c52-4643-9db7-fadafb5940b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d821b9f-5dd7-4c41-a232-78aa281d63c5",
        "cursor": {
          "ref": "fb381cb5-895a-4bd1-99cc-0da1147077ee",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "59a1b914-e407-4164-85fe-c994303dc3ad"
        },
        "item": {
          "id": "6d821b9f-5dd7-4c41-a232-78aa281d63c5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0e5cf59f-2524-4452-bec8-29123cb14f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467324a3-e95e-471a-8494-732e0b955a42",
        "cursor": {
          "ref": "00442e9e-aca0-41a8-9a26-39bd92b055b8",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "efc31795-5979-4e72-a8c4-337f5b3b55c4"
        },
        "item": {
          "id": "467324a3-e95e-471a-8494-732e0b955a42",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0a2c5d04-e45e-4286-98a9-733f84040792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bfba00-d522-4c5d-ac54-785fe3c6519f",
        "cursor": {
          "ref": "36d6d927-f64c-41f3-bb72-d8500c6d81d4",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d9f7b12c-7b76-4d5c-9fa8-4917b8a4d43f"
        },
        "item": {
          "id": "78bfba00-d522-4c5d-ac54-785fe3c6519f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "41039aae-0ed5-4fc1-ab98-84d64110a13b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ade7d34-ab8d-4fc3-8fb2-46c011f30ed3",
        "cursor": {
          "ref": "d493e01e-4beb-44ab-b318-8a133f5af627",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c50643e3-ad41-4237-83a8-c26da1c9befc"
        },
        "item": {
          "id": "7ade7d34-ab8d-4fc3-8fb2-46c011f30ed3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "71063ab8-ea50-44fe-8be3-a1b31c781c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d5a6e3-4e1e-4179-958c-a76b9342adb8",
        "cursor": {
          "ref": "2d1fef5c-e12d-40a3-b067-1d68c1090e76",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7bd20575-4160-475c-975c-ca303459b5d4"
        },
        "item": {
          "id": "63d5a6e3-4e1e-4179-958c-a76b9342adb8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f6eafa34-bd45-465c-9da1-8cada6580914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9d3300-957e-411b-a2df-36088f61d04a",
        "cursor": {
          "ref": "73a821a0-2585-448b-b37c-1d64d8b95261",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "38939147-fb37-4d68-9763-f7554c38460d"
        },
        "item": {
          "id": "9d9d3300-957e-411b-a2df-36088f61d04a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fc7b5aeb-af88-4f51-a162-2d81887f8b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a424caee-006b-4e2c-9d41-5b4de83b494d",
        "cursor": {
          "ref": "b3e929c8-2202-451f-bd49-7ef52ae6c034",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "149ce6b2-0adb-484d-9aad-0d5639b37214"
        },
        "item": {
          "id": "a424caee-006b-4e2c-9d41-5b4de83b494d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d2fa52c4-e541-4ab4-beb2-350a3b79cc5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383f9684-f1d6-42fb-b41e-8e5777fd9593",
        "cursor": {
          "ref": "3bbc074c-4ea5-4f26-834a-4929628fd1d1",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "408d980a-31df-4db6-8bc3-a983d440d243"
        },
        "item": {
          "id": "383f9684-f1d6-42fb-b41e-8e5777fd9593",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "cb22ed44-2b32-49da-bd0e-aa7111caad47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a53e2bc-9f13-418d-b67e-6ea94bf034d3",
        "cursor": {
          "ref": "8bbc59cf-0b4a-4b62-b55d-33348ad6e3d7",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "82bcd263-50e3-4d32-b2ba-81bf05eed845"
        },
        "item": {
          "id": "5a53e2bc-9f13-418d-b67e-6ea94bf034d3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a197bda5-601e-46b4-b9ff-7461970d54bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb09599-776b-45f0-9ac6-ea9bc6af843a",
        "cursor": {
          "ref": "be7fc121-cdf9-4f2c-bedd-3b366b15e615",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d95501e3-301f-4643-842a-68804f357547"
        },
        "item": {
          "id": "fcb09599-776b-45f0-9ac6-ea9bc6af843a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b325bfee-d80b-4e4b-9769-91cf408b6c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4be6568-b5c8-4884-9f33-fae8f7f808b8",
        "cursor": {
          "ref": "cb9a2dab-bc14-42da-8fbd-b60736580d95",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "662d43d8-482c-40ef-8dbf-e7126b9272f0"
        },
        "item": {
          "id": "d4be6568-b5c8-4884-9f33-fae8f7f808b8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "efe28a00-d6c7-43f2-89c2-7537b895ab01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806c13ff-08fb-419f-b65b-604686acf66c",
        "cursor": {
          "ref": "6cb46dec-faf7-4707-8185-edb658cb637d",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a02c3461-ee5d-47e6-95ac-0f7876bc800d"
        },
        "item": {
          "id": "806c13ff-08fb-419f-b65b-604686acf66c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7e7854a3-937e-4000-acf4-535eabd8c94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b762a10-707a-473c-a61d-232269ce4ec3",
        "cursor": {
          "ref": "8cf90ea6-e5f7-41eb-b38f-090bf9424d93",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "87a1e5ba-ada7-4824-b237-dfcb95a9a2ea"
        },
        "item": {
          "id": "5b762a10-707a-473c-a61d-232269ce4ec3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c9577173-42dc-4c78-b536-4baee1eb0370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea161f5b-c637-4577-89cf-e70e06ea2bd1",
        "cursor": {
          "ref": "a5fe99ed-b8c7-4fc2-8393-92cec0372249",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4c244aa7-30b5-4ed7-9d0f-a69b6e149012"
        },
        "item": {
          "id": "ea161f5b-c637-4577-89cf-e70e06ea2bd1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f691a804-4776-4c8c-bb5b-adad35b726eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d15c74-2fd4-4262-9345-a78cc16ac4a8",
        "cursor": {
          "ref": "33ea7881-41c1-4521-826e-7e84f854820f",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b68a0002-c36f-4b2a-a14f-c8a69fe2b766"
        },
        "item": {
          "id": "34d15c74-2fd4-4262-9345-a78cc16ac4a8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5920f6f5-66cc-46b5-ab3b-1db1dacb16d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ddd7b10-41c7-4d77-ad57-1bcfaa8b3b5d",
        "cursor": {
          "ref": "1dcc02bf-4631-4161-b955-218dee60e8ea",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "74e72919-139d-4d14-afc3-447bf31a230b"
        },
        "item": {
          "id": "7ddd7b10-41c7-4d77-ad57-1bcfaa8b3b5d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "059baa89-33bb-4a8e-bd36-e3f0248e2df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a474dd6-06dd-4ad3-8680-5ac10c5cfeae",
        "cursor": {
          "ref": "451a829d-b10c-428a-a5e9-b071a8a881df",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "67df3b8b-9b4c-4012-ab4f-fb963f9412f2"
        },
        "item": {
          "id": "2a474dd6-06dd-4ad3-8680-5ac10c5cfeae",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "051f67d4-09dc-4068-85f6-850d66371c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f3ed41-e327-4542-b1d8-8ce714199d79",
        "cursor": {
          "ref": "96f117f1-ac5a-4cdc-b0df-c0ad0091b5b1",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3c1c1474-bc93-4053-b739-93d284674f26"
        },
        "item": {
          "id": "61f3ed41-e327-4542-b1d8-8ce714199d79",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "19d8ff7f-c33e-4af1-a95a-da0569cd6afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70d21e8-6ae8-41cf-8e72-219119cc850c",
        "cursor": {
          "ref": "5d7be870-4c81-46b5-aff0-68726896d2e3",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "740eb0c7-b0b7-462c-b895-8a55bbf0ab38"
        },
        "item": {
          "id": "d70d21e8-6ae8-41cf-8e72-219119cc850c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "02f37e79-a783-4130-8c54-1518c6f93563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012e8785-6bb0-440a-bef6-ed385d59bb66",
        "cursor": {
          "ref": "7994bae6-e5a6-42c3-8e14-569f01cbe777",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b363db6d-8a52-4422-ac1e-d366933996f7"
        },
        "item": {
          "id": "012e8785-6bb0-440a-bef6-ed385d59bb66",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4771f220-c8c4-473a-8279-61bb8fba52b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1d7762-6b0c-4075-ae5f-173821a847d4",
        "cursor": {
          "ref": "67198e5d-207e-4ac7-b1ae-43d74d40871b",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "24483400-149a-4e40-b9ea-abe1170ceab7"
        },
        "item": {
          "id": "5e1d7762-6b0c-4075-ae5f-173821a847d4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8ed07fd9-ed8d-4aba-9bd9-c5fa16948ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16786599-f127-41fa-9690-76a4bc7f8e58",
        "cursor": {
          "ref": "5b2ca86b-361b-403a-a819-7056e01c517e",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "67bf3c44-fd05-44a6-811b-d2db5a759296"
        },
        "item": {
          "id": "16786599-f127-41fa-9690-76a4bc7f8e58",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "30366740-9f73-4359-954e-14766c731820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66257f9f-f95c-43dc-b949-b26606d2ff56",
        "cursor": {
          "ref": "3b3b9d82-c4b8-466e-b445-35a518f67f3a",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "66ae6ba6-02e9-43c1-8221-47328167d531"
        },
        "item": {
          "id": "66257f9f-f95c-43dc-b949-b26606d2ff56",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "460254bb-da04-499e-a994-7de5be173c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a26400d-8986-4099-81db-70f763d730cd",
        "cursor": {
          "ref": "10db8521-1bb7-420d-9603-689d60c20dc7",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8a9772b2-ea82-4d4d-ad1f-10d825bc4c98"
        },
        "item": {
          "id": "1a26400d-8986-4099-81db-70f763d730cd",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fe1a4b16-8776-4720-90d8-35e1581a22a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b822c8b-998e-4974-9b1f-e820eeb04323",
        "cursor": {
          "ref": "93fa3c4c-5581-4f28-a631-b509bf6890b4",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "cddb3f1c-4b28-4b70-8011-1405509cf9e5"
        },
        "item": {
          "id": "0b822c8b-998e-4974-9b1f-e820eeb04323",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "25ff0cb4-6c4a-496a-9de7-bc993ef2eb9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f498065f-32c1-4d14-b113-2c6cf7efd4f9",
        "cursor": {
          "ref": "7821310d-217c-4a4e-ad18-75f6667e7fd7",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "5c78cca6-fc4d-40d9-8db2-dee5d7a5dd03"
        },
        "item": {
          "id": "f498065f-32c1-4d14-b113-2c6cf7efd4f9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "89d8953b-2477-41a6-9dc3-519586638d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38162e55-0df2-4fd5-ada0-4550c1aef539",
        "cursor": {
          "ref": "19185395-cd66-4819-9be5-93481bd48a6a",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "2feaeb07-4789-4a6c-80e3-f713d4e32502"
        },
        "item": {
          "id": "38162e55-0df2-4fd5-ada0-4550c1aef539",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cff002fe-6ca5-4a03-acb8-f2c1c816f73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c468f6-108a-41ba-b9f9-9316b1f1dae0",
        "cursor": {
          "ref": "18e32a46-3ad8-40fc-8e51-7a7249cc0477",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "b9c29672-dd13-4ad7-9357-80520551bc66"
        },
        "item": {
          "id": "08c468f6-108a-41ba-b9f9-9316b1f1dae0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f223f789-7280-41e3-b725-58feba72564f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32f7664-4463-4b05-9ae1-f77f5e1f4995",
        "cursor": {
          "ref": "b23a1c25-729c-4a93-bed4-647179e318ca",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "bbb495df-1a39-4487-b61e-7d45404cce20"
        },
        "item": {
          "id": "d32f7664-4463-4b05-9ae1-f77f5e1f4995",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2788b3a7-850e-4733-be0c-7b835f0dde52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831bdfd7-3725-49f3-8957-173fb8fef9b7",
        "cursor": {
          "ref": "33e648a8-c028-479b-aaeb-d324c1756a13",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "147d5c1a-3753-4098-9aff-59888822e195"
        },
        "item": {
          "id": "831bdfd7-3725-49f3-8957-173fb8fef9b7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5d4d703d-75d6-4aba-b830-3d72c5f95371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28740b38-7dfe-420f-b0a5-31f426417f01",
        "cursor": {
          "ref": "ea8ce76c-9ee8-4c2e-a212-c64c56aa35e4",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "04082fa3-1a8a-4d2e-9229-4d5351ee792c"
        },
        "item": {
          "id": "28740b38-7dfe-420f-b0a5-31f426417f01",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "33467c13-2797-46a3-bd4a-4508f47faf7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f89ffe-f1d3-4b80-9b4f-9d0ef0ffbcd0",
        "cursor": {
          "ref": "86aeaddb-abc2-4add-85e7-8aabc767e52f",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "05ab3372-f9e1-4369-aa7a-c0100f78f060"
        },
        "item": {
          "id": "13f89ffe-f1d3-4b80-9b4f-9d0ef0ffbcd0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e7edd62f-b192-498d-a211-e35a65739bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c48f241-900a-4c4d-b5f4-445af754f234",
        "cursor": {
          "ref": "6ed199ae-9f0d-4041-b638-86f7f92efe09",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "5d1c17ef-0e7d-4822-96aa-39ef9e217ed2"
        },
        "item": {
          "id": "5c48f241-900a-4c4d-b5f4-445af754f234",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c91f9b97-b22b-4f51-a8bf-77b7e39b09d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd08b53-d9fa-44d0-b2b5-ee469bf497e2",
        "cursor": {
          "ref": "8d7dcb58-ff2d-42c9-b0bd-19a2a4f1b9eb",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "5d8e5099-fe6c-49fe-9cc7-68c23718f850"
        },
        "item": {
          "id": "afd08b53-d9fa-44d0-b2b5-ee469bf497e2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "45c54cdb-7d5a-4df6-8f3f-f4dfe1ede319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d1b674-8a21-4e5f-9da6-3235104ab04e",
        "cursor": {
          "ref": "dc710485-02bc-4caf-899b-38f11ae6f1a3",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "853665c7-272d-4b5e-ac67-2739c052707a"
        },
        "item": {
          "id": "70d1b674-8a21-4e5f-9da6-3235104ab04e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "dbf97c6e-009f-41d9-a5a4-92201ab6d1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437e6a87-5e48-4996-bc37-a91c7e68a8f0",
        "cursor": {
          "ref": "0c257c2b-a3e0-4ee5-9838-f25b672d7056",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "be493af4-99c7-4a77-9ba2-7c57e95e7ebe"
        },
        "item": {
          "id": "437e6a87-5e48-4996-bc37-a91c7e68a8f0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "57a91c9c-b416-4d25-8b8f-1c7bd14af4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8fc1e9-dd8e-49d3-a22b-cf59c90c9b36",
        "cursor": {
          "ref": "b76b8f43-63e8-4ce3-9dd2-687ec0c4e8c7",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "1e505d5e-a976-4dc2-903c-bbcf51bab3ad"
        },
        "item": {
          "id": "ea8fc1e9-dd8e-49d3-a22b-cf59c90c9b36",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6917d7e5-097b-4fd2-ae7c-e08cc7704b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902e5998-dd35-42b7-9f84-d83fd9862c05",
        "cursor": {
          "ref": "546e7722-68df-40ba-80a8-d35d1509e480",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "9eede9f1-850c-4df2-9fed-6427ea49c934"
        },
        "item": {
          "id": "902e5998-dd35-42b7-9f84-d83fd9862c05",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c72cd392-317c-4b22-999a-08481ab7faa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d7c829-b9dc-48d6-b983-254acf514723",
        "cursor": {
          "ref": "d9ed12a8-dab5-4444-af2f-0301e973d4b6",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "5b46954f-aebf-4117-9ec9-7e9a33640018"
        },
        "item": {
          "id": "24d7c829-b9dc-48d6-b983-254acf514723",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7bc1835e-c366-4974-a337-6f561bcfc0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d46308-614c-4371-b310-e74d9934b3ef",
        "cursor": {
          "ref": "316658b3-f50f-4854-9c0a-2d21727be36e",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "808f2746-5bb7-4229-b70f-e50a97c7376c"
        },
        "item": {
          "id": "28d46308-614c-4371-b310-e74d9934b3ef",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "86c1ab9e-bdf5-4870-a4b3-318963db3fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5ed18f-c847-44e8-9a3e-589133efd51d",
        "cursor": {
          "ref": "6f36984d-d40d-4887-8044-a0fb0e74bb29",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "595bf2db-d51c-4f1f-996b-7035658159fb"
        },
        "item": {
          "id": "2f5ed18f-c847-44e8-9a3e-589133efd51d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1807fe69-4579-4def-902e-87697a2b7d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7127b7-b9c7-423b-9c62-66b6d8d88b9d",
        "cursor": {
          "ref": "971f3013-8196-400f-b2e7-a30f0990fa45",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "2852215e-808c-402c-a74b-058a53a19857"
        },
        "item": {
          "id": "8d7127b7-b9c7-423b-9c62-66b6d8d88b9d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "39016eb3-5d84-4c8e-926d-17182501cf83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9c5a81-64ef-4e3a-8a82-d7146d840733",
        "cursor": {
          "ref": "bee6cdd1-0fb9-42e5-b83c-a106b268a146",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "697f01ef-085d-47df-b2e1-33c583d341e6"
        },
        "item": {
          "id": "2b9c5a81-64ef-4e3a-8a82-d7146d840733",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b366aff5-73f2-4ef4-8bd6-f38e85b93692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d79d8c-0e9e-465a-9875-f4584058c9e1",
        "cursor": {
          "ref": "ab2a8cd2-ec59-482b-8ca7-9d8c4349c064",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "63820739-dcc5-4c8b-8b03-abfabd14d273"
        },
        "item": {
          "id": "f7d79d8c-0e9e-465a-9875-f4584058c9e1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e3d11d53-1f95-43c2-b2ca-ce4961bf9527",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5aa282-94ad-42d0-9957-8ac5754a5815",
        "cursor": {
          "ref": "3eba51d6-a9d0-42eb-ba65-10a21d238b93",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6caa0757-2695-4faf-a514-1a0619ef8ec7"
        },
        "item": {
          "id": "ae5aa282-94ad-42d0-9957-8ac5754a5815",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8c2e9ad0-2344-4655-8409-c211f8e3ee5d",
          "status": "OK",
          "code": 200,
          "responseTime": 85,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8121a2ff-3363-44d3-83bc-0931bfb81666",
        "cursor": {
          "ref": "70881b8b-e69c-480a-b99c-1025196ab6a8",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "7a994bb7-e60c-4c23-b39c-e52b07b61e77"
        },
        "item": {
          "id": "8121a2ff-3363-44d3-83bc-0931bfb81666",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8c453980-85cc-46ac-9b5d-81cbf7588c93",
          "status": "OK",
          "code": 200,
          "responseTime": 3043,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad5456c-537b-4d47-b88b-8386c49c41d9",
        "cursor": {
          "ref": "82fa33f6-caf7-4115-b6f4-743e11146318",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8079a0a6-77f3-41f6-8571-475237f09278"
        },
        "item": {
          "id": "0ad5456c-537b-4d47-b88b-8386c49c41d9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e5e843df-8f72-4824-8b5f-c85dbc3ab0f9",
          "status": "OK",
          "code": 200,
          "responseTime": 4365,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e76aee-d6ec-4745-86c3-3bdf615da78f",
        "cursor": {
          "ref": "283c3f9a-25b7-4ef5-8b01-c4c73f6aa5b6",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "87a68f25-4704-42e8-ad18-75526d5465ea"
        },
        "item": {
          "id": "d1e76aee-d6ec-4745-86c3-3bdf615da78f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "35513651-7078-4f18-8790-d57ed28ce577",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e76aee-d6ec-4745-86c3-3bdf615da78f",
        "cursor": {
          "ref": "283c3f9a-25b7-4ef5-8b01-c4c73f6aa5b6",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "87a68f25-4704-42e8-ad18-75526d5465ea"
        },
        "item": {
          "id": "d1e76aee-d6ec-4745-86c3-3bdf615da78f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "35513651-7078-4f18-8790-d57ed28ce577",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017babe1-2e37-40d3-9c4c-86e85e4dd1e8",
        "cursor": {
          "ref": "f0bbcd25-0fae-4438-bfb0-6fac340c8c47",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "d1bae51a-c78a-4807-b5fe-724530449fec"
        },
        "item": {
          "id": "017babe1-2e37-40d3-9c4c-86e85e4dd1e8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "bf05265d-0fc9-468c-aaae-1b64f34b6100",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084923f9-e6cf-48f9-b6b0-80d77bae4a82",
        "cursor": {
          "ref": "5fb2bfd5-d58a-4116-9aff-1fbd3f4d2ea9",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "7d76e23c-8d65-47b6-bce8-5ff660ce5200"
        },
        "item": {
          "id": "084923f9-e6cf-48f9-b6b0-80d77bae4a82",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f642f5ef-389e-4615-8a73-80be76e79179",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}