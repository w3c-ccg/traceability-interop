{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f080c9c0-0f2f-4fd6-975e-3a00445bbfe7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d4e636fa-8b09-449d-9b67-d2845b25ca0b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "52fccea4-4697-414f-9fe8-5ba804e73948",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d6712d97-f5b4-4fb3-bf23-476a5888a531"
                }
              }
            ]
          },
          {
            "id": "93f0c6bd-1701-4b4d-b7f1-eb8ca372c777",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "69ca23ce-c040-4ef3-a87f-873fc13e1b66",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "06dd1b63-fe4f-4d43-a0ce-c26b38479c56"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ebfac098-26ca-42f5-8474-eb60085702cd",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e1e39209-c0b8-4c42-8211-af1eedc1a95d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7de9db3e-9c38-4d9c-a827-52a8796526a1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fbb3b0e2-f5a7-47a9-9ff2-a3379abef1de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a65c23cf-d232-4ac3-a954-b415aa24e351"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b8932bec-133c-4cfb-968d-79191b122547",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "547709c4-13ef-46d3-8b66-3fd953650020"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "01080cf4-50b3-4311-8fb5-abe1ed6c368e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7200365b-dc41-4f1c-a3a1-ec96a877a667"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81782199-01c3-439f-921f-55d82a311322",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d8e3d960-d637-4f22-9417-6c55a087fc9a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3be629e1-48ae-499f-a557-6cb46513e218",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63c916a7-3321-4319-ada0-b0ee20284b62"
            }
          }
        ]
      },
      {
        "id": "ccbfbed6-064c-4ab6-9e59-41cd67c347f3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "77823502-b678-4c7c-95a5-d8766c332e8a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "90d93a1b-1989-4628-92d3-3030a94e1d5d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c49ff3cd-405f-4c5d-92ab-44b213ccf880",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59584699-fcb9-43a6-9094-f139254b8eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c3bc984-88ba-41ca-adba-8c1a0afe796f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca9871d-4d80-47a2-86af-4f383e7b7670",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb3da82-40b8-4995-bd89-2a3057bea393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3982be9e-cde1-4bf7-a27f-1202bb0756d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336e2a4a-dca6-4f7b-93d0-f335053cda16",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11966b0d-6211-4806-af9a-889e8af9da3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b201f88-7140-40f2-854e-d2540ef79514"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e8aa63de-f3ec-4e44-ba80-2ac7600abca6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0b4816c6-6dbf-4ff2-bda5-77ce148caddb",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7111ff-4857-43fd-92e6-640d8e5394db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f64ef3e-6a78-4e2d-9a44-074407aea35f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5476bc98-82d7-4dd5-9bee-29c8c4202fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f8f772-5aab-4d1c-be36-a7e6219db29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba22579e-0458-42ae-9562-786ef38d2377",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359e03e5-bde8-45f5-9339-fcc0b77eb0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a245123b-d631-4fc7-9620-fc9a8ad2784c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4fac93-81a5-43bd-bf19-e6f0b301e09b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "695a0c65-d2b9-4745-8227-0f80525241cb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "58f12069-5726-4709-9780-c07052a0f7b3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5a8d61fa-725c-44b6-b976-2ea3cb110be7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de4921af-3158-4521-83bb-8cd955f30bea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "cd7483fa-a0b8-422f-a804-16c372e64a38"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c64a342-5736-4745-bf44-d0444fa840d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "04d88a66-4df2-43f1-be13-d9ca638314f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7683d821-67aa-47b3-b55f-e26f610113fc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f447f2c9-77e2-4d38-8500-59dc9abf8e40"
            }
          }
        ]
      },
      {
        "id": "6d741b0a-850f-4ab7-97ae-0bcd5836c4d0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d694fc9e-881b-48e6-8821-9032ad208888",
            "name": "Negative Testing",
            "item": [
              {
                "id": "950c75a8-578c-47db-9789-a6f8bab4c28d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4b45c036-8241-4467-95c8-b644b02ae4b9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba36786-482d-4bd0-a6b5-87081d317203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c6b93f0-37b5-40d8-95da-6b79742b9e9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e742f840-5957-4614-9a2a-303c3e58bdbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d901c775-d13a-44b1-8008-5bcaba2e961c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54beeca0-380b-4234-a7cf-d0010aff061c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5d7021-3450-42e1-a6cb-33667ab0ea2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e2bf5df-db19-4717-be4b-c12395f24e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582027c1-a7a8-4f10-838b-2d11b71af364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6fe1a3d-db01-4bda-a11c-d3baaecdaa02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ba5e9b-28ba-4b1e-a072-1a2fe69390e8",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd34f044-1f63-4dfa-af43-c189a0e8de33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa0311c-ffd3-49c0-9c6b-11893a41eec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5416486b-e078-4c23-abd4-3d635770ca19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df5f77a4-4714-459a-ba1d-28c74b37023f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6735e260-4415-4e11-8c89-7d921b2f93be",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c90795-06c5-4bc7-b19f-0d89b01d4df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7975cdd9-85ef-4a50-a4c0-bbc8631872ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ce43d6-606c-4e6f-a975-e7f85a4514bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6035703-f977-4972-9ed9-6791a45251ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71990293-90e7-4783-be55-69461d6216f0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55322711-bfa7-4a54-8fb0-35ae297e1389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a809c2e-f9d2-4efd-bcc4-8fd0c39be156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dccfe803-8645-4291-8042-846c06816af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c529fe9-7a33-430d-8993-1515a27fcf59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6202cc-c1bf-4938-ad97-7ec3dacd2216",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252386a1-9d10-49c1-a6d8-20f86eb09586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37262b56-ca6b-47d8-a666-a64017496a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cc36c5-f6c4-477f-b5dd-89de029fd1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26f9261c-b7a5-4c63-b236-3e706040a969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b19c59-5701-474d-9f82-caad43b96897",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39deaca-3112-4681-916e-c6e0780154df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04553a61-0534-41dd-8969-8dabdc16f67d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0d0f94-bcad-4e63-b980-7b2b7940b209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85b2b880-1888-4dd1-9ee7-796e9c8c0362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df19256-d71d-46bc-804e-68e20abe3878",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43c7fc9-8109-4b06-a2d0-aadb38484606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64450028-dec4-4c1e-b6cc-7f8872150ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574bb8c6-8729-43cc-b252-a887d7d90300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9b5869e-52e2-4d34-a23a-2d876f7722d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba170b9d-22f7-4f29-8ef0-4ee37f1d7aa8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4d0ed0-8b9d-4c7b-8be2-848ed2b3db57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e700cc6a-2e08-42b2-b450-fe89cf57a510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41af612-e964-4434-aea1-f813f6874f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "751e93a4-cdd0-4a23-b8b6-32051a9b688e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd982f7-bf52-4ff5-912f-a3db42d39772",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c270290-6abf-4796-933f-02c19ccae92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8611f157-a2b2-421b-9bcb-aae43acf3c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d47aab5-3534-4cfc-8556-dd07444d0712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76fd90ee-e4d5-465e-b70f-a8319e67686d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b6d95e-1281-47e5-8df0-e0a37d54ced1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aaaea1c-d5a3-486b-9308-e550275d45f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719a61b6-2eb0-4b9a-8dd1-5f20dd45c2d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c51b33-ba38-4534-84b4-d77a82a977f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10b1e4f5-9af7-4e10-9cde-880c53295480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3b6f81-d811-46ec-8299-3c6a29b50b99",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a949991-72cd-412d-a68f-739b4b85d4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0feb8466-0fda-41f5-85ee-d6dd1164c498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d94dd2-ac3e-465c-87ae-34d22ceaefbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3371852e-7e54-49ac-a6e8-88750a496fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d378b0-7c13-434d-acae-0ac5b8706db1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7181e34c-3cfa-47fd-9acc-a0247d77841d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ea580a-264b-4c81-ae78-2163dd6a48d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605dfa05-4ca6-4f95-b327-eb67228d39f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2458ce7-b0c5-4ba8-af63-f7d155a2cef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e7f450-eb1b-4acd-972d-79fba6831012",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707f991e-d22a-4464-8671-2cf8ab9d91e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac240a3-7432-4175-a415-7cdca9b82941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbae2770-2855-4868-b024-427b1782a316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d3bdfb7-c5f9-4cb7-bbef-eb8c262085cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7212627f-3622-46b8-af16-965634584243",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d307d1b9-bb47-478f-a598-dd4f79cd8a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19dd223a-3b50-4385-bf11-ace588933070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3ccfd7-3774-4fd3-b90f-29fd3a6c217b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92b26e7c-7c70-4b56-9399-67f6aa50501d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97304ce-7a60-48c5-8ec4-6a69219fb6f8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c9a843-ff54-4b24-bc89-4a6ed47f3008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c55158-8e1d-4cad-8623-f9f49431ee81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b96f543-361a-44d6-b10f-a1c97ed23d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ee1568b-80a5-49f8-aebe-21350f914eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eaee5b6-265c-48c4-ab4c-a9e5adc6d51a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19faece1-66d7-431d-a917-22242925a386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6304dbb5-ae22-41a0-b8e7-62eef178815a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e957a14f-dd69-43f3-bcfc-683375d5a3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf7650a3-127e-494e-8f1f-b47ed4fcdb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451ee667-d487-4aaf-9fe6-c137e298151b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8417746-68d1-4d3e-aba7-c70c5b70f9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8680d176-18d0-4da1-85c9-1f2383c2947c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8326bf92-b726-4280-859e-c16ac3c78a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0272fb4-9767-4fae-8b76-ff6d051a85b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94160637-39cd-4622-9eec-3d102481590c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c1e4ec-86e2-4ff1-a503-49092937789d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3535e3fa-a8d8-4c98-9d88-b8677932e9ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29a309e-ca84-496a-955a-642b39978901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61beb8ea-1b8c-44e1-ae45-fa0ad4db9a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf9dfff-4a2b-4aa8-be1c-e09d8e6a52f8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db5af56-d7e8-4f1f-a539-73cfbbdf3fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f6af526-a084-4d78-8ef4-6255d3d02634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607e589e-b48f-41ec-8282-002d392275ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "76b4cd11-4089-4c21-8d56-9fd7941f4f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24904984-df27-45af-bf94-3513982f5462",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c24d22-14e8-4298-99e2-4f98b273b793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f729111-7255-45e5-8bf3-aa5d0055185f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fce3a4-0871-45e5-8e0d-fe23106c84ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f970f74-0fc1-4f91-b2ef-0f56d0284dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3090603c-6a7b-4fe4-9940-8aa3e174d849",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32fb1df-6f6d-4ceb-9bfa-c5a44b6e6707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27cd57b6-5fb1-4cc8-b1b0-3e1ae59872dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f815433e-e4a6-4107-8fa8-d51f48659f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "daba3266-2e8d-40fc-8da5-921c53947ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0064a09-9faa-4eb7-9165-affdcba3f4b8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bb4c80-eacb-4cd0-9502-af0e8f3748c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67eebd3f-be27-4f46-b6b6-9c2dbe018fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76bae29-8c02-4c74-bc94-d82a402119d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d31628c-6a84-4624-a992-24b0a8d9a7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78fe09b-e10c-48be-9dc2-159a9fce4a8c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d55e3e2-efcf-42df-b47a-e3619a41c418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a16374c-ab89-4497-8094-6897b1978cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e920a3d-d0d0-4979-b2a6-570800aa1365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "25d4ef75-3e56-4d20-a839-5a8ddb5354c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2824602-e2f9-4a3f-a77e-8cc9d90b950e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779ace1b-b27b-4795-b2e1-b38da4e22b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f04aac-5087-481a-8543-dfa3caee9738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c450d4e2-2fe2-4371-b419-4ff846de3566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f32e390-45cc-4e81-9c34-d9d69a32e882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9740b10-cd00-4740-83b6-5bac07a18d33",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc047263-fb98-46cb-88f3-3929cb794f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a76584-184b-48ee-8aff-898edbbfc238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a41552-dea3-45f9-9e84-19af35c37309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "adfc02db-5e35-4508-bb37-42da384e62fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36641b7f-3e73-487a-bb14-4104ca9d38c6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfd644e-a085-4a65-8ac9-945d81caa73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe263e1-19b0-4a24-8b2f-d16e497c5933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05ae021-5ced-4834-ad68-8b98ee801a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "19e10111-4718-4340-95e8-673d3e2aca7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0453596e-d875-4383-a4db-6b654f29d3d5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2430fd-67dd-42f3-baab-8420cfb4d637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f77e29df-7adc-4340-ba99-1f85ca04cb46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafe9dae-9617-4a49-b18a-d22d02fd383b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d40aa88-25b3-4b9d-a030-22b6e3543ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7912c81f-5930-4435-8742-1f2d7c2bda78",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "535b1709-cdbc-4c04-aeb6-2b1d2bd37ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f0571a5-6208-403b-8218-274e11852655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7133da-190f-441f-a5dc-2c31cb0fa9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ba7954f-2c86-441c-a252-4aa911d4a94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e0030d-6f8e-45ad-960b-179e51071e7c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7159e54-b447-455b-a3aa-01dba3e5a1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a557eb2d-6760-4626-9047-b754f5523abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b9b4ba-88bf-4e2a-8c6c-555dee089063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61890244-706e-411c-95c9-236e7c724205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1948cf1-6339-4099-9f5d-4e1d5685829e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8aa871-9c32-425c-b659-2622d55c154c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5f7bb5-8ce5-45d4-ae3b-382bd7c574c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bf8e9f-751e-47f0-83c7-7bc8abd87ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2edbed9-3161-4042-bc2c-19996a404ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483f279a-b8e0-41fa-b02c-9f71e12c8b81",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca0734e-e02b-41b7-8fdb-a63449a7a9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b5b98fd-faba-4b0b-8ddb-f6b8cf5521c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244a26ea-a853-4101-af99-baa6d2e26dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecafa5aa-e1cc-4662-ac3d-fbe3861993d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240fadff-43ec-451d-949f-5b4c2bf01d03",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e056123f-77fd-4e3e-8b55-951147438fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af88803-f855-4e70-bd20-9899dc8eaab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d38c73d-127a-4aa1-97c0-66d09ad08e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f374def0-a465-4cc0-b1ab-0b790713acbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed349100-ecfb-45a8-a2d3-febb966962dd",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1923a23-5424-4a07-8e32-bff26e69cf0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8faeefd4-1f61-481f-8de0-76a8f3d940e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e66c79-6d56-47b5-b923-641129690bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f97ded2e-c388-43d0-92e9-63a5a60636eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4277f72b-2834-4aa6-9705-7c45c399bb2d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a81766-274c-475f-97cf-8c17bf3043ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f592b62-84dc-4ff6-8611-ddb89a29aeb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1da52f8-8149-43d6-82ef-e1023480e018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a2f65d3-6ca7-40dd-b11f-1a6d6c78266d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61352f6-edf2-4fff-9475-9e7cf056fc01",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "014cabde-3b6e-4cde-bceb-18755c71cd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ddbe5bb-dcfb-44da-a3b4-3bbb6c876091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f77a82-65fb-4207-87df-e91dfa6d1eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da298971-e0cb-4fea-bbfb-49dec6ee6086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d2510f-db6d-404e-b7f0-ee727abda862",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d8786d-88a1-486b-8e14-adbcccd4eb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf7c0c7-27ae-4569-9cf5-d97699b2cbfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b6e811-e27b-4197-9f63-efb1101393e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a480a8fb-9302-40cf-9b24-9285f5039222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a14c602-26ac-4016-b66e-2ba9091b0a56",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31091aab-6c9e-4d83-8882-66694db371ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96bd2b13-aada-465b-bde4-58827b54776c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3119238d-6d0e-4f57-a854-96fab00dec0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7941f7b7-ee1e-45a9-802f-93a72e58a7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5310020d-63af-455f-850d-45105d5a9380",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19c16d2-dd80-4b33-a398-b051a27d0a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a71dfef9-b584-4f16-989d-214bad5f5837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee22531-cdf7-4fac-aa7f-5dfe146aa0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c87830f3-fef0-4991-aba4-870670180dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c57fd33-c99a-4189-9902-46b71b68a745",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70648c17-080a-4df7-a210-b446a4dc33f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96652bd0-0e03-45c2-a0b4-93a9c4515b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de92b88-4cfc-4b27-8638-7eb58a880465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "851fd0b3-ee04-4735-a627-055a33d7fd00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf84080-74f4-4b26-bb45-1a3f46413a59",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff9ccd3-dada-44d6-8f7c-f1f4c629e2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e70d31d-5822-4a23-9620-8033b88a4072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523f5acd-7ace-4585-b27a-9fbdd69fb65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb97f37-6855-43e6-a1e5-25fd636aae49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3b8389-1cd9-4f23-b53a-806d6c7be6f4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f775ef1-1e1f-4f28-88f9-75ad0dbe3630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2513c152-6ea0-4aca-94be-e6270fdeb185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6cd54d4-ff2f-45f2-b984-7e57e222b32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f048105-8bb3-45c0-8246-3cb8374dc7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181fe4dc-33f1-4669-92fa-f179a5ad8cb1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2306ba-a069-40d8-89cc-fb0c692cae6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508479c7-a048-4b95-8034-2fe311d78058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f656b3ff-c6c6-4a49-80b0-388c6952905c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "da009236-19e8-46b8-a1fb-ae44781add3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8824d3b-e1ed-4798-a01b-4afd1dd6dea8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4fd8226-947e-4bf1-a0e3-94399be05e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d142113-13c8-4d81-b42f-2d1864e57976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0218e47f-f976-4511-9e8e-646034dc26c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f335b00f-6800-4480-a36f-b9c04701216a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ef196a-7e46-4b90-83f9-0291b5ba8bb0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cac924a-4890-4752-80f8-8c0c9ce8f33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01fb9338-c272-46f8-8704-1b3e1b034b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eaed1a9-ad85-4333-9751-8901bc4dc169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d55d18e-bce9-4fb1-98a2-49609780de69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892af2b9-736c-445c-b4a6-2c59cdd4bf2c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0a094f-fd2d-4d3e-8f13-ae65a33befd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "941cfead-be94-4edd-be35-02d2da686044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ade8661-05cd-4766-b6b2-7bc42b2ffb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3d07c2-207b-4af3-80c6-f0208d870b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1795935b-eb09-4190-903b-4adc266ac5e6",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a52be12-b1ba-4e18-92dd-6ff73d1b3037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323c7e6c-de23-471b-96f6-06f711ef2d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b920047-0aba-4155-9fef-98eb5a1a1fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a397f252-20df-461c-8658-986a97978fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17c0f87-9773-4750-8a82-eb75d3b57e44",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186c86cd-575b-47c1-85ae-c91e1b3556bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48167da2-7b4f-4c65-9f4e-25b989504141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d941e436-8c15-45c0-b0c2-429f0ac39d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1291115d-c34a-4265-9876-bb2d61bc9a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9fecf0-7944-44bb-b57b-b399acef4cfa",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b1e7bf-b394-4641-9b0e-f981b1e769b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d993e4cd-3667-4091-b3f4-1a61cb406fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d873b7-a5e3-4c8c-a20e-4c2b272c0b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f7956e-51cd-44f4-9426-c916bb193f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0380ad8-827d-4f53-868a-1e92d628321a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73dc0070-2512-4f0d-ba3f-2703680358e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a06f6ac-446e-4689-a723-bc52447d022b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c54c764-e76b-4e7f-ba14-f949fadb46f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e7253fd-9e21-41d2-abb2-ad31e9f66a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055b6cb4-3643-43be-99cc-1007d5306947",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6e1756-5e18-48ac-a819-f4b473315137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d62bbc-e3f5-4240-b00a-3d5cbcaf2f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e40881-b833-4754-bbae-f185d3d9b11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "485296f2-1bac-40e4-ab13-cf5674fe0ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a1d82e-43c1-41c3-a746-0e4991570c34",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e779c52c-b656-41f3-b698-ebc9b556af3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa234288-8d45-4626-9157-1fa966060c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557fec34-4706-4c64-920e-68ffd25037f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c3ef045-f902-4221-8a1b-0a441fcbe3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72dd1681-ca91-4052-8de1-32c2813f59ce",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dcc2b0f-55ba-40b4-940d-d910c0909c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d307d78-020e-4582-a318-e18ef0afe578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f8c404-43f0-469b-8bd0-6bac6ad7ec36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c40decb6-f087-4a70-8ec6-6947f880c4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31fdb53-31ee-403a-88ba-1dd6c98787b4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95aa9b71-c1dd-41df-9e66-1e7289f4640f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d69861-6f7a-4f47-8e91-7df9c58bdebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd65be1a-aecb-43e8-8e78-f41e21f6484e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "531eec2c-a744-4b88-88d5-355620b4eb03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae9b9e7-f06c-4ccd-b60b-46780a40fe3e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237d3423-0f32-43f0-86d8-c9ffc612f88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "874af84e-bdd6-4a54-a7ad-374642b286b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c3d2a0-7659-4eac-bac8-c630b7600549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9be0967-c9fd-4643-8f91-983f0b696d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861bad96-a1a3-4293-bab3-db0a5b2c406a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72847d23-e126-4bbd-870e-c84645f43b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726ce3af-1554-4e5a-ae40-926b81087c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a4efa8-0270-4ea9-a3ad-9e3dac6ad971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82abaafe-c171-44f4-883f-7445bde95fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fed5a77-9aa4-469d-b7b1-633874ad1286",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d2ada0-d08a-4875-9386-fbd8650108e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8455259-2ba9-44e4-ae37-7709eb48d0c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d78b255-3bad-4f36-8554-21aefca11d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02f81739-2bab-44ce-aa15-ca58a9cfe925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521d9d53-cd41-4096-afb1-6dea65e77d27",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a7f1e6-b89e-478d-9cab-aceffde7199e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3dcf5b2-f9ea-4ee9-b0c0-6a317aa1c8fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f76d6cd-12ce-4001-842d-6769fff63f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd68729-9031-4e63-90d4-6ba5af7a2396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4938ceec-2535-46b3-abf6-2788225794b5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65227fcf-0728-478d-924d-2412d32e1a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5086dd0c-b906-4b85-9ba9-b2d785db4311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5e1f50-e44a-4c96-ae66-968cbca321df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "495eea32-41d4-4cb0-b94f-26b817b57360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238a8765-939a-4abf-9c4a-1b557a402a8c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f661ffa-df40-476d-97d9-bfac5baffebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b879d0-dee5-4375-a23a-355560555a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99340c97-403e-44ad-8723-02d8a15e9bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5579c1c-205f-4409-8fd5-1d5670029a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ace9ce6-674d-45f9-b612-74eccb1bcdf7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5df03f0-fc52-4c4f-b778-397639943068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e6ecd7f-1071-4acc-a0a0-6fa425275f9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6251dc-a738-4485-b8a6-3ba51168643f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b427e977-9841-4495-b6a9-46e65a948e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfe31e5-4e70-4eef-b72f-6beaf51538f7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c139ce20-9efc-4574-883b-ef9500ed5900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "135e0f81-a42a-4159-b67b-2593aebf55b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cdaa38-dd92-4d2e-871f-3cc0fac59db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb674ed-2806-4c2a-ae90-aceda5be5188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918adca2-b92d-4c17-9c57-bfe106350226",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f86786f-802a-47b3-8fd7-9f04b756a7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af6afe99-962f-43e3-9bd8-4aaaa5791443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c990e102-0195-42b0-b6e6-430a509e47e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b56a8dd3-0342-4dbd-9b94-bfbb843a351c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0fe92f-466e-4c25-bbc1-e518e17e6559",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f798c53-2191-46ee-a5d2-821af20eaaf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad5959a-e6ae-4772-ac79-8dd9011d106b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9efe61c-6711-4e02-acff-198a8023eb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "29055d0b-c983-41a2-8370-7e0ca32cd630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c13bae6-28eb-4deb-ab2e-5839b45ed75a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f5f4c2-891a-43c2-8a24-93fe1889ff6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c6109b-fe4d-46b4-8f03-a1fdd551501a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abaafe8-b1fd-40c9-b22a-899d96520b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab2640e3-7307-4021-96d3-0f2e19a63466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e977b6-1396-48f3-95ec-c8d0496603c7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb0e032-fa60-459f-bea4-020b9dc6a0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef13f7f7-d8dc-42a9-8c8c-b28166aeb901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ef9a76-d38f-49a4-b977-cce3542efc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66240bf0-37e5-490e-9b7e-c6ed22f2743e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb35d8b-a870-4343-91c5-18b9e70d7d82",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c32c9d3-16cc-4391-aa5d-1a304fcf5783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7603299-6fe3-4182-b4a7-56bab2a9872e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bb594c-332c-415c-9924-33c65cd00689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "708e31a9-ac45-4173-a75c-5581dba61fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff2eac1-b723-44aa-9274-9e110394aa42",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5537760f-c14f-4b3b-a927-58e7aab8e78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "125d25d9-5557-48f4-874c-f57156b63a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f107023-e1b3-4f4a-b5b1-1e7ba94b043d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e85bec3-5f53-48be-b6bf-120bbf18d1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb25e8be-d064-452e-8565-1ff1b812ce70",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddb047d-4eba-41ee-81b0-1399a9a64636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7dc794f-a141-41de-b76e-a872ece72517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9350843-3822-4803-9f2b-9507d8da1429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3f7ba2-4d77-43f0-8d7e-9c918c70e6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3354ad16-29f6-4e3a-846f-21cef3ef919c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed53f77-d0e0-4eb7-9767-0554d5a2fb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b21bb75d-19d6-4726-b5b8-d0b12d778cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a31a45-0d0f-4775-b85c-b4e6981bc856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e62c1d3-45f5-4782-9476-7399acb26908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b27fa2-dbcc-42af-beb6-4bbd20a74c56",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7377342c-0841-4688-b2df-a02708a117c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529dc8ac-0010-4215-a278-99ef141407d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de32d46-c05b-4561-807a-a4945358d067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e81d3a-93e0-40bb-b8ac-8ed6da4aef23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325a9b0b-172d-425f-81a4-6aa08181b316",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40a7b93-9982-4da2-98b0-6d7bd709ddc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1171fec6-50d5-4d52-b283-48b0d0735f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db2854d9-acb4-4b48-8f24-2a41736017b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99765c43-907b-48b7-bf2f-c5f14685aefb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a435c62c-3c5e-4c7d-80a7-dc90b749426c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6129ae83-a965-47bb-b7f1-4b0497506ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d090ae-0505-4685-b0b1-5c480ad1203e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046d1604-142d-474a-b41a-fccb8f56a22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df2b3a90-e477-47ee-846a-eb9d3395b4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2d8f0f-2d81-4d1a-a60a-40a26192c749",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e79e0ff-2933-4cfe-9734-a1ff0a881c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c123656a-2748-4bcf-a079-c554dc0257be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28be4ca-2853-4ead-858f-e8b143f831f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c44a68ae-c162-4720-8027-a951d09ffe8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d2b7cf-4d9a-4d67-8dd2-cc241f11378a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61797880-ec29-494a-988e-f8ac7a19850f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b4bd82d-6b97-46e7-9659-9a950ab7cda1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673c7f4f-e428-4f09-9f3f-477dd8e00174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5251839-8c4d-4e71-a55e-ec7a1fdc0e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f88f56f-4aa6-47eb-a40a-81359714b612",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34afb0d0-5974-4a0c-9d85-78bf69681094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53671f4e-8a4f-4288-a8d4-42748393688e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381dbdc8-13bf-4a72-b78c-c080d11a0d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05c73838-bdc3-496a-94b6-854328d0b675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458b0b85-ede6-496f-bca3-70b3ddd7ae63",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae1c554-d3cd-42c7-94d4-4e056d133a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec8a0007-ec9f-4cfd-9552-aa294d98a11b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f1a9ce-91ef-4884-9d22-8d71b927e254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7df3506e-1565-454e-8fc6-6ffa9ecfe08b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55befe08-598c-4198-a278-9892a9250813",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0febd9-72ce-4363-8470-ec8a11c6c637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a639f2d2-9bbe-4ec1-9432-2aa6f9cb05c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a42f6a8-cce1-47bf-8e30-60eeb633e732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3731fdf6-f510-477d-ba8f-65fce0b5a6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfc5af2-e984-42fc-9ca6-f94e4ac4597b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a2835e-60a8-46d5-a132-6983c8ab971a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1812aac-d5eb-4a80-b11e-c0a1ca4dcf4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c76df7-aa1e-4c01-ada7-faa26424606f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b233de-53f0-4ebd-8b37-4c51af13c209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81915dc4-12d2-49fa-b3ef-16a44176be99",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11660424-776e-454d-beab-e20d086ba271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb787d33-8681-446d-a990-b97be5cf494f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745f4dc1-2e3f-4915-a9b3-9ca0ce131740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a810875-67b5-4fa0-857e-fc9d72b2e954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07597ad-55f1-411d-81b5-59c1e831a83b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd10bd80-2674-45bb-b4a5-05578018f2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f387500-45a2-4fcd-91a6-63f012d7d864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a692cd1-874b-4e88-8bfc-81929d44720e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "10915b83-4376-4746-ad9a-c8a380ace99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ccac1d-fa44-479d-bb12-ff5d07a9b9bd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6deb9f71-8c73-420c-83b9-d4210a7f3ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "770042ac-86c6-4cbf-91f8-6aa59f1f38bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87727788-cdea-4319-a870-358ce6170b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e1499d-42ef-47a7-807e-df410959c15a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9a38f8-f400-4108-9397-fc4103e14cd1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9e4d88-5ff0-41ea-b60f-66f2cea1d22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e96d7e-21ce-4fca-9e14-d7380cb4bed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a90f9d4-63be-444e-a06d-7128c7215d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3aa72cb-1037-40bd-9c39-53d3d115aae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0547781d-df6d-4523-8655-ab97d713c240",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5fa8e4-8d95-45b0-bae3-70db756af99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285d6bd8-2225-445c-9ef4-f6da9fcddfc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334f09d1-ea0b-4257-8488-364f3c0474a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e4c029b-d08a-467c-9ba9-5c41f4624476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1062645a-eaaf-4390-aaa2-37f043a904d2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d6d698-2a98-4aff-9937-af21461fa862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35441b1e-b1f0-4103-a053-fefe08452b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67d0424-e5f9-4ac6-9ed1-3ea703153f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74a77c11-88ec-440b-aee8-41077d598a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7758dd17-672a-4949-acdb-e842a42b8c80",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68d5ca8-f72e-428f-ab32-505a69f37edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a92b23a-7470-4948-8ff2-2668fd3463eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70deab96-5bfa-4fc5-9582-b49389720c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa2e291-b8af-44ba-b121-a919c60d14ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d57e52-4473-421e-a61e-c9d68d066ef7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd7f05d-0ae7-40e2-80f2-614d37eb7a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44df6cbe-d542-4487-b8f0-75bdd222940d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b149fb-f6a4-4cfb-982c-3eb7ff2a65a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "72262080-4ec2-46d5-a0c3-0aa463bd6a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de98a1b8-9817-44a1-a72d-e0b60ab1ad83",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e2ad11-53f0-4ed4-9119-001e618809dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e330877-d311-4e0e-8eba-c3c07b2ecb42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e463bb4a-2b34-4cf3-a1c0-4591106ff2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bed7e31-b8d1-4978-8ae0-cbbf761b7e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e493fd-9151-4539-9728-18bd060c1fc5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63facfc-3985-4a7d-9bf6-d011ce2cb49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11573f0b-f4db-4d66-84d4-ad5bb40fbb0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd35a30-5e40-4991-961d-9be76bab0816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d99bc02-140c-4bc7-93b4-aca5b64987b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6563a496-6d00-4019-ace4-7edd5efbe56e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b54b42-e91e-4805-9308-12fce702ef8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b1b050-2138-4a23-a8f8-c47c3e7090f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a9ec4e-835b-4ebf-ad77-376e4f4bee8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb0eb3dc-682e-4f9b-acb9-819679b363e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963f9c60-9663-4c52-b780-0aa6385f2af1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f730d58-9c7a-449a-aecb-09c3ba026f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d339857-648c-48f8-b0e3-046485b5f64f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecacb042-4692-4728-9406-638210ec779b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "46c5aea4-4533-4ec6-bc68-e30519b55cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0672d34a-378d-4d07-be8a-057bae28f330",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce993fd-bd1c-4e99-9b0a-84708fb64305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cad96af-68ac-4946-9717-6c5786a6eb71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad766141-12cc-4864-9f8f-f56b690f6362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cfb469a-d1e4-46ff-8c24-b2dcc3728f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ac0fad-4928-419d-b2a6-53d61013d5e4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6758a21e-86f5-4f9f-8342-c1897f358c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a291bea-c22e-4aa7-9ca1-4ba0bf8d65d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4be420-e1fa-4b41-b6c3-98449ffa01eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0c1020-5bad-4b67-90c9-95f509f48234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871d4192-fd7e-4da9-92c6-e5615116f488",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12c2290-9d3a-4c8a-83af-de3db31f64b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ab781702-85c4-48d5-b03d-cbae0b877647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26fa814-f1ca-47e8-be13-98c2475c5e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "df032334-0ca8-4f44-b6f1-2287525ffb42"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d89b66de-b161-45c2-b2c0-403441864338",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "01808744-1777-4b28-8bd2-d71df5404e99",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84b8d78-7196-4d67-8090-d50ddd6a4fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c0fc325-d89d-4c01-9d46-8977e9f29f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c5fd32-218a-4184-8b81-fbab9dae42c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "367485c9-5c79-42bd-bc96-7e65a194c86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1202e5d8-e6a4-4ba8-b5ba-b37bae8b38b3",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d3507c-e343-4d0c-826f-ec8beeba2952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f00e76ea-dbfa-4998-9cd8-dafa4bb9e02a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da1894f-2fc9-4ca6-bd7a-5da18e0bed6c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "e432e07d-8edd-4a50-b42d-120393cc7619"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9af7ebdb-a29c-4425-b579-808d4d849163",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe82a499-44f9-4221-9a2b-f965f8ca36e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f2dd8a5-5cd2-4206-80a5-7695ef60a1ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b10f3bcc-1456-4d35-aaab-cd69e9b8eed2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "14f7abe2-97db-421e-ab30-9be358cc255d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3be0855d-1589-42a7-84c3-1c429efdddfc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f48eaacc-f7bf-4a49-96e1-8c8ce711c475",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "86c4fc21-5b3e-4d15-b558-d97548295db6"
                }
              }
            ]
          },
          {
            "id": "ad196c9d-55c2-435e-ae0f-7a1a787a9b3e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "98443b31-92cf-4f51-a5ed-78cbadd157ed",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48c071f2-43d1-4a95-8736-f941481f97a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "13a48297-47a5-46b9-ac4c-97dc2e8a7442"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b37ed9c-9552-41b1-b13a-dfbfd0ea5a84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "af9f275d-85b7-4385-93dc-3dfae7ac64e3"
                    }
                  }
                ]
              },
              {
                "id": "b05eacce-f362-4bde-8b04-f6b4bf81bf6f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6e1de0f-0203-408c-904b-a614637858ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78ee4c28-3cf7-4763-b5e0-a7f78ea787d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93121221-d480-412b-8cf5-df4a3cd31d58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4cc3e626-3782-4d73-9b3a-357fefb39b54"
                    }
                  }
                ]
              },
              {
                "id": "29be6844-a688-47ed-85c8-6bb55d175417",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3ccb48f-6646-416b-b095-c6bf5d49e0f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84b18ad9-c055-48d7-b5b9-08612520a57d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f974d617-0655-4614-be04-afb16c06665d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4ef40ff6-2829-4e83-891f-3a1b31a95c3d"
                    }
                  }
                ]
              },
              {
                "id": "73fe0a70-d086-4a23-a147-c2a0c8c1bdbc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd46da38-d9b1-4cbc-b973-00e9551d7311",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "326773a7-737d-4131-a0c2-a77fe939e407"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38983dbb-22aa-42cc-8ac4-d5b6b1dca277",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6eac4597-d6e6-4f10-9cf3-6e5bac9552cf"
                    }
                  }
                ]
              },
              {
                "id": "4aacd997-b5cc-4805-9ed1-74c7b0f3a7b9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01bb1884-0762-49e5-ae28-3a732365b104",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "329d70f5-e9da-498c-987d-82c4a59c2e42"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f311d31-6fa1-4fd5-97c2-5a056f3ecb61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6d5d4a71-ca4a-4085-93fd-cb19375a38ed"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3d626b9f-13b1-416e-8e4f-455ffcadedac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "39d0761f-14f9-488d-98f3-f52fcdbc269a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "66b15504-a01b-4f11-ac79-20061a8ea3d3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f2a18b9e-3989-4a24-9879-c9b78c677067"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "400e01f9-c2ee-4d3b-bebe-58715a7d6edd",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "07b3f1bd-2adc-4ec0-bdde-9931ce724a84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6743f83-3956-4a46-a630-68e8856b5528",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "406cbf78-baa1-4ad2-a356-9d7415e873fa"
            }
          }
        ]
      },
      {
        "id": "228fb28d-55b1-4932-8c69-fadbe24cb9bb",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "46d4490d-854c-4751-a67c-0b91caa78fd7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ecb9b257-2b1a-4f1d-a5b6-ebd29ad24647",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "efb3d979-4c64-4f16-908b-46c9e0234493",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99aa9564-93ba-49ae-bc3b-d3adb791b1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1abe74e3-b78f-4aec-8c55-29deb9d512a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44109fd-9e1b-46df-b37c-3890dea2b835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b4282a0-977e-48cf-924b-3f7cbfd45e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8c539e-c6df-47f5-9ccf-ed3eaf9cb263",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba4f108-b7b0-4c59-9f3e-4650cca3e32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3d9af46-cb01-46a3-8454-b327e158053d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183da8d9-e8b9-4377-aecd-56a7014f574b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3d9c068-16ec-4234-8038-f8708b237b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e947f636-55ed-4826-a369-1924fbc2d1fa",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c42a1e-b16c-497d-b17a-091093f79213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07d9180-610e-4f13-893e-c2ffefdd49d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30ac281-a477-486e-a909-0e995ee3e85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0814252c-55c2-46a5-878c-65a2f0dd62ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c000c0-c260-475b-bfb6-8f83ca3a44b6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f9a8dd-6a3a-4ee1-b641-2115e6620acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8adf1d-bca4-43f7-b8c9-83766898d40b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0549bf84-ef8a-4372-aa23-48ea3d55b2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "979cc560-899a-49b4-a466-81719f8ed5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fca760-5552-446b-baa0-ced5634eeea9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e2ef1b-5936-4a7a-aa78-7dfba680acbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0056fd8-5a21-4911-aadf-eab7560c5a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f267578b-05ee-438b-9e37-3aed3c5e7a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94acd4c3-3ab8-48c4-8028-e177cb1fe1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf90497-f671-4166-8cf5-6c3d427c9bda",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d030be2d-3ab8-41b4-b356-ad82ee7dac97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ca7442-cd17-4246-b92f-ce6fd1755a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0d07fa-e3e8-46cc-a982-1f898ee1d6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d066d548-4f27-4e87-bf51-87cf8040c218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe53408-8e77-453f-943d-fed53b4970ce",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe5fa6b-1972-4416-bdbf-b0a2152f3683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d0d9ff-5d7d-4427-a2bc-ef734a2b8bfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2feaa899-f6e2-4c24-9ba0-1f144a63edd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "094d3430-a939-4e7e-8625-7a357baed8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ceac8a0-1657-4db8-8093-141f6dd16cd4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99843b20-bc0e-4342-9c84-c0c56df0a775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd15e03-6611-4c04-bd26-4b56e55cf056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1ae386-d135-466a-bedc-2da1dfba57f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6b868a4-93a4-42ad-8bdb-4b210857c76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb3c692-5fac-46dd-a41b-151f0a9ac348",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14dc695-a1ec-4e57-b081-be65cd7a3efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08dc4c98-6832-4e08-9d1b-548ecd9c1850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86c768a-0105-4947-adac-fdc5d3d5717b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f55a0b1-8e85-4ad2-b8b9-9568ac5ef636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da23a40f-6152-4e2e-b062-496962013a90",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f59653-1bc6-4efa-add6-b31e977bec33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfbd9bcf-5c7a-477d-a9fa-8bca2d5245ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b4719d-bc16-4352-a219-684ddac1c994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f71d8fe-6165-46d6-881d-fb73d47d197a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1fb3a5-e414-417e-9dcd-10a4663fcbe2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29bd71e-0484-40e4-95aa-86575ff23689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eabf0a35-797c-4fa1-81e5-2a9b0e903b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606637d4-28f0-48d6-a8c7-f8af20e9ec5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d02c3f29-c487-4351-ac0d-b3f5446dac03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f883cc62-a7ba-42cf-95b4-c207d416f2f4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "866b2424-c805-46e9-a899-de2fdf24a6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a08040-a453-44ce-a436-b6dae23ed62a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81165b77-c690-4a7a-81ed-d8df5e22aa0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83234066-f7a0-4726-8c40-6354c6c04624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15af494e-6564-497a-8f19-206e1e676d65",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5518e4e3-5290-4447-9dcf-df87e1e7b449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa998190-6fe7-4c8f-bb7b-cafa8aeee417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cc947d-58d6-4f03-8d42-5ace049bda27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a367b098-d055-4faa-ba68-b6ed228a7bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e5f510-14ac-4e2a-a107-aab654baf0a5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80238780-3d56-44bb-8fd6-d33624bc24b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "958e83c2-50aa-4644-8e49-a91d84e49892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45230cf-1538-4c8e-83fb-cdaed74aa498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f56a7045-3f46-40ce-84f3-fc37436581e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256fc338-eb76-4dd3-acf9-a37e54512105",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940b63ec-3321-4bbc-a406-c7770ce46139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49dad989-e5f0-45c4-9223-5ce4029f140f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2e88b1-4505-4921-9800-ad29c235cd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae6ec829-cf1f-46ac-9d74-95870d693c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03547cee-25f4-4a9e-aad4-c273f45d02d2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad5172a-d4bf-4b97-879f-6007fb7bc74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d585b6b9-b9ef-4b35-aadb-7ca7464cb0f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1af4616-1831-427a-be30-b78d12e2ceb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9de8420c-3cfa-49b9-bac1-cf0da3e75289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051e104b-a936-4aa8-9057-71dd40a60a1f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1db16cc-6767-4d8f-8c7f-bc885dc915ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30814932-04c4-4cce-b7d2-e5aafb98e3cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6faedba5-f0a9-4d85-9b3a-0e5b233718b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6392ed6b-fa59-4bb7-95d9-b85576a0fddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9def7c7-2078-4b43-8ab7-662f76ce8bf4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2eca334-ce56-4946-80d0-e87e5254b62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b046ed1-96a9-4327-bfe3-06acfd17d2f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae68817-c4bf-46fc-9bd6-82bbfcc8c3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c116fe9-75a6-4e52-a33d-2d9002206784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6975cf4d-6212-42e5-9be0-bfbc83f96e71",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5bce96-fd2f-4581-947d-44e9f03fb194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e4c819-f702-4777-a3f2-9c6a8c3a24c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19e7fd5-1aff-46d5-82eb-f94b3315f394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d670341-3b20-4730-85dc-e24feb57f036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b2a077-43fd-4916-bcd2-7066c28d9786",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c378df4-3855-4951-95b9-537f59f9aace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a10bcb-c010-41d4-bac8-540618e646f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe70160-0d6d-44fa-8080-aa7bee054aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "466673b9-2319-4fe1-bfe9-970a6a6fbde9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2980aed-de6f-44c3-83e5-db7f17318aa4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc2c589-b40c-4cab-9670-64984e7dffb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b01c2480-5e4c-40fd-be80-6f2d5329d0cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaac6ac4-56bc-4526-a3d6-c4d0917cda5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1eff7711-147f-47d6-bc30-573afec3ddf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8e63f6-f2a9-43ef-8de3-19e05914339b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062421bc-af7f-41f9-8d1b-d9f4baac073e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15b92c56-ffa0-43fb-b34c-9d10bcee3eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0768ac-28e5-424d-b18f-92342c9991c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "435bdc90-b756-4cd2-b3ba-352ad21c97d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04173831-4cf4-4da3-a634-708fe328dce0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2de895f-7bb3-4a8f-ad2f-e41136bfe470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f21ea5e0-b6c8-4133-b408-f7cd643e4310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf3b26f-5272-40b0-828b-c11c2a467575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84c23081-71c8-40f7-9c82-3ee97bb248c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250ccc03-1489-4abf-8f00-323ff8a28091",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be114090-8792-4439-9eaa-fc810e86543e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c3632cb-f1e6-4656-abc8-8f64efa6fbc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f27aa1c-b468-49bf-81cc-dce4a8062d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a407045-25f6-49d1-b288-9f584f0f635d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c8fbc5-16e0-42a8-9df8-8a79e01d6826",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dfc3331-8ddd-4e4e-a3c6-18a72167291a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "750cd4d4-f5d3-45f1-92d2-558ed81c67e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d970a9ee-d593-463c-b00e-9d7ff44ae796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "897dd865-d120-4f97-96ef-04f5f08a8076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7377a78d-754f-4cb8-a893-c02672974210",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b184592b-fc1b-4df2-b593-5cec53deaa04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1af3cad-257b-4aad-9f57-b79338f0f368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e676de02-c9b5-4a2c-a70c-e1bd3c94bb73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84ab6035-148e-46cd-8b6e-6da55bc18fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a62931-cc68-4d48-8398-e8a1f7e2c8d4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9e2b4a-e7c1-455c-a242-d46b1a41fdf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31444da7-2749-4ca3-b5cf-b66021b62412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4e8b20-0454-480c-b446-02aba2d885aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57fd2042-f25a-46fd-9adc-7b6503a72363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6a6ad1-d237-4630-ab95-352fdc07f1de",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc9bd4c-83d9-4b5d-af54-3ea2298264fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b67c4c-8b8a-40e4-87bc-36d04b4b90d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a82d7b-2027-46aa-b55c-0d9522506a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77a9fe51-4f65-4a87-8d58-f7ac096016e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2406533f-1409-4253-8bd6-d362e9fa2836",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3a921f-5493-46a7-b695-6e4adf13b5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a14f05-dc82-4559-8f40-948014e14528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a79646-a4a4-42f5-a0c4-31cc303296b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eeb5bdc5-42a4-4751-ad35-95054e359750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c641e83-a9a4-42be-8da0-314b5f4279e6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabdbb49-c559-4a3f-9b83-fdd809fb804a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf8108d-94ad-476f-8a83-3c56b94ffd93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7057b1b8-564c-4f70-b82c-4c1ee5c6b928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c7ef9c-a22a-4a12-b38d-d8f1f43b5222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0ab23c-79f3-411a-9e50-ef3f078f8fe1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5c1f66-8e4b-44d2-87c4-372051612dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b288967c-b54f-4c29-b1e5-8ffc64cf1652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbbc400-1051-4a55-8e49-ce1379aab2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1628190-f4dc-45b6-aaa8-c74bae5b936d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba48c81-9130-42cd-abac-40164cc1e61a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddec2dae-20df-4b7b-a32d-afb75d992f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34ef933e-7e0e-4adb-8c2f-b4b826e45e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3db941-73e4-49a2-8fd7-9ab978f5457d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44d50be3-43c0-4818-86e6-28e1ec38810b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7a54b86f-bc96-4245-875e-79421fa8206a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "21ce8a61-bf1d-4909-ad8c-3fba4e530b34",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93eb2fb-d4d3-4b73-8251-08e649ca7564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b2248d-a91a-4818-9699-66ea2127f5ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9439d2b3-7fa1-47a0-96ab-31d98ec5d6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9617c1f8-6a00-437f-b4ed-74690f6e39fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa13e52-3469-453a-96b0-f3fccd29ee9c",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86f83ae-6b2e-4218-9438-e56976a93508",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "053923e8-c865-42b2-a984-c49408330f2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae64a42f-ef97-4615-ad1b-90c17645bdef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "128403b0-efe3-45d9-9c1c-4420f0d1788e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aca09205-8032-4fdb-9d9b-36edfe7a8085",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d9128d1-ba70-458d-9f53-c558c4bead2f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b858a82-075d-45c3-a455-74d38ca1edb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f0611c8-08d8-489a-acd6-c38b939c30d6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e39b4e4-fe0d-45a2-a2b0-a492de771b2c",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "98332350-6116-484a-8214-22c53bbd87eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a5d0047-22a4-40c3-b966-3f6368e2bd17",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b469e2c3-1048-44c4-a02c-08e56c03ee44"
            }
          }
        ]
      },
      {
        "id": "bfbbafe9-1e2d-4a3b-971d-931de5294d44",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7e7202f6-db08-486c-8822-0e7968648d1f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "727c98de-6103-4d7e-b196-2c329d4cabee",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5ad7733a-02ac-40c3-9732-0a72f62e9c5f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34436b88-5bca-49c0-960c-5067d07e6d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bb4653b-e260-49eb-8fc7-f4d6703b7890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f485c55c-8205-4f57-9434-a971a0734d8b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf83ba0-8d89-4da5-97c7-dd5089f6b9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162a59fd-f615-4aab-a55b-d89ec2720b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1f0342-9245-4159-953d-9695311b24c3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7673d3-718f-4615-9746-7f18c41bc0f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ccc872-d7c1-4e3c-b0e6-018f7388b48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5294db-88c6-4005-9dca-4a50c6d541b5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d545da-fcab-40c3-b471-904a841b08bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd80904-18d6-44f4-a294-da7be34c5e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81be8ac-6925-412e-a10d-14cc35ee4020",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe0833b-ee19-417e-81ab-f6d729f59271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d6e7d7-aa66-4d6c-a61e-6b07595e7053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab997915-f8b8-4737-b2f2-e0dcd3a781cc",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6315505-21cc-402d-9cf4-338323c9a774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "083a6ccf-2c2a-4912-b948-4c4ba37f600d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b565616a-5382-48fa-a3f2-80a77f6e5cbb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b910d4e-c1e3-440c-926a-b4539a4fde7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5ab981-fc4c-4f71-91c4-38c31f61320b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d4cdfb-545f-4236-9e14-af64a935d480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f091c02d-e8b1-4f3f-bd60-b70bdf9b92cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db27565e-e75f-4769-81e0-bd04db0acdba",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6f04b2-40d0-4506-947a-663a7dccf6fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a593af0f-253a-4087-bcd1-8e4d6110b655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ff35cc-19f8-4967-898f-02f27fe679a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5cebf25-1f36-4254-98b9-70438204c0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d3547d-d4e0-4f4e-b23d-9c31d5475a5b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e651e54-4952-4bb6-9563-5aa393963684",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b94ad202-9bfd-4d55-89fe-6b2210ec9d90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf982775-b7dd-4655-805f-480357d063a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "154c66b5-fcfc-4b08-86a6-1fc595eec83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0538fe-5d5c-4210-bad3-3234fa4f7826",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbbdf30-550e-49c7-b693-2c008ef2fe5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0336198a-6077-48d1-a9e0-e2d4b5f42b2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80b6dcf-4b79-4352-b208-9c818766689d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e5b29a-663e-43c9-9bfa-d25f7eb95329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be79ff24-376e-4d99-8a76-9dbbf1485dd7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f640b61-22aa-4e62-894d-5259add24c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c952a46-01e8-49ad-adb4-961514c8099d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdde446-fb19-4074-965a-bf98b5e51598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48462353-e936-4634-85b5-a227b0b86139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec2dbbd-4f28-4442-abdb-b7bac58d666f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b94c48-a6ce-4dcb-916a-cac6bd54533c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f151ea-5ac5-4c91-9391-36833ca8a539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0622578-2add-451a-a163-7c63ef75b1ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ae44e9-3c83-4639-8890-c8cf6a355c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94310df6-96a1-4ba0-9b9b-32367aca151d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4699c9e3-e596-4399-a016-4cfe3ed6a1ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d320bb8-29a7-44b9-b022-cdeb01a732af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d593078-b2fd-48d9-9fd1-3856a0edc0dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faef1b26-bc28-4faa-9852-aaf4980e9ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86dbdc7b-0ae2-49c4-ab56-c409814f91b5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6db0d89-6abe-4e63-901f-5d22726c76ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f8c0cbe-d146-4113-9075-3b0220670f9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0210c5ce-286c-4db3-8231-7d5cfdf7ef70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "494f9161-fc3c-4115-9872-b5b7b85c1da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298bcf3d-31ec-4ac9-835b-deb25b6b14f0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce621256-72c9-4474-827c-5f67243e103c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecb762fb-7e11-4f65-bfd2-2d17f571e18f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42eb165-7df7-42b1-9637-a22a855d4e10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e815a240-b6b2-4e17-9986-a162361bf174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e08cb00-937f-4b19-be1f-18e9c4d64bb5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb0a4ff-f587-4981-aa33-99f5dc406e4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b004cbe4-fedf-4675-8335-8c6c76d3a0c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0143014f-0ec6-432f-b297-92cb2611d979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0a606d-d384-421b-8f54-9c6df4695f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f914eeaf-0a14-425f-8c00-125be8f7d638",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ef0a0e-b458-48a6-b3f6-ab08ea1a4e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9bffd4d-efc9-4145-992c-88b1347088ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae1cbad-78de-40b9-b9e7-44e42a76f935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea246d2c-7441-4b66-8f8e-895a897a157f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b131fa-58bf-46e1-949f-a01f32ad02f8",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c277d8-4df2-40d6-b4b9-1da1539f0157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e856171-7897-4afa-8a06-b349a223b1f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35d9ba7-bcbd-4745-b425-16969e8d31ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ffe889-e744-4aae-8fde-345ed1c924ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eede0213-ff0b-40cf-85c6-a8c457cd0e4f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb74424-3089-4343-a927-e08067bf01ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b469b3-3a92-4dca-830c-8e551f5c7a34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ba0363-104d-488c-835b-497719f50e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4c8e4ac-1ec5-4dc5-af56-d33bdd3ea8e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652fe17a-5931-4527-8c8d-bc0eb33601a6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af31cb44-4bae-46c5-ac02-dfd0d981892d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f319fc-23b2-4661-aff8-f29b472a6f24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e946be2a-eb5b-4a84-b042-a8b363158bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e3a1236-2f54-4482-a39c-95f23bb97557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250da0d6-120a-4d92-8319-1bf273f8d15e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2734a57a-4a07-464c-ab29-b3baa50045e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5543b148-fbd9-4488-b505-b96218589afc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4064242a-cf82-49c7-b8fb-900b1c082ed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf6f38d-0003-4839-bf20-833831a23300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f73aed-33e8-4fe0-b93e-68a0d0358d19",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0eeb8f-2c9f-4ff5-8e82-1b0f478f4adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c9be946-ca3d-446e-896f-08ad952a7516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7658ab1-fbaf-4fa8-b55c-524e1d1b6291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88aea9fc-b074-4e4d-9236-e026241a4a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebbb19b-cb0c-432d-8d70-d0d76b261443",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833af48f-65e5-48ed-9381-07ae754a182d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8040ae6a-241b-426c-b253-14e229296c7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6823e28-85bd-457b-aa20-2d9696067c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4f1885-532e-44a8-b0c9-ea8a993543e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1faa39-293d-4444-9a34-61f42c3c819e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff365fa-339c-45e0-a2b0-41bd218364b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7454efae-3267-424b-84ef-0bb51fceaf33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e463beb3-cb61-43e1-9664-186ad4b44b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c66d491-1a6e-4c63-91f9-d32833160d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97057d72-9f76-4351-8772-675c2ad644de",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db4c7cf-bde5-4856-ae88-3eb99e505256",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a441cb5-64fb-48cf-982c-d0e88e19f7f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b72f86-6090-413b-bda6-bc50e6667aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe6b3cb-32a3-4a87-88c7-db6c7a729c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ecf819-1b12-4011-beea-6a0212e359bb",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b55592-8860-453e-8ec9-97c188901590",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36bc2881-b426-46c3-9716-e64e470823df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e0f13f-50f6-4f2b-8e09-06d5156e2d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "192f4736-da9f-4e3a-b0e2-bcc969f7fa84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2cfcd5-ed4b-4108-9834-f2e3aa287e4e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72c2c12-ded4-4c67-82ee-4595bec5de63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a09fe1b7-626f-43e0-9850-db3aa5bb5eb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ef34c6-3429-407a-b87a-67169001555f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "601ced9d-c16e-4689-b37a-68531df80cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d02cab-120e-41e7-924a-80d1f1c5da87",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1b2882-cdbc-4478-9921-d8e4546e62d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7592019d-fb53-4147-a1a2-73a36c6bc036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb75a6e-f35d-4ff0-a16a-73cfca4c4035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c82ec9-eb3b-4174-8dc9-a98f25305d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92a4edb-60e9-46ec-b52b-0f1a49eeba9a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cfba99-b92c-4076-9ad3-959dfbd21aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c458316f-778e-4409-8f78-690cd244a802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7cfbc6-0534-42cb-a0e0-206833a5226b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93648ab1-99a3-4ad6-be18-84f7854e7ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f689fc-d185-44fd-af6e-9e80ce6e6175",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6c15c3-4512-498c-830e-06dd7b84f44f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44d9b5c7-7fb8-4089-adb7-97a26bdbcb13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e366467-d9ef-429a-9976-1b008ee7f31f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e03618-6c22-42a5-8bba-4ab66bfd0a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c92040e-e31c-4ab5-a62c-a194f63262f1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03adf1a-2d26-41c7-a074-aea1386d0407",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72a49e79-22c3-419e-8771-4bfee85c18ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b9ce6f-4af7-4edc-8ef9-1d4233bc6ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70bb1165-89a7-486a-ac8d-d5243dbad223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b7ea08-292a-4684-ba32-32108b08e1bb",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380e1ca1-ae0f-4025-9688-099a1c3b2bd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fe4b8ab-23d4-47ba-b360-c9edd5c4d122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b8e4ea-df87-4dff-90cb-a2d0bc361b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a2edddc-7da2-4c68-9999-e3528feae3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e9d147-4997-4f0a-a99d-4283d7eba603",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e20509-f876-4418-8d39-52ee5203d8f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d436c4c3-0cd1-4752-ae37-9f5477096480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ece3939-ff30-4842-af3f-59dc2d7f8835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f467441b-a026-450d-a5ea-137b20beb55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add63a81-67b4-46bd-b005-f2706b877905",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6424cd28-c51a-4615-96f7-2acda6a83e7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27e432fb-924d-44f8-87c1-a58dc195d566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5088f19-aeac-4207-9384-8adb927ea544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9ab4cf-4ca8-4630-8e3a-81f7c56726d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41bb497-71a5-4b2f-920f-99cf7e2df2fb",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d50a5c-8602-4f5c-98c1-2a08612a3507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3799e5a-742c-4489-ab58-416ef03a6ff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51c8edd-b478-4a3f-93d2-9bf7834d3d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef9720e-f7f1-445b-8481-d909c9fedb04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e68e510-c57a-41fd-84ba-df44f5a748d2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbe51a4-6129-41f6-ab88-db813429e745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76cf95d8-821d-49e6-9fe1-086a7843810e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7bb06f5-95a8-45f2-a586-695f57e6375c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8f787a-56c7-4dfe-bb96-aeb6cd9d009b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5519cc51-c693-4cd6-8504-52a2f89ac079",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666f35af-1d91-4022-a6a5-30bf954c0853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b901490-040a-4a81-aa36-a4c7dc742770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd076771-419c-4716-a49e-5b1273245abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a52d26f-63c7-42b9-baf1-394cd19ddb4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80190de4-410b-4332-9190-d740de62287d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1706885-ecae-4fa4-b90c-aab89eac7730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164fcd2d-c498-400c-ba2d-7b74b2ab25e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc92bf7-6ce4-46da-8a1b-3afb9029262b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48796f56-b1b0-48f1-94e7-5a2f82a07f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf18c64e-63d4-447d-a185-a53e8f8fde43",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1daf23f9-0397-4a42-93a3-d7e94571045b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc81e80b-ce5b-44c8-b425-c30362462c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25487938-8471-4faf-aae0-252e78a4b8ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "718450e4-36a9-4aa6-b353-1d542b04188f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269f4928-37d7-4fdc-8ea6-2a95eabc6f3b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507e8bb5-b4c2-416c-8247-3afb1ee40494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fce95de-c2f8-4ab1-82d8-d866afb4cdc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da238bfa-adec-4d48-b563-3b3eeeb0474d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5967a11-3de5-45ad-a4f5-2a4bba2ecfd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6da5c1-b437-47d8-abd5-450942370fb8",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984f1ac8-c944-4254-9032-703f8aa49fea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8ac528-c0cf-4193-afc0-00867a280f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8402d63a-ab8f-4e6d-8112-31d33d592168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3ff9a1-6c5d-4ca8-8a65-cfcffb3e10d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04085dfc-25db-44b0-a169-af505b8f0969",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4b80c5-9a02-4ab3-a0b8-f574b7d74e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a55415b-6eb5-4789-a78e-cab115100620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e830b7a7-076d-4ddc-bcaf-ed17379eaacd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bc38da3-6573-4c81-bc40-eb03e08fe6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59dbada-6e23-451e-af48-720ae6c1d3c6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae851045-f3a7-41f3-89bf-69e6af19605a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e254a628-a2f9-4d6c-9bcb-6d3d86914939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14713a4d-9848-4dd2-ae28-99cce7a477d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8b1995-88aa-4bb8-a02f-e6b0e9a17939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680c4127-99aa-41e6-a292-a6da2e1c1711",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b697c63-d35f-4449-99fd-47b989804483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add3b3cb-8fba-4f76-95da-3ce91b0e1b9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89da0152-e10a-428c-8e26-5344f713d5e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a43e74-2baa-487c-8fb1-845148311812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a0c28d-bc74-4e62-97ff-aa04b82e3a72",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f8d828-86bc-4c65-93c3-9b11c55e2374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cafa7476-a4c5-4ca7-af60-d21eeb82ef50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "702b5d78-6abb-43b1-996c-3bd016e9d922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b2df25e-06c3-41c7-a6eb-93971e83c5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05dfd32-3e3d-481c-be6d-10b8e2a6aab4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59486c49-aac8-4c1c-ab7a-27c9d3e8488f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22973d1e-1b03-455b-8cff-fa7a79fc4f10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e463d4aa-b1eb-48a1-8e46-dd5944d77bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceabe7a1-85a8-4fdc-91c1-8bf70282d645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2016c5-5a58-40ea-b709-cdfdacafa462",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65360da1-6c3b-4ebe-b216-ab768b8315fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f585440-79c8-4bfd-a2ae-f950e2a00dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1912b1e4-052e-4063-abdd-d99724526199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc056ef4-fd66-4323-9e0c-cdda987b5064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19732a2c-95de-4e3f-8a1d-5936c6ad6829",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f2705f-d983-492d-8681-5938b1aa8fea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b38529-112e-447c-a27f-06b23218ffcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6af5e0-c6df-4803-be7a-5f11744a4fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db1d85da-3a66-4492-981f-a6f826c3c7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b2cc6c-c121-4755-baf3-49c861f328f9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92d9b5b-25b6-4622-aefa-b17478c04025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50d99bb-ca99-4127-9ac7-ccec4622dbff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65fd33ac-6476-40a1-97dd-275e133b2bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6e1f48-4246-4e51-a0b4-679eb6952d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47036799-0ad9-4889-be2e-e5a0e88e9d7f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f558493-45ae-45cd-8edd-ada59ce183ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "635e04c9-2663-4c2c-a443-44e42d85e6ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43961531-8f62-4ec9-87ee-e0ba1ab8de1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69aa145b-6a98-4612-bf83-dc9c7b9b9c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a69ddba-7d1b-4c84-b77b-d6d0125e0f8b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445a0e17-97f8-4bda-a37d-660dff5d4ab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd75eed4-e270-4b6a-a016-fd9812170b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9b167f-c80b-4d62-9507-18a8da4aa451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "542f04d5-6679-41e5-bfff-7f6a3b78657d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44500d3f-d199-4a95-9e0e-060fda556c8e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715a473b-de80-41bb-a65b-800430c369ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1015191-1bb6-433e-918a-ceab96836f35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25382f5b-af6d-41af-8803-0c2d6cd81b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e642d2f4-843f-4690-9282-6d656d8b4119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e8f8c2-4e02-49cc-abf2-9f11346b9f99",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0925f1-01a4-4430-b91a-b372a488893b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38404196-2592-4987-b223-2a7c9abbf3b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77de540f-9cb5-4905-a2dd-a70849d35490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f50627-7d7b-47d7-9768-fca394bf50ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8776865-80e6-4a78-b244-3e02fa57cdad",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f24aa7-bfab-42e7-85ba-b5ae3ceda8bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b920851e-2174-48d7-86d1-35ba98b9c445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f142ceb-1a62-473c-99ca-4252b26ee02e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8af7039-46db-49ef-b857-1ff787bd2e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6059848b-4531-4fa7-bc7e-9fa6adec0624",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26168c20-7e95-4c05-8b57-072c06044408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7847dae2-0b49-4627-9f23-544f6bb8e752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdcb052-f62b-4619-8731-42d1ee0d7219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a9e9e5-68ce-443d-ae4e-9e541e1d8a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbec223-6446-4ebb-a789-3e60555d6b93",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e846191e-b39a-4d58-a166-0ddd1bd2ac81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c615b064-16ea-428f-9777-f4c0c5427860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e882b7a-c441-49a0-aed6-51ec6abceb60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d45aa3c-72fe-47b7-b217-10ff49ef09a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3e9ef5-5792-4485-9337-b93bcac8717e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbefac52-8d7e-4595-999f-f7d9930df3bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dadec63a-0974-4e0f-a58e-b85a6aca9f62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c875f5ab-377b-486c-adce-709194169c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0b8e65-15c2-45e5-aa4e-860a2921ea61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6920578-a591-4e80-aaf8-c2a57ac653c6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fe58f3-4304-418e-9591-0818f5f40aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada5de59-6ee8-4722-9f08-52d2ec4b6fd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b8cd1d-aad1-4118-9468-6c2a6d27bad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5961bd0-9963-46e5-a664-985b2f94f7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126ee87d-0c66-4baa-9497-841c3d45b616",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edae5cb7-bfd2-4ef4-8dc4-843a7eaad344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3eb86dc-7d1d-4a08-a41b-4745c6eb90fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c4bd34-6d67-4071-bd79-9fb8c405fe2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f36a723-1cbd-48b0-b534-25125249df75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9381808-b6ce-4c81-90a0-b8ae4c80ed7c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7645fabb-0ee7-4a1a-acb0-fa4059dc1c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f15579-740d-4987-8cb6-86295c53038a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ddf42d-2e34-4bd5-9675-48d8e75a2d65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f672979-da69-4c6a-84ca-e2f03350ab69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3caec0-92aa-4578-9b23-8a47b6a14247",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f284e226-a729-4938-937f-2be753847ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "585b0f15-c4d6-423a-a1c8-66e92149d5d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea46904-7570-45f4-bcc6-b470ee2ea507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee289dd-661a-451a-b548-512996727be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e501acb5-52ef-44fb-81c5-5961e7eb7ee9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b21edb-009e-4209-a3cd-59d59449b639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "711a04a0-86aa-499b-ae09-8bdf7bbd19f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9da1ce-d720-491e-bb8b-eae8bdee26aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dbb00f7-3f11-41df-b94e-4b71c20ed75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0afe3b-42fc-4154-887e-2a432883103c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1030a1a6-ee06-4555-8ab6-b37574bfaed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18136fed-7fa3-464a-b062-1bad150af931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c01c1a-3fae-4f35-b9c6-6f68fc2ba3f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f79ba370-1d0a-4994-97e5-b61ef110c9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67023d2-1883-44b2-94a2-ff9b6d1b0feb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1a457d-0ed9-418e-904e-221b67c8b734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1243946-f2fc-40e4-acc9-6781cc00cbb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73022d2a-cf1f-423d-a3a7-06b1c70a3466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f93c8611-c911-4b0b-9aaf-d62f4a8b0ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55cf7f3-0f60-4e26-bafa-2344ab101eea",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8100ee2f-1756-4e22-99c9-c82a1a1d7984",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b47c31c8-768b-4238-8730-c1a21589a51d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c617a1-d319-47ae-b227-8eba3a0a7fff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f88a2b4a-3ef5-4984-9753-a656b566cee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b2a449-eb3c-45da-b696-227f7d19e690",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4f0ea8-b6ef-4503-84bf-7e7a52da959c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aefe38e-ba9d-4487-906e-e3984be49bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf78dc25-4168-40c5-9f58-8011451534ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6628e005-1844-4178-80a0-4e5bdecd73b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed13e2e-b3c7-48c2-898a-4af4e9c7c375",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d34b16f-38e5-46cb-ad7b-a4428b772bf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac4812e8-659e-4cd7-bcd9-f4203cd8fbce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d495ba43-7f14-483f-abe5-78d49e5b7ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0384dc28-4a4d-4aa7-8a78-528d7061b4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa0d3ff-7276-4233-9294-ff601147b0a9",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33cf363-83f3-401a-a2ec-a5cd98cbe60b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9327d5b2-9519-48de-9def-913e1fab14e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebb7d11-519c-410f-bad0-114b51fb14a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24358ba5-9a20-4409-9297-6f9a3a4bdc5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c22f89-3846-4b3a-84a1-d3b6b7fb09c9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e6e457-2fdd-4eda-8f44-d372740728a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f257f1f-7c27-461c-9163-48a2842e6510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7906ffb-dde8-45ea-b832-249d3d60f90b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ef92ef-a849-4b29-85d6-e514b0942914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2976097e-68d7-4cf4-8cbb-0f0da1597a69",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b31ba3-f755-44fe-a86a-b73a06176e7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c97d26b9-6454-4a10-b448-7e44357c78f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99531a69-0270-49e6-a206-030f7b235231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81216045-efcb-4b9b-83fe-440a3a15aa07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8460eec9-7a8b-431b-b07a-015ce44c68eb",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3178c8f-30e4-4a4b-b889-50c3e550d8aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d3d136b-79f7-474a-8549-5143b1fa8f2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe6e089-7946-4924-933a-6d10511e1d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "648bb691-c567-40a0-a9c1-6df8603f5e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca9c438-c358-4ac4-9d96-e942e56615b0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6a9062-0936-4970-8577-5234ce786268",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f801512-6492-4181-aabd-5783c38b8367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1dd2e1-2727-44bf-811b-bad5f3c57005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb0a127-ddb5-44fb-aa56-9794a38e8885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4231d02c-3bb4-4e3a-81a8-c6d65a137249",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e91b8d1-61f0-4d86-8941-c30aaaef3b02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7283a6a4-8574-409d-a873-46b308985ce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a015e3a-d418-406f-9485-44c601ed950a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc06e2d-f0b4-43cd-9bd2-7aa1f98ff84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b0e202-6738-4ea2-b9d1-6b0ef433c030",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60512d7-fca9-41f7-affb-c70ef443f25b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39810c49-f93b-4186-ac9b-f73d64d6f9d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7566a55a-12c3-49c5-a2eb-25db0e5bf728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d8ddd0c-3e79-4116-9d3a-f58e11b326b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd96dde-83ea-40a8-bc41-3e0be52b84ea",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9787a34c-c1cf-4ef6-a9fa-b205aded6df0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f854a709-4ef4-4310-a2b2-9d589c3c7636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c10d4c-c269-4e8e-9854-31977d0ad746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3abb60c-1c93-40ff-be9a-2b4fa4da39bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef97cbb9-b862-4dda-88de-b4648e71577e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f52034-1164-44ca-b1f3-03adff722559",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d92a83b6-ca15-45b2-a4e8-115ac906bae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba31a30-d28f-441d-bebf-33e57ad13cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4261e036-4574-40ec-94db-2a572a6062a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d34bed-7ecc-4051-ad99-1095cc7d9476",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcc8ca0-d991-40ce-8578-f20ea0698845",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec92307e-0818-4330-957d-d00faee14f95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da43f732-f470-4a41-92c9-2bd344daa215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae72cf72-dd5e-465f-b0b1-09f9c9d0e988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d14bdfc-3840-461a-8af5-3b8dc035edd5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684a3003-76ce-459d-99a6-35b0a9a6cb56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1aac58d-5306-4294-86b2-3302e186d738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f869be2-7ac4-4d8b-b5be-7f544fd84ab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b31857-73c9-4a66-a89c-20a3f51bbcda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177eba59-2af1-4c72-a0e7-d45939bfd33c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752fa24c-5871-4059-abb1-da6c432e78c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eea79075-7d20-42c9-a7f9-2acdab67b52a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7598f7-824a-4166-a266-81a3de9bbac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ede9de8-f347-4110-8c61-c57328f37e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f2d00f-2df6-4eda-a74f-138c0ae19617",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5bc1f63-fad9-4191-819f-482b7762e4f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08c8180c-de51-4fe2-9568-e538eb26540f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "954939a7-bb5d-461e-825e-b76fcd09fed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69186ca2-80a8-4712-bc1c-89ec7e0e214c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a159d207-6dbd-4036-bb0a-3a66f3c09310",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f010cf-50dc-4112-addf-381f81bbd5fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c39933f-2ed1-40d9-a933-346c6eda5508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8b1b0d-b6b8-47cd-9762-710b47da4d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b54c82-41c9-4454-818c-a727c887a732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327d8767-dfb7-499f-bdb4-5034059343e2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898c75ac-d81f-447d-b02f-40a724462a9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a083d3f9-bb47-423c-be2d-c38dfd144148"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d2a127-e5bb-4c62-96a2-b2e19f9c7340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ec1711-e22e-49df-a6a5-28829ac58838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e98f24-f909-4dbe-8bca-11975a8b31a2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641630f8-ebf6-49c8-a73e-c9bdc74ac333",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f13b2f7-f41d-4909-9696-1965fc119e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe50400c-c4eb-4487-ab7e-ce8c29444bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe6f185-93ce-445e-bf1e-8674eab23159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6c90e0-81b4-4275-bb62-3139b873b503",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765a6067-fa81-4a7c-a167-a37a5493bc52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ef82574-f3c1-434c-a185-2a53328564d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b376aa-7451-4906-bcc1-5b60b27aaa12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9899e2cc-6bed-47f9-8b97-eb0d706bb8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246000f2-8ea8-4a48-8f7f-623cce2ebc9e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e01e31-bdde-4f77-92ac-a298e9b367e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea9cf38f-ee22-473c-b86f-dcaf723edee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d79983-a036-4ac6-a148-ca50abe8f48a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "068d26b7-6f2f-4da7-97c7-d4482fa1a381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ccca8c5-75d6-4f9d-8eb2-e78442f4a8ec",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed772414-d2aa-42fa-b120-53408afaeb3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f21bc0b3-40be-4e25-a251-d4062cd81065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb6241c-3f65-425a-b07f-5d268bac6ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a9cf83-09ea-4264-8d7b-8e0637c46746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83251c9a-dc52-41db-9080-265abee4f6a5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf97ee36-343d-4ccf-80c7-6eb7a55d1612",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "506a5391-00ed-4733-832e-34ab00960c3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7edbf0d-4a32-4a12-9684-30eb421285bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a99fd95f-6ab3-4cdf-89ab-af369848a2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5173d7bf-2c4a-4f10-82da-3abdb49c0a14",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db119ee-7bb7-4ca3-90ff-56a7c0d3591d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d857df9-4d84-4c96-9f7d-c523782982d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa44edd-5c56-4f27-b812-1dc648324aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd6ea4c-23e6-424d-bfae-8a325b8572bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ac4d40-0e97-4e77-b8be-84bdaf37d490",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5260e6-5275-4433-8f20-ac2b3eac6400",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c7a85d2-f309-408b-b3ee-f1ffdb6620a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdf466f-5100-4694-9359-aadcb0039b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c46e99d2-fde7-4b39-8fc0-a7ffdf26050d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce00add-99d2-43a6-b09a-06dc95010c3c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86bc331e-f2d7-421f-a48b-7bdddc8a3d99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bebc4ccc-0be5-46a8-8e39-7d60a15f0574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5798be-b497-441b-ad6b-c0d739878000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c53a7c5-cc6d-45cd-9ddf-f658ae96d403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84cabbf6-4c2a-4ba7-8b75-7d6a6f4c1691",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c74ec0-f8c7-4915-b89c-0589f6e93ebf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3962d065-ce21-4ac8-80c4-ece38c11c1f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "550f6942-78fb-4d90-bba6-c0577b12584a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7646e57a-bb43-4ff3-a3f2-c3c95fa7f39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f5ed9a-8763-43c7-9673-c59ba4344ef3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11982b85-aa35-443d-a1bb-db8985186ef7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f75edb1-81a6-4612-8fa0-61d7a0d5540d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6472552-81c7-43b5-b22b-06b44d045a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ae2a51-9e2f-415e-9ae2-a1a6b2f0febd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7eb425-fb5d-44a7-813c-563e03eb4099",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29814357-1e0f-4713-be34-0679b50735ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b602495-9e5d-40b5-9546-8ff1973cf3a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "919ea03e-65c6-4cc7-afce-710e373efed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db2b7188-57eb-4633-a270-cf2f36dbc2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b7d2a2-b04a-4800-85fe-e153f166fd6d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf98fc6-0f40-4568-a106-c7abb340d5d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ca3f515-05bb-4d1d-9831-a96268326475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b45633-fa76-4c4f-9f35-80a81515149f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14ced6a-4021-4112-9961-2e5429b9030d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5be3d4-d9e2-4565-9b1c-3bcab7416b3d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf6e441-8fbb-404c-a12b-14f41cb6aa86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c636cdbf-9179-47d9-be7d-ca1fc52ca8fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c605f8-959d-42c6-a283-b7a9452a7d8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eafa4262-dad0-4d16-aae1-043e72580efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c2f5b2-501e-4dee-b33c-16712262a59d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e6da22-dcef-4abe-a78f-70dbf0b1a25d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3882f46f-ca2b-49d0-a12f-d7b5c867a728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7234e856-9d20-404f-89c3-51cfb6d1984f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aacbb03d-00ae-41b8-90eb-a7dc31a19065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9336b9-08c7-475d-9897-461f4bf4a1d3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe229f96-cc94-4c45-b768-0c61e863f9ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be8a48c7-5fc8-4dd5-a419-e638e3789e7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bd22ab-dc59-4cc0-a469-3195dbfc5188",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0264a512-50a0-4fc7-802a-1170b64a8727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9a3350-fbda-457c-8412-31866a0fade7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a91a435-1153-4511-9945-9f7ef453a945",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07c94879-1505-4e14-a7f3-98f0e3e71199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2301ff45-99db-45e0-bf60-5a275a0f580e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b3a7d4a-6cc5-472f-84e3-d5d99870edfb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e0eb53f-af7c-41e3-ac6d-c710d7dc4a4b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f06eddf5-6055-461e-9e3a-2681f0a707ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a1043e0-81df-4066-8677-45d0ddde5749",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8ec3facf-4a50-4ef7-a71d-b679c4d1482c"
                    }
                  }
                ]
              },
              {
                "id": "9575afa9-5d8b-4987-852c-03552040f53a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ccc9853-1c81-44c6-bf4c-135f413ebae9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032772e1-54ec-432c-9e5c-f52cce38e817",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "08386960-7c27-4c52-a9a3-db307cdf4e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "387df70e-39de-435d-ab36-a6ace760379a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d378ec8b-a7e3-40d3-befa-31c89f1b0e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6c3174-2b7c-4fc1-9e10-6435d0222ca7",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde79324-ac04-46b9-b37e-0880abbe9cee",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f232057f-73d5-4a7f-b266-439d16352963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d1e829-135b-435e-8a62-832e29b3e0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92de3d45-b716-4f8d-8bfa-46c26452eb67"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54b86f73-4d35-428e-9f37-8b0618a17bfb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58193f30-854a-4eb9-a984-ec52177c3067"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f21b9ffb-6bc1-47de-ad67-59be63e95fa5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c486e406-26d4-4de0-883b-6f0876019f92"
                    }
                  }
                ]
              },
              {
                "id": "bf8edf95-ebee-4d28-8161-d5cc73511534",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bfe6b8f5-4220-4196-a9ea-ce8a3c85fb37",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f203928e-0b4b-47fc-9a65-ff8bd77cdff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f7eb7fa2-0714-4dce-9d8d-db21cc06af0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e1ba79-b40e-4876-87aa-88a19a62652a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd965979-a61b-4e31-929a-c1b2d68960ca"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a4392068-2259-4fbd-b9cf-01db3f87d839",
            "name": "Positive Testing",
            "item": [
              {
                "id": "393b5871-c29f-43f5-b616-b180479c68b3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8ea8b51-0615-4655-bea8-fd6c3498bf9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dc4eaf5d-e178-4753-af74-bf1aff846f26"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a9fa311-c04e-4269-b0dc-c45f34dceac1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de3c8b41-1d89-4fe3-9672-0e8d387f9c26"
                    }
                  }
                ]
              },
              {
                "id": "fb1a48a5-f043-4dcd-8920-df877c94648e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d516854d-7504-403c-8d8a-54f578ce2599",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f9ab841f-474e-4e6b-bd97-05b7039373d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3eb3aa29-8c5f-44bf-b079-25c30f3c7fdc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bbab199-affd-4961-8e18-193a0786056c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0f039c6-e72c-4b23-aff9-2f639d141bca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a8a01f11-5e9d-45c8-bec0-3d289c3e9c52"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84fd79cc-7f23-47f8-bcef-71d576b8a394",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "656d2abd-f1f8-44a3-98b0-c58bf5935e4c"
            }
          }
        ]
      },
      {
        "id": "f5b6c341-14b6-4345-bae8-de860d768467",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2d7bc11a-fefa-485c-a58d-5e95060fdfb9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "351074bc-69d2-4823-a295-dc26ca6337b0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d55dbe7-62f6-4122-9825-1aec8660561a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e21f4e-fbb0-4288-83a7-413c219df861",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f564c9b1-0505-42cc-8343-6cec410c20da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fe4bfc-a7e7-418b-b652-9cf575cdc27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96be4837-de6a-46dd-892b-c7358e3b0c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd303ee-4aa0-4874-a5cf-405f2473a531",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ca0bd1-52a7-4cee-9ed9-ad62bcde1920",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "25b5e461-0709-4872-97d7-cce0c388018a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a164c4f6-b870-48d6-aafb-fdd0596e3b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36519972-834d-4605-a3be-052c366dbf39"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c98298b-6d68-443e-ad2d-95be32916b96",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bcfa069-7a0c-4c27-8903-62fec4864462"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1412776b-49dd-48d2-9277-2584aeb7cf7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8cf20f2-8dec-45ae-b751-0efd42c9a8f8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e2b7905-0354-46ed-8b4d-cf0d55b8bb07",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fae6b32e-eb69-49d1-ac09-211b91d62e39"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c910a2b0-4f8d-4bac-afd8-7c4c0cc0d8c7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9504a39a-972f-443c-a3f7-0e797b6bd0ee"
            }
          }
        ]
      },
      {
        "id": "21683562-8c7c-4ea5-ac15-32b4bbbd80c5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c7e9ce00-8a43-4ab2-b673-2b4c4d258f01",
            "name": "Negative Testing",
            "item": [
              {
                "id": "394a678f-6fd7-42aa-82e2-01be52d3f4ab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0b52a0cf-acf9-4666-bd7d-e0d0fabd3276",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bac356-2238-4b37-b266-8d38e147d222",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "eb3c9e7d-3467-4c21-968b-2952c29fbba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d2f2bf-b2ec-4b74-bbac-2de9165d2285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f48acf3e-d34c-4cf3-b132-ae4945ce13ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4420e8c7-ff58-418e-b23d-0f7879115d3a",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e6e737-fb28-45ea-8b4d-57d171ab9db0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cad4dc2d-cb77-4fe7-bd85-707b0929b4e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8775f43b-ab84-4f1d-8910-18b3a8cb3de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "350707fb-6f43-454b-a1cd-436c226878e9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f2dfffe-65c7-4524-81a9-e312dc435488",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9e45939-a090-483c-acbc-e9523424d7c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "feea74a4-5143-4679-af15-cbf9916d63d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ff9ddfc-9323-4107-82f3-05db45e61243"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7cd6e30-e8d1-4c9f-ab15-85dfa924d8c8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d4db9fe5-f9cd-4395-905f-4ba32400202b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d1b5862d-59c2-46be-83b4-5c5253a024ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "88aae795-5203-417e-a1ae-d4d12992057c"
            }
          }
        ]
      },
      {
        "id": "f54cc69a-945d-4240-ba77-a3d1ae33cd18",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f8e420d1-c49a-42ed-9d3b-cf5a5bb49c9d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5d5fd231-d4c0-4d33-8420-92211bf10483",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f44b78d7-fd35-4fe6-a64b-264cb7d77774",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad953a9e-56ad-45c5-95a4-8f6a1eb6be3a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ceca7dd0-0325-45ba-8f4a-6587a947768a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c530f5fc-f9d9-43da-b5c8-e980bbdc500a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b936176-27c1-4a65-9584-6031a273203c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be286280-d369-47ee-9912-ed7f66a77612",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01fde743-cbb1-4afe-8f38-9b4d46ba1e13",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "952190b8-4d4a-4500-b7e7-b2ec43d93b66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ffb3d7-a06c-4e26-977f-78ebbd6a3e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55a85ba9-7b12-448f-bd4c-90050491afea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f79e6fee-b602-4da0-879a-67ba06a7f637",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ae9ace7-d113-43be-976a-1f07ffeaaffd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "87c65546-6d79-40ff-a5f1-ecc5d4bbd9f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1eb1fc1a-90e2-4a5d-ad38-d11e323c16da"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8400a8ed-4348-47ad-bf81-967914f2ff84",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "00c0b528-f5b9-49b4-9fae-0682662285ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34ed5a8b-cd87-4484-be4a-5a6341463a7f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c99258e0-d4b6-4576-8f83-9c06cb9cb4bc"
            }
          }
        ]
      },
      {
        "id": "b536fe23-b657-418f-9351-7175342d2091",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b80e9c4-f1fe-4bfa-b303-6c6c1eecc822",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8cea1e2a-09ab-4957-9698-a3cc0a6c75bf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ea7d620f-f384-44ef-9ee3-9f9bce78842e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97c5c51a-fd68-42bb-b2ef-8ab2b3ef8bb8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72dcc96e-9227-4ad4-b86a-bdae24149dfe",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 28
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 651.5725190839695,
      "responseMin": 10,
      "responseMax": 9809,
      "responseSd": 947.3927261518393,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1675384915943,
      "completed": 1675385102554
    },
    "executions": [
      {
        "id": "d4e636fa-8b09-449d-9b67-d2845b25ca0b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d1a70b2c-a19d-4e22-a703-fb6de50b4ad8",
          "httpRequestId": "f5c5ee31-c4fc-403c-b498-b9877fbcdaee"
        },
        "item": {
          "id": "d4e636fa-8b09-449d-9b67-d2845b25ca0b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "bc8f1dbc-5dbb-48e6-bd53-200395cc4749",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 0
        }
      },
      {
        "id": "93f0c6bd-1701-4b4d-b7f1-eb8ca372c777",
        "cursor": {
          "ref": "3bf7f2f6-1b20-43e6-a0b3-8e14e44ec670",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ba5ece38-d7ec-4e4a-b505-faec946c6b71"
        },
        "item": {
          "id": "93f0c6bd-1701-4b4d-b7f1-eb8ca372c777",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0307c248-eb1b-4bb9-a523-02e4dff5abc2",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "7de9db3e-9c38-4d9c-a827-52a8796526a1",
        "cursor": {
          "ref": "74ea2b73-7f38-4810-a3d8-af79baddf1a8",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f9f361e3-4e52-45a0-98c1-e957bab5e690"
        },
        "item": {
          "id": "7de9db3e-9c38-4d9c-a827-52a8796526a1",
          "name": "did_json"
        },
        "response": {
          "id": "7cd0d649-f46a-4dc6-9613-0ead13b07d6c",
          "status": "OK",
          "code": 200,
          "responseTime": 643,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49ff3cd-405f-4c5d-92ab-44b213ccf880",
        "cursor": {
          "ref": "b8958de9-23d6-4242-9bf8-c2b19625ff85",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "895065a2-a428-4ed6-b3c0-0b249503b4a8"
        },
        "item": {
          "id": "c49ff3cd-405f-4c5d-92ab-44b213ccf880",
          "name": "did:invalid"
        },
        "response": {
          "id": "c3d79511-adf2-4539-ac8a-ed986df475fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49ff3cd-405f-4c5d-92ab-44b213ccf880",
        "cursor": {
          "ref": "b8958de9-23d6-4242-9bf8-c2b19625ff85",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "895065a2-a428-4ed6-b3c0-0b249503b4a8"
        },
        "item": {
          "id": "c49ff3cd-405f-4c5d-92ab-44b213ccf880",
          "name": "did:invalid"
        },
        "response": {
          "id": "c3d79511-adf2-4539-ac8a-ed986df475fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca9871d-4d80-47a2-86af-4f383e7b7670",
        "cursor": {
          "ref": "b80973e9-b783-4c43-b85c-803caa382bb3",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0c6e5609-6d71-49e8-82d5-9d442599e323"
        },
        "item": {
          "id": "3ca9871d-4d80-47a2-86af-4f383e7b7670",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "672ba41f-c9b1-49e2-9ce6-60c86b6e44ce",
          "status": "Not Found",
          "code": 404,
          "responseTime": 614,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336e2a4a-dca6-4f7b-93d0-f335053cda16",
        "cursor": {
          "ref": "ba9cd641-02f9-47f4-8d25-858258cf1b39",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5c0fccb4-482b-481b-9744-3b3ebf41001a"
        },
        "item": {
          "id": "336e2a4a-dca6-4f7b-93d0-f335053cda16",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1b074cf1-f771-4a3f-9944-7c1f17fd1d1e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 510,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4816c6-6dbf-4ff2-bda5-77ce148caddb",
        "cursor": {
          "ref": "4bcf5605-49e2-4214-a42d-3b64e8aad0c5",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b8f41953-bf7d-4afb-aa3f-17acaf177a96"
        },
        "item": {
          "id": "0b4816c6-6dbf-4ff2-bda5-77ce148caddb",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "dc5f12ef-9ce4-4d38-a8f1-33960cf59486",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba22579e-0458-42ae-9562-786ef38d2377",
        "cursor": {
          "ref": "ff97fbf0-becb-4a70-8d34-5dccbb6df569",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "68a7562b-4bb2-4c04-a25b-f040ea39410a"
        },
        "item": {
          "id": "ba22579e-0458-42ae-9562-786ef38d2377",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "10836748-772d-449a-82f5-b10038b09c89",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 538,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba22579e-0458-42ae-9562-786ef38d2377",
        "cursor": {
          "ref": "ff97fbf0-becb-4a70-8d34-5dccbb6df569",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "68a7562b-4bb2-4c04-a25b-f040ea39410a"
        },
        "item": {
          "id": "ba22579e-0458-42ae-9562-786ef38d2377",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "10836748-772d-449a-82f5-b10038b09c89",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 538,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8d61fa-725c-44b6-b976-2ea3cb110be7",
        "cursor": {
          "ref": "3a55d83c-f89a-4d13-9e59-c577c1c1375c",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ddc3f2d6-e2e0-4a14-bd17-fb259495ce9b"
        },
        "item": {
          "id": "5a8d61fa-725c-44b6-b976-2ea3cb110be7",
          "name": "identifiers"
        },
        "response": {
          "id": "21c23281-a256-4d8b-a279-e9f3c01f4760",
          "status": "OK",
          "code": 200,
          "responseTime": 1441,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b45c036-8241-4467-95c8-b644b02ae4b9",
        "cursor": {
          "ref": "cb72cd0f-40f5-4b1b-aa3b-f52ab3f1ed6f",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fd2696e1-091b-4e6d-aabf-15d533a25bd8"
        },
        "item": {
          "id": "4b45c036-8241-4467-95c8-b644b02ae4b9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d2f6ffc1-621c-433d-aab4-94cd8d7bf982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b45c036-8241-4467-95c8-b644b02ae4b9",
        "cursor": {
          "ref": "cb72cd0f-40f5-4b1b-aa3b-f52ab3f1ed6f",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fd2696e1-091b-4e6d-aabf-15d533a25bd8"
        },
        "item": {
          "id": "4b45c036-8241-4467-95c8-b644b02ae4b9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d2f6ffc1-621c-433d-aab4-94cd8d7bf982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54beeca0-380b-4234-a7cf-d0010aff061c",
        "cursor": {
          "ref": "c45e89cb-4264-4ba7-8935-5c100eab714e",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "030da1af-53b4-40e8-b2ce-711987f36ea4"
        },
        "item": {
          "id": "54beeca0-380b-4234-a7cf-d0010aff061c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "54944ab6-c8f8-40bc-be89-d6e211c66aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 927,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ba5e9b-28ba-4b1e-a072-1a2fe69390e8",
        "cursor": {
          "ref": "195dff3c-53c0-4c56-b058-6bc3cc104fa1",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0c8c9b40-b305-42f4-90a7-544ce779f91a"
        },
        "item": {
          "id": "66ba5e9b-28ba-4b1e-a072-1a2fe69390e8",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "79811a47-f869-40b1-865b-9b4fd4358de3",
          "status": "Created",
          "code": 201,
          "responseTime": 3883,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "6735e260-4415-4e11-8c89-7d921b2f93be",
        "cursor": {
          "ref": "6f1b446b-286e-4d64-99a3-17b1ed658486",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2f6a85e2-5af2-4d77-ac07-8ad8e9076ca0"
        },
        "item": {
          "id": "6735e260-4415-4e11-8c89-7d921b2f93be",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c3299e43-d143-4449-8bfb-531cc43fa5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 924,
          "responseSize": 1117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71990293-90e7-4783-be55-69461d6216f0",
        "cursor": {
          "ref": "72b1f422-f86e-4b59-aeaf-84640eb77d43",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9cc915b7-a03a-46f6-9d14-44c6df95dc89"
        },
        "item": {
          "id": "71990293-90e7-4783-be55-69461d6216f0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c62af873-109a-4f7a-8626-aae7675dd373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 1114
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6202cc-c1bf-4938-ad97-7ec3dacd2216",
        "cursor": {
          "ref": "2a03aa02-0a3d-4d9b-8a94-822ae963d776",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d7a09ef9-afa2-4d32-b1f9-cec9e301948a"
        },
        "item": {
          "id": "0d6202cc-c1bf-4938-ad97-7ec3dacd2216",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8a33b278-0ee0-4420-b424-7b166dffbab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1152,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b19c59-5701-474d-9f82-caad43b96897",
        "cursor": {
          "ref": "8961b537-18a8-4b75-b001-d9fe5517ec79",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f6112b2d-b22d-4ccb-88bb-7cbbb59a6ad6"
        },
        "item": {
          "id": "88b19c59-5701-474d-9f82-caad43b96897",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d67a88e8-4628-4971-b0b3-169d7f7888a8",
          "status": "Created",
          "code": 201,
          "responseTime": 9809,
          "responseSize": 723
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:16)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:16)"
            }
          }
        ]
      },
      {
        "id": "0df19256-d71d-46bc-804e-68e20abe3878",
        "cursor": {
          "ref": "7b53c70a-688b-4381-8332-e9681226e523",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "68eda16c-735e-420f-a6be-83ff64228683"
        },
        "item": {
          "id": "0df19256-d71d-46bc-804e-68e20abe3878",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d4e2667e-8fdb-42b6-a430-d36bade3a2ce",
          "status": "Created",
          "code": 201,
          "responseTime": 2695,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:17)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:17)"
            }
          }
        ]
      },
      {
        "id": "ba170b9d-22f7-4f29-8ef0-4ee37f1d7aa8",
        "cursor": {
          "ref": "0a45f1e0-8b84-4ee8-9cc8-7e4067d73435",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "db5322e2-76d7-4010-a047-d279042e5d59"
        },
        "item": {
          "id": "ba170b9d-22f7-4f29-8ef0-4ee37f1d7aa8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0d47dcaa-8b25-4b55-b3f1-b8ee5b5f3dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd982f7-bf52-4ff5-912f-a3db42d39772",
        "cursor": {
          "ref": "a6bb6dc7-1207-4106-92e6-b39b666c87b5",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1f5bae13-8b22-4df4-8935-c7f6fce8e419"
        },
        "item": {
          "id": "edd982f7-bf52-4ff5-912f-a3db42d39772",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d89cd15d-195f-44eb-bbba-114f44d0600b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b6d95e-1281-47e5-8df0-e0a37d54ced1",
        "cursor": {
          "ref": "c8cd38cb-a9aa-4a23-a926-ba9a09aa655f",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "638a562b-cd6c-4d1d-86b3-881cfadf9bbd"
        },
        "item": {
          "id": "b3b6d95e-1281-47e5-8df0-e0a37d54ced1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "33fb200b-34a2-462f-a65c-ce2f7c709481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3b6f81-d811-46ec-8299-3c6a29b50b99",
        "cursor": {
          "ref": "1cfecad4-de38-4b90-ab02-005cb605f0c1",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "313e0a89-143b-43ce-aa5d-c22296200896"
        },
        "item": {
          "id": "aa3b6f81-d811-46ec-8299-3c6a29b50b99",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0210d6b1-cbf2-4bcd-8a77-ca335c6f41d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1542
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d378b0-7c13-434d-acae-0ac5b8706db1",
        "cursor": {
          "ref": "976a2870-7996-4913-946d-0e56d16eb618",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1fda6f76-06bc-43ed-99ae-2d00ae55111c"
        },
        "item": {
          "id": "29d378b0-7c13-434d-acae-0ac5b8706db1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9a7b9c4a-1347-4623-9a4e-e06bef950cba",
          "status": "Created",
          "code": 201,
          "responseTime": 2405,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "82e7f450-eb1b-4acd-972d-79fba6831012",
        "cursor": {
          "ref": "29de9090-0742-42e8-bc56-22ae61349205",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6038376e-10d5-4100-a66a-b3db872f17e4"
        },
        "item": {
          "id": "82e7f450-eb1b-4acd-972d-79fba6831012",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "552ccac1-7b73-499e-9b70-762ddf37c7ba",
          "status": "Created",
          "code": 201,
          "responseTime": 4151,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "7212627f-3622-46b8-af16-965634584243",
        "cursor": {
          "ref": "cc49994b-e8f4-4240-9736-61b996c07ed4",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d74a7cfe-8368-4f6a-80f9-41f193dd6e9c"
        },
        "item": {
          "id": "7212627f-3622-46b8-af16-965634584243",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9b2d2294-f7dc-4182-919a-2cd9132b92b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97304ce-7a60-48c5-8ec4-6a69219fb6f8",
        "cursor": {
          "ref": "6895ac87-2a09-4309-9230-8c44b050472c",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6fcde6e5-3fea-4135-865d-3e20cf8d3fb3"
        },
        "item": {
          "id": "f97304ce-7a60-48c5-8ec4-6a69219fb6f8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e192f0d5-1797-4095-9b48-5849f8d7b646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eaee5b6-265c-48c4-ab4c-a9e5adc6d51a",
        "cursor": {
          "ref": "d1417c34-ce0f-42b3-8183-f72b6772b446",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f1475cde-19d7-4d2b-9798-02d06dd06afe"
        },
        "item": {
          "id": "7eaee5b6-265c-48c4-ab4c-a9e5adc6d51a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "15c4efd9-9a31-43af-8dc0-6f83009517bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451ee667-d487-4aaf-9fe6-c137e298151b",
        "cursor": {
          "ref": "fbe2398a-a3a9-475d-8ca9-a9e3bb066eab",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ee264b96-d579-4336-ad97-a9720d9cee68"
        },
        "item": {
          "id": "451ee667-d487-4aaf-9fe6-c137e298151b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "def202c8-026b-4402-bd18-5d88d1e1a5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94160637-39cd-4622-9eec-3d102481590c",
        "cursor": {
          "ref": "e2f2cfd7-257a-44fa-9f01-2d68251f1985",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "dbbd08fd-7675-4b0e-8ceb-a9ce2e0c1797"
        },
        "item": {
          "id": "94160637-39cd-4622-9eec-3d102481590c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b7a81d85-ddd5-4d72-8904-975e35a121fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf9dfff-4a2b-4aa8-be1c-e09d8e6a52f8",
        "cursor": {
          "ref": "7c99a299-609f-454c-a785-eb67eb46349c",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4e6a61fb-2528-4be6-acf2-e3c30bfea899"
        },
        "item": {
          "id": "ebf9dfff-4a2b-4aa8-be1c-e09d8e6a52f8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e51eeda5-409a-48a3-b5fa-435867eb3cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24904984-df27-45af-bf94-3513982f5462",
        "cursor": {
          "ref": "489c365f-3a86-4149-bda8-de53cdc4a599",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0a8a5d5c-8db2-41c7-aef6-4a7e74f07c5d"
        },
        "item": {
          "id": "24904984-df27-45af-bf94-3513982f5462",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "fbd327b8-6cab-492f-bd24-da6e19f5ea79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3090603c-6a7b-4fe4-9940-8aa3e174d849",
        "cursor": {
          "ref": "5dbc07af-817b-4531-8dc9-2e02347ad15a",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "83125c8b-7172-483e-9101-00d728d0d3d8"
        },
        "item": {
          "id": "3090603c-6a7b-4fe4-9940-8aa3e174d849",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "de503c6e-0427-4a64-97f0-01f570fd90a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0064a09-9faa-4eb7-9165-affdcba3f4b8",
        "cursor": {
          "ref": "857f6bb8-00cf-4507-a34b-31988442c99e",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9402b106-1437-45a4-80bf-c204335ac432"
        },
        "item": {
          "id": "a0064a09-9faa-4eb7-9165-affdcba3f4b8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9cffe29b-d322-4003-a7d7-1a0db27a6751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78fe09b-e10c-48be-9dc2-159a9fce4a8c",
        "cursor": {
          "ref": "ad29529a-73b5-4a4e-8978-9cfe293a631b",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c393df2b-4bd5-4781-aba7-dab626ce25dd"
        },
        "item": {
          "id": "f78fe09b-e10c-48be-9dc2-159a9fce4a8c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c6329f48-3588-48fb-a196-4c0b654357c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2824602-e2f9-4a3f-a77e-8cc9d90b950e",
        "cursor": {
          "ref": "5a2cff57-d856-4754-ae79-70f485fc0327",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a9bc3e30-22bd-4808-9063-53c3261071dd"
        },
        "item": {
          "id": "e2824602-e2f9-4a3f-a77e-8cc9d90b950e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c8dfbec4-3ecd-4e5b-9cb8-27b85f32723f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9740b10-cd00-4740-83b6-5bac07a18d33",
        "cursor": {
          "ref": "57c76e6d-9fb4-499a-ae56-6c6e5921343a",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "db7425f4-801a-42b6-a83b-7728f62c9c69"
        },
        "item": {
          "id": "c9740b10-cd00-4740-83b6-5bac07a18d33",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d8882673-8b92-442b-a778-a379b8999b33",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1754,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "36641b7f-3e73-487a-bb14-4104ca9d38c6",
        "cursor": {
          "ref": "d74cdd04-61db-42ec-a105-47fbef71cd4d",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bbb62a65-7907-4b42-98ed-cbdd7214a055"
        },
        "item": {
          "id": "36641b7f-3e73-487a-bb14-4104ca9d38c6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7a38ebca-ecd5-49d3-abc4-b698079036e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0453596e-d875-4383-a4db-6b654f29d3d5",
        "cursor": {
          "ref": "c3d5cb66-e979-4627-9a1c-d2f7c785c7a7",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "58995265-23ea-4648-a246-755992147688"
        },
        "item": {
          "id": "0453596e-d875-4383-a4db-6b654f29d3d5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "71c99ab2-c8b6-463d-857d-70d54c53ae11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7912c81f-5930-4435-8742-1f2d7c2bda78",
        "cursor": {
          "ref": "b7a5b4e6-2820-4264-a71e-a49ddc5bebc6",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fe73f524-ebac-41a7-9ccc-1e3d460a7113"
        },
        "item": {
          "id": "7912c81f-5930-4435-8742-1f2d7c2bda78",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f4cee844-7e1c-4875-ba05-85dd412abc80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e0030d-6f8e-45ad-960b-179e51071e7c",
        "cursor": {
          "ref": "5b0001b1-a877-49e1-ae10-ead46c084558",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "93784e43-dba5-41a8-b28c-eb53f1e6d318"
        },
        "item": {
          "id": "20e0030d-6f8e-45ad-960b-179e51071e7c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2c5b2499-ed63-4956-931e-e8adaedb2633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1948cf1-6339-4099-9f5d-4e1d5685829e",
        "cursor": {
          "ref": "c505f03d-04b9-4caf-804a-75d180638593",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "26f395dc-6ffd-42dc-abd4-399da73a5387"
        },
        "item": {
          "id": "d1948cf1-6339-4099-9f5d-4e1d5685829e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a1d674e3-2bb7-4abd-9f54-5cacb6e798b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483f279a-b8e0-41fa-b02c-9f71e12c8b81",
        "cursor": {
          "ref": "c7186707-9f10-4d0f-9625-2b175a8431b8",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b7b53798-5ddb-4588-8f78-6f430a34c80b"
        },
        "item": {
          "id": "483f279a-b8e0-41fa-b02c-9f71e12c8b81",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f234a6df-4c25-4de2-b37f-d08708b2195f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240fadff-43ec-451d-949f-5b4c2bf01d03",
        "cursor": {
          "ref": "ee19e092-d147-4bc9-853f-c1630afaf849",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8b8401cf-c23b-4c91-82f1-ff71e4b31c0c"
        },
        "item": {
          "id": "240fadff-43ec-451d-949f-5b4c2bf01d03",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f3c8dd32-67a6-46a6-b0a4-7a60742078bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed349100-ecfb-45a8-a2d3-febb966962dd",
        "cursor": {
          "ref": "26e2d0e2-de32-45bd-badf-c72605497739",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "22af473b-9537-4789-9c96-4fb40e20ab59"
        },
        "item": {
          "id": "ed349100-ecfb-45a8-a2d3-febb966962dd",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e1331685-bced-4ada-9a5c-425b4125c742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4277f72b-2834-4aa6-9705-7c45c399bb2d",
        "cursor": {
          "ref": "9a5e6656-a5cb-4e4e-bae4-e49e0b26a3b0",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "74d0f3ee-6127-4f51-a77a-ff63e15c73e7"
        },
        "item": {
          "id": "4277f72b-2834-4aa6-9705-7c45c399bb2d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b2f87c41-349a-4fa3-b0be-089d0cd8fef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61352f6-edf2-4fff-9475-9e7cf056fc01",
        "cursor": {
          "ref": "51ffc103-1fa9-4128-98d4-d3b53f8fcf03",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9527baed-b948-48b6-8188-539820dc65b9"
        },
        "item": {
          "id": "a61352f6-edf2-4fff-9475-9e7cf056fc01",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "83ca5e4a-f069-4eb8-8cb8-c773140db583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d2510f-db6d-404e-b7f0-ee727abda862",
        "cursor": {
          "ref": "9ce0954a-99a2-45ba-896f-d2454cf333ee",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7111838d-8cf8-4dba-992f-fbd3c8661560"
        },
        "item": {
          "id": "55d2510f-db6d-404e-b7f0-ee727abda862",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c25a7521-7779-4f2d-91c2-92f16e1183d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a14c602-26ac-4016-b66e-2ba9091b0a56",
        "cursor": {
          "ref": "462de1f1-d7dd-4c5d-86d8-cc95112285b3",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "21d2a6e0-93cd-46e8-b061-b00926100e8f"
        },
        "item": {
          "id": "4a14c602-26ac-4016-b66e-2ba9091b0a56",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d6a89de1-b56c-4755-a380-2e1b6cdd6bba",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 621,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5310020d-63af-455f-850d-45105d5a9380",
        "cursor": {
          "ref": "13558ad8-3802-4ee9-9e25-24402e743d8a",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f096c3e3-f630-4604-9ff5-394d6c25e374"
        },
        "item": {
          "id": "5310020d-63af-455f-850d-45105d5a9380",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "147efdba-445f-496e-bc9c-5c25c5e29b71",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 571,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "1c57fd33-c99a-4189-9902-46b71b68a745",
        "cursor": {
          "ref": "9a2fe700-915e-4a5b-884f-c9527e5c3858",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e625eb8a-77ee-4088-9cfa-1e430e85b309"
        },
        "item": {
          "id": "1c57fd33-c99a-4189-9902-46b71b68a745",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "078f8546-6c50-48ab-924a-c4812a6fd7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf84080-74f4-4b26-bb45-1a3f46413a59",
        "cursor": {
          "ref": "625f483e-aa6e-4770-a1e4-705d7d174936",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c916a056-0e6b-4657-ada3-954e4e6314a9"
        },
        "item": {
          "id": "eaf84080-74f4-4b26-bb45-1a3f46413a59",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e9796514-99f5-4f62-9ba6-830416185791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3b8389-1cd9-4f23-b53a-806d6c7be6f4",
        "cursor": {
          "ref": "38405a82-ca87-4989-9739-f39d4f06a4dc",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7cad1ef3-cca2-462f-83dd-409fb3d8f8ff"
        },
        "item": {
          "id": "5e3b8389-1cd9-4f23-b53a-806d6c7be6f4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5382509a-f7e8-455d-90fa-df8d7a96b20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181fe4dc-33f1-4669-92fa-f179a5ad8cb1",
        "cursor": {
          "ref": "7e149c0e-5692-4cfb-b451-92a505f99c21",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3486f5c3-6a83-43d4-89a9-b13d5d17edca"
        },
        "item": {
          "id": "181fe4dc-33f1-4669-92fa-f179a5ad8cb1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "570190a6-8a96-4584-8d11-c8c956e71a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8824d3b-e1ed-4798-a01b-4afd1dd6dea8",
        "cursor": {
          "ref": "8dc531bb-25d2-4a2a-b227-f681d82f7c63",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fc93f429-47c9-402c-8ec1-eeab39566142"
        },
        "item": {
          "id": "b8824d3b-e1ed-4798-a01b-4afd1dd6dea8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a56ef903-7269-4686-8ed2-d1966f38b89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ef196a-7e46-4b90-83f9-0291b5ba8bb0",
        "cursor": {
          "ref": "0687563f-2963-4cf1-97d8-2afaa341f5f9",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9c24854a-3973-424c-8de5-e9dd1ce7a25d"
        },
        "item": {
          "id": "d2ef196a-7e46-4b90-83f9-0291b5ba8bb0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b760dfc2-d228-4ff6-a91b-0a98c48e4974",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 592,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892af2b9-736c-445c-b4a6-2c59cdd4bf2c",
        "cursor": {
          "ref": "fc985cba-686f-4a4d-bdef-63591386a40f",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d44f119e-91bc-47de-9bb8-9af4a1e93a5f"
        },
        "item": {
          "id": "892af2b9-736c-445c-b4a6-2c59cdd4bf2c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3806a6ca-5cf5-4c82-aa81-5b95d9df7c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1795935b-eb09-4190-903b-4adc266ac5e6",
        "cursor": {
          "ref": "31456898-8b08-40c9-af30-0f9087fabf3e",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4539ab1c-64d4-49ca-9ea2-d01ebb80536f"
        },
        "item": {
          "id": "1795935b-eb09-4190-903b-4adc266ac5e6",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "612960b0-71b6-4265-a6c3-f683850c73d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17c0f87-9773-4750-8a82-eb75d3b57e44",
        "cursor": {
          "ref": "3a4968f1-31c6-44a2-b086-7e4ff490940d",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ad4c65bf-2a6c-4e9c-be69-3918ebac66a1"
        },
        "item": {
          "id": "d17c0f87-9773-4750-8a82-eb75d3b57e44",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "cc3c3cf5-c74c-4341-ab41-4df0ffbb9d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9fecf0-7944-44bb-b57b-b399acef4cfa",
        "cursor": {
          "ref": "bd36eeb7-e8db-4b62-a6fb-927760aab90f",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "33e9f369-e9f4-4074-82cd-ae13e55df644"
        },
        "item": {
          "id": "3d9fecf0-7944-44bb-b57b-b399acef4cfa",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0149ebc8-64a9-4d9b-8290-d53fd49db3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0380ad8-827d-4f53-868a-1e92d628321a",
        "cursor": {
          "ref": "6aa27912-9f87-4e16-95fa-ee806b1d331c",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "62783031-4f3c-46fa-b924-97d83c6bae57"
        },
        "item": {
          "id": "f0380ad8-827d-4f53-868a-1e92d628321a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e4ebfc4e-0241-40c4-86f3-6fba812317b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055b6cb4-3643-43be-99cc-1007d5306947",
        "cursor": {
          "ref": "4c1f6170-6367-4a21-bcfc-2ab1bdb0a428",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2cc6b7eb-7d7b-47e6-8878-55c931c2ffec"
        },
        "item": {
          "id": "055b6cb4-3643-43be-99cc-1007d5306947",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "46ac6e93-e811-4337-959a-fd438a503766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a1d82e-43c1-41c3-a746-0e4991570c34",
        "cursor": {
          "ref": "fed081bc-80f7-40cc-80e7-a2e8e773c385",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "628a9cc3-5c56-40bb-9c03-71f440af2d2b"
        },
        "item": {
          "id": "67a1d82e-43c1-41c3-a746-0e4991570c34",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9850b2b8-f68f-466f-8eca-8859966bb60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72dd1681-ca91-4052-8de1-32c2813f59ce",
        "cursor": {
          "ref": "68bb1fee-90f0-4580-925e-ffd15b6d2530",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7e563f6f-7a62-48f5-8a2d-e3a6159f15a5"
        },
        "item": {
          "id": "72dd1681-ca91-4052-8de1-32c2813f59ce",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "83aaf17f-2ed4-4370-97db-c342193ef08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31fdb53-31ee-403a-88ba-1dd6c98787b4",
        "cursor": {
          "ref": "bd2d7fc6-66a2-4afb-ad32-1deafd5a3e8f",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "31647457-201b-410d-bd86-6fb32c1ce9ab"
        },
        "item": {
          "id": "f31fdb53-31ee-403a-88ba-1dd6c98787b4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "75bce5f8-d3ed-4bc5-86a9-5ff8b5ce82e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae9b9e7-f06c-4ccd-b60b-46780a40fe3e",
        "cursor": {
          "ref": "439cdd16-6089-478e-b284-ec03e4beeb31",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "79fd113e-1a1f-4e1a-a72f-ea2a3a7beec8"
        },
        "item": {
          "id": "1ae9b9e7-f06c-4ccd-b60b-46780a40fe3e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "09d00951-3702-4bd5-902f-368e13f6d73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861bad96-a1a3-4293-bab3-db0a5b2c406a",
        "cursor": {
          "ref": "ffbced65-7c9d-491b-9c33-a9954197c8ef",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1a1f91fc-1b68-4537-a08b-062034ec6b0b"
        },
        "item": {
          "id": "861bad96-a1a3-4293-bab3-db0a5b2c406a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8a86a90b-bb06-457e-9478-5bc8c616a0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fed5a77-9aa4-469d-b7b1-633874ad1286",
        "cursor": {
          "ref": "21e26593-bd23-426b-96e7-f0bfb94f6046",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4fd9106f-2402-42ce-b662-8be783201052"
        },
        "item": {
          "id": "1fed5a77-9aa4-469d-b7b1-633874ad1286",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "57492532-2bb8-461e-a4c5-10ae7ffb3139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521d9d53-cd41-4096-afb1-6dea65e77d27",
        "cursor": {
          "ref": "2bbd37cc-a02e-44aa-90a7-deae4b25b9d9",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9415e5c4-30c0-4c7f-93ff-0d302e24cfe9"
        },
        "item": {
          "id": "521d9d53-cd41-4096-afb1-6dea65e77d27",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e5150a11-9d7c-43a8-b240-3bb387d09a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4938ceec-2535-46b3-abf6-2788225794b5",
        "cursor": {
          "ref": "c4250932-1708-4596-bca3-5a59cf3a3df1",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a867a4e2-abc4-4364-8ba7-38c4dd823418"
        },
        "item": {
          "id": "4938ceec-2535-46b3-abf6-2788225794b5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2b1d1d59-d05c-4983-bf06-dcd891a84f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238a8765-939a-4abf-9c4a-1b557a402a8c",
        "cursor": {
          "ref": "af1171ec-759d-40ed-8d6a-a8a959147a86",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "17eb776c-aee3-4bdf-aa29-9b0a48921904"
        },
        "item": {
          "id": "238a8765-939a-4abf-9c4a-1b557a402a8c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "278464dd-fdf8-4866-8092-ced832bc6ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ace9ce6-674d-45f9-b612-74eccb1bcdf7",
        "cursor": {
          "ref": "83268cac-071c-4742-9fee-484302057f22",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "45eff4e5-fbea-4c04-8c74-37292de1a373"
        },
        "item": {
          "id": "9ace9ce6-674d-45f9-b612-74eccb1bcdf7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2b5d1449-219b-46ab-9e76-8ccf91e1229b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfe31e5-4e70-4eef-b72f-6beaf51538f7",
        "cursor": {
          "ref": "96014420-8878-4567-ba99-79704273f67c",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2fea30a8-2676-4617-87fb-fa22334a9d72"
        },
        "item": {
          "id": "fdfe31e5-4e70-4eef-b72f-6beaf51538f7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "dc6b82bc-0b72-44b4-932a-fd0650ca69bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918adca2-b92d-4c17-9c57-bfe106350226",
        "cursor": {
          "ref": "c1175a9d-ffc1-4066-b265-7bbf64d29f79",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7bb46eec-737c-44d6-8fb4-c456c5ca7efb"
        },
        "item": {
          "id": "918adca2-b92d-4c17-9c57-bfe106350226",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4e4b8fd4-bb9b-40f8-ac89-d3bf1dd46aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0fe92f-466e-4c25-bbc1-e518e17e6559",
        "cursor": {
          "ref": "d27f555b-5762-4e16-b863-06fc92c365d1",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "374f4faf-b61c-4528-9905-e81d9bbcc15b"
        },
        "item": {
          "id": "7f0fe92f-466e-4c25-bbc1-e518e17e6559",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3fb3c782-078b-4213-b5a5-b901ab7bea4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c13bae6-28eb-4deb-ab2e-5839b45ed75a",
        "cursor": {
          "ref": "825a5a2d-113b-46d9-88b3-7df8844f57c9",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5761d335-0bce-484d-b5b9-0302ed26f883"
        },
        "item": {
          "id": "4c13bae6-28eb-4deb-ab2e-5839b45ed75a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5f02170e-1c9d-4118-a21f-298a4dcfdde1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e977b6-1396-48f3-95ec-c8d0496603c7",
        "cursor": {
          "ref": "e0e1ed7a-be3d-46ff-ad47-4e39a136267f",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e1c3eafd-065e-4288-80d0-2a3b434f336c"
        },
        "item": {
          "id": "a9e977b6-1396-48f3-95ec-c8d0496603c7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e372cf5c-1a4b-4b59-adf3-95fa395a6079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb35d8b-a870-4343-91c5-18b9e70d7d82",
        "cursor": {
          "ref": "c0ba86ed-ad12-4a53-b22c-3224cfd46bb5",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "640b8319-b898-4b52-916b-3d41a8cecf1e"
        },
        "item": {
          "id": "3bb35d8b-a870-4343-91c5-18b9e70d7d82",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f3f4b586-45e8-4fbc-914c-dd364db34dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff2eac1-b723-44aa-9274-9e110394aa42",
        "cursor": {
          "ref": "19e88c2a-d901-46b4-ac3f-f11a3d8f90cc",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8a75106a-45ac-44d0-8818-5d04ef0ba7e8"
        },
        "item": {
          "id": "eff2eac1-b723-44aa-9274-9e110394aa42",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "379640b7-53b7-4634-ac5b-8d582b3c886a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb25e8be-d064-452e-8565-1ff1b812ce70",
        "cursor": {
          "ref": "cb59bfd4-b877-4c89-8b32-976971b85610",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fa666a45-0f34-4f01-863a-036b684d6f5d"
        },
        "item": {
          "id": "eb25e8be-d064-452e-8565-1ff1b812ce70",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "32da938f-bd15-46a5-ae89-507868c1edfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3354ad16-29f6-4e3a-846f-21cef3ef919c",
        "cursor": {
          "ref": "08b9e6a7-390f-4822-bf33-8bb4d63cfe19",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bfc74c0f-c962-491c-879b-f4cb23b57d78"
        },
        "item": {
          "id": "3354ad16-29f6-4e3a-846f-21cef3ef919c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c2d9c77c-3fa6-49ea-8f0e-6445dd15a9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b27fa2-dbcc-42af-beb6-4bbd20a74c56",
        "cursor": {
          "ref": "aab0056a-8084-4112-9e69-e887d4523bda",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "36244492-e6db-4c9e-aa26-5a563bfbe027"
        },
        "item": {
          "id": "13b27fa2-dbcc-42af-beb6-4bbd20a74c56",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8c62bc2c-61cc-4615-824b-86ef9252277c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325a9b0b-172d-425f-81a4-6aa08181b316",
        "cursor": {
          "ref": "db060846-b567-443a-a291-d93edfb860a9",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5d3d06ba-deb8-4a61-b37d-f5142f797f18"
        },
        "item": {
          "id": "325a9b0b-172d-425f-81a4-6aa08181b316",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "65caf682-df64-4fb6-b309-ed274d3a765c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a435c62c-3c5e-4c7d-80a7-dc90b749426c",
        "cursor": {
          "ref": "8f5ec314-0086-4a22-9888-984f3b74075a",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5934ecc8-2ede-426f-ab64-096358a6584f"
        },
        "item": {
          "id": "a435c62c-3c5e-4c7d-80a7-dc90b749426c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "fa0ebfc0-fa6c-4ad4-b639-d0117ae8d7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2d8f0f-2d81-4d1a-a60a-40a26192c749",
        "cursor": {
          "ref": "cb94576a-0f6c-49d9-8efe-385a044a81d4",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d243fc29-4761-4986-9172-e8fac989f057"
        },
        "item": {
          "id": "9b2d8f0f-2d81-4d1a-a60a-40a26192c749",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "96591ca5-7b29-4799-94a5-18d711c3c08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d2b7cf-4d9a-4d67-8dd2-cc241f11378a",
        "cursor": {
          "ref": "22097578-7270-429c-a215-bb9d42826f8a",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e39d383c-d378-4b4d-b1c0-1c8cbe581c12"
        },
        "item": {
          "id": "80d2b7cf-4d9a-4d67-8dd2-cc241f11378a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4f7dc55b-3728-4af9-bf25-d0d7ce4131ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f88f56f-4aa6-47eb-a40a-81359714b612",
        "cursor": {
          "ref": "3daaf5d0-90b0-4a76-8f05-46e6345576cd",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "881661a9-e3e4-42c5-b503-11800226036f"
        },
        "item": {
          "id": "3f88f56f-4aa6-47eb-a40a-81359714b612",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e4ba6bb1-0cf9-40f3-a69e-8a5df143ac49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458b0b85-ede6-496f-bca3-70b3ddd7ae63",
        "cursor": {
          "ref": "9a95803c-af88-4a14-8168-a7837b9d2c3f",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2c71a7eb-9394-4409-9d8d-3f4640385070"
        },
        "item": {
          "id": "458b0b85-ede6-496f-bca3-70b3ddd7ae63",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c25e5812-d336-4572-8b5d-23bc5c05f1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55befe08-598c-4198-a278-9892a9250813",
        "cursor": {
          "ref": "9fb4f569-4804-41bd-84f1-153a4c68fd23",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "149c497c-28b4-4746-b1e7-168fca170f1b"
        },
        "item": {
          "id": "55befe08-598c-4198-a278-9892a9250813",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b6aedf7d-e9fb-4bcc-8e11-8f2f17a2f372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfc5af2-e984-42fc-9ca6-f94e4ac4597b",
        "cursor": {
          "ref": "7c33be4f-0285-48cf-a205-85d27d6b23c0",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "86172aa0-a231-41dd-98fc-ec2490f3a70c"
        },
        "item": {
          "id": "9bfc5af2-e984-42fc-9ca6-f94e4ac4597b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "31f473d6-de14-4089-a7ee-42af3de79b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81915dc4-12d2-49fa-b3ef-16a44176be99",
        "cursor": {
          "ref": "24aecee7-e8bf-4e6c-a9d1-69d68988b66f",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5bc2c36e-b70d-40d5-9420-98caad637053"
        },
        "item": {
          "id": "81915dc4-12d2-49fa-b3ef-16a44176be99",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1d9e2bbf-8315-4811-99b7-0e5980d2227c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07597ad-55f1-411d-81b5-59c1e831a83b",
        "cursor": {
          "ref": "d8faf05f-92e2-45a1-8db3-698adcb3d9aa",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6ba7b40b-06bb-4b7a-a2a3-47ec6c4eed1e"
        },
        "item": {
          "id": "a07597ad-55f1-411d-81b5-59c1e831a83b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "864d6d38-e3cd-4f99-bd19-7411427578d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ccac1d-fa44-479d-bb12-ff5d07a9b9bd",
        "cursor": {
          "ref": "35413e04-971a-4250-8455-18aa530d1bb8",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "edf94a86-98f5-4e39-9a18-15d1575e1bce"
        },
        "item": {
          "id": "15ccac1d-fa44-479d-bb12-ff5d07a9b9bd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "81d0eb53-f9ee-4b78-8505-17a3786bd613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9a38f8-f400-4108-9397-fc4103e14cd1",
        "cursor": {
          "ref": "099b8eed-ac75-4b9f-99d5-403f636101cc",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5c0efaec-b005-46cd-88d4-494cfa27e00b"
        },
        "item": {
          "id": "ad9a38f8-f400-4108-9397-fc4103e14cd1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "75c3b0c7-7376-4e7d-8add-280bf1af400a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0547781d-df6d-4523-8655-ab97d713c240",
        "cursor": {
          "ref": "1636241e-eedc-4355-94d5-da669c9a18d3",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4d75c5f2-8088-460f-aad5-979729b07a8c"
        },
        "item": {
          "id": "0547781d-df6d-4523-8655-ab97d713c240",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "52566578-020f-4913-b1b0-df03d5be5503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1062645a-eaaf-4390-aaa2-37f043a904d2",
        "cursor": {
          "ref": "e30fbbc1-2050-49bc-ac5d-6aba0c0d5db9",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5a7651b3-e583-4c72-b28a-aa43d003f7f6"
        },
        "item": {
          "id": "1062645a-eaaf-4390-aaa2-37f043a904d2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "92f296ba-603f-4f11-aca8-3fd6702db68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7758dd17-672a-4949-acdb-e842a42b8c80",
        "cursor": {
          "ref": "681eafcd-cc01-4a3e-b402-c7fa99d58d5d",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d4544035-ff43-4f18-9e73-ce65a9fef415"
        },
        "item": {
          "id": "7758dd17-672a-4949-acdb-e842a42b8c80",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0bcd1f8c-4234-45cf-9346-4747998e8eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d57e52-4473-421e-a61e-c9d68d066ef7",
        "cursor": {
          "ref": "a8fdb9e8-334d-4ea9-a478-8d054da35c81",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "53945fff-1a64-4368-8af0-57b803b57fdf"
        },
        "item": {
          "id": "b4d57e52-4473-421e-a61e-c9d68d066ef7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c89aa6b1-0583-46b7-ae90-798a4e93b939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de98a1b8-9817-44a1-a72d-e0b60ab1ad83",
        "cursor": {
          "ref": "db5464d3-bbe1-4699-9e49-57d3e3740696",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "96a736e9-7b8c-4cb2-9a60-bc9a6485efd0"
        },
        "item": {
          "id": "de98a1b8-9817-44a1-a72d-e0b60ab1ad83",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0c392b48-70f1-43a6-a1b6-aa64394285e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e493fd-9151-4539-9728-18bd060c1fc5",
        "cursor": {
          "ref": "bf97fbd4-72a7-4827-972f-1a3755a19cf6",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7839e9a3-6e9f-444e-b4ae-87c54af30a02"
        },
        "item": {
          "id": "89e493fd-9151-4539-9728-18bd060c1fc5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b7758d44-da1f-4aec-b0d8-eb955a0992a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6563a496-6d00-4019-ace4-7edd5efbe56e",
        "cursor": {
          "ref": "ff606ddb-d46d-4119-8d80-4da963e1981e",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "219bb384-ad9b-4147-9f27-4ab3cb5d8c5c"
        },
        "item": {
          "id": "6563a496-6d00-4019-ace4-7edd5efbe56e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e9778e22-951f-4628-ac19-c5f5122623d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963f9c60-9663-4c52-b780-0aa6385f2af1",
        "cursor": {
          "ref": "b08eaae8-3246-4326-af7c-1ad77e592fe0",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4d20f98b-d8ac-4d67-9bb3-74b28237bedc"
        },
        "item": {
          "id": "963f9c60-9663-4c52-b780-0aa6385f2af1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6527eb76-5473-4c74-a7e6-c28ba2303872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0672d34a-378d-4d07-be8a-057bae28f330",
        "cursor": {
          "ref": "6d935b8c-d3cc-4b64-88ca-fc1e6617c071",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "76ec0d39-e338-4722-8b33-cc539d2a1ea2"
        },
        "item": {
          "id": "0672d34a-378d-4d07-be8a-057bae28f330",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2b3ac908-f166-46be-8ae9-0a75ff3e4072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ac0fad-4928-419d-b2a6-53d61013d5e4",
        "cursor": {
          "ref": "e2d00e55-d21e-4901-a240-c94519ef7869",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "92520e7d-c58d-427c-8aa9-d64baa7233ec"
        },
        "item": {
          "id": "e7ac0fad-4928-419d-b2a6-53d61013d5e4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9158bfdb-9f67-4f13-a6f8-6bec239c47d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871d4192-fd7e-4da9-92c6-e5615116f488",
        "cursor": {
          "ref": "b7b31ddf-3587-4f88-96e5-91b4b5175282",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "121e0f41-f4ec-4672-86f6-7fb102a716e4"
        },
        "item": {
          "id": "871d4192-fd7e-4da9-92c6-e5615116f488",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a395f9b4-a238-4029-9113-4f1325587cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01808744-1777-4b28-8bd2-d71df5404e99",
        "cursor": {
          "ref": "4f1bc726-b7b5-4742-9237-779b534b2bfc",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3eae9d71-9371-46a0-b009-03f56b7ed7a1"
        },
        "item": {
          "id": "01808744-1777-4b28-8bd2-d71df5404e99",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d484cfea-b0a9-4000-a2e2-1656fd2e579c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1202e5d8-e6a4-4ba8-b5ba-b37bae8b38b3",
        "cursor": {
          "ref": "776b3188-7b4b-47de-91ae-48e1192c06d2",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "85b1116f-068c-43cf-aed1-79341a962100"
        },
        "item": {
          "id": "1202e5d8-e6a4-4ba8-b5ba-b37bae8b38b3",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "b44b50e0-967d-44e7-8f53-7a59269ad7e6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 540,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98443b31-92cf-4f51-a5ed-78cbadd157ed",
        "cursor": {
          "ref": "b6d45f9e-68c8-4d95-8c93-3b4f7185ad29",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e192eacd-ab2d-4b55-bac4-5298160f40c8"
        },
        "item": {
          "id": "98443b31-92cf-4f51-a5ed-78cbadd157ed",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e1c1a0f3-5572-4e29-a945-c4a4ca256bc3",
          "status": "Created",
          "code": 201,
          "responseTime": 6789,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05eacce-f362-4bde-8b04-f6b4bf81bf6f",
        "cursor": {
          "ref": "c605a41f-0f7e-4fc7-9585-6f12013d51ab",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "04cff5ae-14a5-4123-b8e7-e4a3c8529612"
        },
        "item": {
          "id": "b05eacce-f362-4bde-8b04-f6b4bf81bf6f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "97300590-384b-414f-8902-b4bf2540ee52",
          "status": "Created",
          "code": 201,
          "responseTime": 4902,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "29be6844-a688-47ed-85c8-6bb55d175417",
        "cursor": {
          "ref": "1e344b7d-c85c-42ae-9bf2-1f70ed1c7165",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4a7bc34b-f568-4a2e-bbc0-cf962e1ae16d"
        },
        "item": {
          "id": "29be6844-a688-47ed-85c8-6bb55d175417",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b29ccb7c-5220-4862-8547-c2f1e9f15a0d",
          "status": "Created",
          "code": 201,
          "responseTime": 5264,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "73fe0a70-d086-4a23-a147-c2a0c8c1bdbc",
        "cursor": {
          "ref": "6840fb07-1350-4bab-8907-afa52a82ecbd",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "695d566e-29a0-4dae-b4db-3a0f71fc6abc"
        },
        "item": {
          "id": "73fe0a70-d086-4a23-a147-c2a0c8c1bdbc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9075500c-a11f-40b3-acf4-444f4aa62771",
          "status": "Created",
          "code": 201,
          "responseTime": 3626,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aacd997-b5cc-4805-9ed1-74c7b0f3a7b9",
        "cursor": {
          "ref": "2ca8a3f6-b948-4b74-a44c-f7f1bec9b6c2",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ea7cdcaa-abf3-45c4-bc84-93c219c8659d"
        },
        "item": {
          "id": "4aacd997-b5cc-4805-9ed1-74c7b0f3a7b9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "92d10434-565d-4a0c-a4e0-b68bad619f9c",
          "status": "Created",
          "code": 201,
          "responseTime": 4356,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb3d979-4c64-4f16-908b-46c9e0234493",
        "cursor": {
          "ref": "b6e5d5c6-0945-40c9-a95f-7a65d5e29f46",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a084c2fc-b33c-445d-9d1e-b34b0058f9a0"
        },
        "item": {
          "id": "efb3d979-4c64-4f16-908b-46c9e0234493",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e40a046f-8e97-4462-8803-1e238fbbb825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb3d979-4c64-4f16-908b-46c9e0234493",
        "cursor": {
          "ref": "b6e5d5c6-0945-40c9-a95f-7a65d5e29f46",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a084c2fc-b33c-445d-9d1e-b34b0058f9a0"
        },
        "item": {
          "id": "efb3d979-4c64-4f16-908b-46c9e0234493",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e40a046f-8e97-4462-8803-1e238fbbb825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8c539e-c6df-47f5-9ccf-ed3eaf9cb263",
        "cursor": {
          "ref": "f449aef0-d348-4523-8f95-2e5ab39c8f58",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bba32de8-911e-482e-97db-dc2d9c5f5501"
        },
        "item": {
          "id": "ba8c539e-c6df-47f5-9ccf-ed3eaf9cb263",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "43f97fa4-87cf-4aaa-9e88-469ba628dde7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e947f636-55ed-4826-a369-1924fbc2d1fa",
        "cursor": {
          "ref": "fec8d467-da15-47ca-b85b-e11440e41143",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6bc7f28f-4c80-4227-87fd-5131237ea812"
        },
        "item": {
          "id": "e947f636-55ed-4826-a369-1924fbc2d1fa",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bafc71c0-d21e-4965-81e0-0b7e8a2408fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c000c0-c260-475b-bfb6-8f83ca3a44b6",
        "cursor": {
          "ref": "e73f7f8e-f834-4e15-8539-305c3d26ce5a",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "28dc6138-0aae-44b7-a418-ec27772321bd"
        },
        "item": {
          "id": "75c000c0-c260-475b-bfb6-8f83ca3a44b6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c083b207-423d-4330-9b81-82411a5c5574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fca760-5552-446b-baa0-ced5634eeea9",
        "cursor": {
          "ref": "343ad67c-e5c0-477d-b3bb-9d4eaa708e80",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4124b8db-4f85-41f2-a337-2bda7198689f"
        },
        "item": {
          "id": "85fca760-5552-446b-baa0-ced5634eeea9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6454b2fa-4ae7-46e5-a39d-d49a4195b71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf90497-f671-4166-8cf5-6c3d427c9bda",
        "cursor": {
          "ref": "d0ab94c7-20f1-4cca-b577-607a6d9f56a1",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c4922a63-5935-4a3d-8a29-3f8ce46cbda7"
        },
        "item": {
          "id": "fcf90497-f671-4166-8cf5-6c3d427c9bda",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9234ef85-65a5-46f5-b5ca-2a75e4fab49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe53408-8e77-453f-943d-fed53b4970ce",
        "cursor": {
          "ref": "f414a772-16c1-414f-ad32-04f845154e15",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f6fa91ac-517b-4fa0-be71-d48ab5567194"
        },
        "item": {
          "id": "4fe53408-8e77-453f-943d-fed53b4970ce",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4f8a3d62-daf8-4986-9e62-c342a2cefead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ceac8a0-1657-4db8-8093-141f6dd16cd4",
        "cursor": {
          "ref": "ffa4706f-1796-432e-9c98-3c0c8660ffe3",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "537698b7-9f89-4c56-ac23-2f19884ed07c"
        },
        "item": {
          "id": "0ceac8a0-1657-4db8-8093-141f6dd16cd4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "69bea17f-2197-4e89-ab4d-6a0d50bdfd27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb3c692-5fac-46dd-a41b-151f0a9ac348",
        "cursor": {
          "ref": "25a5fecc-9ace-4d07-b451-7ab0c1b5274d",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "fa6f00d0-7b32-407e-bc31-ed640a5ed64c"
        },
        "item": {
          "id": "5fb3c692-5fac-46dd-a41b-151f0a9ac348",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2a3e02a2-4531-4cb0-ab32-7ff9177bfb10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da23a40f-6152-4e2e-b062-496962013a90",
        "cursor": {
          "ref": "4cde91a4-69ce-466f-a4cd-868ca34adf7e",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4e9519cd-66ea-4c8b-bba5-42813d20ebcf"
        },
        "item": {
          "id": "da23a40f-6152-4e2e-b062-496962013a90",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d71b20fd-a680-41c5-b695-b87a25c06d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1fb3a5-e414-417e-9dcd-10a4663fcbe2",
        "cursor": {
          "ref": "108db8a8-2976-4243-a28e-91729b610b1a",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "77eaa610-c2fd-4f4c-9cb9-20d2538880d7"
        },
        "item": {
          "id": "2d1fb3a5-e414-417e-9dcd-10a4663fcbe2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8e57c8b1-464a-47ce-b7a8-42697513ffe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f883cc62-a7ba-42cf-95b4-c207d416f2f4",
        "cursor": {
          "ref": "f9f645b5-1ae1-4c7d-af92-cb7ff9f43e42",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7a49a5c1-d723-4e7c-a2d2-50dac2e9cfc1"
        },
        "item": {
          "id": "f883cc62-a7ba-42cf-95b4-c207d416f2f4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8344abe1-fc7e-42dc-b486-fa4077f26b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15af494e-6564-497a-8f19-206e1e676d65",
        "cursor": {
          "ref": "59d2860b-2aba-4148-b969-04ea82220110",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "95c5c5f8-70bb-4f49-9fc7-0cd0dbec5870"
        },
        "item": {
          "id": "15af494e-6564-497a-8f19-206e1e676d65",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "847ef5fb-3903-4e40-98bc-e0138200f24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e5f510-14ac-4e2a-a107-aab654baf0a5",
        "cursor": {
          "ref": "df1387da-51f4-4888-aa95-0fe84d7bf87a",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1522a4ae-a426-4541-8cdf-e99ff89e0fa6"
        },
        "item": {
          "id": "74e5f510-14ac-4e2a-a107-aab654baf0a5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "318733bf-7134-484e-b154-b632ee4a2957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256fc338-eb76-4dd3-acf9-a37e54512105",
        "cursor": {
          "ref": "c03f7785-e1e5-489d-ba9a-59a4c2929637",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8cc3b5f1-79b5-4b69-b3d0-e415e071b268"
        },
        "item": {
          "id": "256fc338-eb76-4dd3-acf9-a37e54512105",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e1bee27c-a6b9-4bda-b4dd-f395e7b33e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03547cee-25f4-4a9e-aad4-c273f45d02d2",
        "cursor": {
          "ref": "10572071-9237-4bf9-ab81-47a4c5ee37e9",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2716df13-cd6c-48ca-bf6f-43dedea88bbe"
        },
        "item": {
          "id": "03547cee-25f4-4a9e-aad4-c273f45d02d2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "27a9ac0c-88ab-4780-b84e-c90c917a777e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051e104b-a936-4aa8-9057-71dd40a60a1f",
        "cursor": {
          "ref": "58d92c16-a533-4272-a75c-8d715fc5143b",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7153efc3-ac57-4b54-8b73-8a12237696cd"
        },
        "item": {
          "id": "051e104b-a936-4aa8-9057-71dd40a60a1f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c2894436-bc89-4f92-b8de-dbf573aa3c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9def7c7-2078-4b43-8ab7-662f76ce8bf4",
        "cursor": {
          "ref": "65710f3d-5606-4fb3-aaf3-abcef8f159e1",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7c900b76-eed1-433c-bbb0-e185f6c71c4d"
        },
        "item": {
          "id": "b9def7c7-2078-4b43-8ab7-662f76ce8bf4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "762b6cf2-3129-4ba6-87ea-3048787f5775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6975cf4d-6212-42e5-9be0-bfbc83f96e71",
        "cursor": {
          "ref": "e5461c78-2247-48e9-82bf-08e4d7ab96ff",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "884244ee-f760-427d-8aa8-9499454b6dc8"
        },
        "item": {
          "id": "6975cf4d-6212-42e5-9be0-bfbc83f96e71",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2b60ae4b-8f54-40a8-b999-7b32be6491e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b2a077-43fd-4916-bcd2-7066c28d9786",
        "cursor": {
          "ref": "902f90fe-7f21-4428-84b0-73c4cc49da7a",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2be8b674-e862-449c-a5d4-098a2ab3c239"
        },
        "item": {
          "id": "16b2a077-43fd-4916-bcd2-7066c28d9786",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "463889da-d793-4f35-a7ae-f8fce053b8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2980aed-de6f-44c3-83e5-db7f17318aa4",
        "cursor": {
          "ref": "b8607e1a-4819-46bb-9e3c-df2e93d8c558",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "fc25d4fb-040f-46e8-bf9c-600256840335"
        },
        "item": {
          "id": "a2980aed-de6f-44c3-83e5-db7f17318aa4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "061505d8-c445-4c86-88cf-868970d99535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8e63f6-f2a9-43ef-8de3-19e05914339b",
        "cursor": {
          "ref": "2acdb056-b4fa-4a8d-babc-b778e1d4e1e3",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1573cc21-4dd5-4b9b-aea7-5af9794f2179"
        },
        "item": {
          "id": "1a8e63f6-f2a9-43ef-8de3-19e05914339b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "746cefd9-7832-4c59-bf29-4787c85e8bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04173831-4cf4-4da3-a634-708fe328dce0",
        "cursor": {
          "ref": "432d1858-cdf4-4856-99be-1b8dc59f5d3b",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "00510037-2339-468b-ac65-2105e260c5d2"
        },
        "item": {
          "id": "04173831-4cf4-4da3-a634-708fe328dce0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4ff71949-1bb2-45f7-b874-5d142c2bc26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250ccc03-1489-4abf-8f00-323ff8a28091",
        "cursor": {
          "ref": "8cced013-9f61-4ee2-b969-d9ff057457a6",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e15fda7a-ef19-4c80-af46-c31d1b2acfdd"
        },
        "item": {
          "id": "250ccc03-1489-4abf-8f00-323ff8a28091",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4254275e-42e4-42ce-8547-4223b123f4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c8fbc5-16e0-42a8-9df8-8a79e01d6826",
        "cursor": {
          "ref": "8c90f5d5-cd12-4319-a68e-27b19dc7a08d",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "caa7e0a7-2217-44a3-bd9e-134ef5d90f29"
        },
        "item": {
          "id": "07c8fbc5-16e0-42a8-9df8-8a79e01d6826",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "af558b10-3727-49cf-b232-fa23c1bae517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7377a78d-754f-4cb8-a893-c02672974210",
        "cursor": {
          "ref": "7ce277d0-6817-41b3-a44d-71f779a1aed9",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c90198c8-3a3e-45b4-b236-0860b61af9b1"
        },
        "item": {
          "id": "7377a78d-754f-4cb8-a893-c02672974210",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "eb679844-54a1-47df-81e1-80014f3e6eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a62931-cc68-4d48-8398-e8a1f7e2c8d4",
        "cursor": {
          "ref": "14faffd8-40f9-44ef-8833-e2881776efa0",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "115f06c1-6f4e-4e57-b2ab-6853009f681d"
        },
        "item": {
          "id": "b9a62931-cc68-4d48-8398-e8a1f7e2c8d4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e4c9725d-d828-4b8d-81e3-d35cba427a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6a6ad1-d237-4630-ab95-352fdc07f1de",
        "cursor": {
          "ref": "b5e46711-ed1c-4784-9224-dde4d5de2c43",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b60bc1cb-9015-49b0-9495-afe6efd64ff4"
        },
        "item": {
          "id": "2c6a6ad1-d237-4630-ab95-352fdc07f1de",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1745f098-5efc-4bd8-ba62-691787065b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2406533f-1409-4253-8bd6-d362e9fa2836",
        "cursor": {
          "ref": "42c0b73b-7c29-41dc-a99d-34fc53df63fd",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4feddfe2-af79-4494-a3f3-f757d005edb7"
        },
        "item": {
          "id": "2406533f-1409-4253-8bd6-d362e9fa2836",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "52695a9e-b961-4486-8ea0-f06389b1faeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1005,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c641e83-a9a4-42be-8da0-314b5f4279e6",
        "cursor": {
          "ref": "57c638ef-68b2-4ef3-8e82-fe84838c25b3",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "63097660-ee75-42fb-855e-fa8f92e628d8"
        },
        "item": {
          "id": "6c641e83-a9a4-42be-8da0-314b5f4279e6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "691d7c75-7499-4000-8b98-d762ecb6399c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0ab23c-79f3-411a-9e50-ef3f078f8fe1",
        "cursor": {
          "ref": "d03422f2-a951-4e05-a82f-5b98f6d9f3e4",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6934a33f-e3d4-48b4-bf21-2468ee48e17b"
        },
        "item": {
          "id": "9e0ab23c-79f3-411a-9e50-ef3f078f8fe1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b0ff963f-57be-457e-8a0f-21eb1e761d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba48c81-9130-42cd-abac-40164cc1e61a",
        "cursor": {
          "ref": "931c1f66-6a09-48dc-acd5-8905e0c69fb0",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "19a926b3-ebbf-49bb-aba3-76baa420147a"
        },
        "item": {
          "id": "aba48c81-9130-42cd-abac-40164cc1e61a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "942f3d44-5a18-4175-a5e5-2b5056159756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ce8a61-bf1d-4909-ad8c-3fba4e530b34",
        "cursor": {
          "ref": "a04be87f-b41c-4371-8159-139d12067a66",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "70dc58d4-4f56-478d-92a9-95a31731348e"
        },
        "item": {
          "id": "21ce8a61-bf1d-4909-ad8c-3fba4e530b34",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f2f9077c-4d12-4966-b144-b852e9a79e5b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa13e52-3469-453a-96b0-f3fccd29ee9c",
        "cursor": {
          "ref": "3ef4a20f-b1dd-49d0-92ab-93b0efb6c797",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ad52e322-6158-4179-8152-1461491f373b"
        },
        "item": {
          "id": "6aa13e52-3469-453a-96b0-f3fccd29ee9c",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "93bb6d61-ea7f-48f5-97c4-57d976ded486",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 526,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad7733a-02ac-40c3-9732-0a72f62e9c5f",
        "cursor": {
          "ref": "23f13f33-f405-4496-968e-73f4f108f7fb",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b31e2b06-3185-4c58-b1c5-8aac7450239e"
        },
        "item": {
          "id": "5ad7733a-02ac-40c3-9732-0a72f62e9c5f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "52f098ce-fa28-413d-9624-2b97dcdd8c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad7733a-02ac-40c3-9732-0a72f62e9c5f",
        "cursor": {
          "ref": "23f13f33-f405-4496-968e-73f4f108f7fb",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b31e2b06-3185-4c58-b1c5-8aac7450239e"
        },
        "item": {
          "id": "5ad7733a-02ac-40c3-9732-0a72f62e9c5f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "52f098ce-fa28-413d-9624-2b97dcdd8c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f485c55c-8205-4f57-9434-a971a0734d8b",
        "cursor": {
          "ref": "15689c62-c4b6-4406-a240-8708a2641fbc",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c528e78b-7fe3-4c3c-a072-7907f385ba1c"
        },
        "item": {
          "id": "f485c55c-8205-4f57-9434-a971a0734d8b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "dd6bd421-9080-4a40-88c9-53c698f69e65",
          "status": "OK",
          "code": 200,
          "responseTime": 321,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "7b1f0342-9245-4159-953d-9695311b24c3",
        "cursor": {
          "ref": "54020725-4355-4a4a-a394-abdfde855537",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3917680c-9c45-4560-ba03-d15b777419f9"
        },
        "item": {
          "id": "7b1f0342-9245-4159-953d-9695311b24c3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "01032f2a-6591-4f89-a9d9-ce213d2d03d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5294db-88c6-4005-9dca-4a50c6d541b5",
        "cursor": {
          "ref": "59d2713d-bca5-4bf5-86db-dee73ac97ca1",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "19b4cccf-d89a-485b-b0e4-9cf2beda600e"
        },
        "item": {
          "id": "be5294db-88c6-4005-9dca-4a50c6d541b5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "377b97d8-433b-4463-a65f-aa2598dc5a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81be8ac-6925-412e-a10d-14cc35ee4020",
        "cursor": {
          "ref": "713d820b-ced9-45fc-acfa-2961e2c2db15",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1c94a3e8-ca19-47f1-9280-d36d02334c0f"
        },
        "item": {
          "id": "f81be8ac-6925-412e-a10d-14cc35ee4020",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5fdc82dd-ad8c-4f41-a217-377042a66163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab997915-f8b8-4737-b2f2-e0dcd3a781cc",
        "cursor": {
          "ref": "461eb79c-05ef-4191-96a8-a7e81c6963f3",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8c07e751-4bde-469e-b4b5-49a8003cdef6"
        },
        "item": {
          "id": "ab997915-f8b8-4737-b2f2-e0dcd3a781cc",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "179c52c2-9708-44fc-925c-93fda07db94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b565616a-5382-48fa-a3f2-80a77f6e5cbb",
        "cursor": {
          "ref": "f430d937-4e0b-4eb1-939c-49638fffa146",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "abda21c9-cdb4-478a-8f93-0af7851f76b6"
        },
        "item": {
          "id": "b565616a-5382-48fa-a3f2-80a77f6e5cbb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "68553e6c-3345-4949-8c7a-8858b29e48e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db27565e-e75f-4769-81e0-bd04db0acdba",
        "cursor": {
          "ref": "82e66df1-aea7-4d2b-b8bd-73c5086bfd9f",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "eff445d5-48e3-43f6-b34a-d6434afa2f66"
        },
        "item": {
          "id": "db27565e-e75f-4769-81e0-bd04db0acdba",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "cee45bd6-cb6d-4d15-b9b1-f8fcab9b13b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d3547d-d4e0-4f4e-b23d-9c31d5475a5b",
        "cursor": {
          "ref": "24c9d7a4-043f-468f-a8e9-c0b2526111d3",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5ab4a693-d7f4-4c2b-a6a6-6d16858580b6"
        },
        "item": {
          "id": "e8d3547d-d4e0-4f4e-b23d-9c31d5475a5b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5787d936-8b41-4db8-ba92-233d54061f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 2009
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0538fe-5d5c-4210-bad3-3234fa4f7826",
        "cursor": {
          "ref": "3cbd9ed5-a36a-4fb3-80e0-37a1d25c83e1",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "36fba96e-20e6-4f13-93f6-0daa1364f48f"
        },
        "item": {
          "id": "db0538fe-5d5c-4210-bad3-3234fa4f7826",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4d465ca2-d59d-4e07-806b-24b0ff754acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be79ff24-376e-4d99-8a76-9dbbf1485dd7",
        "cursor": {
          "ref": "f6193c8f-90ec-4e48-bbdb-6c14d2ca768e",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fab3c3dc-6ee7-4d87-bc44-4c6b146a3714"
        },
        "item": {
          "id": "be79ff24-376e-4d99-8a76-9dbbf1485dd7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7905dd5e-cc48-4a9d-a7bf-c33425e6fb9e",
          "status": "OK",
          "code": 200,
          "responseTime": 383,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:155)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:155)"
            }
          }
        ]
      },
      {
        "id": "6ec2dbbd-4f28-4442-abdb-b7bac58d666f",
        "cursor": {
          "ref": "e07cacd2-9bc7-428a-a016-29d5603e99e9",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "70605a75-914a-4777-bac8-d5f904bf49be"
        },
        "item": {
          "id": "6ec2dbbd-4f28-4442-abdb-b7bac58d666f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "82247964-7980-4374-acd2-e7698bfc2bd3",
          "status": "OK",
          "code": 200,
          "responseTime": 361,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:156)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:156)"
            }
          }
        ]
      },
      {
        "id": "94310df6-96a1-4ba0-9b9b-32367aca151d",
        "cursor": {
          "ref": "95552475-bd17-400b-8e05-0fb9e9714029",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c2a9b2e6-c09c-4aba-97ce-690d83195b0a"
        },
        "item": {
          "id": "94310df6-96a1-4ba0-9b9b-32367aca151d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "40365942-227e-45c8-be19-910d7c25a142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 2466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86dbdc7b-0ae2-49c4-ab56-c409814f91b5",
        "cursor": {
          "ref": "1b3e9fc5-3c20-425c-8f2e-c0979c77f937",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a348912e-cced-4ac8-9137-ad6173190cda"
        },
        "item": {
          "id": "86dbdc7b-0ae2-49c4-ab56-c409814f91b5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "71dcd6e0-9ccc-4bab-8df4-210c40c67131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298bcf3d-31ec-4ac9-835b-deb25b6b14f0",
        "cursor": {
          "ref": "73b9e5f5-c8d2-4acb-8659-efd1454ce43a",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "419227dc-1945-4bf1-931f-7068be9dd848"
        },
        "item": {
          "id": "298bcf3d-31ec-4ac9-835b-deb25b6b14f0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5e5513eb-d81f-46d3-a5e9-dc0bb960fcca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 2455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e08cb00-937f-4b19-be1f-18e9c4d64bb5",
        "cursor": {
          "ref": "b680ef3d-a3b7-4b45-87ac-b48585edaafc",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "dc9e4d0a-9701-486b-861d-32728d78ea88"
        },
        "item": {
          "id": "6e08cb00-937f-4b19-be1f-18e9c4d64bb5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f8bcbfbb-9a82-4218-b62a-850f3a7ed215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f914eeaf-0a14-425f-8c00-125be8f7d638",
        "cursor": {
          "ref": "9ee3781a-2c4d-4e80-a677-6d1965533f6c",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "26e6da34-f9af-42a1-b3d7-f8f5b53e00b0"
        },
        "item": {
          "id": "f914eeaf-0a14-425f-8c00-125be8f7d638",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8af91446-ccbc-4ac0-af0d-21223d67a8db",
          "status": "OK",
          "code": 200,
          "responseTime": 394,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:161)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:161)"
            }
          }
        ]
      },
      {
        "id": "93b131fa-58bf-46e1-949f-a01f32ad02f8",
        "cursor": {
          "ref": "e17677fa-0e4a-4c33-8384-17b12941d64a",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a351386b-980e-4911-b163-ed733205de20"
        },
        "item": {
          "id": "93b131fa-58bf-46e1-949f-a01f32ad02f8",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "e484969c-09a9-4b31-bb01-0e050c51e154",
          "status": "OK",
          "code": 200,
          "responseTime": 1904,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "eede0213-ff0b-40cf-85c6-a8c457cd0e4f",
        "cursor": {
          "ref": "78a2213c-2f9f-4ce2-b220-5ba2cc389bd5",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c30dcbb5-7ed2-4db4-9536-c7ad7d1e2233"
        },
        "item": {
          "id": "eede0213-ff0b-40cf-85c6-a8c457cd0e4f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6d4af2e0-8345-42cc-be5d-bb4fefe24d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652fe17a-5931-4527-8c8d-bc0eb33601a6",
        "cursor": {
          "ref": "66b9703e-f20c-46da-a5fc-a961deb61e00",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3a5a24e5-19c2-4777-8365-7486e5c98ee8"
        },
        "item": {
          "id": "652fe17a-5931-4527-8c8d-bc0eb33601a6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ca2dc766-c560-432b-b7cb-164b10c8d223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250da0d6-120a-4d92-8319-1bf273f8d15e",
        "cursor": {
          "ref": "4f7f51b0-6854-4f53-9eba-f519e9006691",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b8e22e79-6bff-4642-a129-3c8b03ad84da"
        },
        "item": {
          "id": "250da0d6-120a-4d92-8319-1bf273f8d15e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b7f153a9-6d9e-4ce4-8788-e5946028fa80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f73aed-33e8-4fe0-b93e-68a0d0358d19",
        "cursor": {
          "ref": "e575d96f-6701-4c1a-802c-7ee1db18dba2",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6af4c55d-1575-4ef6-b5ad-aa70249d3b27"
        },
        "item": {
          "id": "e9f73aed-33e8-4fe0-b93e-68a0d0358d19",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "91a338e3-4dfb-4c2d-92cd-0b070007d127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebbb19b-cb0c-432d-8d70-d0d76b261443",
        "cursor": {
          "ref": "cc57f95d-0d13-4509-a9a9-b3fc75e2e1a4",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "97271ecf-6af7-4a90-837f-a3f9b106c67e"
        },
        "item": {
          "id": "8ebbb19b-cb0c-432d-8d70-d0d76b261443",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5a373eda-59ab-4c1a-a61f-315781e94d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1faa39-293d-4444-9a34-61f42c3c819e",
        "cursor": {
          "ref": "960d89be-f915-46e1-aa1c-39c6b8f888d5",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8d3c5443-3b92-4e2c-a6cd-7bd5aa17f55a"
        },
        "item": {
          "id": "dd1faa39-293d-4444-9a34-61f42c3c819e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4be37e3d-97f1-442e-9f1e-14793ac5c1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97057d72-9f76-4351-8772-675c2ad644de",
        "cursor": {
          "ref": "d2ee8850-b6f9-447e-a282-cc4ed5402242",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "67d3b49f-3ef2-4661-928a-3dd53414d7c9"
        },
        "item": {
          "id": "97057d72-9f76-4351-8772-675c2ad644de",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "96e243e6-ef0f-45e7-91ff-60b02d878614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ecf819-1b12-4011-beea-6a0212e359bb",
        "cursor": {
          "ref": "1611c786-e962-4edf-bccb-b7985997cabc",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7032b7dc-bffc-4f13-80e4-934c5cb6904c"
        },
        "item": {
          "id": "67ecf819-1b12-4011-beea-6a0212e359bb",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "532bd9da-3a38-4101-a0a6-7abe08fb5133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2cfcd5-ed4b-4108-9834-f2e3aa287e4e",
        "cursor": {
          "ref": "b9c0067d-6604-4f81-8f1a-71809a9b25fe",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "02e61e29-7427-4c8f-80a7-67f35ab9bec9"
        },
        "item": {
          "id": "fc2cfcd5-ed4b-4108-9834-f2e3aa287e4e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6397ad74-41e0-46c4-b5fa-9b017df6a5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d02cab-120e-41e7-924a-80d1f1c5da87",
        "cursor": {
          "ref": "1e5fb172-55c5-4d7c-a4cb-65c9fdb5259e",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "735da36b-ce1c-4ef6-aa9a-cc63516f6f9d"
        },
        "item": {
          "id": "02d02cab-120e-41e7-924a-80d1f1c5da87",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "dfe07a0b-fc37-4527-b1df-6b2537f05cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92a4edb-60e9-46ec-b52b-0f1a49eeba9a",
        "cursor": {
          "ref": "d4b40f4b-a769-4d49-9566-34fb3df0e824",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a2ab794b-350f-486a-9c01-8ba95ca68d6b"
        },
        "item": {
          "id": "a92a4edb-60e9-46ec-b52b-0f1a49eeba9a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4e64095a-a968-42f2-be03-7d8883d5d6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f689fc-d185-44fd-af6e-9e80ce6e6175",
        "cursor": {
          "ref": "3625d616-7dbe-4a99-be15-ae3679db0132",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9395f6ab-0f4e-41e3-bf95-09c3050d5ad8"
        },
        "item": {
          "id": "d9f689fc-d185-44fd-af6e-9e80ce6e6175",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "458a96a9-0787-4947-b140-bbc58a5b64dd",
          "status": "OK",
          "code": 200,
          "responseTime": 311,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "9c92040e-e31c-4ab5-a62c-a194f63262f1",
        "cursor": {
          "ref": "178efc0e-d674-4373-bfc1-5f0e51074451",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3c34da61-5e5a-4116-be66-5488b4756147"
        },
        "item": {
          "id": "9c92040e-e31c-4ab5-a62c-a194f63262f1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "25873a39-bfdc-448d-99ec-22abd9c9ea39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b7ea08-292a-4684-ba32-32108b08e1bb",
        "cursor": {
          "ref": "4e74cf73-5c1c-4ab5-ad72-7542da926987",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1157fc72-d53a-4c99-919f-148f38fd4144"
        },
        "item": {
          "id": "94b7ea08-292a-4684-ba32-32108b08e1bb",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b4c64db2-aa99-482e-af5f-888cff9d74cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e9d147-4997-4f0a-a99d-4283d7eba603",
        "cursor": {
          "ref": "716ad990-ea35-4be0-be5f-eb53a247f676",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a5f17441-6df6-4538-ab16-6249575a901c"
        },
        "item": {
          "id": "60e9d147-4997-4f0a-a99d-4283d7eba603",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d313847b-2177-446b-9fac-954732fe963a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add63a81-67b4-46bd-b005-f2706b877905",
        "cursor": {
          "ref": "9796f494-1e61-42b2-8c23-faac63c342bc",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fcd43158-e5c5-4ee4-8aa7-77fbecd399a4"
        },
        "item": {
          "id": "add63a81-67b4-46bd-b005-f2706b877905",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "36c84aa7-e98d-47cf-b21a-921650371295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41bb497-71a5-4b2f-920f-99cf7e2df2fb",
        "cursor": {
          "ref": "128714ee-1d4b-4df1-aed6-bd532348e8d4",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1bf0ccd9-4004-486a-aa41-60aaead00203"
        },
        "item": {
          "id": "f41bb497-71a5-4b2f-920f-99cf7e2df2fb",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4324bd20-fc3a-47fb-b00c-5230f50734a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e68e510-c57a-41fd-84ba-df44f5a748d2",
        "cursor": {
          "ref": "674c3c4f-4318-46ae-ba1a-544e5c7fa263",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2d4bcdf5-1272-47ee-bd29-2e97071504f0"
        },
        "item": {
          "id": "8e68e510-c57a-41fd-84ba-df44f5a748d2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "847209c9-cdbd-4dd1-bf7e-8eef26279b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5519cc51-c693-4cd6-8504-52a2f89ac079",
        "cursor": {
          "ref": "7a2a08a6-20f9-4eae-80cc-07dc0d7ba33d",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9dfdcb4f-b1bf-41b3-905a-6f6fdd9af6ba"
        },
        "item": {
          "id": "5519cc51-c693-4cd6-8504-52a2f89ac079",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f055ae3c-17ba-476d-88f6-ee65c0e56881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80190de4-410b-4332-9190-d740de62287d",
        "cursor": {
          "ref": "1e2e6983-ea53-4e96-b31c-cbe4f22ea7c1",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "df49cbc0-e18e-449b-962c-608d3d7c21b5"
        },
        "item": {
          "id": "80190de4-410b-4332-9190-d740de62287d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9f5c7e67-a0aa-4a10-92eb-89d934043d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf18c64e-63d4-447d-a185-a53e8f8fde43",
        "cursor": {
          "ref": "a545d70b-b528-4350-ab5c-7eb154929fae",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "89c66398-0638-4a00-a337-77152cbe400c"
        },
        "item": {
          "id": "cf18c64e-63d4-447d-a185-a53e8f8fde43",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c98e78b2-497c-45a7-95d9-bced993eff2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269f4928-37d7-4fdc-8ea6-2a95eabc6f3b",
        "cursor": {
          "ref": "1aea5fa7-f1a8-4d0c-8762-c2de8001be94",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1971d213-ea28-40ae-9259-917130f61e00"
        },
        "item": {
          "id": "269f4928-37d7-4fdc-8ea6-2a95eabc6f3b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d34085ec-6393-46aa-8074-da6432b5cca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6da5c1-b437-47d8-abd5-450942370fb8",
        "cursor": {
          "ref": "d2db4910-113b-4b28-bbc8-6320d7b0ffaa",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b0f4ecb7-57e1-4b63-8f9d-45ce28037125"
        },
        "item": {
          "id": "aa6da5c1-b437-47d8-abd5-450942370fb8",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e7281720-8817-4aba-8067-5b44a5323fae",
          "status": "OK",
          "code": 200,
          "responseTime": 279,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "04085dfc-25db-44b0-a169-af505b8f0969",
        "cursor": {
          "ref": "22b7baa2-cb45-4220-99b9-3a8d2d4f7ba2",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5da36787-4713-4a1f-8621-6199128dad53"
        },
        "item": {
          "id": "04085dfc-25db-44b0-a169-af505b8f0969",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3af6a42a-8b6c-46db-ac0c-8559fd264b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59dbada-6e23-451e-af48-720ae6c1d3c6",
        "cursor": {
          "ref": "0783930c-39a1-4e02-8d07-414662b22aae",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "783e0c2e-fc0f-499a-ad27-5f01ab8f151a"
        },
        "item": {
          "id": "d59dbada-6e23-451e-af48-720ae6c1d3c6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "64af22f8-bde1-45c0-a361-18f97b7f5c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680c4127-99aa-41e6-a292-a6da2e1c1711",
        "cursor": {
          "ref": "4e222764-f5d1-4483-bd8b-ebda3850c167",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "54e03346-cf8c-4adc-9ffa-b4dd9bd2c675"
        },
        "item": {
          "id": "680c4127-99aa-41e6-a292-a6da2e1c1711",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "be25df6c-e7c5-4c70-b204-4133b3850db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a0c28d-bc74-4e62-97ff-aa04b82e3a72",
        "cursor": {
          "ref": "6b1d46e5-53d8-499a-bdc8-d7422a11c2d3",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0d51cc8b-803d-443d-8181-0bc9091803a5"
        },
        "item": {
          "id": "05a0c28d-bc74-4e62-97ff-aa04b82e3a72",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "56902664-6c72-4a14-bc10-bc12c1ccc6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05dfd32-3e3d-481c-be6d-10b8e2a6aab4",
        "cursor": {
          "ref": "876e8fa6-1c88-411d-ba35-fd5ce008b973",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f19794e2-ed8a-4e6c-a41b-107d50502b4d"
        },
        "item": {
          "id": "a05dfd32-3e3d-481c-be6d-10b8e2a6aab4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e4b85a89-2c89-4877-956c-6624afaa49cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2016c5-5a58-40ea-b709-cdfdacafa462",
        "cursor": {
          "ref": "4cacb119-711d-4261-981e-e583478b742f",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7c3829e1-993a-47df-bc3c-708ef4ca02b8"
        },
        "item": {
          "id": "2c2016c5-5a58-40ea-b709-cdfdacafa462",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "33c8b0b9-aa45-4db0-8793-b5b30c340b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19732a2c-95de-4e3f-8a1d-5936c6ad6829",
        "cursor": {
          "ref": "8d0e6e5c-6840-4e86-ac6c-da58ad14248f",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6c439782-20ce-484e-995e-456a7a02fb0c"
        },
        "item": {
          "id": "19732a2c-95de-4e3f-8a1d-5936c6ad6829",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "946b7263-e2bf-439d-8f3d-9477b814f7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b2cc6c-c121-4755-baf3-49c861f328f9",
        "cursor": {
          "ref": "17f391da-65ce-46c5-b948-bd6957911d2d",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "03204eee-d1bc-43d9-9280-cef1fe4d6162"
        },
        "item": {
          "id": "46b2cc6c-c121-4755-baf3-49c861f328f9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4915e322-8a1c-4d9a-8e60-67678d46b5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47036799-0ad9-4889-be2e-e5a0e88e9d7f",
        "cursor": {
          "ref": "29da36cb-68fc-41f6-bac4-f4ec641f09ba",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "10d9e5e0-ebfc-4834-86ea-5fec3a15d745"
        },
        "item": {
          "id": "47036799-0ad9-4889-be2e-e5a0e88e9d7f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6fcc6e7b-6c9e-4cb3-9d61-235de93dd67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a69ddba-7d1b-4c84-b77b-d6d0125e0f8b",
        "cursor": {
          "ref": "ac928627-b45d-4d9a-a956-5c4a007c67e0",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a21868dd-b5fa-4c27-bc29-352c3f514ad6"
        },
        "item": {
          "id": "3a69ddba-7d1b-4c84-b77b-d6d0125e0f8b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e33d3ad0-5d2b-4d76-834b-cccf08644b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44500d3f-d199-4a95-9e0e-060fda556c8e",
        "cursor": {
          "ref": "d825de84-f0b5-4ad7-9b80-ef8d47e86bf3",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "733d8b9f-a791-4d16-83f6-1fc48d7aa681"
        },
        "item": {
          "id": "44500d3f-d199-4a95-9e0e-060fda556c8e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7435a397-da6d-425e-94ba-8aca5599b70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e8f8c2-4e02-49cc-abf2-9f11346b9f99",
        "cursor": {
          "ref": "70ffcee0-8f88-4be6-968f-c8f496ec9a0c",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8705c3e7-c6c9-414b-8446-048300eeff03"
        },
        "item": {
          "id": "33e8f8c2-4e02-49cc-abf2-9f11346b9f99",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2a569c2d-60fd-4da0-add7-69ffea32134d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8776865-80e6-4a78-b244-3e02fa57cdad",
        "cursor": {
          "ref": "dfc4d27a-9d7c-4c46-aad3-7f9e26cb3f8b",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3a1ebd23-b1a9-4688-923d-0e58b567f0fa"
        },
        "item": {
          "id": "b8776865-80e6-4a78-b244-3e02fa57cdad",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "83fc7d99-406b-4727-899e-b0dc464a91c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6059848b-4531-4fa7-bc7e-9fa6adec0624",
        "cursor": {
          "ref": "18a6d76b-9e5a-4a24-a55f-df9f69d85d62",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6d817894-9544-4264-8afb-51b65b2421ce"
        },
        "item": {
          "id": "6059848b-4531-4fa7-bc7e-9fa6adec0624",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c6da1ea0-819f-45af-803e-8d0a69eca2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbec223-6446-4ebb-a789-3e60555d6b93",
        "cursor": {
          "ref": "b22a91ce-70f7-47d1-9700-e2c09b76b999",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "db552ae5-1724-405d-9498-b3ca1902f976"
        },
        "item": {
          "id": "4dbec223-6446-4ebb-a789-3e60555d6b93",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e6b77341-459f-4276-9c89-bb15f7d5eeca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3e9ef5-5792-4485-9337-b93bcac8717e",
        "cursor": {
          "ref": "8b2294ce-0fbe-4972-95b9-21f18d71b71c",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "317a94ec-c48c-4e2b-aa4d-f1bfbf39cfdc"
        },
        "item": {
          "id": "be3e9ef5-5792-4485-9337-b93bcac8717e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6eb4bac2-f4ac-400a-a595-c18e753bde95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6920578-a591-4e80-aaf8-c2a57ac653c6",
        "cursor": {
          "ref": "12712d53-09fe-4ddd-8ff4-1f827197e6b3",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "882cda50-4a28-4a2d-8a78-87981668d65c"
        },
        "item": {
          "id": "e6920578-a591-4e80-aaf8-c2a57ac653c6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5496b769-9b91-485e-920d-b6adef1cb80f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126ee87d-0c66-4baa-9497-841c3d45b616",
        "cursor": {
          "ref": "76b58371-3774-4895-a244-f06b037af4ef",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c6ad2a9c-cdf6-48e5-b500-e9c4fe835b36"
        },
        "item": {
          "id": "126ee87d-0c66-4baa-9497-841c3d45b616",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d14caaf1-befe-4262-8cda-30eac61e37d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9381808-b6ce-4c81-90a0-b8ae4c80ed7c",
        "cursor": {
          "ref": "0224b4d7-cef8-4f83-9dd5-699b9673cbbe",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f2b1014b-29a5-4c06-8a6f-b122f54b4f0a"
        },
        "item": {
          "id": "f9381808-b6ce-4c81-90a0-b8ae4c80ed7c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9e10e8df-ae6f-4bbf-8db5-ec9d99cd8422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3caec0-92aa-4578-9b23-8a47b6a14247",
        "cursor": {
          "ref": "7548737f-229c-4332-8c3f-7a7cd25371b0",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9bbabd98-7f95-41cd-9cff-56b9650d0979"
        },
        "item": {
          "id": "be3caec0-92aa-4578-9b23-8a47b6a14247",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "cc905c4d-89f0-4da1-8912-191130f5c9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e501acb5-52ef-44fb-81c5-5961e7eb7ee9",
        "cursor": {
          "ref": "d21d9a3a-8844-4574-9584-37983102c2d7",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0401818c-2883-4b9f-8f3a-8c34116ca5b8"
        },
        "item": {
          "id": "e501acb5-52ef-44fb-81c5-5961e7eb7ee9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "71d21bb7-038a-4a69-9380-5ced6e4e1821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0afe3b-42fc-4154-887e-2a432883103c",
        "cursor": {
          "ref": "7d220cde-3d86-4d3d-909b-9bdc6599818c",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5e1362aa-e8dd-4166-8b72-12dc86fb6e00"
        },
        "item": {
          "id": "5a0afe3b-42fc-4154-887e-2a432883103c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6b97af53-43ee-483a-962e-f0de8024a373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67023d2-1883-44b2-94a2-ff9b6d1b0feb",
        "cursor": {
          "ref": "11f316fc-a018-4616-8bee-23e6df7ab78a",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a7d1bac9-a4cb-40aa-ba25-267187252450"
        },
        "item": {
          "id": "f67023d2-1883-44b2-94a2-ff9b6d1b0feb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9b4658d9-1204-46e9-97d6-8999ace23363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55cf7f3-0f60-4e26-bafa-2344ab101eea",
        "cursor": {
          "ref": "e976dbbb-4a80-4c2c-a6d7-37d2d19be090",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9b45904d-8f82-4d38-9421-58ddf24ed454"
        },
        "item": {
          "id": "f55cf7f3-0f60-4e26-bafa-2344ab101eea",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5425a81a-026a-4256-9a34-59bd52f49698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b2a449-eb3c-45da-b696-227f7d19e690",
        "cursor": {
          "ref": "bd31f7b5-2e31-416c-adb7-e8d6cceeb38a",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "dff78a2d-2626-411c-9a7a-a46653225a40"
        },
        "item": {
          "id": "d5b2a449-eb3c-45da-b696-227f7d19e690",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1357ba08-50da-40ac-8064-6fb72208d194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed13e2e-b3c7-48c2-898a-4af4e9c7c375",
        "cursor": {
          "ref": "555eff74-6143-483b-b15a-e8842017e092",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a24e0fd5-158d-4da9-a938-95c5d2fc9d5c"
        },
        "item": {
          "id": "8ed13e2e-b3c7-48c2-898a-4af4e9c7c375",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5e4337fa-fd8a-46c3-b09c-fb85a03b1eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa0d3ff-7276-4233-9294-ff601147b0a9",
        "cursor": {
          "ref": "f8de9d06-1da7-4a14-966e-c59254f506fc",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "65146f3b-3bb4-4533-a825-02c6e2eba50d"
        },
        "item": {
          "id": "6aa0d3ff-7276-4233-9294-ff601147b0a9",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "bf5ba1d9-6397-4da1-a903-eef77b69f8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c22f89-3846-4b3a-84a1-d3b6b7fb09c9",
        "cursor": {
          "ref": "ad0eb4aa-4299-47c9-8edf-6ad5d82d4881",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ce2893a1-aa38-4586-8611-8587a1f7f71c"
        },
        "item": {
          "id": "05c22f89-3846-4b3a-84a1-d3b6b7fb09c9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "00907c56-5d49-4fe2-b54a-c165e79f8434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2976097e-68d7-4cf4-8cbb-0f0da1597a69",
        "cursor": {
          "ref": "36ee2893-69c3-4eda-95c2-b9f4261aaec4",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "363bf50d-76bb-4856-af4a-f29b38252fba"
        },
        "item": {
          "id": "2976097e-68d7-4cf4-8cbb-0f0da1597a69",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "82da293f-d552-44be-96c7-17a115d68bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8460eec9-7a8b-431b-b07a-015ce44c68eb",
        "cursor": {
          "ref": "73313c07-19bb-4517-b7a1-c0d739cda25e",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8bf0e5b3-97b8-4c8f-89e1-f3ba71c21cd3"
        },
        "item": {
          "id": "8460eec9-7a8b-431b-b07a-015ce44c68eb",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9ff262c3-b2c5-42e9-b627-5df29ad66225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca9c438-c358-4ac4-9d96-e942e56615b0",
        "cursor": {
          "ref": "090746c6-2f53-47e6-bdfe-8104e8b421cb",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "deb02416-a243-4ee7-a56e-cb723f99a94a"
        },
        "item": {
          "id": "0ca9c438-c358-4ac4-9d96-e942e56615b0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e5d1acb7-08e9-4f55-843c-fbd8ef8cb8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4231d02c-3bb4-4e3a-81a8-c6d65a137249",
        "cursor": {
          "ref": "9e3439d6-31a2-4dbd-babf-299de0dda3bd",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b8ef3136-fbf0-462c-86c2-0652521f82be"
        },
        "item": {
          "id": "4231d02c-3bb4-4e3a-81a8-c6d65a137249",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "abead27e-a709-4c0d-a1b5-50027a186fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b0e202-6738-4ea2-b9d1-6b0ef433c030",
        "cursor": {
          "ref": "196f3687-c5ad-48d4-bc80-c95558597e3b",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "990a15b8-ffa7-42e0-9949-94c50220311c"
        },
        "item": {
          "id": "40b0e202-6738-4ea2-b9d1-6b0ef433c030",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1d1cb138-a155-4374-8c74-30b2c7f64d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd96dde-83ea-40a8-bc41-3e0be52b84ea",
        "cursor": {
          "ref": "198305d2-8d2d-41d4-97f0-a04f063a02c4",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b16703fa-bb70-41e5-9d51-4e32386c4252"
        },
        "item": {
          "id": "1dd96dde-83ea-40a8-bc41-3e0be52b84ea",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "015c51f2-50a7-46db-8fc5-868670b57bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef97cbb9-b862-4dda-88de-b4648e71577e",
        "cursor": {
          "ref": "2841922a-9b0a-4f35-b9b3-6c455df8e388",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ceba7318-63ae-41e0-b425-9da4bd4bb0be"
        },
        "item": {
          "id": "ef97cbb9-b862-4dda-88de-b4648e71577e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "91201eb2-7f8c-4f7b-8f64-bc3a27f26148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d34bed-7ecc-4051-ad99-1095cc7d9476",
        "cursor": {
          "ref": "fa2e89de-ec2f-4bff-a8a6-d1a348bef412",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f64b7770-744d-4bdf-87eb-0433acbf56c5"
        },
        "item": {
          "id": "88d34bed-7ecc-4051-ad99-1095cc7d9476",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2e139eb1-e471-45d2-acf6-b84f60255daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d14bdfc-3840-461a-8af5-3b8dc035edd5",
        "cursor": {
          "ref": "6243b01a-e366-4549-90aa-e45fc7ba99c7",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "86bdd86f-87a5-4b4e-a211-3ab6783d7256"
        },
        "item": {
          "id": "6d14bdfc-3840-461a-8af5-3b8dc035edd5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fdd26d7c-ef52-4066-937f-fafdc80cd589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177eba59-2af1-4c72-a0e7-d45939bfd33c",
        "cursor": {
          "ref": "ca7be9e9-3391-4a94-b6ba-fabbbd0ee626",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8b270b65-9e97-4adb-9382-838a0ff04525"
        },
        "item": {
          "id": "177eba59-2af1-4c72-a0e7-d45939bfd33c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5bd56f37-510a-4eb9-82d2-16c608c34cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f2d00f-2df6-4eda-a74f-138c0ae19617",
        "cursor": {
          "ref": "ac89ff11-aa93-44e3-ba52-bd6342ba5b84",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a3e8c84d-7621-4c56-bf4f-ba2020552a13"
        },
        "item": {
          "id": "48f2d00f-2df6-4eda-a74f-138c0ae19617",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f6d06399-97e8-4155-be24-54db839e4a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a159d207-6dbd-4036-bb0a-3a66f3c09310",
        "cursor": {
          "ref": "bbe059a4-df66-4af2-97e6-532b90ff4e1b",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "10aab839-04a2-4895-86be-aeae3d95a667"
        },
        "item": {
          "id": "a159d207-6dbd-4036-bb0a-3a66f3c09310",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c256aae9-1346-4b5e-9ac9-0637d20a19c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327d8767-dfb7-499f-bdb4-5034059343e2",
        "cursor": {
          "ref": "5518e705-0c8d-486e-96d4-fa408e5c1959",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7ef517fd-667d-4713-b93d-131404857853"
        },
        "item": {
          "id": "327d8767-dfb7-499f-bdb4-5034059343e2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b49a3e6d-80ea-4376-ae70-192b2e333be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e98f24-f909-4dbe-8bca-11975a8b31a2",
        "cursor": {
          "ref": "9152be02-287a-4b55-b262-ef179be5a0f1",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "918139bf-e5ef-4c92-9fce-adc390c85728"
        },
        "item": {
          "id": "c3e98f24-f909-4dbe-8bca-11975a8b31a2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "89f30e4b-47a0-4c49-a7ba-1548fdf4a320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6c90e0-81b4-4275-bb62-3139b873b503",
        "cursor": {
          "ref": "c4235bc9-44f9-4c06-8459-d9de745dd794",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c600ec12-d6c9-42ce-bcab-b14a104e23a6"
        },
        "item": {
          "id": "de6c90e0-81b4-4275-bb62-3139b873b503",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ea53c396-2099-4e72-b2c8-28210fccba85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246000f2-8ea8-4a48-8f7f-623cce2ebc9e",
        "cursor": {
          "ref": "a2bc8b4e-ae43-41ce-86fe-01d0e652e71d",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c1d53142-06f5-42d2-aead-6eba12c01e39"
        },
        "item": {
          "id": "246000f2-8ea8-4a48-8f7f-623cce2ebc9e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c5fb0d1d-e7fb-4196-81db-88f3b33bb3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ccca8c5-75d6-4f9d-8eb2-e78442f4a8ec",
        "cursor": {
          "ref": "2eec2884-7c53-40f2-ba60-675563150118",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "25cec75a-8652-4eb4-bc53-31d8c9c040ce"
        },
        "item": {
          "id": "7ccca8c5-75d6-4f9d-8eb2-e78442f4a8ec",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "20f59c6a-276a-4637-97b9-4a9ce3fe6f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83251c9a-dc52-41db-9080-265abee4f6a5",
        "cursor": {
          "ref": "de8ff5f3-70fd-4f73-9588-c101791f434d",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1977883c-9e7e-4ece-bbdc-a9278da7cf5e"
        },
        "item": {
          "id": "83251c9a-dc52-41db-9080-265abee4f6a5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ab12f76f-1746-4eb0-b3df-84a27789f728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5173d7bf-2c4a-4f10-82da-3abdb49c0a14",
        "cursor": {
          "ref": "6adf3377-0969-4887-8dd1-c64ee6bd6003",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b2d7520e-ec70-47bc-a8d3-5da52846578b"
        },
        "item": {
          "id": "5173d7bf-2c4a-4f10-82da-3abdb49c0a14",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1d08f484-b316-48b2-ba73-42e516fb9160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ac4d40-0e97-4e77-b8be-84bdaf37d490",
        "cursor": {
          "ref": "9d28f9bd-45e3-45b5-9992-6d75aa0d31b1",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ad1f15c1-0ddd-415a-a650-b01f3f4c7262"
        },
        "item": {
          "id": "31ac4d40-0e97-4e77-b8be-84bdaf37d490",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "594e591c-e333-4603-9af6-115a45c576a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce00add-99d2-43a6-b09a-06dc95010c3c",
        "cursor": {
          "ref": "e6457138-145e-41b0-8b5c-6b96c9b39ca0",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d739b0a9-d223-4e28-8741-5cdc8e66ed4c"
        },
        "item": {
          "id": "cce00add-99d2-43a6-b09a-06dc95010c3c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "44335ab0-753a-4f52-bdcf-913a19e9b2da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84cabbf6-4c2a-4ba7-8b75-7d6a6f4c1691",
        "cursor": {
          "ref": "222cedef-8271-4ec4-a4dd-b738c1d67001",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5f85a00d-b85f-42a2-b00a-62bfa541d2ab"
        },
        "item": {
          "id": "84cabbf6-4c2a-4ba7-8b75-7d6a6f4c1691",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4a793562-75d3-4547-b685-e088aa6c0344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f5ed9a-8763-43c7-9673-c59ba4344ef3",
        "cursor": {
          "ref": "e18b50a8-2ad3-4dc2-b52e-9d849d4d454e",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5a3b851b-368a-4879-96be-ceed588c17b2"
        },
        "item": {
          "id": "f6f5ed9a-8763-43c7-9673-c59ba4344ef3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fe25a29e-5c6b-4763-9788-f4e89bf2bb81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7eb425-fb5d-44a7-813c-563e03eb4099",
        "cursor": {
          "ref": "fb9c3a74-12da-4466-bf32-9b80855ac8a6",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b41cbd99-6e5d-4609-8847-1b12ee23a130"
        },
        "item": {
          "id": "cc7eb425-fb5d-44a7-813c-563e03eb4099",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a356490d-68b5-4ae2-84b8-e2ed2efda8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b7d2a2-b04a-4800-85fe-e153f166fd6d",
        "cursor": {
          "ref": "a73e2a5f-f21a-47e4-827d-e8f47b6d7b8b",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1a7b75d1-2842-4622-9e85-2950962b72dd"
        },
        "item": {
          "id": "00b7d2a2-b04a-4800-85fe-e153f166fd6d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1c2c8533-a3b4-4ca0-9a81-d216762f3586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5be3d4-d9e2-4565-9b1c-3bcab7416b3d",
        "cursor": {
          "ref": "65ee003c-e8cd-482c-a8a0-3baed69e8bb6",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "406428ce-4ae5-440d-a9fd-1e205e9cd6b6"
        },
        "item": {
          "id": "bb5be3d4-d9e2-4565-9b1c-3bcab7416b3d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ffe7ecad-b173-4e7d-bc69-bb369a41ba98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c2f5b2-501e-4dee-b33c-16712262a59d",
        "cursor": {
          "ref": "7518f633-5d03-47be-958d-04f0771b923b",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7c29026a-8a64-413d-9724-9959cb863f9d"
        },
        "item": {
          "id": "b0c2f5b2-501e-4dee-b33c-16712262a59d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fd85b0ca-56e7-4619-9b52-deb50a3689fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9336b9-08c7-475d-9897-461f4bf4a1d3",
        "cursor": {
          "ref": "6bff40ed-005a-4286-8b2f-bfdba41455a3",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "053b518e-12c5-4529-8444-5f57940b022d"
        },
        "item": {
          "id": "8d9336b9-08c7-475d-9897-461f4bf4a1d3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ee92ccba-a0dd-40fd-b02e-221863af8c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9a3350-fbda-457c-8412-31866a0fade7",
        "cursor": {
          "ref": "d61e07ed-1a3a-4614-a56c-09303a4e8a9f",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "421c4a01-7514-4e24-929a-0be70a5a708e"
        },
        "item": {
          "id": "3b9a3350-fbda-457c-8412-31866a0fade7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8e5a948f-8596-4877-b55e-b176388e7d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccc9853-1c81-44c6-bf4c-135f413ebae9",
        "cursor": {
          "ref": "b21effee-d049-4044-8d58-0acdacdf2f9e",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "05f6fbae-e902-4aef-a54c-b9e5a4d2898e"
        },
        "item": {
          "id": "8ccc9853-1c81-44c6-bf4c-135f413ebae9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "abc69b1a-fcad-448a-8933-536740f74446",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6c3174-2b7c-4fc1-9e10-6435d0222ca7",
        "cursor": {
          "ref": "4e422aaf-30df-4ffb-a952-7256b781b818",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ec330578-a57a-404d-8717-151655c91c3a"
        },
        "item": {
          "id": "ce6c3174-2b7c-4fc1-9e10-6435d0222ca7",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "7082af08-0c4e-4a58-b86b-f3eec98838ae",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 309,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe6b8f5-4220-4196-a9ea-ce8a3c85fb37",
        "cursor": {
          "ref": "ee1a455e-64da-44e8-94eb-b0103be9e31e",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3cdc7525-f7f7-469d-8edf-d543698fb69d"
        },
        "item": {
          "id": "bfe6b8f5-4220-4196-a9ea-ce8a3c85fb37",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6fd093d5-c08c-4582-9877-5b31f8880753",
          "status": "OK",
          "code": 200,
          "responseTime": 338,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "393b5871-c29f-43f5-b616-b180479c68b3",
        "cursor": {
          "ref": "c31591c3-668f-494d-af26-ef4a07d38b09",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e65abc14-2f36-4935-b83c-93e9f58ad173"
        },
        "item": {
          "id": "393b5871-c29f-43f5-b616-b180479c68b3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "07907d10-1998-4133-a35e-f24893466fbe",
          "status": "OK",
          "code": 200,
          "responseTime": 1680,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1a48a5-f043-4dcd-8920-df877c94648e",
        "cursor": {
          "ref": "778a99eb-3c2b-466b-88fb-f405b992ffae",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2ec7a1c9-60dc-40fd-8d9b-127910c4b889"
        },
        "item": {
          "id": "fb1a48a5-f043-4dcd-8920-df877c94648e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4dca0078-47db-4c82-88be-1164448026f9",
          "status": "OK",
          "code": 200,
          "responseTime": 1751,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d55dbe7-62f6-4122-9825-1aec8660561a",
        "cursor": {
          "ref": "99c60340-04d7-41b6-b369-c7bf619af5db",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "22d226d7-f35f-4143-9696-265494d3e8e8"
        },
        "item": {
          "id": "7d55dbe7-62f6-4122-9825-1aec8660561a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "96e05282-56e0-424d-aba3-e070f4d4f147",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d55dbe7-62f6-4122-9825-1aec8660561a",
        "cursor": {
          "ref": "99c60340-04d7-41b6-b369-c7bf619af5db",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "22d226d7-f35f-4143-9696-265494d3e8e8"
        },
        "item": {
          "id": "7d55dbe7-62f6-4122-9825-1aec8660561a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "96e05282-56e0-424d-aba3-e070f4d4f147",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d55dbe7-62f6-4122-9825-1aec8660561a",
        "cursor": {
          "ref": "99c60340-04d7-41b6-b369-c7bf619af5db",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "22d226d7-f35f-4143-9696-265494d3e8e8"
        },
        "item": {
          "id": "7d55dbe7-62f6-4122-9825-1aec8660561a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "96e05282-56e0-424d-aba3-e070f4d4f147",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd303ee-4aa0-4874-a5cf-405f2473a531",
        "cursor": {
          "ref": "70f18fb1-5283-4e3e-8cef-aee1eb1c0f33",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2975dfa3-c6d0-4a79-9f9f-394a9b2e8bf9"
        },
        "item": {
          "id": "8dd303ee-4aa0-4874-a5cf-405f2473a531",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "a20f54b1-3e3d-4947-877f-981035c7a575",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 332,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b52a0cf-acf9-4666-bd7d-e0d0fabd3276",
        "cursor": {
          "ref": "6534d595-c321-46e2-b5a3-b61b7505a903",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2a099515-2ec8-43da-b3fc-130802f74723"
        },
        "item": {
          "id": "0b52a0cf-acf9-4666-bd7d-e0d0fabd3276",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "bf617f34-200c-4822-8197-2759ea6c8fed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b52a0cf-acf9-4666-bd7d-e0d0fabd3276",
        "cursor": {
          "ref": "6534d595-c321-46e2-b5a3-b61b7505a903",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2a099515-2ec8-43da-b3fc-130802f74723"
        },
        "item": {
          "id": "0b52a0cf-acf9-4666-bd7d-e0d0fabd3276",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "bf617f34-200c-4822-8197-2759ea6c8fed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4420e8c7-ff58-418e-b23d-0f7879115d3a",
        "cursor": {
          "ref": "5f8dd26e-5aac-4495-b419-c4a5086df027",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e6794280-e658-4bef-8ac9-3b66e348fa8e"
        },
        "item": {
          "id": "4420e8c7-ff58-418e-b23d-0f7879115d3a",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "2d72495f-7e29-4d07-8b70-110af80b1f7f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 640,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44b78d7-fd35-4fe6-a64b-264cb7d77774",
        "cursor": {
          "ref": "2fc1c9a1-c854-435c-bedb-6d1d4d6c6f90",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ab17bb50-d79e-4c49-adda-828fdd577ee3"
        },
        "item": {
          "id": "f44b78d7-fd35-4fe6-a64b-264cb7d77774",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4828502d-2fa5-4e9e-871b-65f4721d6fb4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44b78d7-fd35-4fe6-a64b-264cb7d77774",
        "cursor": {
          "ref": "2fc1c9a1-c854-435c-bedb-6d1d4d6c6f90",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ab17bb50-d79e-4c49-adda-828fdd577ee3"
        },
        "item": {
          "id": "f44b78d7-fd35-4fe6-a64b-264cb7d77774",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4828502d-2fa5-4e9e-871b-65f4721d6fb4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be286280-d369-47ee-9912-ed7f66a77612",
        "cursor": {
          "ref": "c2727135-6cdb-4150-9f5d-24ae56e187d7",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "554f0a49-1a8c-48c9-8925-8907dc2c2e46"
        },
        "item": {
          "id": "be286280-d369-47ee-9912-ed7f66a77612",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "bb7e35b7-614f-4908-bc19-95e06518fe43",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 996,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}