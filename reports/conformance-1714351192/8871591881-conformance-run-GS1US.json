{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "17015260-dd8a-40b6-a63a-b025df0b2cb2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d7251c38-c0d1-4ea3-bc30-312bac456ca2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "965e4d4a-dd2f-4ad8-b37b-08a5a4b5b18f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "77d38865-9d02-4e95-89e3-0ef16c48c0e4"
                }
              }
            ]
          },
          {
            "id": "31f54fed-4e53-4ada-a85a-6f27405fc26e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c9facab7-3d41-42a5-bf2a-10c5e1999258",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bc5f8664-72f2-43bb-9072-17b187fdf9e6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b484ef43-35ee-40ba-9293-3c26c996ce08",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "cbc86ca5-65bd-4268-8af0-989b79fd91e3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "68c657a0-05bc-43e3-8b18-18d6be1fbf76",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d346e77-9b58-4f81-8591-172e4d1b8928",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0397f030-56fa-4565-98cb-8f72ee84219a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f1708186-db34-4cc7-ae65-dbb63a4974e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ba44d3e-ea35-4850-90db-07edcf26804f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "774e3c65-725d-43de-a2dd-55b7bb90824d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b4825c45-54f0-4d3e-96d1-2f75b24fee79"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54d5406e-2645-4eb6-945c-5b7c3f2cd467",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3af6eeb4-a478-43b8-8601-32696f8bc87c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa77d695-427e-4556-b14b-4f3141920361",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "82e1a60d-5eb7-41fe-8a86-d253d8242feb"
            }
          }
        ]
      },
      {
        "id": "e155cbbb-0a9a-458e-81e8-84c1a2074cb6",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "396210d1-867f-468c-888c-1378aa0f9db8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55a081d5-a095-4c33-9193-883d86aaa41a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ba734f35-6969-49b8-9d4d-df2dc7f5f361",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b107759f-585f-4170-8b5b-9bda5e21e0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d991474f-72dd-4dac-b2cf-6f22e552558a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccca976e-cdbe-40bc-b66c-a20f09e645be",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7585242-90f0-4c60-94b0-9806a008d1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32339a41-fd09-45c0-907c-ed45742e209c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81bd7fc9-4f43-4328-a9f9-13af7d7611a4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77048bb6-b475-4bae-b597-9496b5a2397f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b496a68-9100-4c3c-af9c-6632e182460f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "795066f0-7e67-484c-ae99-58d3bcedeec8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ffebd890-0956-49a9-a060-f140d3d7ebc0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de1a6ab-11ab-4315-9b3f-e1436e596567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea60fa1e-8621-48c2-acf7-4e226f9a101b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed885757-0880-49bb-8b77-30d86e7baa66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1222dbaf-31a0-4ce7-951c-c6c89439d161"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "63c6be97-eb08-4895-9c87-989adbb678bb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "42f2ec5a-f17f-4502-a50e-a17aa1bf8ea6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f146f934-9823-488d-a2c7-e746f4b318d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ea4ef4ca-eef4-474b-8fc3-0f2705f12eeb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "71c20cb6-8780-4b14-ba0a-c38d2d717e40",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f81765a7-9572-4b12-a2df-2cb283d65629"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d443fffd-128a-4ad2-b910-82d90b89feab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4ce14bd1-9491-448d-864b-d130a1f002ae"
            }
          }
        ]
      },
      {
        "id": "fbf70934-28b0-469c-b918-66b812d208f9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c914375b-23a7-44e9-bfc7-ec4405fe3959",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38165ae3-2c93-4e72-a1eb-53e9f9ad2fbb",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9fb7a613-fe28-4f3f-ae0a-1666d4effc3a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f61a87-50fc-4269-afe4-ba771aed6ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16d5110f-76fc-4456-a4d4-be6e1c3ce5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6854f13e-3896-4e5a-b8be-8bba379a026f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8931f9dd-b7a2-4792-9ad8-186fa530bd2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571b2e1f-9f7d-4bdb-a22e-cce8ddc2d3b6",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3879b48a-5210-4cde-8e29-b4e2a902af14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e71366-8b2a-4e10-bdcd-ab4dd0236495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9a5cc2-e14e-470e-933e-9824a8b562a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "751dcf3f-a166-4cd3-b032-3d23f646cbce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f87b92-ddf1-4bb2-8a54-95a0ca94ef30",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76312e3b-3afd-45ef-aa21-994f943a0988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e3efef2-c131-494d-bded-f292d7587ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4b65f3-da2b-45ed-a8b9-e661dc57c56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "453986e7-f247-477a-8b59-c7ab88bb3297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e83a39f-e29a-4224-8a1e-0201a5ee4bf4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8883b3e-c754-4b9b-9608-37c88a8140c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38672e7b-aca4-4426-ad06-ee3777bc663c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f28fca-af8d-4b0c-b386-8c226e4b06e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35ed6739-d53b-4c18-a620-727456fa1768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d39820-a134-4c58-b176-020c23096bde",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd9c54c-3570-4092-9fe6-8c90e4dfd618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53848aa5-104f-419c-a1bd-3d3f0e07f5f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d288d8-f8ae-405c-bf41-8c386c4344fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e302b6bb-dd5e-4ef7-a015-1c03d1fe6aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70def77a-b603-4668-aecf-3b48a87345f2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00290d5a-e4b3-4d63-ac25-5ef24cb4abc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f49435ec-d0b1-4edb-b107-dc407f6f7b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8bfdacb-deca-4e2b-aaa5-393153c94bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32d19384-5130-474c-8c2d-b279e5b72518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7538f104-f8c6-4dd0-b01c-b3286a92bc75",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b73efb7-349f-477b-9eb6-07ae3a0436e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e46599e9-69eb-4ac0-bad7-9b9b5c062887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3537368f-703c-4e17-b16a-087f7146a574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1ee495e-8946-4cda-b96b-373e39cb0601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f72c4f-f41f-40d1-b1e2-09471b9ca898",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57ef964-c2c3-4e52-a1fd-f1162d32f7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc510bc-e823-4f6a-a627-c5cdde1f2301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4ddf44-d7b9-48c6-b20f-86c2ce582a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82832a20-86d7-4db1-8771-1db01926c43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82fb32c1-5f36-400f-aac5-fcd7a74061ad",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de86e32-c274-4903-8dd4-729113414c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a1fe09-dac5-4d14-9bee-5babf1efdf67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b60bb3d-4c5b-42ed-8fc3-6a3545ad8c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8387afc-1839-47bf-b6af-0391d529a6aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe73a71-028b-46b9-bb36-62c468fbe95a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8d4f87-3b64-48db-adde-430ff45df836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd5b052-de4e-4fff-a8d9-4b8e2413e2ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ab489f-055e-4640-8b81-30f303e2ee92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d333444a-582c-4ae5-92eb-00e0c557b769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6090aaee-47bb-4ece-bcd4-e9a86eb3f44d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc11e231-cba8-49de-b73e-9a64bb02de14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6154bfc2-8720-4fc1-9400-bd1b4aa42938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2096b2ee-74cb-4027-8011-51df1b1c9c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d5071e9-36a5-4b74-bb95-5f47d08ddb29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13ab37e-e4bd-494e-b423-35510bcb904a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5737417e-bfe4-4fc6-84ac-e197b521290f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "068754f8-ab4c-445c-b4be-e020ec199c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875dd047-10d6-4782-9dee-5468d4987505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d465b93-3742-4d0b-aae2-747c60665607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d43645-fd75-4594-aafa-43157c8716c1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09625416-5ceb-4949-ad0e-26c88ef9776b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dbfd36a-6ffe-4566-bbbd-7fc23b73832c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c88cae5-6e17-49ac-be17-3c7b6d532e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bbf857e-1ea2-4a58-8c8d-7dc9b3b3b6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58746216-2ffa-44cf-ac85-697c5cb7db21",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe07039-6df1-4011-93ad-e367cc2cae07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a88df275-bf98-402a-b52b-4c0959e86953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056b9b48-ab0f-42d0-8c71-ba6df67db1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba3da9f9-de95-4b3e-9341-9ce3299d2247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2cfe8a3-abaf-4d0e-aa4d-4abb8d6251d5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313105a3-3edb-4090-b0d5-8213bac03764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661dedbc-3802-4d98-86d4-b8374f87ecfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48dab4e-6fd4-4cc3-8f08-fa0a64b2b578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9474ee18-5a11-407c-a439-b7fa26e42ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e037d0-e144-43ac-8c0d-c8cbe0302fee",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1fcfbf-1693-4494-b474-94794286b9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d53ca26a-7139-4079-a2e3-e51007db3b77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57c46b6-aed6-490e-afe8-c2a5323cc86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a9d972d-a023-4a09-ab7e-f2ae3ac070dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572dae79-1201-43e3-b434-3dce6d0a694a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ccb70f-c23c-4a51-b777-a68462ed9ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "672ebeff-76e0-4495-bc34-f82ff150e524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9197542d-5f5b-431e-8419-c22617815fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48fc231f-7d1e-4e54-a7a8-02c44c6351e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b861b2-f6b7-4117-b1a4-5303d8204d29",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69fa24b9-33eb-44ce-ade0-713315c34a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aae6e7b-fc48-400a-bb4a-bdc75b10d4df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cc190b-32a0-4f1e-a27b-f7dc90de520f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "325ba036-f77e-4860-8682-5cab4adcbb1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5ee234-957a-404c-843a-2964ebc8d5e0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada58248-7af0-4480-a619-8d775b0113e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8165edb-41b4-4c6f-bdee-61b636c2861e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40330503-367e-4171-9012-1861328c8d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d61d36f4-0dc3-4933-b18e-7ca05b10d000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cb0c69-8b21-423e-bd6a-9a9b4b06e02d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b4a9b7-7aaf-46cd-b784-22cf2e82c88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15729ade-5ac9-40fb-b63e-ff2d4bbd824f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308a14f7-4068-422c-8227-6dccb9178e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2365b94-4b21-4e51-b164-df8947b1490a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b60e8e-cdb5-4118-9d77-d796c5745919",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "459a5646-6ccd-45c3-abd2-ae3e843bfae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8bab537-fbfb-430a-a144-0a8e5ff8578e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba7b0e5-64bb-4bc1-8a8a-425e761ce4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6584f66b-1a76-450c-b642-90c38caf0185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f885ba7-759e-4dab-b058-35ab67d34d37",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b9abc4-6838-4551-a434-6859f2773238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "716919a9-faa3-4aa7-8551-d359b411248d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a43a40-5746-4dd2-9619-fc0dfecaf7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d41cf900-5f1e-479c-af0e-1da95084e06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390d24cc-7dc1-4ab1-b6cb-ab57d56d73ff",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad27f5e2-bcfa-497c-8f31-52de2197e849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58bd6eb9-44b9-4bda-b539-e2c93f0e9947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9519b84b-e96a-4ff1-99ef-8f18cb7bb303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed4344d6-d21b-440c-b438-f03ac0f92af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d1e68f-8fc7-4218-ae4c-d532b6692cf6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f460fca-d04d-45a5-bf65-9b1136aa8567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2439177c-0959-4f41-ba89-f45c7c66ddd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c5d6ef-6669-4704-92b7-0e2430146dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "10189742-8238-43e9-bd50-fb71904372fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5884cd69-2006-44d9-a135-6bd7f80b8ad2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f283bb9-e38d-4976-8a5a-89e8075ae1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d4645d-37d5-4ff3-8897-72e995da0397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e380250f-78ed-4cec-a50f-ddae241ebb54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2cad087-624d-46c5-b8be-c53adb474b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ed4f0b-53ee-42f3-86d6-3bb0f35b385f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f7607a-f362-409e-8197-d302d5fd7887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0648518e-36c9-498f-8e9b-8502c23c080b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0038a7e-6157-47d2-b3d8-1308c316a9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c07908d6-1ef5-44e1-9b5f-ed4138b8edc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0419e362-507a-4c41-9554-828c9e0dad89",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b633002-8ff2-4d16-9a8c-26b0122a274b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c9cb93-d22c-4a59-b407-110502bb752e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1698366e-3af3-4388-8f12-87d99b6d2239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "239322f9-0d64-4217-9078-96a33e8d7fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8be0da4-fc3a-4220-876d-b6f9bb202d6b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9f7ab6-d761-4188-8fb7-6572291bf674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a30865a9-cc72-413c-bfd1-9c9a9131c593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586994e0-1baa-44b4-b8a8-e31e1dd93225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "01474f17-5790-46b1-b19f-e185ef9185a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672d5caa-2a45-449c-aae9-21d2c32117ff",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2b4da8-0ac0-4eee-9d4a-cf6cdc00337f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c4ef390-fa3b-49f5-9eac-35c05defbbc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f4c116-a16a-4f47-92b0-2cd0cd62b19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f37dc21-55b5-4161-8964-c21d8ff3d7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e231dfb8-4930-42f7-a0a7-d08225cce959",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa846cae-fd66-4f29-a9ba-cb3eae4eb282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36aec655-7c8d-4e4a-a65e-ce306df3af8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eafd006e-4e47-4878-8851-25e78ac1a33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "90fffe61-c94d-4d99-8126-543801a11dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea22c628-7e00-46b2-98ec-cc3514819a5c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a19a73c-a880-4f3f-a8e4-69e8213ff419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af6354a5-b8b4-4271-89cc-1e1735dba956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352cdfa5-7443-4927-a46f-16ab38dd1b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cb01eca-2f90-4128-912d-e478b59f8396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c46c89-287e-4fe4-ab37-e2248a59e194",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd878de-1a89-4922-ad02-1126e699f92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bfbdea7-461f-4760-a707-616ab69f5ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59068471-0d1f-4f02-b5e3-92253773da08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5239ffb8-216e-4c2c-83da-b00a6e5a47e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acfdacaa-e898-4e54-a976-b8cf28792e00",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6e5ac8-2ed8-4009-9a9d-1fcb9206ff5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "393e7f06-d398-492f-99ba-c04af79dc6f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c063573-0159-495b-a357-dd724a7a366a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40cf4fa8-eea1-4117-81bb-bd7f056507da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116da5cb-6ae3-4d09-b31c-2a445bdcff42",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "206fd9bb-7038-40e8-b208-33d8a5ee144b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43814d4a-3952-43e4-ac50-e9c9b71ccd14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c062b2-74ac-472b-845e-4ecf8c601b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ae54f6-9b97-416c-91a1-d61f86de50b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91623d77-083b-47f2-abda-71d956d7ce9d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1454064-765a-42ce-9f8d-bdb45e22bf65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eefcf1e4-ab96-4afe-b345-edbe1132b2b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb62a70b-01b4-46b6-93e6-10946d78fb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "59cf466f-136d-4a31-a52d-a72afbeb8975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5194060-ded5-4cdb-86c1-91b667cb58dd",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ce1660-8759-4fe1-83ac-2885649b163f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05999e3d-cddf-448f-921d-d4136f2b5068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc9496a-77ab-4b0a-806f-3062d4a3c056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "426c05ef-f82d-430c-87b2-371759d60ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788c07ad-80e1-462e-852b-e974bf23b506",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c713bb-4af6-4a38-8dfc-f38ed0707a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "084721cf-ad23-4bc2-9e63-8ce8c7b005a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95146f5-60cb-4adb-b24f-9c00391e8362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3068c362-5f38-4a96-bdb8-955153a47824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae39c26-5f7a-44a9-84c2-e92f31b45e8c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b68496-5b68-41c5-8dd8-9d9973506671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e60a022-c381-49d0-a6e0-7b85defb9461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e2758d-849f-4cb3-aba7-10c548426950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c58cb59f-ff67-4997-93fc-7a2d013e7e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974b001e-4034-4f62-a93a-019dddb907d0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007cf944-1b4d-4a68-986a-4358dc7fd027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b4aca34-bdad-469e-9ebe-3b8b16fa74a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72bdf97-86cb-4203-b330-430282ef5ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a40317-141b-42c1-ab89-a60ec0a8d133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9586958c-9f4e-4a21-9dbe-f986111aae63",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb87b01-57d1-434d-a785-e4184d5f602f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8096755-1bdb-4cf4-89dc-f4d006d2164f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9072a5-fb9e-4d3e-bbbe-66152ef314c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "19c765eb-4291-4bd8-a10f-406c20a68344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92cf7c1-2691-4cff-8fb0-87d9b0e74943",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0abc1d-49b9-4304-9475-024aa312d7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "428a3290-bc06-421c-be4b-7b12302e237e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d241ac98-0a3a-4968-a6b1-bc7df3eb7bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe5fcb02-e752-49a0-a0f0-eae530f91f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e024936-f9c3-4bf9-82cb-f61b120a4d3d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d878bb-ca2d-4c80-bb42-13b9716892c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf49cf3-1bcf-4ab6-a5ce-c4404264be20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbbff15-115b-4f90-ac47-d59a0bd998e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "01eb98e5-eac3-4785-94b2-0c9a765ea571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e44f617-fc86-47a3-ad5e-433ad05ded73",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90eff5d5-fec0-4241-a4b2-1fc237b3a80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ffcdbaf-ca5e-4699-ade1-b92200ebf25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10ed1aa-6a16-4e7f-b066-fd30eee56c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd521d8c-67cb-4ab5-9b6f-956547744f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd33083c-6031-425e-acb0-1112fa366204",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85d67c6-8108-4ae8-a8a1-8335e0f09bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb438ab-f673-4796-beeb-373aa9d5d5fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7046c7d9-3753-416b-8a37-8ca20f833fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c8652be-3980-41e8-bd97-26eca623317b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fcc0095-0f4c-4085-9bf1-c38e757888a5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ea069a-3609-4eab-a593-d18137459c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da86241-91ec-41ea-82f2-531f5950d57d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7ae6d9-b5f6-4791-bd1e-13e0f111261c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bae1c801-f373-4b72-a133-787461c86bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eab923b-56b4-46fd-84ee-352bfae23c5d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a9782a-dcdd-4d76-a75a-24b1fe878e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9bce02a-adf8-4bb1-8abe-a0ec918b0562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00efc7ea-1e87-4084-a0c8-e1b785ba3ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "134bfaca-eb90-41a6-8dbd-25990e646f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acc93a5-8f27-41e6-9bf9-bc51bb954fe1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523a8dc5-779e-4342-ba97-00663d1ea396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f47def8a-0900-4691-a49d-490a8017458a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b3b3c2-b9ef-4575-a2ca-4d41a40dfef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b480c472-b275-4e55-9adf-3fb7bce108b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35af7867-e3f8-49ae-be02-39470768bcad",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96739e3d-f9b2-46a6-a42f-fdfe65526064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a635d108-2b16-4c59-a605-1081b5cb9075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abd4e4e-ba56-4826-a38b-0fd09e240359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79cc690e-70fa-4498-acf2-494e03b8c917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56c98f1-b51d-4e2d-b20e-1f7444885457",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe5f421-be25-4d20-bc15-c40df4b72718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961aa8ec-26ff-4d9a-8042-c02b9f8fee39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbb3952-d6d1-4e75-b96d-12b7afcc19d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "321cd53d-c154-4762-bb3a-cc5135c00427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e437562-d7f3-462f-86d2-79c3d15bde52",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dafd133f-10aa-497b-bc11-248c54730a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "023f3598-20ba-4a9f-b5e3-b205fc899e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dbb8c7-b29a-4bca-90ea-e70b02973c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6fd0b7a-9f61-4b2e-8cad-d24cb3720641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e247c1-014b-426e-8c2a-bcd622d350c5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f680d372-6f0b-4f75-950f-a26ab5864e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "200852f1-a97e-4f02-b9d1-fe8631711bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97d43e6-2746-4ab3-b815-315003dd6315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6894e631-a882-413e-8593-25df4ca5bdef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc226dc-414b-4c02-862f-3585ae4ce52c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "507e1b64-d78c-434d-88da-488d7099c411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657002be-264a-4ab3-a6e8-30c060154f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad8a6c2-e5b3-4585-9b57-8259d0c0c645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "85c125bc-a667-4a0e-b6bd-86f785083686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b67e846-addd-45a5-8dc6-be3bd331547d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8073c0e-e57c-455b-864c-dc6457efbfdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f65e6f-0fe7-4eef-8eef-edddb07c5b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3682bf-38fc-4cf6-8746-ad4bd918bced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70f0865b-8a29-4283-add6-d2ac40112386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fbda68-d738-4930-8e05-6ac1fe78be98",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e48199-45a5-4fc0-adb6-bc94f868fe5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e255ccac-3756-49bb-a715-a99b5c14a5a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386acd35-7990-4521-8f97-513653603577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd92c2e1-53e8-46c3-aa12-5bdfb055b507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26404bd7-ed84-443e-b7c9-e6f1da067963",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c4346b-3677-42a5-9f69-37981d493845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b3ce3a-7c5c-43fd-968f-eaa177477257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ff037f-d3e4-4ff8-aca7-64cedcaa2a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a075e79d-501e-4ab8-a384-d93cd701a239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a3d955-6f13-4f9a-89d5-78af758b4602",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66161eab-8692-403c-bde2-6a0dfdb93ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca1ee7f6-8404-41c0-baf2-a30e55aea71a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61afecf6-bf4f-4ac6-b187-b79b8222bf36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d33fe330-0b66-4397-a781-abd9187f2940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fc8308-cf3b-4f54-b31a-72917a02e364",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b09c61-52d0-432e-9fc9-20ff40780364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "370738eb-d9ac-4e1c-9a87-f3ac815fed16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8289d34d-5b3f-4984-ad20-f428d1e64f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5578ec7-c8e5-44ac-bf03-437b3554d305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2fcee5-bd73-4057-918d-35b4e2ee8335",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271467af-b828-49de-9798-26a1b6fb9240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "045688d7-122b-4764-8f0c-76524a3cd6ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e954248b-b9f1-4ff0-a6c7-2bde8a965342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "81c3ae1f-0c61-4b49-9dbc-7936b2f9bcc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb85cf2-d850-45c6-a6c3-61abe3dbef15",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd7a1ea-169c-41e3-a938-0e7d17432091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094a66f5-5959-4f9f-88b9-57acd57f4666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceeed05f-f5bd-46f7-9175-e1ea2a2a4d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbe77911-25c0-475f-baa2-b5cba719ee56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0c986f-6072-4714-b3e9-7eba09b59759",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9e368b-2051-43c9-aca4-4668ffeb334a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9bb4249-f7eb-4dac-8fa2-87cf0f00b498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c2ccd7-9b76-4ad2-840c-3c0779952812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d779d1bb-209f-451a-806e-1bf0fa61947a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfb02bb-5243-473b-9d80-b205e69896d9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c871e05c-21e5-4d94-a693-9ae4ead8b195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b7c2bf6-b864-4c41-a918-63e578223b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879f1290-d944-4630-8a71-602494b98fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2951d329-646f-46c1-a569-1ae8a4230c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0399fd-1dcd-4934-be5e-96247a4cdb15",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0204b2-afb9-40b7-8264-844347a9a5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b656abd-8ebf-44fc-918d-73876e3ccaaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a68faeb-928b-4bfa-85f1-9de9fa433fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "890df047-b92c-461b-925a-efdef8cfd2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcb566a-fad4-4eff-9d9b-196ea3499e99",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05db4c34-25ca-4a64-8636-435c123ff017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b29b3a-e833-4688-81bc-27c1b9104d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc0cbc0-a5d2-4890-8bfd-ed3602071411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "33bb4cc0-01dc-4a0d-87ce-eaaa89f7c7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84da4c03-9500-4a58-bf9c-d6238f52e47d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d02f592-588f-493d-af79-9320339c799f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d6a0972-3fec-4c6a-b63f-365bbc4e8385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bb4fad-0f47-465d-aa7e-e42174f3fb49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "215d4124-8701-4e43-ab00-d641ce89f1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ac0a25-2ebb-417d-9cb8-095393da19e0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c055f9-4500-41aa-a6e6-76ef169bb216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a3c4fe1-6589-49e3-8f12-40b1ee2b7e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17b66b6-a860-414a-ac7b-56ff2fa640c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da85956d-514a-404f-bd93-555f28ac59a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7898d5d7-7930-4e70-94d9-a6f3397391a0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18606ac-f687-4793-ac46-2964cee7de2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d35e28-e457-456f-9383-c2bd40725425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8733828-659b-42b9-b819-a969f0836e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf3bf19-4b4b-4d32-897d-6fc3f230b17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e195507a-0d83-43cb-923f-222bb1a22686",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e308e662-d3e5-48d7-97d6-1d68c8159d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa989755-17f9-4bf4-ada6-8a84de2a83af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b57507-5f08-4ce5-81a8-022d239e5532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "39db7694-acc7-4328-842c-1523c73167f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa77970f-99d4-4aa1-9028-e5c9253bce41",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a53691f-4f02-43b6-9b1a-8f10571cfe17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a381c58-a6b5-43db-b048-367dccc8ae4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cef187-fbcd-4bfc-aaaf-f61bec8ac21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "636f0258-4b3c-4f95-9828-ef0c5b9d979a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05f8caa-a422-4aa6-921c-3584fc2c8c4e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b700ec-ad05-480f-b7a7-e40cc5196be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb7c2d5-f377-4b27-9feb-4324a93ba4ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99eac7b-4d59-4ec0-87f9-6c6e516f05ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d5aec07-8d2f-4565-9024-dd78b76671ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7324d07-ecc4-4fa0-8659-87a50d18ddc3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e8f85f-3aca-49a7-ae2a-b3cb751d4476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d51b24b-29f2-4083-95a1-33d9bf948478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7c3278-ed6c-4938-9137-6b0192ea5627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0741043-a0b3-43c5-a214-e32a25d4f289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8618f1f-128c-4f63-9f31-c2d10063197c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55e0115-fbeb-4930-ac66-8debe7aac6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f3c77f-cdb1-4c60-94de-3be86c3c12fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d382ae31-406a-4c98-84fe-27c7a9a9f9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48459729-f7b4-4d21-abeb-339895daff43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a7f85d-4ad9-424c-acc3-0f97ca54b787",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb36f36c-2020-40e4-a94a-9b84362ead1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0918ef91-958d-40e7-8dc0-5d979f30b427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9d99f0-b69a-4f61-a2f9-830cf619e5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34bd6d3e-e2ad-499c-b90f-6726b6466837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1973a01-a944-44fc-a963-93ba2a0a532b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6503532-5e73-458e-94c6-c0d9d8228647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3039b497-6232-4468-bd71-2228376cc7c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4de0ef-1a2e-4e82-8122-ee6820403529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "429c70ac-a71c-4a8e-9127-dff0840d6366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2631a962-796a-48f2-89ba-246dc95feaea",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d7351f-9bbf-432c-89dd-231bcdae57a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094e4e90-84a2-47b9-a9a2-fd21d1374769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bd9ef3-2c2a-49d3-9464-adb360b580d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "16d5a63e-631f-4c8c-8603-5a2b6c11a857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116922f3-abd7-4c39-859c-698122337092",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8cc0dc9-054a-4d18-8211-6e97b9b72b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb402105-db58-4987-8634-5b02f1b729cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2770d19e-af4f-4b28-a672-11690b5a315f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d315f992-b185-4e5f-9696-5bf27e51edc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54801c3-e538-491c-96aa-e6d8344b8029",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825fe9b8-35d3-4771-aa52-90bd1a023d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2778bb53-e216-4a42-9ea2-08030115c472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d2c5f6-4d4e-46e0-a6f7-a93c2a363de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc52d09f-b17c-4f37-9b1a-2f37c66a249d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93972ceb-782c-4041-9a37-ef71e656057c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c336b684-db75-4ec0-8f40-02cf85dd6876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3fd246e-e1ba-4a10-ad16-c798cd795588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416e5a10-37aa-4d95-856c-26c9f86b8d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "54cae4ae-9895-4528-bfb8-5dcf72f73141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7401bd2e-86de-4483-89ba-c68066066058",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f297c3-38fe-449e-b684-2cbccc370aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "856c3a08-2452-47df-9098-8d523af76a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88edc7cb-d609-4aa3-b20f-d16513f8ae85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04a17c25-824a-48bf-a5f8-a48ce78e09e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107ca4f7-53b8-48ee-8ee3-42cc973e1cab",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca3e607-4e31-49d2-a8ee-49c2a3f0e2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983cf33c-fd6b-4a35-9d56-0c2e36eb3567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f2f759-70a0-4c77-b584-ffbb4e100ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa193e8-cd55-487d-8f17-ccaddc821207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe35995-247c-44df-9f4b-12b604e7eb24",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43534e5a-5c91-42e8-9fe3-de80ff581d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8c03a2-d70b-4812-b8b4-99c8928045c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890ea2f0-52a5-4fb9-bdc0-1025ca1edc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7be9ea82-bbe7-4985-92f1-e3cf6293dd40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc0d7fb-521e-4054-9ded-fe4d21caf444",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f9c62a-0bc6-49af-a104-efc2c7c9d118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "506f5354-91fb-404a-ba47-3829c0e5ba6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21bd5ec-76aa-4b25-99fb-d7d6f7af9b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebde3f12-4a1a-4deb-be8c-0ec876adbf17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67992eb-860f-4f23-9562-88d94a92b88e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f62e44-2aa4-4a9e-82c3-6c89e00bba92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85bb5871-8b57-4ef5-80d5-de13857fc5cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159c3b8c-93be-463d-a824-2b18d1b67e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac6ebf3f-65d2-4873-92ba-30c4618a5c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a7d6b1-cf8f-4b81-9d1d-ed74d06ae0ce",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f60bbf-93ab-471e-a516-d211769d3c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0774327d-fe2a-4cbf-8a43-f6409cb11067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ddc79a-2ecc-4dad-abd3-bb663ccc9eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa68e19c-667b-43e8-836c-a4d9942ab8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75a550b-bdfa-4966-b38a-63b9e6387473",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98995bd-6e6e-4832-8ad1-db4bd7be813d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f0631c-5f01-42ad-9d02-75b183e7b232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc58f6b1-8314-4858-a4fc-1728fe3a1289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb3bcfe2-7281-432b-9c81-9c8c53c9c76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6031804a-cf11-4dc9-8fa6-25f39f89a1ff",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952afafe-87e3-4fa2-9d69-4e76ec57c443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8bb795-e681-4ef3-a70a-46ec34aaf0b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2eda31-4a44-4e2f-bb8e-0d4af3ab6a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c58b0d6-140d-4a94-bcb5-fd83fbf98038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8fc1834-3c1c-461c-acc6-fcaf3fbcd6a1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffac508a-a9f5-48fa-becb-5cd3373a75da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12981e6b-6629-4187-9ac3-9326e3ff053d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96ea8ba-0f3c-4eee-ac1b-505b14b01700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee77d79-909b-4b79-b33f-1de9c2355d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2615106-05fa-4046-991b-9371a3910638",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e3fd36-d9b4-49d0-9991-63bbeb441406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90bc0d85-e93f-4a2d-89e5-f3e695dc1b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e996cef2-f694-4f12-9382-0d5485202002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0313332b-941d-4e60-bcc8-fbc6713d61be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3062856c-3739-4b98-92c6-5a9efc0069db",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4cf0a8-d74f-4e38-a97d-2d1ceca28051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04977ca-c892-4e2a-a587-1f159b5c6fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45148656-dac0-4ef3-a9e1-b95102ac682e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "21db25d3-c29e-4dc6-b46f-bb3923d76fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03acd06d-d33e-4bbc-b37d-88598b3af4ed",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d4ae02-140a-4782-ac4f-a7cb68d8737f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c6c7ee-b865-486d-b0c9-81b1671cc42d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000fa87a-81c8-4539-90b8-17fd96033466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9f49ac7-7ff3-48ee-9a31-59c3b8ea1aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb46c988-2167-4cad-8caa-282a2e55897e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a310e9-296f-48b2-9199-93c6940010a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad843f9f-eb4f-4ce7-9f84-8f2981552000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be107da-2728-4604-b239-664a54d8afca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "62e6a364-cdfc-4e3f-b3d6-8a5fd79687a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f675921-790e-46a4-bae6-3ba618862e33",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2315b05a-63ad-424e-99eb-e1b09f48481c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b6cde9-16c1-48e7-9322-1214140e6d8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f1301e-ce22-4507-98b8-42180713cec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "735efa18-4d95-44d6-b105-1ad2a132316b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3778ad-c722-40d2-8618-751ea6be4468",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db27dd8-1c88-4705-b3fd-81dd1ff7bc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e612d43a-5474-421a-ae2e-89be89ca9ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fc19bb-77a6-4142-8943-efef512101d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "18566440-6c3a-43fc-a5e2-89c6be384cbf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3adc77c9-342b-45ea-a138-49065a6abf4f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3833b689-f8fe-48b8-b9f3-ff814b463126",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d55a165-8b2e-427b-a433-a8c613276d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1558a42-c437-4882-98d0-76c807c61516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e00ddb1-c72d-4af1-be24-be90cb026349",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c12299cd-2b84-4e5f-bded-c705ebb8a162"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30214aa4-219f-4e4f-8bf7-b45945063702",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7777bf60-e6ab-4355-beac-d95d7f1b9b5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c23f55d2-7952-4f9d-b4a5-3f11722eaa00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b95778fa-fd9a-47d3-bc8a-63f66296e5a2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c7a61863-4113-4a08-b8b2-7f41b0f57f20",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ec26d9d9-6caa-46d6-82b1-ed269d9f46f0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "22d8d0a0-7c27-474c-9bf2-dd6b3d6d491c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "57398e60-abba-400d-97d8-78bebaf7422f"
                }
              }
            ]
          },
          {
            "id": "9656d39d-5644-450e-a201-9e9ef687d378",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1f9028f9-f08c-49e8-bf9d-9f85f0248fca",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "61b2ec39-502d-43c4-a26e-5803f64978b6",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12286d88-9c09-4cfd-9296-857ff5ae3611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ceaaaae9-ec08-44e6-afbc-afe8eae0f00f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a100b9-b145-4984-8eb9-797b45e8dba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35c145ba-aeed-4398-a999-5d70af3d3195"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "24dbe60f-5880-48ff-b3d6-d90bf6b20791",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39fd808d-807a-471e-bca2-2bf2f5216767",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f87d801f-4050-43c1-9302-9fd3f466a74d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27a9e08d-5595-48fd-afcd-c6ea08c3f5c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f516ee91-161c-480d-87e3-3b7ceb8498e5"
                    }
                  }
                ]
              },
              {
                "id": "11ae829a-8be3-4a79-af9c-45c3e2962443",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "03dd24bd-cdf2-4d5c-879c-573b76a1bdbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f7da891-b2cb-48f7-84c4-ec8abc0a72d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44bcb5d9-33a4-4450-a486-48b673360e75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e51c1e64-fa3e-46a5-bd6d-8e9be5ab3003"
                    }
                  }
                ]
              },
              {
                "id": "4ec40a80-a3f2-4238-b669-2e3817b175c2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fbe7e8d-cf38-457c-b041-951252c1eb23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "27e1bdd0-e0c0-4f1f-9cd3-0356fd5c063f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5e2aba0-8fe3-42df-9095-22589b45b33a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a2186dff-ecd9-4869-8fcd-91f5a8e4da12"
                    }
                  }
                ]
              },
              {
                "id": "acf0502d-2f82-40a8-8375-a5926def3df7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1790555e-1a49-40c9-8479-e5ce7062dacd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8278cec6-a379-44fe-8f96-b199c799862c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5e5b0c2-10cf-431d-a7bc-bc0938f82c53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a657f3e2-8f52-4ca7-88f2-3a5ce16073ab"
                    }
                  }
                ]
              },
              {
                "id": "3ee828c3-e4bc-4cd0-9716-64664235738e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c9db909-0fa6-4978-b78d-f77af348f325",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "66d1a6f5-7b8b-4b05-8c94-3468eadfe413"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91867ae6-168f-416f-8243-cabc1d2a18ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8138d14e-3639-4da7-abed-96b39e9cff50"
                    }
                  }
                ]
              },
              {
                "id": "90a919be-209b-4a1f-8e2c-085a2c3898ac",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a021ca43-4609-4b09-bef2-20733dffb4e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc22b242-3234-4616-94c3-8e0c57fd96b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93f8adf6-2949-4543-941c-2c0a5f9456cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "63dc7ef6-215a-4ce8-b9c1-97eb9213b255"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dd9c3458-6151-4c62-b40e-f67b6d86492f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "91ba5a84-c815-436e-9dec-4b68d0f28dd5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "128155ad-e065-4ffc-9e90-d52b2aa98767",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b86bed7f-981a-4c66-a577-7686bf637a47"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df9d3eba-0d89-43a3-a43b-a4fae6424562",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d0b5f98d-d0b1-4740-abdd-f57f911ac0cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e3cf3e8-1b7d-45d5-8435-6bd6d4143725",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb69cc84-83f5-4d28-a954-0c20c14290b5"
            }
          }
        ]
      },
      {
        "id": "2642d963-844a-4cba-946b-732430e0e1ee",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c14116e3-623a-4702-a8dd-4a1cd8f83f8e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "427d3cc0-cd15-436c-a30d-dfd6da6c7fac",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4452ddd6-6d90-4351-b1d2-b225b64e47c2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22446bba-c4bb-45ed-a7f4-a778b3c7e093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac46ab2-50d1-4d96-ac38-75225927c65c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc22a71f-2b5e-4d97-a74f-d839df19d5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7aee321-240a-4ff4-a30f-fb5475b0504e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46c4b71-d61a-493d-a46d-2a3a03e4e211",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d698f503-679d-45e8-acfa-2975ad8febfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebbbfa5a-99d8-4a74-82a7-4da01eaba0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447f269d-5802-4cdf-9830-3d8facc8292f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e4eaeec-99df-4600-ae46-69bcbbc7df32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72381d85-924c-46ed-bb87-d683b442bda9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11412ef-e287-4e18-8b50-195dc974be49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf794998-d3f2-411e-b5ac-9264fdb3291a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a672b9-c396-4a44-9930-6f13be889431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcbc19c1-0454-4c57-89e4-9320bc90222b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f000bc06-26e5-4888-97ff-235b1b726fbf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23db3937-3ead-4cbf-b04c-48aecb1a4fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f0f89d-6236-4686-a025-d8d2545f3840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86f8082-864e-41ff-a80b-12cb4d3f1ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f1878ea-e131-4b44-ae2a-575657d0d3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e80548-a9b0-4ac5-9e11-9b76a54cd3e5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41399f30-4c3d-48e6-96d7-bcf184b074a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6cf4bfa-e2df-4b01-aaa0-34360c710378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca658d57-be44-41a7-be3b-387296e6dbeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53c4e558-a366-4fc3-a259-92c0315475dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a95287e-08f7-43ec-b504-c4f952842a83",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50fd0a1f-9f0b-491f-a03d-185c5d6a031e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e53739-a706-4f6d-a6b2-c296659ddfcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7416e4ed-594a-410c-ad43-abca422f7133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4da699c-b21f-49eb-8c88-5dbd7b6e044f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b6f94d-9a71-4a24-9029-e6bbe5773e87",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80f937b-43ea-423d-8272-96faa1da19e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca46a7b-714c-43c0-8f5f-cb7f02733d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a927e000-ccda-4c5c-a1d5-febf2a70dec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b5cb881-3356-4e18-98fb-2cf41ef78eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80058636-dd03-4c6d-8594-a53a83d848bc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b3388e-676d-431f-924e-d9a8781383e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27dd0e95-1978-47c1-bfec-eea51eb9be50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b0e7d9-dfb7-4217-99e8-5cf5409c32f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "885555f5-1720-4e67-b736-acb6f0962a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abed6965-c9ca-440b-8eb7-4153f4d7e3bd",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a630a59-edbe-43aa-9c82-2f1c5ebf0050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "856a7e54-011f-42b9-b5c7-a34ed8a5089f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d601513-d58a-4e69-9c30-dd30847b0417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7532083-1aaa-47f9-8c48-fe3f18189d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52481b2c-e267-4fd9-bea7-4f6fe9609f42",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7dac9be-64bc-44f7-bb55-8ec4205d347f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a1ff972-2a95-45e7-9ca7-4b88439bf014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ef1831-d8d3-4e03-b16a-983e7b5e6143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9093e87-3b58-41b4-8e26-712d40880dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82688de2-4916-4a7c-93da-2da505bd157c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "928b4d1c-d6dd-4e31-aad3-91e485081d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a6786c8-7acb-4f32-87ad-d43240d5473d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c54f11-0036-413e-9133-7cf397709b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a9419ada-ebfc-4d69-8ba9-39c542148c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3d6a2e-f2fa-429e-a4d9-f5de6ad55537",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35372645-85d7-4cde-8e31-daeaa84abd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe97f359-f69c-4ea0-b622-1c154b3c08ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75682a3e-4bc5-4311-a9c2-7c325fbcb480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "304059dc-9eaf-4859-88ef-afa57d3c0784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8e1548-d9e5-4c21-8574-c3317087a31c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b716ddef-e13b-43aa-83cf-c455419da45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f6acba7-ecb7-4ae1-93c4-ae67675c891e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06fa926-482f-4879-b22d-6879d0d66e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "680cdfb3-505b-4487-817d-08f658bae37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494a4f25-be3f-4df7-8235-17a9232883c6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcc6654-56b9-41d5-b314-18f4aa687f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0f956b-ce03-4526-a303-38be30a2c69d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbf45b2-e1b2-45d8-9f36-66e57a26cf1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "25e45639-c7ba-40c1-af20-59cff962f594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d83ee2-a24e-4b02-9e39-9171ff2ac29d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f4991a-de64-4405-b058-310293f6f6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e5c1ec-623e-42d0-a678-8c03fca97310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc584ab1-ad71-494c-8478-3dd3f0a0f4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f55c4e-2075-4182-82b7-ec6aa65e1a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961ede5a-4793-454a-b7e1-d79bb4bd7aec",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80abdaa5-1f73-47c7-a1c8-df7bdcb60416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8681bb8f-b35e-452a-b630-36867af7c96b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab4bc4e-7c94-4bcc-bb97-f5d5e94342d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e25e8e0-8ad5-4d5e-9a9a-49ba604f0c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd38db8c-6b8c-45c0-b7e5-5df2f88ee119",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa48a5fb-53b5-4c54-8c5c-93bbeb4f970d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d4cffe-30cd-4bf6-a4c3-8141c3f2240b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf55f41-3453-4a91-8b5f-6336692c0dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f972278-0b18-4434-8588-78e500cef91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76285430-473f-496e-9887-cdb7e7bf8d59",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cbee4ac-86fc-44f4-9450-aed9912a1916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0525d90a-6163-4c34-929c-58874b208efa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22acef8-f959-4023-92b2-7781b4f15744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a182464-d192-491b-b216-aa55e7566593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c241a3d-336e-49cc-88df-b7df0f613da8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c69457-9ddd-46e9-a819-c268be117e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57163342-f3b9-4c98-9574-0e3ba126f9d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e432bd5f-12c6-4427-9fe5-52c2a1a381cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f574cf1e-1f7a-4cca-b254-5519ebe53373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493041ab-90f1-4f32-a654-51aafe693b5e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc059986-f423-4ef5-b3ea-7152fdc1dd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f24c7d0-5b1d-4c35-875d-e859e1a97b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd0e938-503c-4bb2-b836-a6ce414b01d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53bfc38b-d46e-4dcb-836b-144ee2efa60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c9e713-3dc1-4ffb-ba6d-7d64cfc3621b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff764eb-822c-43c6-bc78-eb0bae5d53d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01215797-cff5-4188-858c-bd590be8049c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337590e7-266d-4372-a634-d8d7d0ade4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0728218e-414f-41fd-ae8a-c0833a272ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d29e29-b3da-40c8-b5c2-532a0b6e8e55",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0a7ee4-2930-45a2-a3d8-6433317a8bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4650783d-112a-4140-b104-172ac97cca99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0cc41c-8bf9-4d61-9ec8-4ef04d442e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6dc3811-0ba8-456b-80b0-c476d2097d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c7ae35-9017-41f7-a7b7-d70277f3ef0b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05bb1cfc-4597-43d5-8953-df9b00d1140a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43dce25b-a7f2-4ab6-994d-4d45120a09b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5c4a02-6538-4c82-837e-bd5218d702b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa8cfc7d-c6dd-4d34-802a-90662d91415a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fa64b3-6acb-4cd9-8813-5f28cb6f58a0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6c174d-64e4-45cf-b3ff-f0aaa942bbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3937179f-333e-47b2-a4da-0f50a227377b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f44d97-97a9-4f08-8ff8-df94a8540972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92be5b44-aa60-4836-b03c-32f9cf8639bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43417fd5-81d1-4fa5-b61f-abdcbe1c4c0e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f901d2-fc24-4314-9135-37076e135bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df59260-d7af-4bc6-a696-1241ef9a3766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c80457d-aca6-4c4f-b851-caf0a4d521ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a34c02d-cd2b-4eab-9337-fc1591c24684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78867dcc-30ef-468b-940d-9e795222fe03",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1aaa28-f686-4278-97dd-3edfa4d58747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0ce18e-ee23-40f0-b0a2-614c1d96ca90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f89bd6-8112-46df-bb94-b400cc95a9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6cf576-55e7-4bb8-94a1-889b550b3e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c70a574-09ff-42be-be19-3b274dfbfa61",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25550e5f-9b06-4803-b556-e3aed113b81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "033d41c6-b99c-40a6-aea1-c8efe1f3c5fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4264d79-c670-49cd-a962-51cf3e8463b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa627b4f-ea9b-4460-a446-cd4cca66ad2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f6b903-32f6-4f3f-a515-8563b06a83e0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cfb9dc-954b-45bd-97d2-e9160be8ba94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9467a796-1fce-4da4-a145-fc5274920b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7260cb1-c7ab-4a7c-8fbe-4dde83567e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd6d0342-555b-455e-a175-ca08077df790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae951e4-305e-48d4-836d-293c7df8c457",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46357a0-374d-465a-b191-94b4a20353a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6eb46ea-344f-4e37-b0ad-c94e1861a2ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06d0aa6-0d59-47da-a9e2-1861039a8857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d51058c-2d19-4867-9c44-22df05220191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1f2642-2ead-482d-9ee2-d9002de9ead4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aeb6ae4-c74d-41b8-93a2-02075739e61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7008aa8c-aad8-49bb-9133-632ad794d36d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac18b80a-ea62-4b09-8742-f261d94a3e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23ed3381-9da9-4395-92a3-e4a560dad0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a44b5d-c697-46fe-9a7a-b4fe8b57a755",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b71fdf-f4de-4142-99c0-af87d91113b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6cc1e4f-0c55-41b9-a4ca-ae4594541bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57af1676-6e34-4240-98a6-3aeb61c0e832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a8e0b0d-ce01-4425-85df-26400ef9cdbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465c8e50-ad79-4ac4-bd14-7ad5cdbe91fd",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b5bff2-8dce-4cf0-958b-cbf252428548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c13d375-a986-4fca-8c65-d76ae38318b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2154f1ab-0e89-4bdd-9ea2-26b5180fe609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87b24b4f-1e6c-42ed-9f3f-568a8ce01553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e865fe-2793-465f-84bf-f0a2bb66a4c0",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9109b660-5472-4711-8fcd-5174a3f30a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1341cf87-8672-46c3-ad2d-f713c457c343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53e60cd-9d0c-4547-b6f0-52e345be67e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58f76281-71c2-4bc6-81c0-a414d4995926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16089ef7-9b19-4266-9dcf-cce0e3087e39",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6fdab5-8805-4dc8-bfa1-c23423baee87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71e08ff-cb33-4b3e-8b1a-fd5543d50e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e292699-a198-40a5-8a97-e27cb255bbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af9d3d04-26f3-4d33-9711-b4ced8c8f929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda84f14-17ca-4678-8121-3a89bc3bf20c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f0f363-600a-4e21-93d6-76f3551ffcb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6589cc7e-870b-4b98-8742-cb0f2d165160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40afb60-f208-4eff-baa9-2e1b827d0461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46fea90a-9663-49db-bb89-5c901a083884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553fe0e0-17c2-453f-8208-508eaa82558e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "919f83d6-652f-4f04-81e7-0d401a1b4c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3823107d-5c14-40ae-9b90-d094266313e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b04cc97-51df-4032-bb5a-ccc8242ac75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15c6b3fc-5015-49c5-b1a8-0ba8269dee0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f0de55-d739-4e22-be11-682f12751bf6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9bb5a7-a291-49b3-91f3-f025c96e2b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01fc4ff8-c0fb-43e9-8a83-6ccdbfa6075e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5aefe5-083b-42a8-82c9-f7350d88ad71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f0f09bd-76a1-45bf-a5a2-e1022f7c8918"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "edb558b6-acd9-4749-bbcc-f448af0ef483",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9dc53448-9012-47f9-a7b7-cf13067de774",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de14fd19-10fe-46ad-912b-d825987436df",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "723a0368-b5fa-4312-81d3-14e73f26f600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "505b6f7a-a827-4ce3-950b-4d8b43ea687a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1dcb9c97-c5d1-4843-8e8a-6a98e0993076"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f645b43-f400-4390-ae78-69be148edfbb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d62f767-9f7f-40cf-b811-fbde3f91fd29"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c6bab22-505f-4367-b073-b8c31c7b3511",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2aa3c3c0-1b5f-4232-8726-867d2075327a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48b773b8-c08e-4bb4-bdfa-7f830bd3c26d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0e612e0a-71e0-440f-abaa-bde06a34443b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69b9b0fd-7f48-4281-a60e-ecb383e2926a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc260c35-e799-4cc4-ad12-a62eff2261a1"
            }
          }
        ]
      },
      {
        "id": "2bc889a9-7738-46f8-bed1-59cc49d05d5c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f63bb7b2-d983-4212-a025-389573e52679",
            "name": "Negative Testing",
            "item": [
              {
                "id": "559b11fd-ae80-4dc7-a720-8f8d02f7b658",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ac0e3db2-2667-4a3c-ab78-2f9e84b419dc",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac81258d-5a46-45de-b040-7200ff4d684e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4ceb95-d3e1-43b9-a027-b6b9931c7034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88c859d-9058-4cec-983b-34781d0317ba",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf9b1b5-d901-4068-b2b1-e7dea63fbd74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c22acf-5a50-46d8-a8e0-06cc8941f516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ec888f-0648-4cef-91e4-2f3be925bc5a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "664fd2cc-486a-46c7-ae06-edda2c774e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afcd4023-01ea-44d6-a27c-47187d59048f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3545c9bd-e142-40cd-bf15-e4645d63b27a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46fbd6ae-6051-4bdc-96e3-236c3e3612db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2286b770-efa0-4965-9345-7f0b8d4aace0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1a4a76-0e63-4d20-b2ae-8f4c3d7c6c72",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce4b3a1-4171-41c4-ad1c-75950db9b783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b50dd45-d986-48cf-8b62-fce6db36bbb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80cea71-5eb7-4e76-ab62-95b22249204c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ddfbed-c477-4ca5-8594-31c8cc5359b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df8e287e-35cf-451d-a6e7-e3648caed679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a24d3d5-a36b-4795-8a97-ce418e130a20",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ddf016c-4754-4845-bebb-b334a9546e7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9510bad9-798c-482d-a884-42b52aa74efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9fb74c-e31d-45d9-bece-020070a5185b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd04776-8302-48c9-9935-ed409219f274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d993c3-bc31-4342-9978-46985102c72c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d8bca7-1f94-4e6d-9061-94285e7d6deb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1f4ef0f-e781-4898-9dce-9761be687db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2929874-3ff6-476f-ac3f-1bc035fc6140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06fd09b9-a784-49c9-93f9-3393b5793b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9162b8-e71c-45a5-be93-0afc3db93a2d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db792a6-680e-4018-9fac-e2e29894a014",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bcba3bb-248b-473c-a93c-0222918510f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "282a16e5-2d4f-4be0-9b8a-cdb181c72e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a5b26b-a9c6-40cf-adfa-6cd66b8bd59a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a77b54a-1d2b-4201-a9d4-84817a193c5e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba12014-1541-4498-ab38-447d1d76de59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c158f533-a9a2-4964-ad4b-5548ba885509"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcb25e3-8252-4810-8e4b-2120c2cbd07a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4160208-e4d8-44fa-9f3e-6d4e6d960ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534a620b-bb56-450a-afab-8720cb8138f7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a786106-b11f-4485-8216-41c195b4786a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b418cf2c-baa4-4a6f-98e4-09d7276e4e81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2a4548-12e7-418f-942f-0ca753b9e2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d17ad253-e9f1-48db-8e6f-638354b17eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d2cc6f-49a5-452b-b9be-27240c27223b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a165451-a70d-4b8c-a23e-cdde7e416147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7fa6ea-4c20-4656-b83d-c74e31f42729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87df28fa-3e55-46c9-8930-f4af69f1aa2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008173f0-424e-483f-af35-14e79a8a0f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889ec584-156e-40f5-81d8-a9f4b609aede",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4bbb8bf-99ed-43f8-9851-6ff85b46d13d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64bddfee-44c3-4c4e-a9cf-cacb3494c859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9684154e-daac-452e-a348-6254ab3586fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa289431-09f5-429d-8dfd-5e100e3d65cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1014fd-d999-4025-8fee-7214498af177",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd21c98-6c8c-42f1-85cc-9ea1cdd12270",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a5978e9-04ff-4895-9f0c-35c999867fec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "576cd691-2bbb-499e-bf1a-e16435c87c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb7da7f-970d-4f05-8b23-798c5da8a641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9575d63-afd8-40d8-be0c-5b0c615a1914",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85b24c0-8a23-4415-ae1d-924a9a5aaad3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4485861-7a7a-471b-ba7a-4c9549ce8f1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2fd530-473c-46d1-8305-91ab4338b854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76861034-a531-4440-b744-dc7b4502a5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30bebfea-3ec1-47e4-9dcd-0791992b2884",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd51f06-8916-477c-b02c-71672800845b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5639b6dd-1786-472e-8824-a390c20af7a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "574bb2df-c625-455b-a56b-ed1384e54a4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79430b84-2998-490e-9e5e-34215e6fe8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f285e4-88d2-4491-b8f5-df9516039a24",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6a17d9-d961-44e8-b610-989e9c0c38ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd0df4f-cc47-422d-b912-44c2044813af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a911a583-9911-45a5-acdb-418f60aad382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38bd1cb6-3193-482f-99f8-50160b360606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c3e32d-c550-4fc1-a980-ad4dbe18ac5b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b92e5b-e851-41e7-aff7-889b88c70bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d4a0157-3e50-4894-834a-05d17398af5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2db2f7-3aad-4b52-abd8-266d25305301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "581c1987-e171-41a3-8d5f-1330be928e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fb023b-1181-475c-b8c6-43ccf227d65d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f73e978-3790-4d6d-8e4f-caef89c08cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a4afce-9ead-409f-b845-8cef97b92abe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1446df-52c8-4b46-a87b-5c0c1e12cbcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2015fe67-86c2-4912-9e4b-022414b6c0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b64d6f5-7c16-4057-88e3-fb817baa4dd9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e617f8-7deb-4573-a676-0c509c30b928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1abcdc5-6366-4289-8f1b-898080314962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6913eb-a0d0-4711-a27e-fa5889efdf8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c7d78a-ebb6-4888-a401-1c016c2c833b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ab68ef-f3e8-46ef-a5ab-ea5ad76d9b11",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c01cedd-9ca3-464f-bafb-613e5610c015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868bd922-18f8-4d5a-b39c-6605eff9e685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f5e659-8aaa-4dc2-9860-fac38fc9a266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "897784f5-7e24-47f6-a813-b9909703fbe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59277b12-3ebd-48e4-b71c-f718e3a40eea",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cca12c3-7ac3-40f3-9b70-e012a678bc1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a106f9a2-ce8a-4c3c-a2e8-283b0d8009e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae46830-b36b-4fdb-b4e4-85760f9eeb56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7787ed9b-b741-49b5-a12e-8855db165e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27da1a21-8ddd-42d8-b7c4-666c0acf29e5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b49380d-aca8-4605-9344-946180db9941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34b92f6d-afdd-43e4-b1ae-f1f34fcac722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad6a61b-b5d9-408d-b2b0-18ab54807091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f05c07-445c-4ce3-a666-2df2a35531d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47eb88fa-f550-40d8-bd5c-357a5066249b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d126c5-15cc-4e02-bf29-c39056439281",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc65469e-6cee-4deb-9339-79318f6dd0bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db4a566-58f4-40ef-9e13-05f909d74452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c94db31d-4c9f-42d1-a745-c72b181147d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4423b7-fb88-4cb8-8eaf-6b1731a706ee",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e99e60-484d-48ba-87d5-6889b1756dd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6882ddf-11f0-48a5-8ec4-d91cfc967626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2eb3e96-aaac-43c1-b945-67f0f4113894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7451a90-18cf-4b83-9cd9-e5edb3a97d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2912bf-7652-41c0-ab35-c429625dfc50",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1a3346-03cb-478a-ac8c-68e25a74a58c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d5e356b-5b98-4fd4-8f7a-4274ae4c8225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1f9e2e-8f2a-4692-b06c-e3552d8e39a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "628a01a9-e406-43fa-abe5-9ae1af958c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3ef063-555a-469f-b66b-8ba63749887a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209f0f2e-6800-4496-87b4-fd663ed67767",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "625c0bbd-91c8-4000-9bf8-dbc3c4a09fdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43bcc52a-e806-4003-b337-73bd77db8908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc971b96-04a9-4070-af75-cd85b4238e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f64800-2dc5-4fc2-b2cd-4491b3a3688c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533a7fbd-3160-48a3-86bc-afd360320df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a969ee-c1ae-455a-becc-a388ce91efca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf82a18a-3639-4734-93f3-73551a5af7c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0327ddfd-12be-42a8-9068-7d068792d8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af58c2c-5764-4eda-ad9d-deeca1615aa8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1bef829-f975-450f-b98a-bef74cd0e75a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d10218e-dc9c-463a-bc51-284916f2b252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b04712-e14a-462f-9d78-b70faac01f51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e3f7ba-fd6d-4f25-ab10-9bc6fba9d7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d61529e-07e4-445f-90ca-65c31febc76f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53030949-4162-4c71-b41a-ff2f52bb57a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98281416-0a0d-4344-84b4-5cbd9a6e8917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdd4129-7c51-4145-a2d5-ee4f4a090f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa0e7aa-eefa-4e16-bd22-7ac5ad8e9b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a058d3-c185-4985-9d95-c372a3a0afb2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13dcf351-c442-47c5-9e0d-76e85d4b4757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86a33885-bdd5-4289-9d43-8e98ebf3d311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9403df98-47c2-4d47-98d0-9b1763d10570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d1cdf4-0ac2-414c-852a-ed6e79549cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21222d2e-7f46-41f7-a90e-6d2096f82d6a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3fd471-7aa5-4375-8cd2-ef080f6d880d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e25d0682-d0ea-4282-80fb-f9c9b40b0184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67d81bd-372d-432e-b5d5-21011aa3d636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d3d6a3-502a-4f68-83d3-0d43f8d395dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29dd384a-0b50-4c0e-848b-972912eed80d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a11a63-a665-4399-a08d-a42d111d5b57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28a0e729-ffd3-4d96-80e0-6132aa8e463b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e290d4-a9e8-4aae-a1d4-cbe5c4a2611e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c90914ae-6078-4afb-9c6c-56dafc1b6433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b170c2-123a-4857-a0e0-feaa7b2b4cc0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1ff6bf-fd45-48f8-b6dc-4262a7f5c9a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb525861-32a9-454f-8458-3bde264c769d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8191320e-f30d-49f3-84ad-110cc9553d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeaf7fed-dae1-4c32-944a-2c0c6fce4882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fcb363-0352-4fbf-97d2-2fbbe8643151",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82f0264-748f-4c5d-8260-9123391792a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5685eb2-9413-4518-bfd9-fd794593fa13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6620d121-2062-4979-abf5-df53bbb9c55c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b25c61f5-2ad0-4d8c-954a-cf8d4cebf235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc31ab9b-bcd6-4b15-a629-2a867c794af7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f6b8b4-a174-4cae-99f6-3eeb0393a336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d10ff4e1-3a2e-416c-acff-a7dac71b4659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b10f1bd-5c69-4409-8b7f-31a5fb0707c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e6be8bb-7fc1-499a-b803-74cdf1f331e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b508180-958e-46b7-9f71-eb45016cfd23",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49769bdb-333c-470d-844e-a985e67fbc35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7064004-0e10-465e-a888-a30314aef695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1e179b-8467-43d8-8ad6-65f3b45a0dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02b4639f-025d-4330-a135-f30816c51581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aadb7ae6-8159-4ed1-9201-8d02d3497a0c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a107f76e-007b-41be-8ca0-ec91a14962db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c56b4894-12ec-4562-ae92-a6aecdb48781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5be4acb-aa61-45e4-869d-7ba42690ebe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c433193f-495e-41bf-9c26-70a406d9bb07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4bbf141-3c10-4a3e-9b15-238c156b7a1f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90ab3bc-586d-4a26-a592-0de1b2c6ae87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a327ccd6-e033-4958-b36d-66eb1c9d5ba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6ba6f4-9ff0-4197-881e-bd6b87351ac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddfba16e-ace1-4055-be98-966539183f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a089da4c-2d5e-49ec-953f-55fd47096a94",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c43d44-e41a-423b-a308-e808bcb50d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf30687-6e23-455a-a54e-2f3de86d0f12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65807c30-ced7-44f7-a445-f838ce50c2b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f27f448d-669c-4572-bc64-af64850f0fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c4970d-faad-4ccf-ab1c-216223773603",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff7a207-1385-4cde-8ef0-4879029db7c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff2d61ba-b2a7-46d0-b15d-d6c368cda823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ccdf9a-7be6-4c90-8d90-8c919a392bd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "797f2252-e551-4370-8729-6383bec34ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd16e61-7532-4498-bb66-860aa041eda9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b366d8b6-ce41-460b-a3e1-a6257f3bad66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f484a7-5a06-4a9c-a129-bb14b14aea4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8199ace4-728f-4a82-b130-39edfb1e2b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd1286b-670f-448e-9765-f52180b447f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc943995-5071-44dd-8f4f-751f5e4c0b93",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8484854d-da1d-4743-9c6e-35469b5b5894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f79219b6-9e41-4445-912e-8385842fe457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11fc730-602f-4e9d-aedd-f16674dbea35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9b4a3d-5694-48b0-927c-49f827175c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd62894-54fb-4200-8ca2-d4d1e2f8384c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfaedd6-3d8c-4bff-8ca4-375e0de73172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a41cb67-765d-4a0a-862c-2502d4f574d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ce4196-bdd8-44f4-b52d-1545178df18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52bc839d-d1d3-4b8a-a596-12a872ac34a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed71114-cd1e-4dbd-86f0-989ac9067a28",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb3f0c1-9c15-4229-be98-0158f2b0ea78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d855d558-ee56-490f-8dd2-3ae02439992a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07edca45-9730-472a-96a7-fca34ed73dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b9533c5-fa8d-416c-b121-c633296cc408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3936f7-c541-470c-86df-520663915d88",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1f3e3a-0ec0-4159-a8b5-4a499459cd0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba0e32e-2f15-48f0-8c20-094786cfc2d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95540198-93ea-4af7-9b96-f591edc7edf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4062091a-aa6e-4c05-9a56-44b3af01e559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb540b02-0183-4b71-a82d-732e956652b8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbf6f52-12c0-47cf-9382-67c12c67fe62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4687399-3831-4bc1-97f9-9425db8c5822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc16dc0-a3c8-48af-aa6b-2c1c8b49ca22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f106bb-40c0-4aa9-b990-d4b4f59b3126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af84ea2-475f-4a74-9c5d-ef1d56f9bcb1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c26ba8a-0568-4d2d-9f9f-f9125b2ac5bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540c9e86-fb63-421c-ad2b-05af354ef1a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c95fbb-9ab5-40b4-a486-cef1def7362b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b7beb6-d6ee-4325-b40b-aa7ff0975a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2f7d0b-3a50-4a12-9f23-e1e372f118dd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bc62cc-3e95-421f-b217-915f91908ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "311aa503-0f2e-4b5c-973a-39ea236d3d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74be85f2-6064-4146-92bb-0cd450b36f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e974f5-efec-4261-b48b-5b8e330d9e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af47e22d-9626-489e-9f06-2b19255ef1e5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903c783c-ea14-4910-bce0-0e916c974760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b9460b-629d-4e9d-b548-b0033bba0c50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd42ed5b-0e38-4e02-b81c-45e58765e0f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d626634e-ad4a-4aa9-b5d4-e35ff9b6917c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486bdb82-c69c-4066-a9bb-04b3bc48575c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481f2315-979b-4683-a075-89c7ae503a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c96569a7-7f9b-4416-a0fc-71781676b274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb73410-2481-44f4-9f8f-8b23502b809d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d7bcdde-32c3-46c4-acd2-751d60780b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce2faea-826b-4c51-9f01-6ced7190cef0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0f2a36-af7c-4c42-90fd-3568307c02c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f04c3a7-a9b4-46cb-9df0-31aee844271c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2330ccd-58a2-40f7-9401-5cca1c9761f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f4dd507-8cd8-456d-a5b8-0a192b2247cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442990dc-628f-4132-8cf8-75d4abca09bd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75d1872-dc8f-4257-9c92-f72511ec2d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c773118-0183-45b2-a2a1-f051c6e62b9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8b4904-9126-4a96-a323-23a25ea0db1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a068a143-68ad-4e3a-9750-a3f9c94cf001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac38afa-f6fb-48e2-b008-9fdcc32e37e7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f2646c-0db3-497b-bffe-2757d7c89310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e036a730-7160-4e77-beac-4cf93fdd79af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe6a700-c108-43b6-ad26-29e67a30eb2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1167f13-31d2-40a7-b818-2ae0ca2c8894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bf10f2-dfd2-4190-8455-196d8b363e46",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62542c45-2e79-4d24-85d4-83f72f1f5dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5382604f-758b-4ceb-b83d-ffe1f61a1024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2225d5af-6b03-4db3-9a92-6e6de3755a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9e82e4d-d09a-4a4e-accb-57f5f3efe962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847f61fb-f86e-4347-bc80-9de0a6026de5",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b96067f-9cdb-44a7-af1b-635ca7aec362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a1d4c14-16a2-43f2-9196-7dc1c04117dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d9a87c-bcbf-4ee5-80e0-2e3c1493dffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023d42f4-8d69-4130-9308-14437377014b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c295bbc-6e56-4deb-a16c-0794a8f7a806",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb00540-04ee-4552-9c06-e192f8f28e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22dab332-a76d-49a7-813b-3f4c1d24bd30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e121cdac-e6db-4b23-8885-afcbd2e7ca20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb56a73b-23a7-49d4-9d8e-c3c4729434ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f206656-6dc4-4ae0-a1cc-cc967f804b3a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05398c5-2a30-4eea-8982-208c9556a85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f005389c-d932-478a-8f4b-69f88984f804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d713c34-cfd5-4a30-9214-eb11a6b30e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c678603-fe5c-4806-95bc-7f51534c1a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666aa79b-8f5b-49f1-8ba0-5cf1653558cb",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebc3d66-9180-4641-99e8-4965d880c7ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ee7679-ce48-41a1-be2b-ae37717d9d4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2c9b95-642d-42c2-90ec-83db28c54787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3392dac3-b6df-4b12-b079-6355b690c00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce54476e-fadc-4dc4-b6bc-ea1a773479d1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8663cebe-560b-492c-a874-0534153fe9c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95662c4e-1428-4a89-821d-03d6fb8f4a71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "206f3542-6416-40eb-9d99-fff0b87bbed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b11f1e7-3ad0-4a01-829d-9b9e9fbd1559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8bb480-ae80-4740-98f7-9737874a4257",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89d87d5-d850-4a7f-ba13-af82afdc583a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c3dfb8d-0977-4589-877e-e077a69cf184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9e70e3-951d-4b83-a1f9-6f5ef4c37c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f3a041-540b-4d1c-89eb-999a2814a430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae3e37b-f363-4eee-bb8d-bb0b67f731e5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6151a01-8b56-4657-bc0b-6a798f8f303a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13b1a5f-16bb-4155-98c0-def38e95cb96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55419c74-93f6-4e6d-a69b-d0124b05ade4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "708a367a-a535-4699-8652-1bf9b4cb8af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35b801e-6f8c-452e-b01d-95a889b24453",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659e3485-424f-43a1-8bbf-bcf2314a7839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddbd3b01-bd34-4025-a28e-395ae6aedccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "add74469-6725-45b7-9b3d-624774be9476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dcbd680-7923-41ab-a999-0eafb91db7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2114df-f7fe-48f4-9e0b-07115f1e3951",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7db6e4e-3eba-4c34-9547-de1b8bc02203",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a075291-117a-4c13-ba65-853567919a69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd02f70-d284-47d2-adb3-6965142c0ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf6e054-7277-4efd-8054-842df78a0e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cf59ed-825b-492b-ab76-b6072cfe0bcc",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b24e57-0a68-44a5-a778-38c0e4b1d7e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74fe83cb-c4b2-4c6f-ae06-ec6061fa2ffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4635ce91-5dfc-4147-a217-9dd0713e9fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1caefce-d016-44b6-95f8-060454287ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6a92f3-8b30-4309-b9e3-4d0e6d2421f3",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39ac1b1-df40-4b5a-a806-50bb6da60518",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a7b0aa6-2739-41ed-874b-54f6aa5fe95d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63dff99c-aee1-4fb0-8eeb-84941ef7a991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef3ad0c0-ca01-4d39-b326-b607dfbb20a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f058e4-242a-4161-b161-c0f3f2764016",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f490f4-d3e3-4974-a896-9bddf2e81976",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2556a977-b4ea-41f5-b259-ac647be239e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf322a1-5f9b-49e7-8d1c-c8c479dcd734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b56f6a52-4c77-4c0f-90b1-a8135b9bd13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76272b9-9715-4869-a7f7-99e3e3db5000",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1edcb7f-11c4-449f-818a-103d9ab4b32f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fa1d289-ed32-4c74-9ff2-1bd4a064bb71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec48470-868c-43c9-a3c0-a21aed00d100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac75b995-ae67-48ab-aac5-1e93dd3e307b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b10b3a5-a063-455f-8e9f-6ac73f3bd085",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4451b3-ad9c-422c-8b8b-d0bf4a31f2fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af149bc3-24fe-4738-a3e6-5a6fa7dd1dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7cfaf7-0eee-4a05-ba41-c0f362710b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "630fd1c4-f410-42ea-b505-595dce59e308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5eb3762-c4e5-40da-ad23-873ce0ca59e6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42975e5-74e7-4664-8ad4-90cb9440bf0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb5bf276-7798-4cc1-882f-664e7b210433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d717c1e-12e4-4cd3-9ed2-cb4b80ad148d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c708545f-c4c8-4649-b4ef-f3717ad5341c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a14a6d-ce36-4717-86ae-785633c658d6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b28a03-d3b0-45dd-b592-99dd6808d288",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eaffebf-6eff-46a1-b485-ba705064b49a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2323ca-40c5-4050-b1af-8ef5eb010b3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb1a569d-4f96-4e3e-9a0b-826baab07d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424e200a-784a-4324-ae0d-ca54d1fe1879",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ee9cc9-3f3f-4510-a075-33ed9408b2a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e660463-5294-4d86-8f0d-1c04ef9a1b27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0230f5aa-dd0a-4872-a450-84bb5988513d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec925c3-1cd5-4c07-b99f-15114b000ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc87c00c-c8e2-4dfd-91a6-ef3a15266fd7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25257b12-895f-49d7-92fb-6b0e9c8a07b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf282d3c-cb8c-45ac-b3d7-8c3ba81c178b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c4fe08-5ca5-4af9-9836-7ab99c00501f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c700b8d6-9ae7-4bc5-88c0-8c1bf783c447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c78596b-07a7-4440-9a22-0fd9792fc596",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d8a1ec-2644-410b-a968-0cd06b98e4c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb0baac1-f4fa-488c-8797-37445b877d1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67fd6996-b8ae-420d-b768-876e3c8af96b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8363415c-20b9-4e68-8acf-80c23bfbcbe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed095e8-7a53-4da8-a288-23327e781151",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9316c3-6ebe-47bd-a54f-88919e7a8313",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3664771-4ab8-48ec-9801-693ba2226c0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18b8413-d411-4e46-be7d-c5b68a4cdc36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06db2f5-aca7-484a-9b73-ccb854b171c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034c61e2-50a2-41d1-8bae-249406d5827f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fedfd44-bd5f-45a2-9899-34b0198a946f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "168474ce-cae3-41b6-b3be-2f89c554a406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "478e544b-6804-45b3-9df5-5bab40c116e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac82fbc1-acb2-4ecc-827a-7f4288140dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673be89a-d1c7-488c-a95d-064b2fb8a049",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211c2938-20c1-4905-a387-9a92aa5e4fe2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e75e7de3-7b69-4900-8afa-81f0017c3767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "629f78b2-bf78-4c10-9ccb-f0daa312a1d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e22c4b1-94e1-46bb-8e01-2d5c861cec64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a60fc9-d556-4ada-9df1-afe58d2d09d0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7aea76a-f961-43bb-864c-afc714e0dc42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdf28afb-ec42-4fbd-a65d-ffa95b4c909e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7ff68d-dcb7-4b38-a4b9-764b5aa427bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04407ffe-0aa8-4591-8e98-899b55656cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e8d9e0-59a7-4c13-a0ab-dc6b6d6d834e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd328d69-ddd4-47a7-b4bd-3e44f2f654c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baae0473-1b91-4abb-b389-943894829185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84707d25-4c9f-4be2-877e-3394182e29e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88365feb-9123-466d-91c5-98eb2fb2adaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698e3701-6f1c-410e-85f4-daace65381e0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab96338d-8577-49da-9b55-5e1e22b0c999",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d4e588a-9733-4927-80d3-51a717f0314f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de59505-0108-44b9-8d32-9b05a8ce8672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c7a531-f769-4964-a1b2-afcb57c2f2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c8451c-7230-4b6c-84b6-9840e8b3381c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86954663-c96e-4cb7-8911-0b4fb1f09fd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f1fad12-a3fe-4a98-8bcf-7c10e7511f89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbd8cd0-5e01-4336-99d6-a387a15b3dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1472a3e9-cf39-4095-adf4-c9a5d7a19c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ba9f79-2d99-446e-9f40-a422317ac0b1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55b7968-e9cf-42a4-96f0-e04c3b8db88e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a330e12-8634-431d-8877-955b10224818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "728147a7-ea73-458e-953c-1112607fc6f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23119a0d-118b-46be-9ee9-f2199d11f430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62855b53-11ef-473e-80a6-5425caf5622e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272dd03d-f79c-4c07-8eaf-25bb47575589",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89e18881-8489-4a88-ae2c-9c6031abb0d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2461f6-882f-460e-b2a5-92fd1a933036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6144284-b430-425a-9928-8846bb1dbd81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dacce720-65bf-4e08-914d-50c7020bf01b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df516af2-cddd-41f7-8439-2d82700353c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f885dbfc-08d2-478a-a240-22c568371f62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62042493-63d4-4c73-a30a-3d58da39bbf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950082fb-1264-4b30-a9b9-3de9d7805974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b845dc-2f27-4558-96a5-e3705787881a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d866404f-057a-4396-9499-b176c1418bee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "753ded3a-3a32-48d2-aa6f-99d7d1122a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2091a51a-2583-412d-9504-a3a9f6aea905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839bd1de-4ec6-4a98-b78c-d328bb1192e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013803ac-4b61-4665-9380-d12913f2e14b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955ae2a0-0613-4fbf-8db0-8dd41e960762",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e17d27b-fc0f-4759-89b8-b3adcb2637eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b00766b-da03-4a6b-ac4c-c5fd63ad2545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5a6977-a35c-49a2-8be9-94c34061c0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4985ff2-3469-480f-bed5-c01c61d4793c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf4a72b-dc3b-4b4c-a13a-a8710e055c30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d79d8f1-92d0-4cf3-b985-c38ad9111dd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cbf2e8-8fda-4007-86b9-fb10b530cc93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "435d2cd8-274d-4b5a-a57a-c8106622fb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bc7492-b011-4429-9a70-da2545e2fb49",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cde0b5-fc38-45df-9fa9-619f4a8c19b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4aecf3e1-de70-43d0-b3cc-2d5f75e5b64a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27341a0-7115-448e-93b9-3d97cb965b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec36145-b0e4-40cb-b6c3-69439533b108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918f0df3-306d-413f-8f82-a0b26dd436f7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad88e84-d8b5-4d3b-83b4-bf0eaffc3590",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb43ef27-3a85-48c6-8885-a5b385d02b6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad8aa74-40e1-442a-917f-8306f9cfcfda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2007102e-1316-48c7-8b25-a131326349fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356fab22-be0b-4bf8-a68c-defb545de700",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ada3a4b-8169-4f97-90bd-77925d4bb3c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d74770a1-7ef6-4ee9-885c-419643825617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ca4830-17d0-4178-bec4-13a328e892f2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28c4f03-c90a-419b-b9b7-df1b656c8c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d6a3bc-492c-498f-8668-c92351675472",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ffb4f4b-0dd5-44e8-a59d-ad759cdfd817",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cca255ff-63a8-4c30-b9b8-b25a9723a98c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41727eb-3e4a-41eb-8bdd-46116c2bd754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abaa6d5b-43eb-4c7a-9e2f-e16b3f2f4477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1638e030-adfa-43e1-84c9-e45d63cffac5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d8ba7a-348e-4ad1-8c25-da83af8d149d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3d4667d-e6c6-4ef1-a642-12e263647aa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e643886-2cfa-4e39-8320-98cb6ca58804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab41ee32-05e5-45aa-871a-84303e0d5079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd721f9-2ff3-464a-820c-95c3f691bdd9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cac5b82-e40c-441a-8d9f-9eb985a806dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2146e06e-6b76-40f9-9f52-721781c0b129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca0bdd8-a996-42cb-bb8d-b88f7548ca47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "087d6d6e-c518-4c2a-a125-5a256356c862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed44116-c23f-4bd4-aa05-83d06429e255",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2e84e9-9360-4d0d-b6f1-923e60dd767a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e364b07-03fb-4b23-a90e-d00d76ecbc41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e22c10-2fd2-447f-bab2-d2319ef2a0e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cdf2aa8-e505-4231-afca-ee2d05d3a95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219f75f4-a4b2-4a60-bb70-e2b16423ed2d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc86afde-4080-4f93-bd59-33037a3da0cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c4392a5-951f-4b20-8dae-22c725571eb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66185e1e-ffff-4a3c-ac3d-8ab1cc41744f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb4453b-ec71-4094-80ed-7c6be0d8b544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db42913-f10b-4664-bafa-e2a69264e8ad",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9f61db-6c33-43d0-9b5a-11672daf1d24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8176a7b-0d99-4de9-8b7a-62902eae36ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ef6134-e00e-4a0a-80a0-ce33e7e38d08",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c81e8e-d455-4eb5-bcfc-d8254754e312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb5477b-45dd-44c1-aae9-8001a53e6528",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1600a680-023c-4b64-97a9-4ed78e2885b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "568558b8-9ce7-4666-b363-32d6c9ff02c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "734a986e-87fc-46d3-b310-0a585b582db9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c1d5ccf-5603-4f76-ab48-2c0731d2d9f5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d994722d-b3b2-4a5f-8a94-e4a0e7c3030f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24fe6081-b05c-425b-8f1e-eaa067140e45"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "803134f5-e351-4337-9e96-8e2a2a5e84f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fdec0b15-4c89-42a7-96b5-451aa8512e2a"
                    }
                  }
                ]
              },
              {
                "id": "9312adb0-2511-422d-b030-6182931d9bb5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16ec5501-41cc-4a54-b1cb-374a38d485b5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57bb0933-f371-4d22-895f-7b2216111182",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3cc1e93d-3eb2-4c59-96eb-9dcfbf1a972e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83497b16-7e70-4ddf-95c3-da906bca00b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b04cbd11-6e99-4609-b67d-ef04fcb578d0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fca4266d-aa7d-4869-a4a8-eb13872c0a5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40097a3b-f44b-4799-a437-414006f0a8d4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcc24af6-1ed1-4d1a-87b0-3f82299576a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a3bb55e-7cd2-4f6c-83cb-021ebc187daa"
                    }
                  }
                ]
              },
              {
                "id": "020a46c4-d130-4cf1-9897-98101f3efefa",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "404cde0f-c58c-46ad-85f0-a9ed88786650",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e061d26-8598-4b2e-a83b-ba2fecadc4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "05b8b333-ae82-4bb6-88cf-55a5a551c11e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb6db8c-f7c6-414c-8580-fc2897762edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e303840e-de1a-4111-af9e-8b3cbb381a98"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9f19952a-b0a7-4251-8005-457f0052d1ea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "17f421e3-b66a-48a9-9106-800a2f7e93f6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e2f9e13-d7a8-4b7c-999e-619cef24190b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e6b3f42b-474b-452a-b948-8b133d56b7dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "523e6464-dc3b-4202-9463-f22cbcd2a470",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6d0f5ee-f23e-473e-b087-97f01c0baa84"
                    }
                  }
                ]
              },
              {
                "id": "13dfd5ff-39f6-429a-bc18-4292cbdb3279",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf667048-6645-4f8f-94a7-85bd6abd3bb0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "661ef2c3-c968-4605-b9eb-65ce42f6da87"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eca7bb70-dc54-4f80-91e8-f91ab3358301",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d71e9cd7-1049-41e8-bc7d-222ced3889d7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82f08542-c21c-45c5-944c-eb891b3bcbbb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "72514090-2131-4ee9-9a7a-51842fc80a46"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "905bb1b4-17cc-44fd-afbb-e5211e596421",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1376f7e7-dd6a-4a37-b92c-30733f9c4120"
            }
          }
        ]
      },
      {
        "id": "dea8db08-f503-4cf8-8b0b-547ee1d69ec5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "678130f1-5384-46a2-ad33-34678b42acda",
            "name": "Negative Testing",
            "item": [
              {
                "id": "74982fba-3867-4cbf-86e5-baac11b96783",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6eec0a9b-849c-46af-8a31-066f521b7558",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad89627d-6330-47c7-90c2-f61c42f638b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1f282220-4fa5-46f6-b834-cf7aa3acff20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc950306-cddb-4a55-ad9a-d30af0d3c09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af6eccfd-649b-4918-92d4-39130fd76b80"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b492e10d-bab1-497c-8347-061ea27b5586",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6dddffa-0d3b-4dff-99b2-accf3cba743b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f0c8096-6fca-4925-817e-57b5ff253264",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1af4679-a059-4d41-8b9a-f90fff5efe78"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "447a03e7-5215-45f4-9345-14a21f7ae314",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "50b50ed2-32e0-4b0c-aed6-fd295f249ba9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6eb7c17e-8093-420c-8eb2-e1706ff3c045",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c070105-3499-4281-89c3-b0322014bf07"
            }
          }
        ]
      },
      {
        "id": "eaeb033d-0c08-438e-a510-0192bd0899d7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4b9c525d-788f-4644-9e70-c577323670dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65d3afc6-35a0-4c3d-8138-cb1282063ed6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94059dcb-b3cc-4224-932e-4e3797986295",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4bd7820-6317-4365-9cdc-789b82603325",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e355826-a3af-4768-9e67-5846a5cf137f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de05f7a-dab3-466a-baf7-d13f4175abab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4710da14-a7bc-4f0c-86de-d2665e6fac7f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c222d52d-7488-4086-9951-f03c49c8785d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f1b8e48-2796-4130-ad2f-23403d7dbfb2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea12f576-0aed-413c-ba3f-3fff23ee1c32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1591d772-8292-4edb-87d2-4d804e225ce7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a40984a-98a5-42a6-bc44-28ded41629dd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "71b1d843-5f50-4fb0-9808-5849c4061cd7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9fe4ace6-f6cc-4fb5-bcbd-45929951df76",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "25bffd2c-fb82-423e-b555-c4f17f074d1a"
            }
          }
        ]
      },
      {
        "id": "f22ab17f-45d0-420e-baa4-bb968390ed37",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "45d37f9c-48f3-4da4-9dd9-def540677527",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d8a1bf89-6679-41d3-9273-ac783dbe983b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75b042b5-b88c-416f-8cf7-9dd92dbf2f01",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ae7f39-75ff-47e4-9630-c2711e92b014",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3778aa5e-95d8-4059-a6dc-f9863a0a027e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d293db4f-a1c0-46d1-8081-a5373af3dfd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19dda1fb-1861-40c5-b970-7a008ad87abf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "198d681e-f3f1-4c61-8fbf-cfacd95043f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afefc96d-adcd-4142-b40c-87c94e710e92"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1558b51-bd65-4b06-b8ff-5347d8b95d9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f36c3d2-4fc7-4358-bc6c-bf8d07ef6dac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8cfca05c-c773-4073-bf59-648304b9e417",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f7510ae6-6918-41f3-afb4-2a99a40655d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "618f02e5-63c9-4747-aba8-2455bffec25e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b567beda-a75d-45d4-8ee0-4257c76e418d"
            }
          }
        ]
      },
      {
        "id": "c92bf06f-13c5-4e71-aedb-c2f462ffe42a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "37590eac-0c35-46db-80f8-28522b4e8daf",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5b37e35-b444-40eb-b97b-1566d51c241e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7f555462-272f-4b89-926d-7d553d073114",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c97c50ab-98d2-4b14-b2f2-c9ea0623c54d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24b76178-5aea-44ef-b11c-c1151004ce3c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 115.89285714285714,
      "responseMin": 11,
      "responseMax": 9078,
      "responseSd": 636.7930880066988,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1714350979511,
      "completed": 1714351016919
    },
    "executions": [
      {
        "id": "d7251c38-c0d1-4ea3-bc30-312bac456ca2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "420935ad-3afc-491d-a537-2e1d3d2019ab",
          "httpRequestId": "359cf9ff-96cc-4fe8-9e4e-990395e7decd"
        },
        "item": {
          "id": "d7251c38-c0d1-4ea3-bc30-312bac456ca2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d583769c-d33f-4adb-98c1-c3f7e99d5317",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 0
        }
      },
      {
        "id": "31f54fed-4e53-4ada-a85a-6f27405fc26e",
        "cursor": {
          "ref": "54fb42af-6dd5-4a83-a93a-e30aca6a9c71",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "738e27b8-ae63-478b-9d7e-4ca5b051bc35"
        },
        "item": {
          "id": "31f54fed-4e53-4ada-a85a-6f27405fc26e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f45b2944-3716-4b8b-93e7-947902fa711c",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "68c657a0-05bc-43e3-8b18-18d6be1fbf76",
        "cursor": {
          "ref": "9aff426d-aa72-4bff-9d5e-f1598c21e5ea",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "04695de1-5551-4d08-9371-62f38e463ab3"
        },
        "item": {
          "id": "68c657a0-05bc-43e3-8b18-18d6be1fbf76",
          "name": "did_json"
        },
        "response": {
          "id": "b9c2bd68-8d88-4bb9-8ee9-0ed5a8780146",
          "status": "OK",
          "code": 200,
          "responseTime": 341,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba734f35-6969-49b8-9d4d-df2dc7f5f361",
        "cursor": {
          "ref": "97857bac-de19-44c8-99c3-d4eacbe4e33c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6e823393-a0fe-4a3c-85da-2fb925f244a8"
        },
        "item": {
          "id": "ba734f35-6969-49b8-9d4d-df2dc7f5f361",
          "name": "did:invalid"
        },
        "response": {
          "id": "cac180b9-06ea-4978-8fd3-10b2a16c0cb2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 368,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba734f35-6969-49b8-9d4d-df2dc7f5f361",
        "cursor": {
          "ref": "97857bac-de19-44c8-99c3-d4eacbe4e33c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6e823393-a0fe-4a3c-85da-2fb925f244a8"
        },
        "item": {
          "id": "ba734f35-6969-49b8-9d4d-df2dc7f5f361",
          "name": "did:invalid"
        },
        "response": {
          "id": "cac180b9-06ea-4978-8fd3-10b2a16c0cb2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 368,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccca976e-cdbe-40bc-b66c-a20f09e645be",
        "cursor": {
          "ref": "d6d37b64-b1f5-4b0b-8000-047e01271aad",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5ae00d69-e421-4527-b645-25a7c3a7c878"
        },
        "item": {
          "id": "ccca976e-cdbe-40bc-b66c-a20f09e645be",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0b2a5ec4-4618-4c3e-add0-a554d8b70c29",
          "status": "Not Found",
          "code": 404,
          "responseTime": 42,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bd7fc9-4f43-4328-a9f9-13af7d7611a4",
        "cursor": {
          "ref": "226b14e5-c9e1-4242-b080-c32ecf95f63b",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fb291e97-931b-41a8-828f-cc2a70b8fc94"
        },
        "item": {
          "id": "81bd7fc9-4f43-4328-a9f9-13af7d7611a4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f409a02f-d222-4153-8ad5-3c04be10367e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 44,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffebd890-0956-49a9-a060-f140d3d7ebc0",
        "cursor": {
          "ref": "3903fdfe-e498-4a82-b942-40abf1afa087",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "29e31f65-fcf8-4993-abc3-3c8e1dd0358e"
        },
        "item": {
          "id": "ffebd890-0956-49a9-a060-f140d3d7ebc0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6755ee0d-b7bd-4898-b70a-fb1ee08c551e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f2ec5a-f17f-4502-a50e-a17aa1bf8ea6",
        "cursor": {
          "ref": "eb930a1b-7085-4c26-a61d-d20da10aa7f2",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7e84d13a-b292-4f99-8941-0418c3d924bf"
        },
        "item": {
          "id": "42f2ec5a-f17f-4502-a50e-a17aa1bf8ea6",
          "name": "identifiers"
        },
        "response": {
          "id": "3b09ed4b-332a-4a0c-8806-a646d61bea61",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb7a613-fe28-4f3f-ae0a-1666d4effc3a",
        "cursor": {
          "ref": "64ebcf98-71c3-4e25-9860-7226d079bfe5",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0c52e5ab-314f-483f-8de1-afcacfd903be"
        },
        "item": {
          "id": "9fb7a613-fe28-4f3f-ae0a-1666d4effc3a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fc658b03-46ff-4c5e-8a70-272ae75c4717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571b2e1f-9f7d-4bdb-a22e-cce8ddc2d3b6",
        "cursor": {
          "ref": "e80dccfb-b6a8-4eb5-b11c-ac7d04d481fb",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d187c915-8980-486a-8c4f-2fd5c90723a0"
        },
        "item": {
          "id": "571b2e1f-9f7d-4bdb-a22e-cce8ddc2d3b6",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5c175b03-70a3-4baf-98fd-7ae6225d2bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f87b92-ddf1-4bb2-8a54-95a0ca94ef30",
        "cursor": {
          "ref": "0c900fe5-15ef-4126-8a93-09ca4653bf12",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1ddadd60-f44b-4feb-a923-4434e5c1ea58"
        },
        "item": {
          "id": "41f87b92-ddf1-4bb2-8a54-95a0ca94ef30",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "39d58198-3629-47e5-834e-8caf4f673e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e83a39f-e29a-4224-8a1e-0201a5ee4bf4",
        "cursor": {
          "ref": "a0b0fc52-1c87-4070-87e4-1eeac62af29d",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d23878a2-2da1-44bb-b422-db55490f0e4c"
        },
        "item": {
          "id": "0e83a39f-e29a-4224-8a1e-0201a5ee4bf4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9e460372-3340-4f1e-bc0d-b785462ae46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d39820-a134-4c58-b176-020c23096bde",
        "cursor": {
          "ref": "47829e73-fa97-4eda-bf04-6a9fb611debd",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9d774293-2060-4b41-83e3-7ed5923789ba"
        },
        "item": {
          "id": "57d39820-a134-4c58-b176-020c23096bde",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6c953c44-f9b1-48c7-b7ed-b001efc4f8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70def77a-b603-4668-aecf-3b48a87345f2",
        "cursor": {
          "ref": "afa41a2e-5fb4-4ed8-a8dc-9d3fc6e6c8dc",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d6225ef0-eb7f-43f3-8cb3-e646238007ba"
        },
        "item": {
          "id": "70def77a-b603-4668-aecf-3b48a87345f2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a3db403f-9ebf-470b-9eb2-a6c90b5984d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7538f104-f8c6-4dd0-b01c-b3286a92bc75",
        "cursor": {
          "ref": "f2510168-1764-4015-8f85-a3aa970c44de",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "88b46d5b-a9a4-46c2-940e-9e4218d38bc5"
        },
        "item": {
          "id": "7538f104-f8c6-4dd0-b01c-b3286a92bc75",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8d5c15e5-71e8-4ba8-a594-6bd11832e25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f72c4f-f41f-40d1-b1e2-09471b9ca898",
        "cursor": {
          "ref": "71bf3ba5-9972-4924-aea4-a48a691eb0f2",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "14f1294f-1647-4cd5-83bf-14d20fe35e2f"
        },
        "item": {
          "id": "a6f72c4f-f41f-40d1-b1e2-09471b9ca898",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a2472da6-b7e5-48d9-acc6-e83990cc96fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82fb32c1-5f36-400f-aac5-fcd7a74061ad",
        "cursor": {
          "ref": "945fb2e5-67cf-49c7-8ddd-4ca5534af8a8",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "08ef7922-1176-4c58-b804-159a985e03d4"
        },
        "item": {
          "id": "82fb32c1-5f36-400f-aac5-fcd7a74061ad",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e77c534c-8bea-49d5-90ea-ba40b7e41f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe73a71-028b-46b9-bb36-62c468fbe95a",
        "cursor": {
          "ref": "3418e6a0-9a58-4e36-91ff-020ed3494aa2",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2fd565ff-e072-4044-bcc7-bbab1764fe0d"
        },
        "item": {
          "id": "4fe73a71-028b-46b9-bb36-62c468fbe95a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "065ea100-cf33-47b1-a2ba-212d5026e910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6090aaee-47bb-4ece-bcd4-e9a86eb3f44d",
        "cursor": {
          "ref": "be6bed6c-f662-41a0-8a5b-689ffaad86e6",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c0f34c96-db5c-463f-8b2c-0c6ec1493656"
        },
        "item": {
          "id": "6090aaee-47bb-4ece-bcd4-e9a86eb3f44d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a5ebb8cd-ae71-4019-96dd-d7f75ac68113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13ab37e-e4bd-494e-b423-35510bcb904a",
        "cursor": {
          "ref": "a5fea521-5f59-4c54-adc3-b456985e12a0",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d17775b3-62a9-4144-a21c-d1e4ed375594"
        },
        "item": {
          "id": "d13ab37e-e4bd-494e-b423-35510bcb904a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7faf543e-91d9-485f-a366-0365e317e643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d43645-fd75-4594-aafa-43157c8716c1",
        "cursor": {
          "ref": "4f31feac-3d4c-41ee-99c4-826899da084b",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "49fe1247-e99b-42eb-b58d-a0f181f91e4c"
        },
        "item": {
          "id": "12d43645-fd75-4594-aafa-43157c8716c1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d6b1af96-c319-4631-905d-fba2e37f68dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58746216-2ffa-44cf-ac85-697c5cb7db21",
        "cursor": {
          "ref": "8ef4daff-4e4e-41ea-929e-5e05e232a70b",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2b1534a3-707a-46f3-9ec9-896ae4fd7e89"
        },
        "item": {
          "id": "58746216-2ffa-44cf-ac85-697c5cb7db21",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f168ec6e-248e-4892-b7d7-75503e6cf1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cfe8a3-abaf-4d0e-aa4d-4abb8d6251d5",
        "cursor": {
          "ref": "6bde88d6-9632-47c0-9877-3557869951e1",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b0ab300e-217a-45d7-8b35-27d1082224ae"
        },
        "item": {
          "id": "e2cfe8a3-abaf-4d0e-aa4d-4abb8d6251d5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ab6400ee-0295-4f48-9029-4b408ccd4c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e037d0-e144-43ac-8c0d-c8cbe0302fee",
        "cursor": {
          "ref": "6ad766c9-ceaf-4bf8-ac09-fa90ba03c134",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f0897997-032d-4bc2-8c79-3131ab90b105"
        },
        "item": {
          "id": "b1e037d0-e144-43ac-8c0d-c8cbe0302fee",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "30068ca5-eaa3-4379-ae46-6e4492fbb060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572dae79-1201-43e3-b434-3dce6d0a694a",
        "cursor": {
          "ref": "099fa39d-5318-4269-8e0d-2c90a107dc3c",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1079fee5-34ab-4001-9ca1-809030eae31c"
        },
        "item": {
          "id": "572dae79-1201-43e3-b434-3dce6d0a694a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a8b4098f-c423-43ea-a51e-4f9c6fc0e362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b861b2-f6b7-4117-b1a4-5303d8204d29",
        "cursor": {
          "ref": "270d4662-5347-415d-a0da-b5b560b5c138",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a1b1cd1b-220a-46ab-b305-c03c35e744a2"
        },
        "item": {
          "id": "f7b861b2-f6b7-4117-b1a4-5303d8204d29",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "abeb261a-be87-42b8-af00-7b1b5136e389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5ee234-957a-404c-843a-2964ebc8d5e0",
        "cursor": {
          "ref": "c3a599cb-4a65-49aa-916b-a460e35c0436",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f2ef2236-3f0e-42b1-84f1-cf673e1f742e"
        },
        "item": {
          "id": "6f5ee234-957a-404c-843a-2964ebc8d5e0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e282c45b-b9de-421d-8cb0-3230c954dc64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cb0c69-8b21-423e-bd6a-9a9b4b06e02d",
        "cursor": {
          "ref": "dfddffbb-86ea-4b57-9d43-667ae939eece",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9ca04330-20b2-4c49-87be-d860e19881b9"
        },
        "item": {
          "id": "55cb0c69-8b21-423e-bd6a-9a9b4b06e02d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "54be4d21-f831-4429-97d6-7cfaf2986bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b60e8e-cdb5-4118-9d77-d796c5745919",
        "cursor": {
          "ref": "b6a5f02d-2ec5-433f-8e23-c48338c570fc",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b4c23fd9-870d-436e-934a-f5fe19d10bdd"
        },
        "item": {
          "id": "f5b60e8e-cdb5-4118-9d77-d796c5745919",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7a1953ca-db24-47b5-a4f6-7f533e1d6b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f885ba7-759e-4dab-b058-35ab67d34d37",
        "cursor": {
          "ref": "85caf0dc-e376-47eb-afe9-cb2fcaf917f0",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7c10af84-180e-4c32-a74a-8e53e54c6e42"
        },
        "item": {
          "id": "5f885ba7-759e-4dab-b058-35ab67d34d37",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "25c001db-e4f3-4045-90bc-90bb8819173c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390d24cc-7dc1-4ab1-b6cb-ab57d56d73ff",
        "cursor": {
          "ref": "d72d0822-3b9a-42ef-b9c8-a4e7df3b9783",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d1b127d2-bf8b-4de3-acdc-0064bda0c441"
        },
        "item": {
          "id": "390d24cc-7dc1-4ab1-b6cb-ab57d56d73ff",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4ad444db-8e79-4510-938c-bc9d4f0a4cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d1e68f-8fc7-4218-ae4c-d532b6692cf6",
        "cursor": {
          "ref": "9e9f1b83-96df-45ac-ba54-078e322c457c",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6fc7d3bd-7126-434c-965e-1356e2115e13"
        },
        "item": {
          "id": "f1d1e68f-8fc7-4218-ae4c-d532b6692cf6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "67718e18-ed97-4e25-bb53-31c8a9cef640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5884cd69-2006-44d9-a135-6bd7f80b8ad2",
        "cursor": {
          "ref": "2b329791-a2a5-455e-9ec3-f1ad968b4c7c",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "59fdeebc-0828-45c4-b529-f7513b7b13b2"
        },
        "item": {
          "id": "5884cd69-2006-44d9-a135-6bd7f80b8ad2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "dd522e23-f3be-4cbf-99e7-bc34ebc94d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ed4f0b-53ee-42f3-86d6-3bb0f35b385f",
        "cursor": {
          "ref": "99b21f41-6952-4e0d-b6b2-2544aef5924c",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f3e4c525-1453-4c73-883c-09f573ab4f5b"
        },
        "item": {
          "id": "45ed4f0b-53ee-42f3-86d6-3bb0f35b385f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9db849b9-3313-41f2-9b31-67b418117f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0419e362-507a-4c41-9554-828c9e0dad89",
        "cursor": {
          "ref": "b23331ab-4787-4119-b734-c2528dd95963",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "bcda9f0b-a6a1-469b-a397-87aa018f5c2d"
        },
        "item": {
          "id": "0419e362-507a-4c41-9554-828c9e0dad89",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e884edae-01a9-49ca-b150-0e03ffd6c92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8be0da4-fc3a-4220-876d-b6f9bb202d6b",
        "cursor": {
          "ref": "f068e2e2-83b9-4bfa-b106-15cde5fbca51",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2be7ed03-afe2-43b7-8571-59996662e00c"
        },
        "item": {
          "id": "e8be0da4-fc3a-4220-876d-b6f9bb202d6b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6d1afdd4-a211-4a24-9437-3527b5bec47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672d5caa-2a45-449c-aae9-21d2c32117ff",
        "cursor": {
          "ref": "f96e94bf-2fef-4431-90f4-230448bf01f4",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e5ce110d-332d-44d1-ac5c-c676343f3a80"
        },
        "item": {
          "id": "672d5caa-2a45-449c-aae9-21d2c32117ff",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d9366e23-aa20-4c8c-9c10-64d457106aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e231dfb8-4930-42f7-a0a7-d08225cce959",
        "cursor": {
          "ref": "5d49ca39-5889-4474-a9d9-187e9b1a5517",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "59eae9ee-522a-4eeb-a503-c94e3f743275"
        },
        "item": {
          "id": "e231dfb8-4930-42f7-a0a7-d08225cce959",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8f10f9aa-d01f-467f-8d4b-122ffc46b2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea22c628-7e00-46b2-98ec-cc3514819a5c",
        "cursor": {
          "ref": "2bd125a9-a26c-4140-be97-863e02ee176d",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "78721a5d-c0fb-46ca-b99a-1656b372a21c"
        },
        "item": {
          "id": "ea22c628-7e00-46b2-98ec-cc3514819a5c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ff7be230-f85e-482f-bf8d-63a5ddc9e75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c46c89-287e-4fe4-ab37-e2248a59e194",
        "cursor": {
          "ref": "c433639d-17c5-4dcc-8362-b819e773dcca",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2eb5c14b-9f2a-4a5e-a6f1-e453632a664c"
        },
        "item": {
          "id": "61c46c89-287e-4fe4-ab37-e2248a59e194",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "33cdb3ac-d457-4dcc-99bc-f0808435e224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acfdacaa-e898-4e54-a976-b8cf28792e00",
        "cursor": {
          "ref": "6cb4ce78-e815-476a-84ef-2dbb5f9d3fd7",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "cd4733f2-60b1-4e16-95ee-c6a8f615e460"
        },
        "item": {
          "id": "acfdacaa-e898-4e54-a976-b8cf28792e00",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ab099f51-89b0-49ed-b220-601faa46c174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116da5cb-6ae3-4d09-b31c-2a445bdcff42",
        "cursor": {
          "ref": "792cf81c-8f78-4c3c-bc38-e298496d8989",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0cc2fd4a-d56c-464a-b373-05128def9551"
        },
        "item": {
          "id": "116da5cb-6ae3-4d09-b31c-2a445bdcff42",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "56265a4e-ffe1-4f5a-ac57-ff424ea6814e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91623d77-083b-47f2-abda-71d956d7ce9d",
        "cursor": {
          "ref": "591e9d06-fbf3-406d-bf05-417be05e0383",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9233b9db-35c4-46b5-85d0-a5333ecdd7d2"
        },
        "item": {
          "id": "91623d77-083b-47f2-abda-71d956d7ce9d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3c529ca1-ab2f-4329-86f5-975ee4042705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5194060-ded5-4cdb-86c1-91b667cb58dd",
        "cursor": {
          "ref": "5211e7f4-8215-45c4-8c30-9322d340f799",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "76a7e19d-6bb3-4fac-8788-6b9a7f66deba"
        },
        "item": {
          "id": "f5194060-ded5-4cdb-86c1-91b667cb58dd",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "52fd41bc-4c5e-4bb5-a62d-119cf64e6e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788c07ad-80e1-462e-852b-e974bf23b506",
        "cursor": {
          "ref": "399e597d-1b76-461d-8a0c-42f88b377bff",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "47189a2e-f0cc-4d06-b5f9-5685304a6384"
        },
        "item": {
          "id": "788c07ad-80e1-462e-852b-e974bf23b506",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "77411248-c452-48f1-99b9-648da2f94ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae39c26-5f7a-44a9-84c2-e92f31b45e8c",
        "cursor": {
          "ref": "c40bc7d9-d8a6-4bd3-a11c-17bb3f5b8f06",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b823b2a3-4430-439f-8cea-3607ce593f64"
        },
        "item": {
          "id": "3ae39c26-5f7a-44a9-84c2-e92f31b45e8c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f148b466-322d-4286-9ba2-7e4d405d9a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974b001e-4034-4f62-a93a-019dddb907d0",
        "cursor": {
          "ref": "2247551f-8bf0-41ef-ae35-b23f7aab5140",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "cd13d992-e509-4039-bb74-ea346b4361e9"
        },
        "item": {
          "id": "974b001e-4034-4f62-a93a-019dddb907d0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "de6df1c5-20ed-42e0-96dd-e6fa8ce02e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9586958c-9f4e-4a21-9dbe-f986111aae63",
        "cursor": {
          "ref": "c66b1a33-f50a-4135-8038-d8f097226cab",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e83c5136-7397-4914-a48f-7d67a21d9f92"
        },
        "item": {
          "id": "9586958c-9f4e-4a21-9dbe-f986111aae63",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "67c037e3-56b3-4af0-97b6-4c398e7451d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92cf7c1-2691-4cff-8fb0-87d9b0e74943",
        "cursor": {
          "ref": "6b77b81c-a048-47ac-94a9-0c74be226f33",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3fbba549-7687-4acf-8e8f-708ff70d566f"
        },
        "item": {
          "id": "a92cf7c1-2691-4cff-8fb0-87d9b0e74943",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "772252e2-4c82-46d8-b569-e9ec6f29e09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e024936-f9c3-4bf9-82cb-f61b120a4d3d",
        "cursor": {
          "ref": "c547cbc1-1cbc-4eef-b437-642b15aeb49b",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d1296e3a-447d-4842-8534-04e1c16e67a2"
        },
        "item": {
          "id": "0e024936-f9c3-4bf9-82cb-f61b120a4d3d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9f400858-97c8-407f-9cea-48d810b54b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e44f617-fc86-47a3-ad5e-433ad05ded73",
        "cursor": {
          "ref": "cb466deb-b6dd-45ff-b89f-e1304eeff9fa",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ec70aafa-2895-493a-be1a-9f2b46b1527d"
        },
        "item": {
          "id": "7e44f617-fc86-47a3-ad5e-433ad05ded73",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f4348074-2e5c-44d9-a0cc-042fcf8096d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd33083c-6031-425e-acb0-1112fa366204",
        "cursor": {
          "ref": "771b9a0e-77ce-4c83-a25f-9ffcfe8fd774",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "17f5a7c9-40fc-4592-91e2-b0e88230322b"
        },
        "item": {
          "id": "bd33083c-6031-425e-acb0-1112fa366204",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e1d0203f-a8b0-4a2a-8780-5916e331002e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcc0095-0f4c-4085-9bf1-c38e757888a5",
        "cursor": {
          "ref": "da98177a-ff42-4573-a545-2b7af37ac1ff",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b9586afc-8e22-46bf-ab2c-ee9d3ab09cc2"
        },
        "item": {
          "id": "1fcc0095-0f4c-4085-9bf1-c38e757888a5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6ab0b117-223e-4523-8c54-256b6c46a2c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eab923b-56b4-46fd-84ee-352bfae23c5d",
        "cursor": {
          "ref": "658b565e-6bbe-4742-9315-b208d2d8a64d",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9ba832b7-168c-4406-bdf3-e6ca9290a8a5"
        },
        "item": {
          "id": "2eab923b-56b4-46fd-84ee-352bfae23c5d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c855f085-8873-431b-b45f-6d5604611f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acc93a5-8f27-41e6-9bf9-bc51bb954fe1",
        "cursor": {
          "ref": "3ebf4e0a-f374-40dd-b890-e5e1b05d3985",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ab9dbcfb-e5b6-4b9a-b62c-1b5d46a673d7"
        },
        "item": {
          "id": "6acc93a5-8f27-41e6-9bf9-bc51bb954fe1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d692bf19-88c6-4227-b98c-bc4b991b27bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35af7867-e3f8-49ae-be02-39470768bcad",
        "cursor": {
          "ref": "61636a4e-eebd-4d98-ab0f-6decb8f74346",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e22e2c3d-8468-40e3-b363-91d6d4526d89"
        },
        "item": {
          "id": "35af7867-e3f8-49ae-be02-39470768bcad",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "86633e6a-a4f3-42ca-b4c6-d37c60f3ec25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56c98f1-b51d-4e2d-b20e-1f7444885457",
        "cursor": {
          "ref": "fee9cea6-e272-4187-a427-20810ee3bef6",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ee50c272-12da-41bd-b1d6-8714522e8c53"
        },
        "item": {
          "id": "d56c98f1-b51d-4e2d-b20e-1f7444885457",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "854904f2-caa1-49a1-91ec-4868b0138ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e437562-d7f3-462f-86d2-79c3d15bde52",
        "cursor": {
          "ref": "cda9a4ce-0f14-494b-b077-af9994eea9dc",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "24fbe8b4-697e-4fc0-9629-256784447f46"
        },
        "item": {
          "id": "5e437562-d7f3-462f-86d2-79c3d15bde52",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f63e6ee2-f12a-44f7-b258-6074055728a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e247c1-014b-426e-8c2a-bcd622d350c5",
        "cursor": {
          "ref": "76484454-f21f-422c-bd1b-45d004f4438a",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "70cb37bc-ba40-40bb-a8ac-165d57f8132d"
        },
        "item": {
          "id": "30e247c1-014b-426e-8c2a-bcd622d350c5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c92ae196-c381-4496-a29e-026ae6af32a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc226dc-414b-4c02-862f-3585ae4ce52c",
        "cursor": {
          "ref": "e8a7d680-b2b1-468f-9b6f-2f0e2a9de7d4",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "94b1949b-c94d-41ba-9d7a-059d75502c00"
        },
        "item": {
          "id": "2dc226dc-414b-4c02-862f-3585ae4ce52c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fddd9a61-4b50-4e52-8545-dcbbe2974633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b67e846-addd-45a5-8dc6-be3bd331547d",
        "cursor": {
          "ref": "49b4c376-d7ad-412c-be05-930eb05a34fe",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "bea7284d-a27c-4f28-bc0c-782637767a3b"
        },
        "item": {
          "id": "0b67e846-addd-45a5-8dc6-be3bd331547d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c644f19a-2e5f-4e61-9034-54bc020fb377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fbda68-d738-4930-8e05-6ac1fe78be98",
        "cursor": {
          "ref": "a9cc31ca-1beb-4ccb-b3fd-1f55925fcf21",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "cf160676-c9ff-4bd4-8fc8-a1cb5d443ba3"
        },
        "item": {
          "id": "98fbda68-d738-4930-8e05-6ac1fe78be98",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "18a043be-6261-4954-b33e-f2b277fbd826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26404bd7-ed84-443e-b7c9-e6f1da067963",
        "cursor": {
          "ref": "ca4b423a-5456-4b77-8fc8-b1387e422b81",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0d044b9f-63bf-48ca-bebb-362e0621849a"
        },
        "item": {
          "id": "26404bd7-ed84-443e-b7c9-e6f1da067963",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "68db468e-425c-4a88-89f4-5769d3cc2775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a3d955-6f13-4f9a-89d5-78af758b4602",
        "cursor": {
          "ref": "b78a00e1-c330-4ecb-9065-affdfb70c62c",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5a53c8a4-800b-4f8f-b398-062312f47cf7"
        },
        "item": {
          "id": "d2a3d955-6f13-4f9a-89d5-78af758b4602",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c0201545-c638-4b75-baba-77a6f0796e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fc8308-cf3b-4f54-b31a-72917a02e364",
        "cursor": {
          "ref": "d786c099-942b-4102-8fab-77bb026f89d6",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5b76aecc-c933-4257-a69c-c4f57bb8f973"
        },
        "item": {
          "id": "37fc8308-cf3b-4f54-b31a-72917a02e364",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a5e6b66b-4741-4623-a037-7dae64b730ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2fcee5-bd73-4057-918d-35b4e2ee8335",
        "cursor": {
          "ref": "fe54cc2e-4b1e-4def-acda-492f44c3ad1e",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "660abb39-6668-4f07-8849-ef8850552331"
        },
        "item": {
          "id": "fb2fcee5-bd73-4057-918d-35b4e2ee8335",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5ba956c8-74a2-4d7f-8cf4-edc24bfbfe5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb85cf2-d850-45c6-a6c3-61abe3dbef15",
        "cursor": {
          "ref": "1f35ef5e-56d1-417a-a1ff-1e2a03cfc878",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6303b250-8be3-4088-9156-c78fc8dc3863"
        },
        "item": {
          "id": "6fb85cf2-d850-45c6-a6c3-61abe3dbef15",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c80dd284-2ca2-428b-b2cc-746f2ca9e414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0c986f-6072-4714-b3e9-7eba09b59759",
        "cursor": {
          "ref": "27d60f84-57fa-4d68-8172-478502e9d853",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cd667d26-3ee0-42ce-ab6f-c609041e57af"
        },
        "item": {
          "id": "0f0c986f-6072-4714-b3e9-7eba09b59759",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "fe76979e-2781-4bb6-a630-17f53a9c3e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfb02bb-5243-473b-9d80-b205e69896d9",
        "cursor": {
          "ref": "52d24c46-55d2-4089-8ff6-025414fa8887",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "594a04b6-5b37-4aa8-b03b-5d1d64b17084"
        },
        "item": {
          "id": "3cfb02bb-5243-473b-9d80-b205e69896d9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "64a052f0-dc3e-45ce-806d-4df3800331ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0399fd-1dcd-4934-be5e-96247a4cdb15",
        "cursor": {
          "ref": "8dbbf16d-990b-4963-8c4c-71279b61c09f",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6388da25-253a-4fba-990d-2418f343f8ef"
        },
        "item": {
          "id": "0a0399fd-1dcd-4934-be5e-96247a4cdb15",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ddd35841-f208-4fc1-add9-f7622848650e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcb566a-fad4-4eff-9d9b-196ea3499e99",
        "cursor": {
          "ref": "7aa6b3ce-7bc8-44fd-8da2-566fcdcde5e5",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "39b7bfa2-87d1-40f8-b53f-aa4bfe88a60f"
        },
        "item": {
          "id": "8bcb566a-fad4-4eff-9d9b-196ea3499e99",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "78ccc415-3724-42b6-b852-ef704d5e837c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84da4c03-9500-4a58-bf9c-d6238f52e47d",
        "cursor": {
          "ref": "47c3311b-a025-4250-8a88-f3c1a189526c",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e92cdc9b-af65-4563-be00-59ac24c01771"
        },
        "item": {
          "id": "84da4c03-9500-4a58-bf9c-d6238f52e47d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8331ad4e-cf50-4e58-8b65-81a05a51cc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ac0a25-2ebb-417d-9cb8-095393da19e0",
        "cursor": {
          "ref": "95482798-4eca-4d33-a10e-b3d7a7b45a4d",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5e5cdd72-a7bc-4d84-bad9-68eaee1d6bf1"
        },
        "item": {
          "id": "02ac0a25-2ebb-417d-9cb8-095393da19e0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e0b14972-7212-4fcd-95a5-d23f702f92ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7898d5d7-7930-4e70-94d9-a6f3397391a0",
        "cursor": {
          "ref": "2085a226-4db8-4dd4-9eaa-6bddc632a7f2",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "26ee8eb2-e189-45c4-8a3b-83175021ea71"
        },
        "item": {
          "id": "7898d5d7-7930-4e70-94d9-a6f3397391a0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "01e414c2-7390-468a-8930-e59f2ab5f90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e195507a-0d83-43cb-923f-222bb1a22686",
        "cursor": {
          "ref": "12f4c703-6d47-49fb-9dff-37dd0afd687c",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2bd537d0-0936-437d-861a-1cffd44082f1"
        },
        "item": {
          "id": "e195507a-0d83-43cb-923f-222bb1a22686",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1e856f40-bb65-47f8-9e5a-78430ce485b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa77970f-99d4-4aa1-9028-e5c9253bce41",
        "cursor": {
          "ref": "a38f720a-c0fc-4205-ac1d-7c492af99e5d",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "68dbb33a-52c3-448b-872a-ba7504b50494"
        },
        "item": {
          "id": "fa77970f-99d4-4aa1-9028-e5c9253bce41",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "deed131b-e946-4eea-83b4-1b4ecd34957b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05f8caa-a422-4aa6-921c-3584fc2c8c4e",
        "cursor": {
          "ref": "e316e3c4-01e0-4bf9-8d4f-b584b9536a60",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d75eb114-31d0-428b-adfe-fcc136e8e638"
        },
        "item": {
          "id": "c05f8caa-a422-4aa6-921c-3584fc2c8c4e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "402c50c0-911a-4607-8e8d-267f3813c5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7324d07-ecc4-4fa0-8659-87a50d18ddc3",
        "cursor": {
          "ref": "8dffcc02-3ef1-40f6-9955-5ab25528e19d",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3b32eac9-ad75-4213-8011-ba3387466f9a"
        },
        "item": {
          "id": "a7324d07-ecc4-4fa0-8659-87a50d18ddc3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ac1b926e-78cf-4ee3-8cdb-ed76644ab95c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8618f1f-128c-4f63-9f31-c2d10063197c",
        "cursor": {
          "ref": "550ea168-651e-4dbb-8f16-0ea32145499c",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "837e68a8-8793-4a08-b945-00f1e23a65d8"
        },
        "item": {
          "id": "e8618f1f-128c-4f63-9f31-c2d10063197c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9fbce0c7-b72d-4945-b90b-45b08d452f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a7f85d-4ad9-424c-acc3-0f97ca54b787",
        "cursor": {
          "ref": "7e1fc464-0658-4b23-a51a-01bc91fc0165",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "16937d4d-f554-4785-8a92-9fc5e4f2e263"
        },
        "item": {
          "id": "28a7f85d-4ad9-424c-acc3-0f97ca54b787",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3d19adb6-6d34-4406-820f-1f24ffc28b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1973a01-a944-44fc-a963-93ba2a0a532b",
        "cursor": {
          "ref": "7da15e80-e74f-43d8-b51f-c2d7c6c7361b",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ad9c3544-7cec-4732-b41e-c1cf300b4f5d"
        },
        "item": {
          "id": "b1973a01-a944-44fc-a963-93ba2a0a532b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1721ce51-0b40-4780-8954-3918513b0c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2631a962-796a-48f2-89ba-246dc95feaea",
        "cursor": {
          "ref": "ae7a25c3-9892-43a7-b3d6-9a1dc0950117",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1394571b-3ee8-4ed5-8f31-29b402b5228a"
        },
        "item": {
          "id": "2631a962-796a-48f2-89ba-246dc95feaea",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "603dbe1a-3469-4789-9ee2-bf296f157ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116922f3-abd7-4c39-859c-698122337092",
        "cursor": {
          "ref": "9e14420f-1659-4ba8-b358-f54f2ad96cdf",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "01c95ccb-2dc0-44f3-a1fd-8228cfaf6fc2"
        },
        "item": {
          "id": "116922f3-abd7-4c39-859c-698122337092",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "33c780b5-8b87-4943-ba77-5d7bc27393e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54801c3-e538-491c-96aa-e6d8344b8029",
        "cursor": {
          "ref": "d21a4c0b-fae8-432f-aaaf-9565c34913d5",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "31c48f78-b7d2-41d9-b8a4-39089d7f45fd"
        },
        "item": {
          "id": "b54801c3-e538-491c-96aa-e6d8344b8029",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f35b7781-a6ad-497a-936d-a888298cb58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93972ceb-782c-4041-9a37-ef71e656057c",
        "cursor": {
          "ref": "d785bee8-dcbd-4ab6-93cd-72e662397687",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a899568a-10f6-4571-ab3d-a58a9c2accbe"
        },
        "item": {
          "id": "93972ceb-782c-4041-9a37-ef71e656057c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0565dde7-75f9-44a4-834b-14c109c18706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7401bd2e-86de-4483-89ba-c68066066058",
        "cursor": {
          "ref": "dbbc497f-0d82-486c-8cae-6c3d34f9a1bd",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "adaac499-772d-46a8-bf2c-f12e788a8b82"
        },
        "item": {
          "id": "7401bd2e-86de-4483-89ba-c68066066058",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2f4f5de2-70a2-4b75-b81a-def587e98836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107ca4f7-53b8-48ee-8ee3-42cc973e1cab",
        "cursor": {
          "ref": "1538ab1b-5d01-405a-8b65-db16caa8fa22",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "14f634e9-8297-463d-ad1f-c801ba8643c2"
        },
        "item": {
          "id": "107ca4f7-53b8-48ee-8ee3-42cc973e1cab",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6b54fecb-9d31-44fe-be34-7dfb59426ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe35995-247c-44df-9f4b-12b604e7eb24",
        "cursor": {
          "ref": "2e54336d-ad55-4a1d-9d2b-e9449d21aa46",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6e725d17-5cda-4f43-9557-32615f374ee8"
        },
        "item": {
          "id": "7fe35995-247c-44df-9f4b-12b604e7eb24",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ef940116-945e-4c3d-846c-9f31e966bcd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc0d7fb-521e-4054-9ded-fe4d21caf444",
        "cursor": {
          "ref": "686ae537-c925-400d-9b58-6fc5ee55aabc",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f84a6786-6b2c-43b0-8bb0-e04b94d5e979"
        },
        "item": {
          "id": "1dc0d7fb-521e-4054-9ded-fe4d21caf444",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "730845f2-edff-41c0-bab7-58d7c02c5f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67992eb-860f-4f23-9562-88d94a92b88e",
        "cursor": {
          "ref": "39bbeaea-b9cf-4377-b62b-6693290ee68d",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a4190ca8-b0c5-4305-a96f-33db30f0b38b"
        },
        "item": {
          "id": "c67992eb-860f-4f23-9562-88d94a92b88e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "29657ec8-3b34-4f6e-8a0d-04c53e2f693c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a7d6b1-cf8f-4b81-9d1d-ed74d06ae0ce",
        "cursor": {
          "ref": "08bdeafd-fe44-47d0-b16b-5c47b93307b5",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8b7a0ac2-a273-4481-ba22-974ee39c0010"
        },
        "item": {
          "id": "63a7d6b1-cf8f-4b81-9d1d-ed74d06ae0ce",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4f32b2b9-3b81-449c-a50c-924a56c5e559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 159,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75a550b-bdfa-4966-b38a-63b9e6387473",
        "cursor": {
          "ref": "05e84537-4476-4907-a3a4-a7dff9e40af9",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "02bb5fb9-5046-4802-bf12-6b960d3276da"
        },
        "item": {
          "id": "e75a550b-bdfa-4966-b38a-63b9e6387473",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "961cf3e7-9a72-4304-bf39-0b87802931f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6031804a-cf11-4dc9-8fa6-25f39f89a1ff",
        "cursor": {
          "ref": "88513c3b-7ef0-4ddb-8566-b6caa7019fc9",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c0fa1a35-de2f-48db-85c4-a3c8887303a8"
        },
        "item": {
          "id": "6031804a-cf11-4dc9-8fa6-25f39f89a1ff",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2880d558-3d81-46c2-84d0-fa04af0a5b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fc1834-3c1c-461c-acc6-fcaf3fbcd6a1",
        "cursor": {
          "ref": "e89ebe75-a304-4bad-882b-50e9289e446a",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "97076873-d289-4558-8da9-5111ac8d5ee1"
        },
        "item": {
          "id": "f8fc1834-3c1c-461c-acc6-fcaf3fbcd6a1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "36cbd2d7-34f7-4b10-a432-d73ad273be75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2615106-05fa-4046-991b-9371a3910638",
        "cursor": {
          "ref": "a36b42e0-de76-4e4e-afc2-e34ae0de4642",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7057714c-2e60-4005-9672-630aff23112b"
        },
        "item": {
          "id": "b2615106-05fa-4046-991b-9371a3910638",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "32f64059-42fb-4d25-8477-49d8e2c0dc79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3062856c-3739-4b98-92c6-5a9efc0069db",
        "cursor": {
          "ref": "372ab1a3-308a-4b11-9b88-ed9d69f37be5",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "29d799a3-6d18-41f5-b091-ade031e332f4"
        },
        "item": {
          "id": "3062856c-3739-4b98-92c6-5a9efc0069db",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7001e839-38c9-4f1b-8e3a-afcf93f24c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03acd06d-d33e-4bbc-b37d-88598b3af4ed",
        "cursor": {
          "ref": "9250d70b-6db2-4a4a-8f75-8de5a28b9b3c",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d373eaa2-53d2-4f05-989c-d0eb82683bc9"
        },
        "item": {
          "id": "03acd06d-d33e-4bbc-b37d-88598b3af4ed",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ceb4d5ce-0cb0-4081-9b39-99885d9cf63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb46c988-2167-4cad-8caa-282a2e55897e",
        "cursor": {
          "ref": "fb120d21-e149-4f54-b6e8-ea5991299cfc",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3b32701a-b9fa-4b5b-9b19-181e9ebea1aa"
        },
        "item": {
          "id": "eb46c988-2167-4cad-8caa-282a2e55897e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ac475b39-84ae-4cec-b23b-adfdf11d05be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f675921-790e-46a4-bae6-3ba618862e33",
        "cursor": {
          "ref": "bf72bd0b-1a81-4f40-bed6-0a40b24098b5",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "36bb9f6f-a4e0-4bed-8a0f-ccd5f8b0d6b8"
        },
        "item": {
          "id": "1f675921-790e-46a4-bae6-3ba618862e33",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8e89156b-0135-48bb-b940-81e15db68dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3778ad-c722-40d2-8618-751ea6be4468",
        "cursor": {
          "ref": "9d02afb2-75cf-4c9a-8115-57f8e96b63da",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6ffd42b3-c33e-4fe9-b359-eed15b64ae0b"
        },
        "item": {
          "id": "bb3778ad-c722-40d2-8618-751ea6be4468",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "25dad17c-be13-4b8f-ab34-8586fb13760b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3833b689-f8fe-48b8-b9f3-ff814b463126",
        "cursor": {
          "ref": "4ea6476d-86be-48c8-a11e-40518038d337",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "54b9bc55-2d20-42c1-925c-de7cfb16997c"
        },
        "item": {
          "id": "3833b689-f8fe-48b8-b9f3-ff814b463126",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f86c6be1-29b2-44ad-bddb-20a71262cf65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b2ec39-502d-43c4-a26e-5803f64978b6",
        "cursor": {
          "ref": "9e8a39e5-9cba-45a3-bfeb-7cb9e97993b1",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0e188777-6596-4522-90d0-7db4a888c068"
        },
        "item": {
          "id": "61b2ec39-502d-43c4-a26e-5803f64978b6",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "b61970d7-d6b0-4aa6-855d-5d972a5eb131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "24dbe60f-5880-48ff-b3d6-d90bf6b20791",
        "cursor": {
          "ref": "be9f9f4b-c71b-4642-8a4b-7bd0151c7a0a",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "58d61d2a-874b-4a45-a00a-7d8675b6e9b6"
        },
        "item": {
          "id": "24dbe60f-5880-48ff-b3d6-d90bf6b20791",
          "name": "credentials_issue"
        },
        "response": {
          "id": "11e9178b-ff91-4d5b-8058-7b2cf939cbb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "11ae829a-8be3-4a79-af9c-45c3e2962443",
        "cursor": {
          "ref": "055f45b1-aa4e-4025-851b-8f6a5ad649b6",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "88fb251b-17d4-47ca-b125-96883d9a8d05"
        },
        "item": {
          "id": "11ae829a-8be3-4a79-af9c-45c3e2962443",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f541c832-c062-4b50-9ee7-9085e336ed1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "4ec40a80-a3f2-4238-b669-2e3817b175c2",
        "cursor": {
          "ref": "8d487f81-3163-443f-b574-84372f74c2a6",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e29ef604-941e-425d-914c-24cbb36fc5ea"
        },
        "item": {
          "id": "4ec40a80-a3f2-4238-b669-2e3817b175c2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8b1c8911-3811-44b2-9957-4a18135cf186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "acf0502d-2f82-40a8-8375-a5926def3df7",
        "cursor": {
          "ref": "4a8e66cd-4ebb-4ea3-9519-00784b721395",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d1d42fc9-1b58-46fb-b5ac-e1abba9c5755"
        },
        "item": {
          "id": "acf0502d-2f82-40a8-8375-a5926def3df7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8700396c-91ef-4c1b-a487-bbf8c7c09d6f",
          "status": "Created",
          "code": 201,
          "responseTime": 9078,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee828c3-e4bc-4cd0-9716-64664235738e",
        "cursor": {
          "ref": "1a488fc2-145f-4594-b377-99ff65b934fe",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ded5c190-9fd4-4b55-b73f-cfeddf2c2d0b"
        },
        "item": {
          "id": "3ee828c3-e4bc-4cd0-9716-64664235738e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "25772cac-e216-4dbc-87b5-48993eb57b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "90a919be-209b-4a1f-8e2c-085a2c3898ac",
        "cursor": {
          "ref": "b796a20a-3e50-48d9-b370-4899dec25e01",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "05dc18dc-7ce1-41ab-9ab3-5962c8d086bc"
        },
        "item": {
          "id": "90a919be-209b-4a1f-8e2c-085a2c3898ac",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c23a4146-b1b6-4b53-ad9d-292d87e92f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "4452ddd6-6d90-4351-b1d2-b225b64e47c2",
        "cursor": {
          "ref": "d2c2b0aa-1bed-4b68-ae35-2d250218145b",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3ae6a161-933d-4e33-bffe-78d8da7d6b9f"
        },
        "item": {
          "id": "4452ddd6-6d90-4351-b1d2-b225b64e47c2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "93e07fc1-d71f-4b58-9a8a-9ab005fe3085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46c4b71-d61a-493d-a46d-2a3a03e4e211",
        "cursor": {
          "ref": "a6048660-f74c-425a-985c-0a4090b718de",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3c08c175-fb89-4f08-9082-4154c3106669"
        },
        "item": {
          "id": "c46c4b71-d61a-493d-a46d-2a3a03e4e211",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bf083972-a04a-4d59-80fd-ee8e1e34f24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72381d85-924c-46ed-bb87-d683b442bda9",
        "cursor": {
          "ref": "04653ba2-6daa-431c-a62d-0391e179d040",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4b401ccb-7ccf-4ea6-903c-25e7cee90561"
        },
        "item": {
          "id": "72381d85-924c-46ed-bb87-d683b442bda9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "83654234-e757-4db3-a28d-cbca8b568bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f000bc06-26e5-4888-97ff-235b1b726fbf",
        "cursor": {
          "ref": "d9f2f761-7cfc-4152-8877-1ae68f0e69ac",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "de614542-47bf-44d4-afe3-46d4f25c1d4d"
        },
        "item": {
          "id": "f000bc06-26e5-4888-97ff-235b1b726fbf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "80483712-92ae-4724-8bb8-7533fcc6353b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e80548-a9b0-4ac5-9e11-9b76a54cd3e5",
        "cursor": {
          "ref": "3d8530be-0b8f-40ab-a8b4-e99333de97f2",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3d4e4a06-5608-4703-a0a0-d78790983b96"
        },
        "item": {
          "id": "23e80548-a9b0-4ac5-9e11-9b76a54cd3e5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "75053dd8-1998-4f3d-8b63-53fb41c6e90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a95287e-08f7-43ec-b504-c4f952842a83",
        "cursor": {
          "ref": "4f284732-15da-4b56-a16e-0c394c947703",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6f141bac-ce9b-4e4a-a48a-9130a9992695"
        },
        "item": {
          "id": "3a95287e-08f7-43ec-b504-c4f952842a83",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6a527276-95da-40e8-8d63-9a217dfe6c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b6f94d-9a71-4a24-9029-e6bbe5773e87",
        "cursor": {
          "ref": "26588984-f180-4b7d-ada9-468027390926",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6072d0f8-bb3d-47ad-a089-d19b88ac5186"
        },
        "item": {
          "id": "46b6f94d-9a71-4a24-9029-e6bbe5773e87",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1a6068cf-243a-49d3-95a6-49c6b01442b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80058636-dd03-4c6d-8594-a53a83d848bc",
        "cursor": {
          "ref": "e28d5255-8589-4a55-9d27-af9dfd6fe343",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "477a0217-3c5f-4fd6-adab-04b27eca8ba6"
        },
        "item": {
          "id": "80058636-dd03-4c6d-8594-a53a83d848bc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "33540926-370c-4750-9248-650928fb7e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abed6965-c9ca-440b-8eb7-4153f4d7e3bd",
        "cursor": {
          "ref": "9a8eb6a3-5b90-49d6-842b-ffda80a15195",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f1decf8c-6fbe-4dfd-baca-4edb92c5c01b"
        },
        "item": {
          "id": "abed6965-c9ca-440b-8eb7-4153f4d7e3bd",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4e37accd-52ef-4653-b143-225d285fceb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52481b2c-e267-4fd9-bea7-4f6fe9609f42",
        "cursor": {
          "ref": "fd2c7548-3b2f-4caf-986b-3981feb2eca2",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5c3e3e82-c6e1-4207-a577-e394e5652250"
        },
        "item": {
          "id": "52481b2c-e267-4fd9-bea7-4f6fe9609f42",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bfc0fb01-0bc9-4c19-8aa4-591165d1d1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82688de2-4916-4a7c-93da-2da505bd157c",
        "cursor": {
          "ref": "ea874dcb-285b-4f8b-99a2-116f583283bb",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8b09001c-f187-4939-9c28-9f762a8fda2f"
        },
        "item": {
          "id": "82688de2-4916-4a7c-93da-2da505bd157c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6f6aea71-9a59-46f3-ac34-38715ab5c568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3d6a2e-f2fa-429e-a4d9-f5de6ad55537",
        "cursor": {
          "ref": "3cf5c806-6b8e-4d0f-8beb-48ae05d77f8f",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "80c6a4d3-cb68-4f39-af0d-d14f726deebb"
        },
        "item": {
          "id": "4f3d6a2e-f2fa-429e-a4d9-f5de6ad55537",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9c02394b-c158-4eb5-8eea-93844c73bd9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8e1548-d9e5-4c21-8574-c3317087a31c",
        "cursor": {
          "ref": "8b3767b5-1fdb-4c67-bf5c-91cf095bb6a9",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c12f9a58-03c2-4c04-aa4e-cdc72344aa04"
        },
        "item": {
          "id": "bf8e1548-d9e5-4c21-8574-c3317087a31c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "366aece8-a06d-43ac-a1fa-606a83e4180e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494a4f25-be3f-4df7-8235-17a9232883c6",
        "cursor": {
          "ref": "4ceb91b0-1f36-4b75-90a3-c82ecf9acb51",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "cf006923-0ed2-4c18-b434-c5fbb419fa2f"
        },
        "item": {
          "id": "494a4f25-be3f-4df7-8235-17a9232883c6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "330f5472-1b59-4f1d-b828-66cdfedd0d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d83ee2-a24e-4b02-9e39-9171ff2ac29d",
        "cursor": {
          "ref": "290dd638-a93a-4f8d-bcde-267a5e807ede",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e840638a-9135-435c-bed8-b4b0acfb497e"
        },
        "item": {
          "id": "98d83ee2-a24e-4b02-9e39-9171ff2ac29d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6c302e0e-09b2-4217-b536-dc59276a079d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961ede5a-4793-454a-b7e1-d79bb4bd7aec",
        "cursor": {
          "ref": "d88409bc-9fd4-44a9-b83c-e351cf4b5a1a",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "93b35d75-3695-431c-b3bb-610a354b0810"
        },
        "item": {
          "id": "961ede5a-4793-454a-b7e1-d79bb4bd7aec",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "24c3367e-d9ae-49e3-9f5e-563815522434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd38db8c-6b8c-45c0-b7e5-5df2f88ee119",
        "cursor": {
          "ref": "1aaf8675-2263-4caa-99c1-3b398a97d734",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "03925ffa-8775-446d-a73e-a5012d7e2acd"
        },
        "item": {
          "id": "cd38db8c-6b8c-45c0-b7e5-5df2f88ee119",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5e3aafde-0aae-4c10-bb7a-f8dda321e3c9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 52,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "76285430-473f-496e-9887-cdb7e7bf8d59",
        "cursor": {
          "ref": "e39dab56-5d18-4e87-a4b2-25f8f86c270c",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e41ef8bf-9714-4c53-b53f-1e7785522c95"
        },
        "item": {
          "id": "76285430-473f-496e-9887-cdb7e7bf8d59",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "845c0f25-6b07-4762-a067-459da4a55df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c241a3d-336e-49cc-88df-b7df0f613da8",
        "cursor": {
          "ref": "169b5f60-0a75-423a-ad8c-60491b00a795",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "839b4e3c-fc76-4414-8620-b8a2f208e15f"
        },
        "item": {
          "id": "6c241a3d-336e-49cc-88df-b7df0f613da8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0ac724e1-0513-4552-bf74-e227f1a905b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493041ab-90f1-4f32-a654-51aafe693b5e",
        "cursor": {
          "ref": "45293edb-87d6-4fe1-8e16-4637f7f9bb60",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2b52b02f-f0fa-4a9c-88b2-7a43db2ffff7"
        },
        "item": {
          "id": "493041ab-90f1-4f32-a654-51aafe693b5e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "74c57bf5-5862-4282-a982-00bd388eff94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c9e713-3dc1-4ffb-ba6d-7d64cfc3621b",
        "cursor": {
          "ref": "461d7f73-63c2-4445-a0c3-810c39c60cb4",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e3db98ca-4323-44e3-b12d-a8c433753690"
        },
        "item": {
          "id": "a3c9e713-3dc1-4ffb-ba6d-7d64cfc3621b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e58aa270-8b81-4f38-a404-6b5ac8d44bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d29e29-b3da-40c8-b5c2-532a0b6e8e55",
        "cursor": {
          "ref": "6aa306a7-f5dd-410c-b29c-244be6de93c6",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6979a289-7ad0-4148-889b-346813b0cb39"
        },
        "item": {
          "id": "04d29e29-b3da-40c8-b5c2-532a0b6e8e55",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ad364378-7fb3-4945-9799-c5b1157fe0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c7ae35-9017-41f7-a7b7-d70277f3ef0b",
        "cursor": {
          "ref": "239fe68a-2960-4f22-bc08-02f7d9d5c5ab",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ed8a9c25-2c3a-4f0d-b2c5-5a2b84f7f202"
        },
        "item": {
          "id": "e3c7ae35-9017-41f7-a7b7-d70277f3ef0b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "75e9d864-a5ae-429a-910d-a4cea59cd82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fa64b3-6acb-4cd9-8813-5f28cb6f58a0",
        "cursor": {
          "ref": "eef113fb-d237-4aa5-ba60-e89e05a36bc5",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "30b2e9d9-f922-4724-b6d6-fc92cdc84f24"
        },
        "item": {
          "id": "f9fa64b3-6acb-4cd9-8813-5f28cb6f58a0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "15cee0d2-a161-4394-8d14-b38f97808322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43417fd5-81d1-4fa5-b61f-abdcbe1c4c0e",
        "cursor": {
          "ref": "1e3714fb-ca3f-4369-9a3f-92f917131a13",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3258103e-c3aa-4736-b87a-c63562ce3315"
        },
        "item": {
          "id": "43417fd5-81d1-4fa5-b61f-abdcbe1c4c0e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d9f00752-414b-4d0e-9ed8-0c290b06842c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "78867dcc-30ef-468b-940d-9e795222fe03",
        "cursor": {
          "ref": "753d971d-e96f-4389-a155-5ec080553fb9",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d342e1af-92e2-4463-97b2-4656c523a9f6"
        },
        "item": {
          "id": "78867dcc-30ef-468b-940d-9e795222fe03",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "64c6a29a-7082-4b26-9d5a-f859fde72dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c70a574-09ff-42be-be19-3b274dfbfa61",
        "cursor": {
          "ref": "c26dbd7a-a169-448c-b070-5cdcf8b38d18",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2ff6539a-65ff-4daa-8fb1-9ebcbc1ce042"
        },
        "item": {
          "id": "7c70a574-09ff-42be-be19-3b274dfbfa61",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4e7f57ff-04b3-4612-bb1d-5ba7a8f176b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f6b903-32f6-4f3f-a515-8563b06a83e0",
        "cursor": {
          "ref": "91bd22a7-8e7e-4840-aa9a-7e842288a155",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "530adeaf-bc6f-4be5-b478-dbc70d6386c9"
        },
        "item": {
          "id": "20f6b903-32f6-4f3f-a515-8563b06a83e0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "67e432de-d9e0-47a2-b68e-67758e043b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae951e4-305e-48d4-836d-293c7df8c457",
        "cursor": {
          "ref": "2447b10a-58be-4b0f-afc4-8bd56a6595ca",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "707f6278-9be3-4bed-86ee-30f56bc03474"
        },
        "item": {
          "id": "cae951e4-305e-48d4-836d-293c7df8c457",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8d9e2e78-b799-4bb3-a750-93a03ff5975b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1f2642-2ead-482d-9ee2-d9002de9ead4",
        "cursor": {
          "ref": "5eaf5d20-0079-414e-8612-d8513dc54b9a",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "54744b6f-40cb-4f94-9e4b-5a7bfa0f990f"
        },
        "item": {
          "id": "aa1f2642-2ead-482d-9ee2-d9002de9ead4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cf9c57c9-241e-48aa-af09-dc64de953fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a44b5d-c697-46fe-9a7a-b4fe8b57a755",
        "cursor": {
          "ref": "b96ba877-7534-490e-92f5-d7770775ed6d",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c86d85e3-7349-4aba-b4c3-48c3cfbad1e5"
        },
        "item": {
          "id": "13a44b5d-c697-46fe-9a7a-b4fe8b57a755",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a1294445-fbef-4bbd-bda8-2ac64ff8861f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465c8e50-ad79-4ac4-bd14-7ad5cdbe91fd",
        "cursor": {
          "ref": "082d5159-3194-4027-b5ba-fbbc112de585",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "401cfbfc-cc33-4f00-9083-26dacc73e0e4"
        },
        "item": {
          "id": "465c8e50-ad79-4ac4-bd14-7ad5cdbe91fd",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "46c83098-b7f7-472e-a4b2-9756fbe9c709",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 48,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "b6e865fe-2793-465f-84bf-f0a2bb66a4c0",
        "cursor": {
          "ref": "edfd234e-c7e5-4cae-81d8-b04683f5ddb0",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a23b8606-dfa9-4a57-af47-c97e5820f605"
        },
        "item": {
          "id": "b6e865fe-2793-465f-84bf-f0a2bb66a4c0",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0293707c-e9e6-4032-9e63-dd3043426661",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "16089ef7-9b19-4266-9dcf-cce0e3087e39",
        "cursor": {
          "ref": "a7c85264-98ac-4758-b032-ad92f89db60a",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "80993232-d301-4b65-a48e-9664000cacd1"
        },
        "item": {
          "id": "16089ef7-9b19-4266-9dcf-cce0e3087e39",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d465558b-51a7-4851-a5c6-475581a8f331",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "bda84f14-17ca-4678-8121-3a89bc3bf20c",
        "cursor": {
          "ref": "3bfe7e77-de85-4c82-a28f-21a633b7057c",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5a7dec1f-38ae-497a-8870-5dfc7153bebc"
        },
        "item": {
          "id": "bda84f14-17ca-4678-8121-3a89bc3bf20c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "13eed041-88ca-4893-b06c-3702f9abd203",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "553fe0e0-17c2-453f-8208-508eaa82558e",
        "cursor": {
          "ref": "92162328-02f4-4894-8e50-92582ce29f38",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1bf071f6-1983-4cf5-a94f-908ef5a3be9a"
        },
        "item": {
          "id": "553fe0e0-17c2-453f-8208-508eaa82558e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5dbcf235-b495-4384-8632-47ebff7e1091",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "76f0de55-d739-4e22-be11-682f12751bf6",
        "cursor": {
          "ref": "03801d66-1fcb-44b2-aa73-6c664b409d15",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d616db2e-3726-4ddc-a98f-efb11f96fb19"
        },
        "item": {
          "id": "76f0de55-d739-4e22-be11-682f12751bf6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3c0fb564-3c03-4d8f-919d-3ac336ad7221",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 84,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "9dc53448-9012-47f9-a7b7-cf13067de774",
        "cursor": {
          "ref": "90154f90-b687-485e-9498-17250fc1f1b8",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2d648d8a-c0c2-4635-ab43-11ed589e1fcc"
        },
        "item": {
          "id": "9dc53448-9012-47f9-a7b7-cf13067de774",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9082a288-0ab3-4af5-8b36-cc490b7ce91e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0e3db2-2667-4a3c-ab78-2f9e84b419dc",
        "cursor": {
          "ref": "9ade8e7b-9536-4ce5-bc34-22c280c41e6e",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "25c7628d-5257-4b86-b31c-67d65b141dcb"
        },
        "item": {
          "id": "ac0e3db2-2667-4a3c-ab78-2f9e84b419dc",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "493586ad-e72d-4688-9968-9bafb490ddab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88c859d-9058-4cec-983b-34781d0317ba",
        "cursor": {
          "ref": "b5c32039-8c34-4eca-9a23-676e2358b02e",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8edace27-aab5-44bb-b885-c9552684da5b"
        },
        "item": {
          "id": "b88c859d-9058-4cec-983b-34781d0317ba",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "96ca71e6-86d6-42e9-8096-b32d5d23b716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ec888f-0648-4cef-91e4-2f3be925bc5a",
        "cursor": {
          "ref": "8f8e26bb-3845-4e11-b357-71e2a9b79e5d",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "632f587f-fe6f-4235-9ffc-4cdd84bd573e"
        },
        "item": {
          "id": "53ec888f-0648-4cef-91e4-2f3be925bc5a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d18b6a5f-849c-4dfc-ab3a-a34c043e0dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3545c9bd-e142-40cd-bf15-e4645d63b27a",
        "cursor": {
          "ref": "050bd6f1-c794-46af-83dc-942754d4e70b",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a01b2b89-8db6-4a49-b55e-5046d50570dc"
        },
        "item": {
          "id": "3545c9bd-e142-40cd-bf15-e4645d63b27a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e1af2333-edf3-43ca-9f7e-9ed5cc2a7090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1a4a76-0e63-4d20-b2ae-8f4c3d7c6c72",
        "cursor": {
          "ref": "35aefb18-b2c5-4bb0-9da1-603a1c875247",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5485bd54-ff07-44ae-857f-7c3977661018"
        },
        "item": {
          "id": "eb1a4a76-0e63-4d20-b2ae-8f4c3d7c6c72",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b89816e9-9b06-4595-9900-97fa85e00742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80cea71-5eb7-4e76-ab62-95b22249204c",
        "cursor": {
          "ref": "2de8a596-0762-42aa-bbaf-62599b25cbe6",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "69774864-b3be-439a-a701-37c1076216f5"
        },
        "item": {
          "id": "d80cea71-5eb7-4e76-ab62-95b22249204c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e3ecff85-1cb1-4319-9aab-abd288e2aeff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a24d3d5-a36b-4795-8a97-ce418e130a20",
        "cursor": {
          "ref": "009ee8a7-deda-4906-94f7-786cce612cf0",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a5ba5f9f-0f0e-493a-950b-129db6434d64"
        },
        "item": {
          "id": "1a24d3d5-a36b-4795-8a97-ce418e130a20",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5fc900b5-f34d-4031-a00c-f9ab7b582081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d993c3-bc31-4342-9978-46985102c72c",
        "cursor": {
          "ref": "17be75f7-7855-45b7-ac13-c498b9d1258b",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5a202dd9-b97b-4bcd-9c0b-0474f22ae76f"
        },
        "item": {
          "id": "89d993c3-bc31-4342-9978-46985102c72c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "56116b7a-bfa7-4a33-95e0-012ac424c2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9162b8-e71c-45a5-be93-0afc3db93a2d",
        "cursor": {
          "ref": "502b8fa6-1aae-4e71-8070-10ebda461d16",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "283a8259-9784-436c-ac37-8aaca545b585"
        },
        "item": {
          "id": "cf9162b8-e71c-45a5-be93-0afc3db93a2d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "586b4a08-d637-45ab-9bd5-654db6314245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a77b54a-1d2b-4201-a9d4-84817a193c5e",
        "cursor": {
          "ref": "e064e861-8b2b-4a09-84a3-991ef7a95539",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0caabdef-a46d-4ae9-964d-e50faad82b8a"
        },
        "item": {
          "id": "7a77b54a-1d2b-4201-a9d4-84817a193c5e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f58f0e9d-6754-4645-8e25-8f425ab92d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534a620b-bb56-450a-afab-8720cb8138f7",
        "cursor": {
          "ref": "b54d416a-411b-4c2c-b03c-ae47d3a0017e",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "01f019b8-86d6-4159-8b14-b37fc3526c5d"
        },
        "item": {
          "id": "534a620b-bb56-450a-afab-8720cb8138f7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ee6bf6e3-2a05-4b93-b7ea-f76e88beadcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d2cc6f-49a5-452b-b9be-27240c27223b",
        "cursor": {
          "ref": "83f01e0b-a7db-406c-9909-7e755c33a88c",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f319389f-aadb-4d72-b989-423f1b6096ef"
        },
        "item": {
          "id": "06d2cc6f-49a5-452b-b9be-27240c27223b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6d411412-268f-4386-92cf-03b38ef2e29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889ec584-156e-40f5-81d8-a9f4b609aede",
        "cursor": {
          "ref": "6b125fbe-93e8-4238-833c-a474563cbc09",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2012af89-cb2f-4fab-ae7a-9f1e351e34ef"
        },
        "item": {
          "id": "889ec584-156e-40f5-81d8-a9f4b609aede",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4ce6c73b-7bb0-4f1f-a157-fd217646645f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1014fd-d999-4025-8fee-7214498af177",
        "cursor": {
          "ref": "18e63f54-3a00-4ac1-b056-8639edbb7156",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5ef124fb-5f7a-48a6-8bc7-d6c899abf64e"
        },
        "item": {
          "id": "ec1014fd-d999-4025-8fee-7214498af177",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b0554e2e-8e7a-498e-a6a7-ae766901a1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9575d63-afd8-40d8-be0c-5b0c615a1914",
        "cursor": {
          "ref": "d0cc1201-f060-4ade-b7f5-d20f24ada25a",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6a733cdd-8e5a-42ae-992f-79998d703124"
        },
        "item": {
          "id": "e9575d63-afd8-40d8-be0c-5b0c615a1914",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1dc41218-65a3-45d2-8754-217ec1438788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30bebfea-3ec1-47e4-9dcd-0791992b2884",
        "cursor": {
          "ref": "fe1d33b5-e8a2-4508-9174-29e52ca00c96",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6a7eb27c-8b50-4e79-9a18-d7323fdccd28"
        },
        "item": {
          "id": "30bebfea-3ec1-47e4-9dcd-0791992b2884",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8bfecb97-cccd-4090-afde-4579425aac05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f285e4-88d2-4491-b8f5-df9516039a24",
        "cursor": {
          "ref": "6e7ea575-cc75-4955-a32b-950ef9de8225",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0abb07a9-5525-4919-9a10-1b859041453e"
        },
        "item": {
          "id": "97f285e4-88d2-4491-b8f5-df9516039a24",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9b2fa651-8997-45f7-a5d6-c65c2ef1de80",
          "status": "OK",
          "code": 200,
          "responseTime": 140,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "18c3e32d-c550-4fc1-a980-ad4dbe18ac5b",
        "cursor": {
          "ref": "53b89e92-07dc-477b-b55e-c9422a64c30b",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d4f67a49-9390-4410-81d4-7a6d510a0b80"
        },
        "item": {
          "id": "18c3e32d-c550-4fc1-a980-ad4dbe18ac5b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f5e837c1-0039-4cb6-84cd-9a8c420f45ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fb023b-1181-475c-b8c6-43ccf227d65d",
        "cursor": {
          "ref": "4045e33f-e64c-49a7-b9fb-85bac31e7fb5",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d85adeb2-0b0a-49aa-b68b-0fff44923ce0"
        },
        "item": {
          "id": "14fb023b-1181-475c-b8c6-43ccf227d65d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3f317cfd-a914-4807-b651-17b61d870cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b64d6f5-7c16-4057-88e3-fb817baa4dd9",
        "cursor": {
          "ref": "cd8b0b5a-2652-4cd0-aeb7-51c6d80e6f95",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7a5fb5d6-6287-41a5-b7e4-4ec4fb5a6c14"
        },
        "item": {
          "id": "9b64d6f5-7c16-4057-88e3-fb817baa4dd9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "38db9d95-5407-42c1-82b8-f36be95d6d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ab68ef-f3e8-46ef-a5ab-ea5ad76d9b11",
        "cursor": {
          "ref": "8eec42c9-69b1-4785-b336-95b18ae46c9e",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8c1f4670-b852-4bd2-9530-739847af80a8"
        },
        "item": {
          "id": "37ab68ef-f3e8-46ef-a5ab-ea5ad76d9b11",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "20db64f9-1961-4a3a-aa25-1fc2bde66179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59277b12-3ebd-48e4-b71c-f718e3a40eea",
        "cursor": {
          "ref": "446e9073-4280-457f-bec4-286c8a164a83",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "396332a9-5abc-4da2-8a08-43deca5c6336"
        },
        "item": {
          "id": "59277b12-3ebd-48e4-b71c-f718e3a40eea",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c103994f-a16d-41a2-b3d3-730bea7be9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27da1a21-8ddd-42d8-b7c4-666c0acf29e5",
        "cursor": {
          "ref": "13155776-509d-4ac1-bec4-c45c928e1845",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "201cde8e-33fc-4db7-9f01-7ebd892d1fcf"
        },
        "item": {
          "id": "27da1a21-8ddd-42d8-b7c4-666c0acf29e5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a621ca9c-88fb-423f-9d8a-9fd65df6ac24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47eb88fa-f550-40d8-bd5c-357a5066249b",
        "cursor": {
          "ref": "5635de15-f45e-4800-a023-dc1ef050bdbf",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e1ebb7ec-1be9-46fc-9607-f5764fe3985a"
        },
        "item": {
          "id": "47eb88fa-f550-40d8-bd5c-357a5066249b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "45506af3-51a6-4dd2-bbe1-3ce4f00cf120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4423b7-fb88-4cb8-8eaf-6b1731a706ee",
        "cursor": {
          "ref": "983b9dd0-5a88-4d21-81ba-7e278f688f92",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2d6fe652-6939-4b8e-b0d9-a2e167c8545d"
        },
        "item": {
          "id": "1a4423b7-fb88-4cb8-8eaf-6b1731a706ee",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "282371e9-f344-4747-9160-acf11245d71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2912bf-7652-41c0-ab35-c429625dfc50",
        "cursor": {
          "ref": "df4e180e-0885-4bb5-92b7-4a7194a9dec2",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e31a5713-ceea-4ef3-b7ff-a59f9947027f"
        },
        "item": {
          "id": "ef2912bf-7652-41c0-ab35-c429625dfc50",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b5ea6b9c-77a9-4e07-8fec-46d78bfacbc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3ef063-555a-469f-b66b-8ba63749887a",
        "cursor": {
          "ref": "838cd124-1211-4fa1-8c37-41beb89c47b4",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7239e4ea-5a77-42c1-8272-ccf6d2176436"
        },
        "item": {
          "id": "1e3ef063-555a-469f-b66b-8ba63749887a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2f31acf3-986c-4877-8cfc-c8ff926d18ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f64800-2dc5-4fc2-b2cd-4491b3a3688c",
        "cursor": {
          "ref": "da05a81b-4374-47e2-b914-31ca3465a3c5",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4ec8cada-d986-4a38-903b-3023830939dc"
        },
        "item": {
          "id": "02f64800-2dc5-4fc2-b2cd-4491b3a3688c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d0a8016f-04a4-4017-b1f2-0abca9b6c180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af58c2c-5764-4eda-ad9d-deeca1615aa8",
        "cursor": {
          "ref": "ccade1d3-2428-43dd-ac78-8b29b6645246",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a25a1cca-8c60-4216-9383-daae7de2103a"
        },
        "item": {
          "id": "4af58c2c-5764-4eda-ad9d-deeca1615aa8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e7b5e6ab-4594-4efc-9faa-28c1f5b2e4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d61529e-07e4-445f-90ca-65c31febc76f",
        "cursor": {
          "ref": "baacd624-145e-43fe-998d-bbd00603eb98",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9823b34c-5719-4c9c-912d-e2c6cdf7e5d4"
        },
        "item": {
          "id": "1d61529e-07e4-445f-90ca-65c31febc76f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0b7cdb10-a57d-4053-90a9-998149b1e188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a058d3-c185-4985-9d95-c372a3a0afb2",
        "cursor": {
          "ref": "ceff5f5b-669f-4b8c-b38c-49e453dbe204",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d4c42a8c-70a9-4c64-8848-6affbfb4a956"
        },
        "item": {
          "id": "75a058d3-c185-4985-9d95-c372a3a0afb2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e0ec1c18-7121-49e8-8037-894e4dcaa067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21222d2e-7f46-41f7-a90e-6d2096f82d6a",
        "cursor": {
          "ref": "6e972661-89f3-49dc-aae4-0df43f9ad117",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1824e2f3-8f2d-4464-8e6a-9bee44d3b3e4"
        },
        "item": {
          "id": "21222d2e-7f46-41f7-a90e-6d2096f82d6a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fcb0468b-6d6d-47c2-8431-d5fc22e07797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29dd384a-0b50-4c0e-848b-972912eed80d",
        "cursor": {
          "ref": "f12f3635-f5a3-4daf-846e-231dd90bcd59",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9fcf4c74-157d-4ece-a3ff-82944813a2f3"
        },
        "item": {
          "id": "29dd384a-0b50-4c0e-848b-972912eed80d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "78ebca69-38fd-4581-867f-4bc050488205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b170c2-123a-4857-a0e0-feaa7b2b4cc0",
        "cursor": {
          "ref": "4a6d8162-cd45-40c7-874f-b73033a90343",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f1803cfe-4077-4f91-877e-9ec396335ba3"
        },
        "item": {
          "id": "56b170c2-123a-4857-a0e0-feaa7b2b4cc0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e4e52dde-795e-494d-82ad-a3cd8226061e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fcb363-0352-4fbf-97d2-2fbbe8643151",
        "cursor": {
          "ref": "e1a3086e-325c-4641-a7f2-bb94f0eb1f8b",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b3bfee0d-b72f-480e-acef-2f974b8e9711"
        },
        "item": {
          "id": "97fcb363-0352-4fbf-97d2-2fbbe8643151",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a5f96651-2b20-4b1b-9684-4722af4df6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc31ab9b-bcd6-4b15-a629-2a867c794af7",
        "cursor": {
          "ref": "f0c26c08-19e8-4849-8a65-5aedf92bde4f",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "46c91f6d-1076-48a3-bc9e-f4a00e80da2f"
        },
        "item": {
          "id": "cc31ab9b-bcd6-4b15-a629-2a867c794af7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "cd43befe-4ebf-48eb-8e70-f7b974da0e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b508180-958e-46b7-9f71-eb45016cfd23",
        "cursor": {
          "ref": "cffb373f-9449-4cdf-ba61-a846c9e1a42f",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e1809f29-667f-4f6f-94ee-5995d0a72977"
        },
        "item": {
          "id": "4b508180-958e-46b7-9f71-eb45016cfd23",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3e8b2839-d8de-4163-bf01-7aee774f3abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aadb7ae6-8159-4ed1-9201-8d02d3497a0c",
        "cursor": {
          "ref": "0bde9cfa-c8aa-4885-8599-c2ef21a7f3f9",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8a6c6820-8749-4c50-aeb4-aa144233ab78"
        },
        "item": {
          "id": "aadb7ae6-8159-4ed1-9201-8d02d3497a0c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0132860c-7062-46ce-92e8-9a4012ba1c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4bbf141-3c10-4a3e-9b15-238c156b7a1f",
        "cursor": {
          "ref": "9b4ccd2d-5975-4d8b-bde5-3ff14345735c",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "214fb04e-9bbc-4b4b-87de-50ea518433ff"
        },
        "item": {
          "id": "c4bbf141-3c10-4a3e-9b15-238c156b7a1f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "198e5f75-eb3d-459e-87c5-feb71e93b7cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a089da4c-2d5e-49ec-953f-55fd47096a94",
        "cursor": {
          "ref": "2bf69fb8-9266-4532-a04e-705185b0641c",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c752cefa-3d91-41ab-af88-f96f9fc41a39"
        },
        "item": {
          "id": "a089da4c-2d5e-49ec-953f-55fd47096a94",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ac66c8b6-faac-4f06-a4bc-baf7eb27c634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c4970d-faad-4ccf-ab1c-216223773603",
        "cursor": {
          "ref": "2496069e-aecc-45f5-9b00-63fd0aef8f3a",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "45195ffe-5546-4efc-bac6-86c881c06726"
        },
        "item": {
          "id": "b5c4970d-faad-4ccf-ab1c-216223773603",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "501f47b3-3b0e-4a89-a2ae-a002c31a8d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd16e61-7532-4498-bb66-860aa041eda9",
        "cursor": {
          "ref": "12f73faf-46a7-4be7-a28b-6078705c0cd9",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "67f19630-583c-445b-863b-ae3e7c06f1a1"
        },
        "item": {
          "id": "4dd16e61-7532-4498-bb66-860aa041eda9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b91defb7-8e59-4135-8ba6-90a27380aa78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc943995-5071-44dd-8f4f-751f5e4c0b93",
        "cursor": {
          "ref": "7d4a1162-1b38-46d2-8c67-bbaff9ac3f2d",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "36a2aa1a-b5c3-4fed-b98c-445f42aa1333"
        },
        "item": {
          "id": "cc943995-5071-44dd-8f4f-751f5e4c0b93",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "59bd2c87-f092-46b2-873e-1514e95447ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd62894-54fb-4200-8ca2-d4d1e2f8384c",
        "cursor": {
          "ref": "d05cc4ad-db75-4410-88de-be4c2cbcf636",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d1ce1279-3ac8-4a7d-8fc4-b784c33c61fd"
        },
        "item": {
          "id": "0fd62894-54fb-4200-8ca2-d4d1e2f8384c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "643b84b6-59f2-450c-8e2d-caadadb3df17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed71114-cd1e-4dbd-86f0-989ac9067a28",
        "cursor": {
          "ref": "8e6215ce-03f1-44b7-8699-943ee0788c3c",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "277dfebc-6a61-4148-a3ac-ebd9ecfa5d3f"
        },
        "item": {
          "id": "4ed71114-cd1e-4dbd-86f0-989ac9067a28",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c9c2014c-f8ec-4237-beea-4ddfdd5185a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3936f7-c541-470c-86df-520663915d88",
        "cursor": {
          "ref": "2d3629b0-4010-4976-8dd3-95cb4d2bd0f2",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "000b34a7-896a-4967-8c29-50c8040644a9"
        },
        "item": {
          "id": "6b3936f7-c541-470c-86df-520663915d88",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1a6308c6-91f0-4ffd-ad8a-6730e6641b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb540b02-0183-4b71-a82d-732e956652b8",
        "cursor": {
          "ref": "ae00741b-24ba-4d46-bec1-176c884e15e7",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2b961ed8-3a89-4941-9e54-c721df47fafd"
        },
        "item": {
          "id": "cb540b02-0183-4b71-a82d-732e956652b8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6692e952-c789-42c8-93aa-8595b55ece8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af84ea2-475f-4a74-9c5d-ef1d56f9bcb1",
        "cursor": {
          "ref": "6dcb3ac0-abfa-492a-8b69-e8daeb884a35",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d5adea31-6bf9-4dd0-ba73-7047faa521e0"
        },
        "item": {
          "id": "0af84ea2-475f-4a74-9c5d-ef1d56f9bcb1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "97c3793c-191f-4bee-a04d-6e101cf14d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2f7d0b-3a50-4a12-9f23-e1e372f118dd",
        "cursor": {
          "ref": "5b2ff828-6b3f-47a2-9f1d-bb4ffeb41530",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "32bc2ef7-4196-4594-8911-11338ddeb3bd"
        },
        "item": {
          "id": "9f2f7d0b-3a50-4a12-9f23-e1e372f118dd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "347364b6-c566-44ad-81c8-2e5502c69550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af47e22d-9626-489e-9f06-2b19255ef1e5",
        "cursor": {
          "ref": "d7e4aea5-c588-4dde-b657-3973009777e3",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "de6a1620-79d6-4257-8f80-89781c07d688"
        },
        "item": {
          "id": "af47e22d-9626-489e-9f06-2b19255ef1e5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "51a2747e-cfc0-424e-8121-291e46bc81ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486bdb82-c69c-4066-a9bb-04b3bc48575c",
        "cursor": {
          "ref": "552f87b7-edb1-4497-942c-740c154ce333",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7597352f-c846-4fbf-bea3-dd2cf70dc2a5"
        },
        "item": {
          "id": "486bdb82-c69c-4066-a9bb-04b3bc48575c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "28506608-6547-40f2-b3d4-a597c454620e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce2faea-826b-4c51-9f01-6ced7190cef0",
        "cursor": {
          "ref": "c16abd96-c66b-47e7-9c36-6f5c1a374ae1",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "af13a74c-db77-47c7-8d03-71a4b7126f1b"
        },
        "item": {
          "id": "7ce2faea-826b-4c51-9f01-6ced7190cef0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "dbf7d6ac-3dae-434d-94bc-bdbbfff3c3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442990dc-628f-4132-8cf8-75d4abca09bd",
        "cursor": {
          "ref": "7339f8b4-2e23-41fd-ab41-ced7e6cedfcc",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d8be3f8c-1462-46ca-8720-18ba598c2c99"
        },
        "item": {
          "id": "442990dc-628f-4132-8cf8-75d4abca09bd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "eea77ade-1a63-45b0-903b-8fdba15c806a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac38afa-f6fb-48e2-b008-9fdcc32e37e7",
        "cursor": {
          "ref": "9a3b9a68-951b-431e-99e6-1f5261ff9454",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7caf8ab4-caf3-4e33-aa3a-54286c18fffc"
        },
        "item": {
          "id": "bac38afa-f6fb-48e2-b008-9fdcc32e37e7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ea06d7ad-0335-4529-9cf4-af0e326a550d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bf10f2-dfd2-4190-8455-196d8b363e46",
        "cursor": {
          "ref": "4d59b702-e14a-4ba7-aa36-7451c49fa7e5",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "68a16c28-359e-4550-aa4b-dd9ac2bc1ff9"
        },
        "item": {
          "id": "76bf10f2-dfd2-4190-8455-196d8b363e46",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1237a53a-d65b-4f67-acde-93dc83f64fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847f61fb-f86e-4347-bc80-9de0a6026de5",
        "cursor": {
          "ref": "1876c3e9-b32f-4130-ae8b-18955f075b48",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e5ca562e-46c5-4f11-8f28-0f86b549d1f1"
        },
        "item": {
          "id": "847f61fb-f86e-4347-bc80-9de0a6026de5",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a1753ee2-cf2f-4d2d-b5bb-dbeab786407a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c295bbc-6e56-4deb-a16c-0794a8f7a806",
        "cursor": {
          "ref": "cb2e1849-1888-4fef-abf0-8b6b405172cb",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8a1f7366-1c5d-4207-ad3c-a99b2c05cfe0"
        },
        "item": {
          "id": "3c295bbc-6e56-4deb-a16c-0794a8f7a806",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "87802682-eb4a-41e7-80e9-1e3f56a32b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f206656-6dc4-4ae0-a1cc-cc967f804b3a",
        "cursor": {
          "ref": "084968f3-9654-4e9a-8ff1-95c71f7d4399",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "933123af-ea49-48f1-b6e0-f2055dc8b2ce"
        },
        "item": {
          "id": "2f206656-6dc4-4ae0-a1cc-cc967f804b3a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0563ae59-fe42-41f9-b7fd-7b2a88d66873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666aa79b-8f5b-49f1-8ba0-5cf1653558cb",
        "cursor": {
          "ref": "1165fcd5-147e-452c-b2c8-7cb79ee198d3",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "804f27fe-a749-462c-bcd8-37da1ed2efa8"
        },
        "item": {
          "id": "666aa79b-8f5b-49f1-8ba0-5cf1653558cb",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "73ecd1d6-beb2-4563-ac47-94814582b1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce54476e-fadc-4dc4-b6bc-ea1a773479d1",
        "cursor": {
          "ref": "3488595a-2583-4624-a617-9affa49dc23b",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c202739c-3e01-43d2-8568-89e8f1ba6b60"
        },
        "item": {
          "id": "ce54476e-fadc-4dc4-b6bc-ea1a773479d1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3e51aba2-ff3f-4a3d-b42a-8596c9e9d90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8bb480-ae80-4740-98f7-9737874a4257",
        "cursor": {
          "ref": "2dad0bb8-1d90-4fab-aae3-f0538bf4b104",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "71e89ec1-86ea-488c-8b49-c5afe2bec9c8"
        },
        "item": {
          "id": "ee8bb480-ae80-4740-98f7-9737874a4257",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0c95f0d0-bf45-4ae8-8174-cb6c84a90c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae3e37b-f363-4eee-bb8d-bb0b67f731e5",
        "cursor": {
          "ref": "97a8e611-d75f-40ed-902e-5aca049a972a",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "eb12bdc6-bb31-4898-8376-6ff2541e42be"
        },
        "item": {
          "id": "3ae3e37b-f363-4eee-bb8d-bb0b67f731e5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "076dc3b0-818c-460a-8193-6c4e303e30fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35b801e-6f8c-452e-b01d-95a889b24453",
        "cursor": {
          "ref": "97f34a39-2ff2-4162-a78b-8ee3889d2e68",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "479df0c8-a506-435e-9f44-66f9abf3e849"
        },
        "item": {
          "id": "c35b801e-6f8c-452e-b01d-95a889b24453",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d1cad8b8-7257-43ba-ac9c-41a2a18fa1b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2114df-f7fe-48f4-9e0b-07115f1e3951",
        "cursor": {
          "ref": "c885e157-4d97-441a-ae9d-b0e265950c13",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d7235661-5d8b-4764-a17b-d81333f3c15a"
        },
        "item": {
          "id": "8a2114df-f7fe-48f4-9e0b-07115f1e3951",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6d754bbb-3bcf-4ea2-9fdc-bbcbd9e14545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cf59ed-825b-492b-ab76-b6072cfe0bcc",
        "cursor": {
          "ref": "cc9e69ee-3a66-4c0b-a359-776907410d77",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3a5f02fa-1a7e-4b97-8c2c-894d91b75e4f"
        },
        "item": {
          "id": "13cf59ed-825b-492b-ab76-b6072cfe0bcc",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "912c9446-8c1a-41a3-af00-8ba8e3503cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6a92f3-8b30-4309-b9e3-4d0e6d2421f3",
        "cursor": {
          "ref": "4abd3945-24f5-4c9e-ac19-927efa0bd5ee",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e907a277-8f6b-47c0-9e51-04bc03ce578c"
        },
        "item": {
          "id": "dc6a92f3-8b30-4309-b9e3-4d0e6d2421f3",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e67d1be5-e1f0-43c9-bc9f-cc163fb947b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f058e4-242a-4161-b161-c0f3f2764016",
        "cursor": {
          "ref": "e4269f4f-3086-45e8-b7cc-d135bb5164af",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c3f307cb-508f-4c46-81e3-704f21851f8c"
        },
        "item": {
          "id": "a7f058e4-242a-4161-b161-c0f3f2764016",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "96fcff6f-ee4d-44fb-bf40-76217a6c761f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76272b9-9715-4869-a7f7-99e3e3db5000",
        "cursor": {
          "ref": "3937571e-78cb-4274-98aa-4630ec03a0fb",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5f0ecf79-ade1-4596-a0f1-c47024007ba9"
        },
        "item": {
          "id": "e76272b9-9715-4869-a7f7-99e3e3db5000",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3b3625c9-a4e2-4ca7-aa26-13ad3b5b370d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b10b3a5-a063-455f-8e9f-6ac73f3bd085",
        "cursor": {
          "ref": "760b01a4-22f7-4951-97e2-2c39a2a06664",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "aefc66ae-c4b2-435a-88ff-847f69196f24"
        },
        "item": {
          "id": "5b10b3a5-a063-455f-8e9f-6ac73f3bd085",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b02cc210-c512-4ae8-9fa6-7d2c2292a143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5eb3762-c4e5-40da-ad23-873ce0ca59e6",
        "cursor": {
          "ref": "11f6306e-ab6e-49ef-8266-4d300bd53c9c",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b58c7b06-3eb7-46b4-8566-d8cf6b1508bd"
        },
        "item": {
          "id": "b5eb3762-c4e5-40da-ad23-873ce0ca59e6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "cdf8b8e5-ad19-4ae2-9877-b1de269ca1b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a14a6d-ce36-4717-86ae-785633c658d6",
        "cursor": {
          "ref": "242da984-a26c-4549-b77c-2bed15a07871",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4e86427c-bffc-4fc8-b0a7-a1e4ae99a2d7"
        },
        "item": {
          "id": "29a14a6d-ce36-4717-86ae-785633c658d6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "34f2e356-d3f6-460a-8f8a-4a236a302a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424e200a-784a-4324-ae0d-ca54d1fe1879",
        "cursor": {
          "ref": "b04974ae-163c-4065-b8fd-88d99f07a757",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ad3eba17-773f-41c2-8b07-81759517898d"
        },
        "item": {
          "id": "424e200a-784a-4324-ae0d-ca54d1fe1879",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7d03218b-16fa-43db-b478-f0768bc5d9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc87c00c-c8e2-4dfd-91a6-ef3a15266fd7",
        "cursor": {
          "ref": "20fa08fb-805c-4850-9f74-388eba0be325",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "233d3c72-034f-4d48-965c-21037c6453ec"
        },
        "item": {
          "id": "fc87c00c-c8e2-4dfd-91a6-ef3a15266fd7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "11eb2c50-46a4-4a2d-a657-1ed9fb2e73a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c78596b-07a7-4440-9a22-0fd9792fc596",
        "cursor": {
          "ref": "5c3ecf95-c2eb-45b6-9df3-85ba9b0eacc1",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9a991157-156b-496e-9850-a013554bb5fa"
        },
        "item": {
          "id": "0c78596b-07a7-4440-9a22-0fd9792fc596",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "456793a4-10bf-4ead-9feb-a2f88d5aa871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed095e8-7a53-4da8-a288-23327e781151",
        "cursor": {
          "ref": "d354b0d8-a12b-44ac-8d7b-4fa47a5e2f53",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f0a93ccd-3d1e-4d32-ac7b-c19d832cbf20"
        },
        "item": {
          "id": "bed095e8-7a53-4da8-a288-23327e781151",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0b4e226a-c2da-4529-b53c-9f7cc553d226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034c61e2-50a2-41d1-8bae-249406d5827f",
        "cursor": {
          "ref": "aceafb8a-c011-48b2-99ce-d929581f16f9",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a7321ad3-943e-4cf7-9380-345bb86ff5e5"
        },
        "item": {
          "id": "034c61e2-50a2-41d1-8bae-249406d5827f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0c0c51c8-7b26-4c77-891c-4257d4dffa28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673be89a-d1c7-488c-a95d-064b2fb8a049",
        "cursor": {
          "ref": "3c23e001-7170-4d29-b62c-bf00240d050e",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "08f574b2-99d5-4236-a401-4dcfd4b81572"
        },
        "item": {
          "id": "673be89a-d1c7-488c-a95d-064b2fb8a049",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "af7fccb2-6929-4afe-890d-7cd775d9e66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a60fc9-d556-4ada-9df1-afe58d2d09d0",
        "cursor": {
          "ref": "d0970133-b57d-4ec9-8b73-91235c3c01ca",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f03c9e32-ccfd-4469-ba2a-eb8868763076"
        },
        "item": {
          "id": "20a60fc9-d556-4ada-9df1-afe58d2d09d0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "cb352e70-3663-4f3c-a31d-59db1b30fe9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e8d9e0-59a7-4c13-a0ab-dc6b6d6d834e",
        "cursor": {
          "ref": "b3dd38f1-f19a-4dbd-ba8e-d6a3b053e78f",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "264bff57-6ed6-4dcd-923a-7e845a32dd17"
        },
        "item": {
          "id": "85e8d9e0-59a7-4c13-a0ab-dc6b6d6d834e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a871ed8f-6a87-46b0-ada6-3f12f0a7293b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698e3701-6f1c-410e-85f4-daace65381e0",
        "cursor": {
          "ref": "baf3ef5e-a7b8-49fe-9c7a-8998fc6e696b",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6d100b0d-b0ae-4a28-a44a-e7594bd297f4"
        },
        "item": {
          "id": "698e3701-6f1c-410e-85f4-daace65381e0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f3f93b4f-cc77-4237-8054-9256355e0434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c8451c-7230-4b6c-84b6-9840e8b3381c",
        "cursor": {
          "ref": "19d56379-3ad5-487d-913f-a751a43447e3",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "12170511-610b-4b4b-b4f8-fc8ad7f8830f"
        },
        "item": {
          "id": "a6c8451c-7230-4b6c-84b6-9840e8b3381c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6cc15cb3-b258-4113-99ae-efcf3a921cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ba9f79-2d99-446e-9f40-a422317ac0b1",
        "cursor": {
          "ref": "b6c432db-7346-414e-992b-971c0a43b67c",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2a195113-2cc5-40fa-820f-b1c95d7a6891"
        },
        "item": {
          "id": "90ba9f79-2d99-446e-9f40-a422317ac0b1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e4c6293f-36a7-4dda-9d5a-00d59da6fdd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62855b53-11ef-473e-80a6-5425caf5622e",
        "cursor": {
          "ref": "7de2c133-186a-4fd7-a855-54f9df7ad66e",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "94147226-a9e4-45d1-8c70-9cfdb0130c51"
        },
        "item": {
          "id": "62855b53-11ef-473e-80a6-5425caf5622e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5007e518-0fe3-4b49-9707-9a5d41591f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacce720-65bf-4e08-914d-50c7020bf01b",
        "cursor": {
          "ref": "69fbe7c1-15f5-4d3e-a120-818749f18bed",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1208e806-1545-4d8d-8f1b-744f693c523f"
        },
        "item": {
          "id": "dacce720-65bf-4e08-914d-50c7020bf01b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "32e18ad0-f647-4750-8fe4-b64d1a8301bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b845dc-2f27-4558-96a5-e3705787881a",
        "cursor": {
          "ref": "c4dc20ff-fc6f-4cf9-a210-42b9a35686ae",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a8fcb962-7853-4a41-a5ef-d716ccd1e2d9"
        },
        "item": {
          "id": "b9b845dc-2f27-4558-96a5-e3705787881a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f7354d45-cfb9-44de-ac3d-ddf798a0d32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013803ac-4b61-4665-9380-d12913f2e14b",
        "cursor": {
          "ref": "3868e566-48ac-4987-aefd-9d8fc2c04e33",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e9da7c9b-67b6-4750-9044-78ffbe6ac830"
        },
        "item": {
          "id": "013803ac-4b61-4665-9380-d12913f2e14b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "15d21f5f-69a0-420a-b881-3e3c2e35d202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4985ff2-3469-480f-bed5-c01c61d4793c",
        "cursor": {
          "ref": "2a0a6e1a-6b76-4fea-97a9-b2c0d9c5c446",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a820e13a-37d7-46d5-baa8-65c857baf1fa"
        },
        "item": {
          "id": "b4985ff2-3469-480f-bed5-c01c61d4793c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fab66df2-550b-4ad6-8802-b63bdc16b53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bc7492-b011-4429-9a70-da2545e2fb49",
        "cursor": {
          "ref": "e36d5cbd-24d4-4ea9-83b9-183ca0e2ae5a",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "77e96545-d764-43aa-b956-6ca077a8c6a4"
        },
        "item": {
          "id": "f1bc7492-b011-4429-9a70-da2545e2fb49",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "074c39c0-0f1f-45b2-b961-a3f45ce4e07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918f0df3-306d-413f-8f82-a0b26dd436f7",
        "cursor": {
          "ref": "e4167416-6061-422f-a771-3a24426a1c52",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ca2772d5-a06d-4195-ac91-0954eedda1ff"
        },
        "item": {
          "id": "918f0df3-306d-413f-8f82-a0b26dd436f7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "88199e94-ab45-442f-860f-6bb034b14530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356fab22-be0b-4bf8-a68c-defb545de700",
        "cursor": {
          "ref": "97f8c0fb-92fd-4108-b2de-dc9ae27e8055",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "437d085f-dfd7-4059-a5e7-c78764dab55d"
        },
        "item": {
          "id": "356fab22-be0b-4bf8-a68c-defb545de700",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9b03c29c-8b6c-4e98-9ffc-6df1f5a35feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d6a3bc-492c-498f-8668-c92351675472",
        "cursor": {
          "ref": "d1b19422-c6ea-418c-9ed1-dd1bdc2a9a41",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "af35a3f8-074a-4384-86a9-49c7ec158934"
        },
        "item": {
          "id": "e9d6a3bc-492c-498f-8668-c92351675472",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0897e42a-782b-400c-81a8-9cb1b23170e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1638e030-adfa-43e1-84c9-e45d63cffac5",
        "cursor": {
          "ref": "ea136f11-0627-4691-b89c-0db2ee5b8731",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3c304338-b816-446e-a98e-b461b1c3daf7"
        },
        "item": {
          "id": "1638e030-adfa-43e1-84c9-e45d63cffac5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b0f94998-ff33-4389-8469-a2fb8385d256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd721f9-2ff3-464a-820c-95c3f691bdd9",
        "cursor": {
          "ref": "7eaf7341-77ce-4e8c-9815-6a1be0ebefb2",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6b2448a0-bdeb-4dbd-9df7-34d3f4a576e9"
        },
        "item": {
          "id": "5fd721f9-2ff3-464a-820c-95c3f691bdd9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "60433c07-25ac-4700-9e56-abc996f0e40d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed44116-c23f-4bd4-aa05-83d06429e255",
        "cursor": {
          "ref": "0e579131-1897-4ae5-996e-8c2fc3f9e81c",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "af8ef31e-e890-461a-aa31-51172b2b10fe"
        },
        "item": {
          "id": "fed44116-c23f-4bd4-aa05-83d06429e255",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ae24f1dc-2d9e-4dc5-b700-86e635085b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219f75f4-a4b2-4a60-bb70-e2b16423ed2d",
        "cursor": {
          "ref": "3f946d6a-bbb5-4663-93f3-fff1b9debde3",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c3e06773-1fbf-4ba9-b782-4a42e3c9d004"
        },
        "item": {
          "id": "219f75f4-a4b2-4a60-bb70-e2b16423ed2d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3a8492ef-2432-40ff-9ef8-4401a6bab302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db42913-f10b-4664-bafa-e2a69264e8ad",
        "cursor": {
          "ref": "451e633d-5c76-42db-8030-2b47664288bf",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "827a27f5-62c1-4762-9099-62d10bb755c0"
        },
        "item": {
          "id": "6db42913-f10b-4664-bafa-e2a69264e8ad",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8475326c-b0eb-4f6b-ac33-30bd6dc2eed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb5477b-45dd-44c1-aae9-8001a53e6528",
        "cursor": {
          "ref": "11694886-cfcb-4a17-b878-963be4c2d835",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f3b1a038-589a-4e3f-af6a-d90ad570614d"
        },
        "item": {
          "id": "ebb5477b-45dd-44c1-aae9-8001a53e6528",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ed533c36-4f3f-4c36-bc75-8b72d151f0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ec5501-41cc-4a54-b1cb-374a38d485b5",
        "cursor": {
          "ref": "3a1312fd-3bd7-4141-a3c3-71b09be93caf",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b68a52d5-2478-4231-bc45-49feb84689f5"
        },
        "item": {
          "id": "16ec5501-41cc-4a54-b1cb-374a38d485b5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "41a9997e-fef1-4c40-8d01-d679d1751155",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404cde0f-c58c-46ad-85f0-a9ed88786650",
        "cursor": {
          "ref": "0e97e5f4-531e-44b4-9468-ccda0b50d08e",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "71e70eb9-acc0-4969-9d64-a40b3f871a6c"
        },
        "item": {
          "id": "404cde0f-c58c-46ad-85f0-a9ed88786650",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6f2cc170-dcca-4e8a-9491-8be884d69e44",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f421e3-b66a-48a9-9106-800a2f7e93f6",
        "cursor": {
          "ref": "7e154acb-eddc-4680-8ef0-31766dc29042",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "91248490-8570-4d35-aef1-7368c57e6714"
        },
        "item": {
          "id": "17f421e3-b66a-48a9-9106-800a2f7e93f6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e06ec38a-8f85-4b25-80c7-727c79e401ed",
          "status": "OK",
          "code": 200,
          "responseTime": 3578,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "13dfd5ff-39f6-429a-bc18-4292cbdb3279",
        "cursor": {
          "ref": "0c9dc1c0-9179-4ca8-a344-6606ac5fe41f",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a9bb007e-0d71-4d29-8834-e6fb2786e338"
        },
        "item": {
          "id": "13dfd5ff-39f6-429a-bc18-4292cbdb3279",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "06a6b8ff-3fd8-4189-bc3b-f024b4463e4a",
          "status": "OK",
          "code": 200,
          "responseTime": 2496,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eec0a9b-849c-46af-8a31-066f521b7558",
        "cursor": {
          "ref": "6c781f2c-57ac-4dab-9596-e98fb55f8fdd",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "99ebe1d6-6d55-4f24-a981-539388afd48e"
        },
        "item": {
          "id": "6eec0a9b-849c-46af-8a31-066f521b7558",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1a807c56-12ce-44da-898d-0c7d41561535",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eec0a9b-849c-46af-8a31-066f521b7558",
        "cursor": {
          "ref": "6c781f2c-57ac-4dab-9596-e98fb55f8fdd",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "99ebe1d6-6d55-4f24-a981-539388afd48e"
        },
        "item": {
          "id": "6eec0a9b-849c-46af-8a31-066f521b7558",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1a807c56-12ce-44da-898d-0c7d41561535",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94059dcb-b3cc-4224-932e-4e3797986295",
        "cursor": {
          "ref": "375c1a3d-2ab7-4850-a109-2f29fdea292c",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "acad49b6-f6e2-4fbc-9bf6-a89ff9df61f6"
        },
        "item": {
          "id": "94059dcb-b3cc-4224-932e-4e3797986295",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "efabbc40-50ea-4e6b-b878-cce6092006aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b042b5-b88c-416f-8cf7-9dd92dbf2f01",
        "cursor": {
          "ref": "3e18bffc-1bbf-44d9-a02a-c6d0a2b7df7e",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "fa53d21f-6278-4d22-858c-ebf3b4015ebb"
        },
        "item": {
          "id": "75b042b5-b88c-416f-8cf7-9dd92dbf2f01",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3cf5f226-91bf-40b5-b1ed-7f9668816eb4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}