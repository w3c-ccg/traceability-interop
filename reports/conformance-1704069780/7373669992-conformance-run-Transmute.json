{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "367c0b56-0672-447f-a03c-427e1a3cb318",
        "name": "Clear Cache",
        "item": [
          {
            "id": "11ad4d86-c8e9-4ac9-b2b5-52d723da0428",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9a227478-2a38-41f8-8a0b-ee4e972853c2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "31df00ba-e9f7-4733-be40-b7baf0e95e40"
                }
              }
            ]
          },
          {
            "id": "9cb65961-054e-4fa8-89f9-3f305948024a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f9e03500-2642-4c11-b62b-87d11ce91d0d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9de39cb1-2a3b-4c09-9ef4-cf89986aea40"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a5d6f6b6-ee90-42f8-bb76-3dfbe210c6be",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f5421759-4f30-4121-ae3f-599bc05acfdd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9c48017b-2674-45ad-93e8-1bf3955ec790",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cddd8b40-3a5e-4d59-ba9c-d676abfd44e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b0ac562a-6bff-4132-882d-118beb7cdb74"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8f089a2e-cdbf-4a05-87e8-c4b0b1316c64",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c19a66e8-4626-44c7-afc1-09970d2d2793"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b0b40ab4-fc3d-4998-ad8c-656ae9309112",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ecf80e4-4687-4b9b-a602-46cd624d4299"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "55cf23b1-ace2-4f02-b1e2-0dcfbbb5aafe",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a06f8a72-fa2e-40af-b906-53f6a8a929da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a87709a8-8ba6-44f6-b221-58e20d4bfa5b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "339e02d8-c29e-4ce7-8523-a5a8032c76d5"
            }
          }
        ]
      },
      {
        "id": "9eaa8dc3-3ac1-4cf4-83dd-5bf7e46b3f68",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "665f170f-8603-43de-b112-bcdb608aada1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "35583c96-122b-4f2a-affd-5eca183ff92d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ceff4ac1-b60d-48d6-b570-103b4f6dabe2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c7ba34-f281-48ed-b7e3-f5053ab59d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fdcbc35-729e-4db7-be6f-2d601bc9467c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460af47a-cdc7-4d21-a1fc-b8e538f6dce1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2925e46-2a09-4a7b-a3e9-54fa8f96b1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e63e193-be0f-4356-bb9f-5ae153fd0c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d9086d-7cd2-47a2-aebb-bd545528dbf2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4150cf6-a587-45f0-9ca0-384e7e3039ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "076e903f-ff29-47d3-83fb-d09989f92ce1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6f180ab0-9e8f-48e7-b065-30b2236ef262",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "277b690d-509a-4d06-8331-0dfc66a9f552",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce7b4a6-199e-4be4-81b7-818a0e937218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5d5d7a4-7498-4d79-9a1e-eec4656ca5f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d808ce8-7cb4-4b80-8322-62c9206570ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f7c4310-7344-4beb-b6e9-a7edbecdec13"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c46ce214-d6b2-4b09-ac07-2f71eadae62f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "153c152d-cf29-491f-b29c-567e9e2a6422",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3c2b0e5-4a27-4c1c-bb3a-3d1a0ee8ce43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5a6112f5-3676-47a6-b610-006d05568a27"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "beb36fc1-7e74-4f12-aed8-66fc09d40e3e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ba0a816f-f149-4029-a2c5-8176793d7b97"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4719c210-433b-408f-b3e8-279624d9fa01",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "660cc570-41dd-46a5-b899-05a1ff36c206"
            }
          }
        ]
      },
      {
        "id": "986b3e4f-78a2-4595-83d6-5a6254841bb7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f63cd8ab-1d12-4587-bf8c-72b4e8f75a68",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5fd196b9-ea4b-49bb-a755-e95b96a266e0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4606e4a4-758c-41ef-bd02-a9698917d2b1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a73d5d7-d21a-4eaa-b458-560a2c9a39e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16edb351-090e-4169-a677-266feee2c5f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45a54cc-42f2-4d67-a495-38df26b74162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf748d06-b855-4d32-9ffe-54629e9cc9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3b757d-fa1d-49da-83da-2ddf5a953397",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48870e76-ca7a-45d7-8234-c79f93f781c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e912a3ed-0c4e-4681-badd-89cff523eba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e621ffa-17cd-4436-9242-f7237312187a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7e9d824-9f2f-4cf3-86f5-abf765528f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c941d4ed-c3f9-4270-b6ce-3fb23c554154",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9f6981-8ce3-442a-805b-a2f2bd9b2eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96262a03-aeb6-4afb-a84f-da04a0a791bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9beb9ff1-7f4f-42fe-8caf-691a71494ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61b5305c-dd22-46d7-9087-9456c0bff78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33aee237-4aa0-4bee-a302-6d3f9b3dd032",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380b4229-8ef7-473d-a251-c83d3584b7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b082ff0-58ee-40dc-bf0d-ce898e091554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025a5403-5d90-4c70-bdeb-664d5925875a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74ec9499-20b5-4d8f-857d-a046aef3a640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a0397c-fb6b-42ce-b48d-c8cf749e7d0e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ffa522-a21a-4c2b-817f-b1e5049e59f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8828f73a-9514-4789-b7d0-d7aad4412dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79344832-0958-4683-9a2f-bc177f397404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02e3dbc0-597c-4f1b-bd0f-830d73f01a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc81390f-9a16-4722-94eb-682077971ae8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70797d2-9762-462c-8ed1-de07ee2b247a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b61d9b-1719-47e8-bc64-5c7ffc2d6031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31295128-32d3-4849-9400-0e7d6329df97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42f8d926-0b2c-4cd0-9752-9c449fdd25f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8974cc4b-c0cd-45d6-86f0-28be714f0b8b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e4e8c9-1df6-4a5c-bc8d-583b2929016b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c0aeb3-a9ec-4d04-8c8e-37a5677b7119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15349ab-08e2-4a16-8e42-acf7711a8416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab318c4b-e217-4281-a39e-4150f68936f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7464279-cc79-4072-bd7d-166aa7b732b0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "accd20b8-37b2-4b99-ac45-ef90d407f5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08cf31af-6686-40ec-87ce-8f420ea3d852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47581c7-f685-49e6-a166-b04f15f78153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d379841-f6b0-41bc-a098-4c9b307e4960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f464d91f-7537-4168-903c-6cea0e3fefbc",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf79656-47d7-4f31-a583-5d1f91875a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c1b2db-bf7d-4d71-955d-fdfa9e953d65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8971f41-f969-490b-ad6b-2cf002444bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e314449-95eb-413c-9288-334293997589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f49e29-13ec-45eb-b074-998d7173462b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7547e520-4d46-4408-ba09-3859e5f00853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a333006-96b5-452a-826c-546a6fbf4bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e33dce-b3a6-4b01-958b-587be08d1353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4634e1eb-dbce-4df9-ab17-97beb72acf17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b4b759-8598-40cf-b440-1733ffaee181",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e091ad76-8432-4edd-bf96-757a219a13c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f730f2ff-dfc7-4eec-82fe-c190928ce901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec470421-6f2e-4782-ae8b-6411cc366add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d4b7803-4515-4d7c-94dd-507b385776c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3342e5bc-ffa1-415e-b18f-9b7ae6d83af5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8741cdb-dbb2-4305-bc1b-d4394e2b8eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae9ba64-cf62-41cd-b8e6-bf1eeff642fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6fbb2c-ff8c-433c-86bc-2060ab90053d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ffc134a-f50e-4d08-808b-b514442ba017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60288a9c-a57b-4bc1-b04e-cca567a980aa",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bca867-15d9-4d17-ba2f-3327d6707baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8905e8-5112-484c-b054-040a46be7a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ec5dfe-fa92-4e0d-b1db-2d4226211a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "530b7f56-cfc8-47dc-858e-591a54f9eed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331214a1-8bbd-4ae1-a636-00973d3f9fc8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d454e2f-5b5c-466e-aade-dd521b76537b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef66bd8b-9135-452b-b808-a2c42d7db29b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec502c16-87ef-42cd-81db-7885f968e62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "889d738d-d345-4e31-b6ee-e842c7c82900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac442b79-241f-4ee5-a350-2681d210140c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a38aa85-1c43-4eb8-b42e-a88127f29171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a09e68-81e8-4e58-8757-04815a24d1a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b79543-e069-4972-a9a5-9c5853e27e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf73adb5-1e25-4a50-946a-232187aeb65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1750fbf6-efc8-4d80-9724-d1c2ad146f4a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad31457d-f8d7-46b1-8b6c-2c4721f40f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e81c54a-69e0-41cb-b4a4-34425dfa2580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1b5032-a359-4f3c-a8c6-83d83dbde9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e11342f-3aa8-48b0-9cfb-fea480f14d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950c66b1-3e87-42fd-8835-e3548063b8fc",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea93721-af03-4a28-888c-b553e1aa40b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c71930f-4c34-432e-8333-6ee1eccb3942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6aabc39-5f69-4767-b0f1-e1aae6bdf3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4afce89-0148-4bf5-91b2-2b598b19aeb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15050ae2-d593-48f8-8aac-5b836559d872",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22de3f1c-d64f-47a1-9e14-8ca8415ecaa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1274ae22-d9b4-43b2-a6a2-89210dad3b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9791082-1703-46ed-a352-bd0690f58b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "65e31ccc-ec62-43f1-bed1-64f549e6c19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3573a4-8756-428c-9e9e-8754d3e36dee",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69548d44-1281-4d34-870d-118c84430c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7283e9db-0da3-4219-a0d3-5dd13e7d8388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4858b75b-b2e8-4ad0-a74e-9a1500276e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2454f702-85dd-4ecd-be1c-e051ff704b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06554f0a-26ff-425b-9972-6233c7a59aaf",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7deca991-b694-4971-a615-7b8e1d1b57d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "380469a4-77b6-4a92-9ef9-4893e551c928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47b9966-d664-4397-b600-4ffb8360fdbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc70e530-ad91-464e-98f0-a44fccf380e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb1fef9-562a-46ae-bdfd-94972de10071",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4558e44-0a94-4149-8b87-8e12981a71c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d712127-9710-4386-8f86-eb4573ca9632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6ae35b-bb1d-4b75-8c4f-1a0c040bb737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6ce2fa-ec83-4f28-be00-45c00a8c6ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f678e64-d23c-4e1b-abab-de3299789313",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2ed0c6-853a-4f74-b224-b2cd838907e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee54f1d0-0964-4659-8a91-7f5ee9ac4ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ae40bf-53b3-4c44-a6cb-b9b07c3a04aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "82476471-25e4-448f-aebd-cda5f872a097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e52889-d57d-4e27-b3cc-68b5eb84c222",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d844b8-0b0e-46c1-9b5a-377a79b448db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f0f5e0c-9a44-4d42-8dfe-059121038bfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23bf8bf-3d1d-49ee-8e7e-1ac70442f289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e5443af1-0746-4c44-af7e-22acf0368f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62cbaf95-97dd-4383-8a61-f9777d2c7981",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1251c868-bb5a-4525-8ecc-32f6b5a74cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6549ab19-261b-4943-ac88-1dac67ec60c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f88ddb1-acd0-4654-bbdf-8391c1424691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "774e8b9c-e55a-404f-b1c5-80cccec3134d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68010d6-96d5-4314-b44c-4c036b1b0bec",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e532c68-fd76-46f9-8a1a-de20b710f219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e1cffc-c015-4813-8ad1-eaa122f02cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df623a16-3fc8-4c50-bd1a-cb07f0e136a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a880f51e-8c9a-4058-a0a7-234c317ea08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be95261-6189-4edf-88c2-ec7c6ed8ab26",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9313e996-138f-4796-bf6c-a7b777a27313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff26f92-b877-405a-b0f4-c13be4d767ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a4584e-1836-4a18-a244-922846e04e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d7d371a-1522-4072-b5cf-fea15316d41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1c6777-c174-4a26-aea2-f27d5bdbdd65",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4338582-1c7b-40fc-af03-e64aae85cbe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f04edfb-e84b-412b-bd2f-819862732d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1fab39-9dd1-42a1-b6f9-468081bda10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "167f2ebd-55ff-48b0-8725-451b17174d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06586394-aeae-4818-a460-42e975977354",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97abb46-5f2b-4b1e-9496-0deeb1c7fc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3b81c6-81a2-4009-9605-3a01a28ff0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c215d5e5-dce1-49a7-be5c-154484cb9142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fb8c77f-7f9b-4d27-9380-8271404f1b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9152b79-e9ab-42c8-99cb-778b84544aad",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a7779d-3756-4ea4-ae0d-6e0a730e3dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af20fd7c-9429-40f5-a090-2d781d2762d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdae4a71-44b5-4e61-baa7-5eee6999cca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2722c97-7192-498d-b30b-a76a73d140fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1bf0a2c-f073-45dc-991a-2dd5fb18d440",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c76662-c3e9-4ad6-96e9-f6aa2a6eb7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55487016-7f5b-4954-9a6a-f72ca883eaa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbde0316-29ef-4cfc-8586-27f3850256c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d1e494d-b8c5-4b56-b0e6-770486d6c217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3a7989-3783-45a5-9f97-942c8c75efe3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e2dc58-98c6-4063-87e3-7e815984bc55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2fc448b-d1e8-4c38-82ec-ef31921d3990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1098719c-b2af-4f16-9606-50d348dda2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "46c73bdd-cc53-4076-aca8-43b06cedb874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c594cce-71f9-46c2-acb1-f6b839d33edc",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1eb52b5-12ca-439f-b7ba-3270aef61e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b559f9ed-8fd8-4374-ae3c-cee0abf5cc06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f22f10a-d0be-48a4-b9c4-659e2eee81ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f227ca47-e5f8-4b33-b7c7-d1022fa22f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69c89b6-14a6-40e1-b944-02ab4df84ed4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9c2a62-5f83-4332-9adc-b3754fc52a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b305726-fa40-4277-a8c1-620171dc3a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54da5f2c-b280-4294-9fcf-d0fbbd9d2c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb6c9f7-f2c2-4e2d-b1f0-e2b7eb50c114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dca4851-3e56-4f4e-bb0e-f197f82c63fb",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fcbd6f8-e2bb-4d78-b0ba-c1257de6debd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b55c9aa5-c8f9-443a-8186-dfc27756fcb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4369dffc-d6d3-41d7-aec4-4d8fe6ecf1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e440c413-51fb-4cf7-9670-a2700467c7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9a7f6b-89ce-45a9-a29e-587102881115",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b209a8-ecbb-4849-bd4b-85e0875128e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c7b5657-5072-4a06-8637-7cfd13178d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e912e461-0d04-4f18-89cf-d76c9abd20d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6b8e846d-931b-4039-8b62-f8398efc5cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1f5419-2ab7-4582-bf99-1d0952221e3e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b156e7eb-03a9-4932-ad33-f6ae4ce44fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d5e0547-45c4-467a-8683-1ec30dde20d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff9fe5d-aaf7-4c63-8194-a858b6207fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6e473c5-c896-41fe-bc33-639b66651f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fb2796-6731-4a65-a973-3621bcadde0e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35905015-cbff-4d49-8dad-90e51fdd0be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c3fc312-728c-40f5-b65e-bac57e34efad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e078c21-5960-4767-bd4d-37593c1d8159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "747a86f5-1b67-4d2a-99dd-ebfac7f6c144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b1f80d-0aff-4f03-8969-171aaee583e0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04504da6-924a-482a-b69d-01bad88d3b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cec4f6e-89b9-4e91-bfb4-57cc2c78cc0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acecc565-7bf9-4c8d-b9c5-689025e0c201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4dbdfa2-c2e8-4976-8ed9-f1573fd0d0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3bb80e9-377c-497d-a27e-d2fa71e2d767",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca233d8-da4f-49d7-beea-829c3940a458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b917d0a6-bb04-49be-bf6b-9fe93d5ee218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bc351e-4a3d-4e16-ac00-711aa543dce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd3656b2-5e0b-4581-b8dd-307a3f0f08c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1144966-84c3-41cf-8427-9538f87a7de4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbab5184-ac0f-4862-8f77-27bc388a7795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c59e619-d6b5-4448-aba4-af651cfaeea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc5a82a-b2d7-4be8-a929-99ae5f4e08ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "63f183f5-9d34-49e2-8cb9-3959013be50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ab34a0-bd97-4d63-abd8-c6c4dc833c07",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ccabb5-7f35-4e87-bc08-533b33c98103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2d638a8-d1f5-4c88-aa38-0ea69abdcfb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c49666-4db9-4c3e-ab63-4c8622a4ce2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f4176e6-cfab-4735-98e8-109dba82d31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f26d3fe-a5af-477e-a107-0c943a6115c6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63b983f-9c43-4b90-9ab1-233ce65a8dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ff86a5f-55ac-46e0-ad4f-a7c9e6dd2e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa23843-1be6-4601-ba9b-16ea753ece27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bfeba0bb-bbb8-48ae-973b-68d3b5cfa914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9384d9de-6da9-4917-806b-11fe0e362b8e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5444b6c8-427d-4d10-8eb1-a4258f751629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a04d03f-81ba-448c-ad6b-6e277468bc77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9dfb18-8716-4eb5-9575-74bc7261d88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc59c1b-87e1-4cd3-9910-8b88d97d0421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48fc5a17-a349-45f4-aaac-6537e67a7c67",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94da0cf1-3744-4ea9-8273-b7d4cc292bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b8ee11c-ab12-4f39-aae8-dc039a62be38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a18311-16ca-4b08-aca5-20d1886536e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "783b290c-9ccd-43ad-9fcc-cdd927b78c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3354ce1-2ab8-449f-9311-fa5349d1428e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7e1aed-ec3c-4f12-abe1-aa82e0cb7203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b9e194-291d-405f-b9e9-6121f8d56784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c8a7a3-aaf5-48e5-ad14-4ff8b6e3db07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8218a9b8-9ec5-47b2-bdae-8ecf9a681046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356a92bb-7fd2-4ffe-9f8f-73e477903707",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "405acde8-9913-416e-8948-17aa9267ee19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f53556-eacd-4486-8540-9a23ca9809ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1dff3b1-075a-4f1d-b205-bc8af3a06104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ccbfba0-556b-4b36-a03e-62bf3794f07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668d1c32-0284-4fce-8e16-f3ab3b2fbebb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5deb171-b4d4-4ed1-8580-bf1ae8130e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9645a49-0aba-42b6-9518-6f3aeebde005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95cfbbfc-881b-4485-8d53-c9b8da7f3f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02dabfe9-046f-4240-8b50-b006c22f56b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7328b08a-1ae2-4fdf-97b4-a4c918ff535f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a6ca76-2610-4f37-a79b-83a27344b9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8241e7-7f8c-4daf-be7d-e43b029257dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81d6fa4-6663-43f5-8eda-ed32dcad250d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "883163d8-f070-4bd9-8440-8a37863f5ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1e6e4b-287f-496c-b058-d2a8cb0d9db9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3defe611-2d21-409c-a916-7d8211bdc95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d7889d-8437-459b-9690-db0f86f13f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65216603-4427-4ac0-ad26-05fb33c726d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a956585-f9e5-497b-a631-2ba3717cd7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b741f597-81b7-4b33-bb50-cec9ceb8aa1c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "498dfc26-ac3a-4d25-a836-430b8c6fe109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03cc8b6c-33e1-48bc-adcc-60b1080d36a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5acd0809-3fd1-47c1-98e5-923a4410b2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "547c242e-7e8a-45ef-8328-01088e5417a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcbedce8-b8aa-457f-84d8-5e0bb0ba0bb8",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51297e71-0d45-4b3d-a163-8a956010a37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "266cb7cc-715b-428e-afd5-18004cc94015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd090a0-667c-4228-82f8-c2033581ce72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3be188e6-597e-47f9-9b9a-b2373dfc4dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5856f504-613f-4f07-b5e5-738e740d6147",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c554e608-39bd-4740-86b3-b786569177ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698b29a4-9697-43e9-9f14-fccdf858cb14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadb65d6-7110-46f5-bdbc-a26c23f53998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "22c4cbeb-da7b-47cb-afc2-1b3e70948e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9f69ef-21a7-4e1c-ab65-6d0b92906fc0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad87d60a-259c-47da-a1eb-f3d9e72a8e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89d3fff6-9164-4483-a72a-7ac108ec5d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d420d3-5988-40da-a828-69379db3ffde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b63092-f8cf-432f-bbd8-44716274bd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2970f6b9-6f11-498e-a1f8-bba8338a15e7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "395cb879-99e0-4c37-bffb-1327bae2f773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96dc1b87-3ab2-4acc-a02d-41ef6086de5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0798d5-94d6-4b78-9304-1a7c7b8acf31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b02c7ab-ba1f-4426-8811-b9ae8a49205f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ab2e5d-23b6-4cde-a052-e4f165fdecd5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9281cb2a-af2b-4fe3-82d2-27d85f15635d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d04cb034-a70d-45eb-83ff-b30f6c775236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70dfa137-82a5-4a8d-ae36-d781b5dd8505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34e5aee4-a708-4cd9-90a9-1baa977cc54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa050320-1f3d-41c0-a65b-5e6f8b1d82be",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d06e460-4f71-4148-9515-9d758d53266a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25991472-4c75-4a13-accc-122769f801d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025679e6-e738-4c71-a4e9-d6811487aa53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b783095b-968f-48d1-8886-79da26a175b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727bf074-ba13-4f3f-825f-1fc161ed496f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d79bee9-6a92-406f-8561-a688d76c9027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0176ec9b-af8b-454b-aa67-f913ab9f5fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a49c5bb-620b-4161-86dd-b811c95280df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d18b925c-85b0-464c-8258-ff16cb1eb9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb65c5d4-f9d6-4244-b4b2-77ffc1c2913b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad75d3e-eb1d-4935-a0f9-6964993c8097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c57e151-811a-4a8e-a719-91017af3f72e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c04dff1-660d-42a6-a80f-9b6984fddc2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0bc90eb-7edc-4674-8457-d8955c77ee25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab62b9b7-60b4-44e5-8c31-9288db70cdcc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17fa7363-b36e-4f86-8e7e-c9a3c648a4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0459ba8-6d70-40e3-b723-605c97f5e81d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734ada31-19a7-472b-a22f-7931c6a12af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "85334adf-2b11-4a94-96bf-d7d53ae1311e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901ed0fa-0ff5-4530-8b45-3797699b3c1c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e6d78b-9720-4d2d-ba91-d45e0320a145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d35ca68-9f6b-42b3-87f2-aff5207efab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cacc086-f8c6-4fd0-bb20-d956e7813e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b4ea592-cb51-45ce-b437-d19851ae63fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5360b7-67c8-436f-a8f3-aefe0786b972",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97c7e7e-125e-49a0-b88e-722517752698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5259668c-5ea0-4c90-96bf-a30d23da4fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb5926d-aedf-4363-a509-c04440c9e59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "63d7c3a4-52a8-428c-a84b-8ef848c73c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88dd25a-8cb3-413b-b730-616e6befc8e8",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "288007f6-ac8f-4728-ba04-66d6317dfd05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beace718-528a-4f4a-b7dd-5a6c35b9bf84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31c4609-ad21-42ec-a21c-d8033efae128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "199914ea-5cee-417e-8f0d-af191e81395b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece49ba2-5275-4e68-8c06-abe08feb57d8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54987610-1a1f-4191-8378-649ecbdf24cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d34de09-61f0-4c5f-a085-c83f6b9bd5c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1def5b-1a8d-4077-936a-a57eadb35e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f1ab889-6b6f-4b1c-9437-dc04a0b935da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa9334a-c09a-468e-b4e2-a66a6829fac9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4297a438-4e25-4b02-8345-6dff99ea857a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff735b6-6e7c-4512-adf6-a92ba8c0e790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4bb677-8e9d-4167-b948-c29207a11053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c388cad-d3b8-4b71-b34c-c26497718e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2fd9123-0fa5-46f3-a44f-2b8920355747",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8529f3-faaf-447f-9530-eec367680dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fd8f13-10d3-4c31-b233-4c10beb115d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c41793-4830-4784-96eb-f96fe11154ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa0dc3ce-2dea-4d20-b391-6cfee88d12d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb6789e-6b11-43f8-afb4-25be8a58be00",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533e521f-50a8-4569-b128-8783049b269f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be04420b-9555-4b22-a03b-c4e344bae527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95a5db2-b6e3-4b74-9a09-61733e90c924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b0f601d-a6fd-4962-9e4f-304656e271ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6f4313-f8f5-4310-98f5-9faaeb470ea6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e6d1c9-13f9-4d3f-b112-f548109f97dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99129217-db53-475a-b710-d8c314c5cd27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969549e1-ad3e-4134-8d1e-7e7274a0f35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f23d7814-4504-4668-8f3a-b67bfd777b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70132447-e2ec-47dd-9202-f52b3993c08a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ae73be-ea73-4935-9676-909baaa0aa43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03cb58c1-bc21-4fce-b06a-e04998b6df74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b385f2-6c68-4d0c-9097-d53a32f56259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "077e2612-a5ea-414a-a734-35d07224500f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954a0725-f428-4fca-95ab-7889cba6149a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb87ec63-3bfb-4b9a-a94f-af24ec519919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "147882e0-d418-4943-8c46-a5c7718fef22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12800b0d-3d97-43e0-82f9-ee374a18eded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0658c28-505c-429d-8ad7-3d4a9aab4dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f3c46a-544b-435b-be32-0718b9e4a39e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fce078-9ba8-40d8-9164-7189eb9604f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf41b90-4869-4edf-a159-e21907901600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d536bfce-a0a5-4364-9f71-5507bccac4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31ce64d9-8255-456d-985e-cd38d67601bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6accead3-12d3-4828-898f-9b584531276f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb1216b-78de-4651-8962-5bb9238905b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b24e77-0d98-4b4c-9854-d07f8c54091d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f2c4e1-3e98-4b27-9463-f0c19831921f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "411dcca9-adea-42d2-819c-7b4189652198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87636f0-8b78-4ba2-92a0-32cebfb7f91f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70071df-baee-4b15-83c0-5319698ee9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62edeaec-a36f-4dea-aa6f-aaa9e3bc570f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362e4b24-3bb7-416d-bef3-a5b3d657d114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74d06280-a6ff-4085-a27c-fba7e5f45f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b53a29-e35d-4695-8759-e418ca32c06f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab6017c-895f-4b4f-bf3a-2153bb0aeb7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f569c9a-5115-4f50-92af-3da6c1e88043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bced5a33-cea3-4695-9290-16ab71e4fc88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "620e34fa-fe3f-49a4-92cb-26f95db2a477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb020ad-0a8f-4c6c-b3e4-7e82a2f98306",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f0e4d1-b4f3-4584-bb1f-51c044d4dad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0bc57e3-09e3-4da8-bc6d-9ea110ba94d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a3254d-3380-4837-9931-f527fa0b1c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3ace7b27-a003-4466-9ba0-7ae6ab875243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70195e44-31fd-40eb-838a-24d09e92623d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ecc2558-ad97-400d-90df-8fa0b4aa514b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d91fd7d-abca-4b6b-a785-174c032611ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ae113b-0e79-4e9b-998f-204a98274899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "79cc3f78-2c48-45f6-ae3d-34ea4c54ddfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04dde17f-1ad3-43f2-8c0f-0c0e82247eec",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d66602-28ea-4fe7-95e1-5ecebd7ee6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2394288-5d94-474a-8cbd-087d404406fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd88fa4-9f96-4930-b808-a64e347c8fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0757a56c-66ca-4457-b57a-c85ea9617db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67e192e-ebab-4eec-8abb-5b992350e079",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba126c15-07ba-4b8a-b875-0503e1d4a218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb3a39d5-0ef4-4f41-9607-111318988834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37790875-a76d-4961-9f64-878b54dacab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a83da479-ce44-4fde-a866-a96824af2b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eddade9-25b7-4e65-8725-61dfc3029b27",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9fe9df-89cc-4f9e-b613-0d778c620f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bfb81c7-b9be-4415-a363-bffc9241edb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0beaec96-d200-4a0d-8336-4fa95d71b0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47317069-d80e-4d13-a4fb-122d095e7228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52976e1-f1ec-442b-b009-9c33e0a2487e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8641b929-a611-4ae0-98f8-2f0190d68e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc6353d-3647-4746-8ae8-a8a103a71e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d9fa30-8f9f-4ad2-8d31-e7602bd23a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbb538c3-352c-436d-aa37-e965b36431ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a49d72-1dab-4ded-a6a6-95ab2d1f1354",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8c604d-2284-4bd7-b851-970d1426c281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ad00b5-5717-4850-939b-e2ee14013dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d785813e-6706-413d-bbac-9766fd8ce569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "005cb637-7be6-4ac5-9322-a7cf242b69c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d287adb-8974-451e-a07b-d357f5cc4829",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7d98b7-16cb-436b-8bf0-c53779c75c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e3a9f2-f64d-479e-b55e-dccb141a4651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8943a158-0a59-4c58-a0e0-527f690418ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "af9dc210-2558-4f67-9c04-dbdf224ef413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a1917c-3f2b-4810-9899-92422067cf31",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f810e6-11d7-46b8-b4cb-bb0649b1f13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afe079b9-1ad2-4aba-91d0-d538583912d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0181d4b7-274e-45cb-8ff0-9c083a7e8a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c23f86c5-4553-48ac-ac54-64d66d0e11b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0309736-18d2-427d-81b7-2cbddc8f77b2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3a504e-b506-428e-a664-876bb5dc1d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b29937b-0c39-4204-a157-b43dff7343b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c6bfb4-c9c1-404e-b94f-418c736609e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0ac670e-7bda-4acd-b38a-229075402c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619c6141-52f6-4bee-8c1e-15dd8068a186",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14434b15-2899-4154-a97b-c7ee8b6211e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda749e1-81c0-4886-b50e-7f2bbda46a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c8e81e-038e-4856-96fd-e1f9d1542781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "454e2cb0-3871-436e-a661-1c399dafa6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1b9514-4ff5-48b7-9425-8fc0f02d8bbe",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8463d1e5-2430-432e-8c19-a2a5ac445749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db9a8cc0-4bc6-4832-ba14-1980818f1db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774d527a-f5d4-4efc-985a-d98b6fe9f352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75495e89-8e1f-4b4f-b4eb-ed885790cd42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31e6921-7147-42d8-b8d0-cf4e91f92786",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07196525-aa4e-4679-a5eb-21d679153115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f607880c-3f1b-4c79-9ac2-5bfe3036c11c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b55908f-cbfd-46a2-8f92-3b3e827406dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c1b7c1e-50ca-490c-a35f-d5c67e1b4af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c861288-a138-473e-8615-a2ccdb93dacb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0839475-7212-4219-b882-5c53355bce1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b50e632-1df1-4442-9885-249aa40e8831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb60b409-dbe1-49ae-bb83-546a6c0f3edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8350003e-47c0-441a-9fac-cfbc321a8343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f54086a-c354-4d31-aae3-7ef3f33734b8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c35bd3c-a379-455d-b592-5f044bf282fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6c6ddd-37ac-4f00-ab52-b4ee614388b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031d5708-7235-4afd-b379-845ef24575d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d8b058e-0d21-47a8-999d-f4004ebe9cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7e55ca-11bc-4fc5-bcdb-e268e6ac6268",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2639f8-5740-4c38-96ff-03b2a8e95698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1939794b-9f9e-4940-a9bb-a0e46284cfa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cee15b1-06d3-433e-af17-217560261aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab59c2be-7231-4a2b-a677-235efdcd2ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a40d22f-b5aa-4f90-a836-76db68741d5c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5d607d-d73c-439b-84a2-2e4690f07b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ec71fe-0767-44f6-9062-9e789add2cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d7f82e-331c-4d3c-9502-9a883e1a57ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "668b1823-8c68-41bb-a151-795bca0f6ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae674c1-1984-4d5d-ba89-46f1b1d0338c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ed571b-95c0-4107-9f0a-c1ecbc8cb201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5da2a72-ec9c-42ca-ba7a-ac32793ac1ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e23d8ff-4ad6-4b82-9ce6-5fa38457b155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a79113-a7c3-4259-8127-dc30d021dbd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aee9e1f-2d89-4d6f-85d3-c8017aec69c2",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d69372-28cf-41a2-9dc0-670a008a8d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5ac1e4b9-0449-4365-a950-9457dd8ca107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c343883-2175-4951-b2ad-0b8ba235c873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d93eab0e-e4ba-4d1b-9608-ce309c00bb6a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "39180d12-4956-427e-b18a-42365d17437c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "41320d54-1bbc-46e0-a863-e0f45601bd6e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3184d98c-21c0-43fc-b3ac-5c922550de57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a9192ec-b747-448a-8913-03600d2dc50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf2a6d0-2278-41ce-82ec-bf2c4c6ef029",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80bc7366-3b0c-44f8-a9e0-26dd8efaab67"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a95012d-3b64-44d3-8003-0523b47bcfcb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7994c223-0186-469a-a6ef-699aac059f84"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f522bfe8-27a3-4dfa-8d98-5ad81d5cf093",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af331217-3a66-4958-a8f3-b7d4a1e5e72f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5d58b882-f8ad-4be2-a819-33b47e3facba",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e9dfd552-6e9d-43da-bc3e-52c238ff8749"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5a3b57ac-9dbb-4331-87d7-15e957fb932f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c1abab23-24c7-45ef-ac95-a226d053abdc"
                }
              }
            ]
          },
          {
            "id": "d1e32f59-511f-4acb-bbf0-17f9964a8cb2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e9036872-1de4-4bed-ba4d-761f3be8470b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d9d0c1ec-9f7f-45c2-b9bb-d5328a18c571",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb6cff0-68e8-4202-b3a9-8e61e93a78c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a0b33988-5329-4da5-80db-590e57f7a0b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbde05c-f75f-4e16-ac9b-754eb9f07571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b3fc2e-1c81-4db3-ac84-f0c25329be31"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "02e6b4d0-ef42-44af-84b1-fd31b533ce98",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f1272f6-7033-4eb4-84d1-05b80e2bf08f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49fdb2a8-0014-4e10-8014-630e43b16248"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1924d2e9-3024-478e-9cfa-a0720b72b8b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "14f2f1ba-7866-4dec-a406-9a02e4d8eccc"
                    }
                  }
                ]
              },
              {
                "id": "f540ef76-b0d2-4df9-b22e-b53d911663ff",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae93b58a-d2dd-428a-ab6f-46c4a21dece2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f668d4c-4265-418d-b87f-58a88021d87f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16eddae4-01cf-4b55-9251-7883688adcd3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2687174a-0860-4763-bc4d-a371cc9d1c8d"
                    }
                  }
                ]
              },
              {
                "id": "5fd83db7-0f04-42fb-ba4a-cb3fbc99d6d9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b66e2c00-d6bc-4ef7-bcee-5e9a13cec5cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f5570b0c-07e8-40d2-9a1e-1904103c1479"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90c792ac-a987-4dab-ac3e-473f1975d5c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cd70cff4-c9a9-474e-b439-3002a4df364f"
                    }
                  }
                ]
              },
              {
                "id": "d500c60f-81fa-40d8-a938-cfa35ecfa885",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "736c8780-d87e-4031-acfd-45fbbe2be40f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e0efad3-a848-48ae-aa21-35276111527b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cae91833-30e3-4be2-ba9f-137bfe8f78fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "af058267-165a-4384-9a75-abbb399258ec"
                    }
                  }
                ]
              },
              {
                "id": "7c2d52d4-dac7-4cd0-9e46-abb057844135",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb477d0a-7a30-496c-b584-588e7da0ccbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "14780c16-32bc-43cf-90e9-7b28d509baa0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "732cd40d-e821-4270-8d53-ca16e13e7391",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d59de876-cf6b-4a35-8a32-0dcceafc06ba"
                    }
                  }
                ]
              },
              {
                "id": "b7f63ea3-4b39-4739-9e95-b790925bd80d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fe81cde-9764-433f-b82c-f6eb96332d2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a560699a-ce05-4752-b550-e954fd668944"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "415db131-af69-492b-8c71-6b3c21f5331d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0e92ad3f-d4e9-4391-9355-d4e333007e88"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8004c8bb-d1cd-46e5-8051-488309da8e8a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "199286dc-9bd1-4964-9743-d72252b68100"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a2eeee62-cb04-4deb-844f-5c3ae9d2f790",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "677afcf1-e7e6-4b36-9270-72c033cecfe2"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "208e4a61-aea4-4cc7-847c-3c364a2197b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b7632d6d-e657-425b-bdcd-8e6b60ba83f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d218044b-a1fa-4e0f-8edc-223ef51b8222",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "244f1e69-f638-409f-bc01-7ed3dee00f1b"
            }
          }
        ]
      },
      {
        "id": "d34ae289-3879-4a42-b48c-ba6843f860da",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "be4af22b-d05f-43e4-a1bf-48df6347416d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3af398e-0beb-417a-8906-c704f2f8888e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1447ea78-eb14-4011-9712-0a2841d53e02",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46109001-3f2c-413b-84a1-2b7e882798d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2869377e-4196-414f-958b-c4771c65ad59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cbc309f-ebe5-4488-9a8c-3ed9f246a8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff0b74c-2f6c-40c9-b43b-d1a556fea276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225c42a6-2328-49e5-96b2-3755502b8ad4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c647f4-40f4-4aaa-a3bb-5ec177061bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aeaca82-413d-44d2-81d9-cf9d1ade6b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0075036d-1bb3-458b-a858-e072c8045caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e0ad5dd-4a60-44ca-a5e8-42c715dc3fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1949b1-360b-4930-82f4-18e9f81472ba",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b1d6fc-5f1d-4fcb-b743-207ce66efc35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb52e02-bf04-4380-9e30-f53183b8d748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4177889-3bf9-450c-9298-ee6f55932f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0f0862-7fb5-4014-bda0-d7e9cffa9b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5a4fbb-7c49-488b-a7e0-7fc720bd6ed7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b165ca69-a274-44bb-8c25-162c0bfe9dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2e9e76-ae3c-46ce-be34-b8ab74b92138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ce1b72-8de1-44d4-b723-37a78a626b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0259bc02-96f3-4d7a-bde1-beaba73a7c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6105b0-a5de-464f-aba4-176bdf37aa91",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a772b8-dc01-4215-b0e8-40ef8a5c669a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b91f750-cfd7-4c21-8d99-5b869c05baeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ff4856-d583-4ef7-84c1-080e7bea9bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bffa8a3-18bd-4193-ae05-4d1a02a0ac0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77369902-3536-412f-b8a5-81471a8bd14f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "724a7f89-56a0-4c84-a21a-949ecc1708eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb454cf3-f880-499c-bb08-191af9313d12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e4acee-909a-4d8d-afc7-1ff5f832d8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e8dd28d-5705-47bc-91eb-bee3f3254207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97195067-676d-4c1e-9961-4a27f299aba4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510d146e-9882-424f-bf91-47ceb3b6d8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41cec436-39ee-434f-8bc4-b8d189dc75fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f231283-6652-4380-9ffe-5c7f7213aea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed9e761-f6cf-42db-9cd3-442ff92460e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e0575d-b87a-4480-9c30-54ea00553fff",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8c077f-2e8b-4da6-8dcf-6a48bcff7e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ec5e57-984d-4fe9-9d0b-b0710a2b2c44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98f86a8-da10-4645-b8bd-82859ade63e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07989326-7e4a-459d-b942-ccbbcd92ae3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8090d19e-3fbb-41cc-bf6b-9dad36b4b0cf",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10bb36e2-6898-4b36-a149-fed6b870a175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d28448fe-c401-40b4-804c-935491902b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109f2456-9c4e-4181-bd00-4bba02323a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e01160c-c378-4e46-b272-33dc6f24119a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b79683-d32c-4ccf-adb0-474efe113a83",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7f3c7c-c34e-4787-b67c-5f4b16b9764f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ecd2dd-33c6-487c-b0b3-1109443bb204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df535911-68fd-4c14-b43b-75354589bf38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83c9d952-491d-43f8-9bb1-a62af5bd80ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca74a5d-a15d-4375-8402-f7f0beba5774",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc1ca5c-e41e-44e7-b8c7-ff31cca781fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54beec43-3f5e-47ba-b242-183605e393c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ad5d55-55c4-4417-a525-e63c59d784ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "95c564ee-a918-4b77-a2e4-5cc5ffd26759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50ecaaa-b708-454a-bcde-7c070fb42153",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6b0eb8-9859-4a0a-9dfe-fcc9828b10cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d38fc13b-f758-4ba9-96b6-f0a2e2b56e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4b9b39-bb7e-45f5-ab54-6e7cd71fb4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a193d7ae-7044-4080-a1bb-464471e1af27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72bad26-8525-494b-bfff-85c8f385c0e0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7633bc-8acc-4f28-afbb-c41d055a608b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "747ff6b9-13b3-443b-a079-93ca71bf3d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fbb883-5730-4b29-ac6b-dcbd348622a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ab5b5db-2f3c-4333-9be0-1403f3319671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843cd068-8394-4fc4-ad93-f1f86ab0b794",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d1cea9-b73f-4c23-8a20-cf537bb59610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d32b71f-556f-4e39-a8a1-98b006371281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89351db-8f24-4e85-9e07-85f061fde448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab452c85-4b8b-409f-9783-2dbf758489d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a112aa-f977-4725-a5e6-c5099ddcb5f5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd5ac1c-8629-4f71-916d-71febfb1ec13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "128f56d5-563c-4077-a7e2-71e5116d8c43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc0dc00-22f8-4434-ab01-1fbd960795d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6bbfd89-65d8-4dfe-b622-291dd6baf197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e92dcf4-cc36-463d-9237-688787efac3d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1587e58-d2f7-426a-90f3-18b6eee2a31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee94f2ad-4869-4b40-b132-017135d3cfe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de16041d-af2f-4937-9c35-f79c1cd9d44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c06c9fb6-fc13-405b-8f4d-7bd7ebe9a536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535129c5-26d1-4ab7-a50c-02f03d02198e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a46428-4e18-4ba2-a6dd-2d3883503164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49871931-3d29-43eb-8e9c-07290717fa11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13812c0-6c2c-4393-bd59-21bb655d0932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "53909d44-53df-4ed4-a558-d874138ac388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bea5fa4-923c-4400-98b3-8ae2656d4a37",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2280a52b-078e-49c7-9314-f9d7e5f16fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4edd999f-9d0c-4586-9e6f-c8f8cf2b0f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1517b9-cfc1-420e-8349-361131c0619f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec9ac2e0-6641-431d-ba64-4b7bcb5f040a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51728dfa-d7b3-4896-ae04-0e11b0519e70",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee57e34-ae0f-49ba-9ad1-2f6056df7871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc581664-c152-43e7-8b90-692ee929c022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be60d5c8-2c0a-4ff3-aa03-5469392c03a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be061abc-e680-4785-92fd-76969ec30cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be89bbb7-517f-4c91-a290-df88ef9e858c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71e6179-0a80-42f1-99e2-6b1df3f4aa7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f31f2e5-79e4-465e-94b5-94a65d3c337d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6643ff36-731e-42b1-85fa-be44e2781c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8273576c-14ad-487c-beb6-2b3140f0fbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730c9d56-1fac-4a2e-bfe6-8e628d76f2fd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2658af6-41f3-4f8e-95d0-300059bef287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd45f4fd-3e98-49bc-8ef3-25b87fc271d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76d0eba-8f4e-4822-ab19-ea7921f40f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fea2208-67e1-475e-9b37-1a358f263bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ced2c69-562a-4c0a-8860-9e12abad3fa6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35541ff-67b1-4ab4-8e64-5e2a5068debf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b77aeef-3c19-4fa7-857f-f18cf53190ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d779b99-d884-4f4d-b0f6-2645610e2149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "294ce06d-c1ad-4662-9f25-2f541fb82874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dabf457-e7fe-4b25-9858-a227a706f60d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58144769-a3cf-42f6-93d2-0b5df217c34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "797d64d8-154c-4ab0-ac46-00e3f288a8f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7e6681-f40f-4cc1-9808-c60e44d6d0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a76d518-92d1-4cc9-b2ee-dfb41fb4ff75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2177955-b3ff-4fb0-bb45-00611abab9ab",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d849ab9-722b-4df9-ac9e-bcb72ef6e93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b56f4f-593d-4276-92ae-7f8a771b568d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4792baee-db6b-4fbb-b350-cf6be9ff4751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d39e1595-7296-4544-9c12-d4edd4a6d2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1f6169-e879-4f36-85fc-8a22af2ddb1f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a63fd5-66f4-4879-9d80-f88b8aa6dd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11520d43-59cd-463b-820e-3fded646dd93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25a9011-3d56-41cd-aa3d-a469a357e25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "232617cb-d4a8-46a5-b2da-f09c40f081c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "932b3654-4572-4e86-be90-27de63d7ec6e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c6daf6-438b-4dc3-9aad-bd3f350bcaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c7c410-afef-4d74-aa1e-5ef194954049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0b2ed8-beb1-4f87-b397-209dec9513cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d49c4eca-e09a-4850-84fa-54e1818c1506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93844661-cbd4-46cb-8db3-1077272172a8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33306540-586d-449d-8509-8211ec68b956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64791d0b-c736-4056-b435-56af50bce1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621f7af1-0828-4dd7-81f3-9b6c4b4541ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "619fc0de-d837-4643-af23-22f6fbe8ba6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac84334-908e-41be-840c-b52de7650b5e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854e45f0-e441-454d-be19-13afd7dd31c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d4b98b7-be1b-4217-89f2-6e0b1cbc329d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279159db-84b1-4223-86b3-010078be66e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c336437-2f12-42cd-abfe-915216173229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2390acde-32de-4f97-8e84-8b30f329864a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16eff614-f8c2-4f18-b802-dfb1b4c64588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7149f73-9db6-485e-b2a7-d03c79a9b887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c6ccff-087e-4e52-a1f5-be9b4f95afa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4589a710-d10f-495a-a757-2896e8855f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601043d3-950a-47ec-a702-6d919c836eb0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac0b23b-4f75-46f7-af96-abbadcc7a77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c1af6d-fcd9-40b2-920a-20ca949d72cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74eb420f-e9c1-476c-b78f-94cb07fd9395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "652a1f61-4430-42df-b6a2-61b4a62dbf40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8561cda6-7260-4c0e-b32c-d75d2392818e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8d3c62-75fb-42d2-a84c-01f7b78765f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5432072-f15b-47a9-adb8-f4db544962a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36317175-d3eb-434a-8fe7-938b79b506dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e917cc-b391-445b-8908-067f29a01b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40efb857-c18f-452e-9ee7-a12de0057417",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b711107-f556-4e8e-b430-6da80686082e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "709d5425-583a-4ab8-a925-fb2c44eb4a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5352e8b-a269-486a-bb41-c61c3ce561fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f82447c-0641-4e28-8c3f-3c7160321781"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "07b76323-ce80-49f6-9ff4-1e2c92777279",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "64bb457d-dd40-483d-9a6f-38edfa1e16bb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153b1405-eb46-419f-837a-e2a5e7cb48fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d144e6c1-8c47-4a59-8e1f-9702fffc482d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4fd037-6045-47d0-ae24-8e33fc882c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c4ace23-512b-488a-aa7e-60cbb7dc2ddf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ddab6fe-e31d-400c-b681-7420c1dc8de8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "facdb8bd-7be5-4d0d-8d5a-e00a06933a77"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3176a84-4f46-4bc6-a3aa-a2cba19f6a24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c9c6dda-ac6e-4063-88a8-1b25cc06fd3f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9f96849-65e4-4f89-b890-ffcff0003585",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "28a03089-bdff-4240-bfc1-25028754a8b9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "284c28ae-4570-4434-bbb6-c09a2c6ac6a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6cb3588f-e241-48ce-9fbd-18192e0765cb"
            }
          }
        ]
      },
      {
        "id": "6d37a82d-b8e8-46aa-9f27-b8c2c3e14deb",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "557e15b1-7437-4790-b1b2-1a0074e81c90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c79a7dd1-108b-4b47-a80a-30f1e086259b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "369cd797-f228-4b37-bcec-752aa556f60c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1786c5-c714-4c63-a394-32b1e604322e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88fcd4b9-840d-493a-a306-9dd6a9c41476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448708e0-7551-4d8d-8a5b-a2346e10fb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e258a6a8-4bd7-4b85-97bd-1a2bec7caabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9c007d-a035-4282-997b-b78a91c39ade",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acba5d56-c4d0-47c6-9a83-458672051115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c722ec8d-0370-43c8-a324-596e8c962224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1588745b-3ad7-4933-af39-a6b15f1b5397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef00e4b3-7527-438f-9f8f-1618115cdcae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859a1bd3-487c-4d4c-bc44-cf29ea0e6b90",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80dad2fd-3afb-47f8-b8ca-7e3f0dccef7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf8aca41-4f0e-4fb3-b40e-88d47714bba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c00d79-db8c-4787-9dc3-4d66136d2df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b65938d-4922-46ce-95ff-df3f381ca3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e640c3c-d790-4fdf-9b44-3456a3490716",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc007f40-269e-422e-8160-5929ddfb2e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3638939-c3f5-42f9-99a7-57dafa68903a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73caf1b3-ce8c-40a6-8874-6b2d81b35ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc38aaff-5779-452f-a33a-6942d3c7f91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd25ea2-56e7-4e9b-b11d-b770f9a7ec06",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988e3a12-28c2-4e03-bbf9-3e33646b1d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f6e60d-f1c5-4101-9bd0-8a60f3879687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2839f114-4809-4600-b8ab-d62e3aeec6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66942137-5427-4342-80f0-16e925088cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae81d718-f9c5-4afb-a328-d78f14f7fa3a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860eb716-03b9-4ccd-ab7c-3019298503d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c622b3-1d4e-4327-ac3b-30e2517b2690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb678b9-3885-4193-907a-01d984966e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "98a06419-e55a-4e82-ad9d-46fcde567660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30460d5-a666-45da-8706-d5d70d10c4b6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5b7d79-9d28-48ce-bf7c-1d7eb33ec654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a46bc45-ea9b-43d9-abb8-2fca32e3f566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8307c9-ee9f-48a5-b387-b2972d7c876e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa3d6fab-1758-4a0f-bde8-aa7fa184903d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8d01b6-db93-435a-947d-70519cfc3d04",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cbfa8a1-50dc-45d2-b756-3759858cac5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83bd7bda-9e43-44de-afc8-db1c69e78530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2889780e-79ed-40ec-bf57-afe2ced19f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e13503e5-b428-4be9-a68f-e578fd208880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127be8b9-300d-42b9-8fdf-87f8722c46ce",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78abfca1-fe49-4f94-90b0-f313736b572a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e754af-584d-473a-bfe4-3475a5a23cf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a0812c-136f-40bd-8ee8-fd44268164c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0598d21-b7b6-4bbe-8139-86537b515d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e853c3-3a48-4cc8-b5ee-d493b6ebb57a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9e1d2d-2c57-4016-9523-55b30e0dcffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e0075e-eab2-4f6d-ab25-b044fbd8fa52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82dcdd27-9e20-4b7a-bc2b-2ceb6e4b05e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "171793de-7774-4326-aac8-3ce1aeee92cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e176ae95-c22e-40f6-8774-5fbe61c6703f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0719090d-423d-4040-8e0a-936b5d6e5ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94285173-e86b-414d-894b-d6aa37f75489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44380e9-7dd8-4bb8-9f41-cd3140cec65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "de684f22-cca8-4312-afc3-8059ef2210ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef037c8f-44bb-4431-80d4-11e04975aea7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a208728d-2d14-42a9-8392-1fd8a2ab2779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0cf0774-a4bf-4bef-a048-2df1e15ede43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff2179a-1de3-4d07-88cf-fb6e6968e9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "508a601f-28c5-46ee-96aa-a6b2389d5566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ff37e9-28bb-401d-bbb3-6b67f8c50ed1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "162895b1-4491-49d3-85d9-9ec7e80701c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0b3d59f-bc6a-411d-a0e3-478fec38510b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d970d748-31d0-499e-9ce1-d126bd3c7753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa43fff6-16bd-479c-a39a-1f1a367b43c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e59b3b-0d39-4423-bfd3-8fc03cf5f450",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaaabf68-9330-4444-aa1e-7b385d3aa395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c21712-00bc-4849-b255-cf3df45c5daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a164f380-b48a-44d5-87f1-5e3a9f4574bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a9bf36a-0ff1-4040-baac-12e3a5b4deb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23edaebc-c6ad-4ad7-9679-4c93876ec927",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b371f145-b8a3-461c-b370-6e689dae3035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78edcdbf-4f8e-4bfe-83d9-2b4ca285b41b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be820dc6-6770-46a2-9b0b-7d74b30c920b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "468d0eb0-f4b1-4c04-b0b6-a97bf86aabc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8827b2-2b11-4717-8eea-cd620ff50e35",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53e043b-6c74-48f5-91eb-b4ea6c86c4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdfa67e4-c4ec-483d-84bb-a15beee37670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb73b72e-a8a0-4cbe-b88e-e254b229d44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "307ac26c-fb61-4921-b62a-85bff691c61e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a94d2f-5959-49e3-b464-583440b9530f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5c990f-c2ff-4180-b6b8-c30f9a387854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5270928c-3fbc-4ba3-94be-9584bed257bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98d8ba0-4bf8-4b2c-8d8a-e0975ff46db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb5f79c7-73f4-4226-92d9-322072af1be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f589045-86cf-4b81-958e-a28dca5e2c07",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "969bdb89-e4ad-4420-9278-a9d509bdcf30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28351fee-143e-42f6-aa1f-6b8d97bfbece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4418337-4717-4a8f-8f3a-f4170f8f2a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d29f820b-a9f8-4da9-a5c7-bd595340b1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65d7b74-8ccc-4e62-a0ab-ab7c20a39347",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d80bed-1419-4e8b-854e-ced3c2a48d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a776ae7-ca7e-4d97-bdec-e6bbbb1b4fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5519cd-272f-4bff-a609-346b7235745d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8414ca2a-2fbe-4679-8295-de342fa63f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327cdd26-3528-4414-b37f-8fea07a82976",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29553d9-b694-423e-a1a4-485d6345abea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e498543-e42a-419c-8826-d6d2554c9d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672715f7-1db2-403d-9e38-048b03e6b18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e36d73f9-06fb-41c2-b9fb-0400e56dad56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757a09f7-c505-4e9f-bc3b-d657a5f0d634",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce27603-7bf1-4223-a097-4660701844fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "535357d9-5f5b-41b4-92c5-bc77d16f9496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a7e2af-e991-407e-8173-a7f61d8b2797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e83c7492-82f7-4b39-9d0e-a423771dcec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15529991-b520-48bf-a3a5-67d2c77d4418",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f387f709-11f5-4c82-9fbd-5ea0e4ec6dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547936bc-5e0f-47a4-9d10-e4a465e0c51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b9676c-e778-45b3-a74a-77bd8b4f04b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8eaac21f-fcea-4923-94ed-adca225af9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51582fb5-9f34-4361-b713-60008460e030",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1194d0ab-f71c-4993-aaf9-faf40d238f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e28bdc-ff7d-4861-b9e3-e6528b7b28f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ec9aeb-318b-4830-9f77-8d304a71c16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "860ba301-610f-4677-beea-adcc05ab75e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9d8c0a-9d95-4462-8103-743fd8f0d103",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34134a8-4649-4632-af30-6cbac1955685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "613eeeae-48fa-4526-98cd-82644ace9486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d474d7-9e53-43c2-acf7-80931dcc8886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a73625c9-53fe-4c62-8efd-837725a74fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e71d746-a5ba-4c41-874e-f6ab36dc45b7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ea01de-635e-4398-9dc9-2883194b2ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5179c525-95fb-4ae1-8a19-b89382b334e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be24532-52f3-488a-8344-7cd8ad9aad55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fae08ec6-69cb-4ccd-ad6f-e003f5b79d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9aa529-bfb7-4982-90b9-808d97659462",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac8f851-0ce1-4a39-838f-12e72040e34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a59eaa6-bb32-4b2f-835c-3c2abb800297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed302b18-b278-4213-8859-518b3367baf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6504b2e-0b07-402b-8e28-c711da848fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1237030e-a17d-4746-a0bf-f53dfdd252b0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b263e2c-d307-4075-aa3d-3413b7030181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf4832c-fbb5-45fb-bf43-7aee2fb684ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd68ef1b-9daf-4046-ba33-313cdf09538e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cad605a-aead-437e-9877-4e8a9ffbddfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43993fe1-e7db-45b0-8bdf-b481eb79b1da",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b0517d-7f6b-404f-b6af-400139d68d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d70862-f776-4a22-86a9-f9ea137c168a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3324fb3-f980-4c5d-854a-c56e018ead5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40ae46b9-b544-4abe-aa31-9202fb346fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891464cd-1614-45e5-ac1c-f881fdec931c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88924a40-9f76-49d2-b792-9379592980a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e275a1-b458-4fa6-b1e1-2d67cfe7ccac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a052cfe-7f0d-454a-830f-faa5629c4714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdfba121-ee35-4d0d-892f-2e4ec6a5054a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe8cd39-d049-45b1-aaeb-48d62bd47a3c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23954d5e-7bbb-4237-a63c-09c1584f1769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d1f8624-869c-463c-aa8b-e6baea15ee8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f09323b-ac5e-4b5a-9915-6705950bdc09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb2e8115-83d1-4f1a-b3e7-7d4cc20e5535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b9178c-7cc2-464d-9f4b-79830cf4a8a2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b94487e-91fc-454c-89a9-de1842a1c93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ad2a67-739a-4852-9031-1fe835ff6542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7164b060-016f-49b7-9512-ca81d9602d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "248d7eca-dd1f-4a73-abb8-307e22836ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5dadb20-bae1-4142-90ad-79ab90f60007",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c604d9f7-0fef-41da-99d3-179b015eed65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8907b486-7325-4031-ae3d-29b9e10a8ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a8e931-f308-445f-9e4e-e3fa67b9669c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa95791c-3d87-4a4d-ab98-324cd3414489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9b9bc0-571c-41f6-aae5-4439406d2fee",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "503d4c3d-87e3-43ae-b06d-94b3d9f198cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a340c2e6-b6b9-4006-aaf8-51372b8e226b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396f2922-b637-4c00-9422-93a7f2bc5526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a9caf38-e2b6-4dec-b1cf-7521a314b39f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a87934-038a-41fc-93cb-5bd0c0efd385",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c62bb7-c8e6-4795-831b-9c35969e85ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23064f7e-a5f2-4f31-9b1a-4bf497d10925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888c2338-4c81-4cf8-9c70-5332a9772b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dce86bed-6379-4f22-8ce7-a024ea3ca8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab46d4d-7615-4186-8d28-22a241dfdc11",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe95df0-5347-401a-80b9-0aed2f557782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2df2df3-b25a-4f94-b6b2-e0e64251c215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13516257-9050-4113-800f-00ffa8160c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "765ea5ce-357e-4ead-a698-4de8fb8ac8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0a3093-91fa-494b-9009-5d279068ef3c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ffd33a9-0626-4f75-bf94-b451200e667f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "455b340e-d3a1-4839-8ccd-5dc47f5391da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734cb50b-4720-44bd-a4a4-0704df74d687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5fb49d-b33f-40d9-b0da-406c0b742ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4cc5383-db88-430d-a1f4-e48eced16ebd",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2fe20c-653d-4b93-97c3-a9dfeea6e928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5cf767a-e932-4e70-b000-2c23ec0764db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abce19b-f418-461e-92cf-28c42efc00a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b92daca-fe80-419a-ba21-865f67069247"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "20a16b19-af2d-44df-a825-3d8e3e484945",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0b4b66e9-975b-4164-bc97-9e126b500d5b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e5f25c-111f-40f9-bf54-bd67b551255a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e92450-d81e-487d-9093-308609a6bd87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9494f401-26f4-43f3-aeb4-08adc1d58a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d493174e-d139-43eb-bc2f-6413219d50b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dfacdc20-8d85-44b4-a319-c0e967abb507",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5cb0403a-37b6-44f7-9fa3-113f8e56d738"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "70c5223c-920d-42ff-bfc9-91498079029b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47009438-0c27-4399-a967-46273f6a7af0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f49c8ba8-4c8a-4abc-ae8b-7d3fbf32b933",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ca957f12-ab6a-470a-b7d4-3cbb7e85677f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ace9c71-80f6-43b0-bab9-0a9dd182be90",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "272935cc-1a4e-4f4c-9a2c-a0ed4a2e65e7"
            }
          }
        ]
      },
      {
        "id": "e38989e8-6f14-4f8b-ada3-d212b3270bc9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "652d1455-102c-4c0d-b3f7-2f948a5e643c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3589d3ba-9a3c-4847-b2dc-51e8c25a8f1f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c2ac354f-ef96-4787-bf88-c0341e7f7377",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49952006-cb07-4c9d-aa82-d40c5a31e4b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855756f4-fb16-4b78-aaaa-09103cea81e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ad91c4-677a-4dcb-a59e-a7e158f63ead",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f41576-d0c1-4dea-a08e-96a86b12217f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b28219-42b8-483d-ad46-7c646ba228b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b75bc60-88a3-4307-a511-2bb077a95833",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e3cbd7-4ab2-49b2-ae3e-ec9e0134b6e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821be5f8-a131-43fe-a712-2621457c5a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401de3b6-bb2a-4c47-b49e-8a631dde6a1f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177f0338-3a6e-459c-8bc1-10b9cdafdcac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f610f5a2-2fb4-47c7-8e26-faea6debc62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06154afb-664f-4e85-9472-887fcd81385a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4814745-4b45-47ce-9e14-6dce41a12cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b52af09-16ad-46ea-9ab7-78438f7a9d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb382377-30c0-400d-8bb1-91a34cc2b6e5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00b00a3-d30d-4cdd-b567-45e764f6d629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51be5b34-8bc1-4805-b5cb-645acd84293e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff26989-2028-4659-a24b-6c3234c9885e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25b1ca2-f288-4148-a930-7678f565da03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e4f15cb-a3ab-4464-b839-47e6fd0d9a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c60ad70-c713-465d-9299-6864178f96fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d598f29d-8ca2-44a1-aa79-2b7f80a7ccac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa926a3f-4a64-48f7-80e0-064d894597f9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be34910-03d4-434f-a6b8-f2d09989caa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7d83d1f-c139-4820-a31a-e3d1517861bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1552387e-26f3-46ed-a3c3-a640247861a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d8aeec6-26b4-48da-bfbb-5c52e0248388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab417ded-0b9f-45b6-b451-2aff32ab32d0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf174a8-33e3-47f8-a1b7-3bd6f517331a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "973931ef-3082-4b27-96cd-34b25a876a4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ea7e51-a311-47c0-a611-31399f6919e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e19dae-29a0-497e-949e-8d7aeaf211c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc5ead4-1e48-4c95-8c06-923aecba8fb8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f887c0-0812-4a9a-ae9e-300aa2a8ab4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "958ec576-841c-4862-9f95-b3cc4dc4cd96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d5c432-d1ef-4211-bb44-a1999e4fccbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b88d3e7-a38b-4119-9c3f-7547d2a944b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8310db50-9a4d-4c44-9381-c08d75a4fc8f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae9b689-c380-41d1-b541-38543f18efcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4599d477-193c-45cc-9615-698d611226bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "918f994c-e6e5-484e-b651-9289424a6898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d667423f-fbfc-446a-89e5-31a347d7ae9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9bdc0d-9b3e-4d30-bb24-f51b08558d25",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515fe161-14c7-406b-9965-7c3ae5bbfa6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5196519-dc4f-4609-b857-ac826f6779f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87b33c9-5546-4482-bb63-8cada393c91f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871c6a9d-f62e-4c57-b9da-bf1c208691ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23e82e4-3502-4ac0-b29d-abfda469c19f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37017a1-3f2d-461e-b6d0-1ed693becae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83e2843a-93b7-428b-8a19-3b3852adce37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "695c31de-1dc6-42f9-a6e6-cbfb98a16209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27030874-0e4b-4c1c-8522-d5fc6a79bb4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceefa0bf-9a36-44b5-8649-f5d14f8c680a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d20ded-3d11-4e6b-a2d6-49782c8b9c3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77168263-2bf6-4c8e-a61c-74140284adf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cac8d1e-dfa6-480b-bdc9-96c35ee5a0b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d405a6-2f5f-4d30-9537-464900d0212c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01635fa-a5b5-4047-8b13-b21a9f877acb",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091b07e3-f95a-4797-87af-620cdef5584c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7508ace2-cdc8-4510-9ed3-421a9dbf2af2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26962a40-f19f-45db-a2f5-1239a31788b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "072fad7d-c8e7-449a-a25f-1374b2e5fe5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45af7ffe-5dbe-4d44-8fac-872f6a90d53d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05921a9c-1eb7-491e-bde8-6ab5ac575806",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15894848-8f3b-4212-8401-9cb7b0292aba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0845085-22cb-4e20-8209-77a6649e73a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "070d6747-3360-4f2a-977e-6d12afaf4991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a56028-0f7b-4ec9-b8ca-c4bc07b5dd04",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6167335-4796-478b-a1c0-3ec845e8f6e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b108b10b-86ec-4d88-ab25-9b6ea313d6ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57cc1db7-fa29-415d-8d37-cb8d498c6a1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87fd37af-7899-461b-881c-f609eace02b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744b04c1-551f-474f-9c81-e4f0b7bce950",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b8f5d7-21e9-4f46-a2db-5710fcf68e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c371dfe-49dc-4da0-a782-88bf58e9bf37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "743b88c4-7df4-457f-8a8a-9581acc41b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75a8ef2e-00ad-4465-b844-4014ac7c64cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3646d6-3168-4c7d-8ea0-d6ad63668aaf",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f5c1e1-0302-4902-b5af-8513e6fc47dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7060c4e2-5c43-464f-ad97-0b2448b7263a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1158e0f2-fefa-4650-8e87-dbf940c78276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09f40967-aae4-4783-93d6-0032bfa8ad49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd11b0a-a2d8-4ebd-9478-2c1711b720b1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a65c13-018f-4f07-a370-be2090e6daef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd279916-38fb-4962-953a-077e027e5e4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "869b1d42-65e8-4a02-b2a0-6ebd70b55643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4943af8-9c91-4e4f-a431-1df26b99033a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf07e8a-2014-4438-b4a1-6ddf3807f894",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f10570-6125-45a0-9287-206b10e6de2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d847f9d-0990-47ab-be35-4ffeb90369e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f131a8-8f27-4a32-9c34-d644bd764861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe8b1ed-5b1a-41f2-8b88-a64119b7c753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d418a9-9ec5-42d7-a9f9-6261060e979a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14dbbd23-b6a8-4c9d-997d-21b196cfa347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97f1418b-36f0-49e4-a3e0-a111897c0954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9838d1b7-2494-40e0-96b8-2486e9103ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e6693e-fff4-48db-854f-cfd6dd441b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867e12b4-3452-4f89-afe2-bd48d9cfa460",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd5ef27-52c7-4ea9-8d29-7d00fe0ed8c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf4e6cb-c542-4b41-8106-fcb24ab36455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8d3297-5d36-4984-9195-f984fcb9ddb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c135ed1-2fbd-4844-8fde-430f6eeae894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e495c405-3513-4a0a-a049-22bc469bcad8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c191351-47da-4b70-9e2a-152c542ade29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "781efc7e-d81d-4b5a-990a-b67b57b9d8c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b416902-7d87-4520-8616-e0cef9970489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb6ccd4d-3f19-41a8-b37c-f4f214d87395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7340d7-ede4-48da-8ea5-e7df5bd86001",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471c0a08-38bd-439f-9970-ca9c781f0622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "592b4db7-04a2-4bdf-99d9-9e6e211db517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40077eab-6f06-4e28-bbbf-ea86f6d83709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4671e028-ab12-473f-8880-d959062eb83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ed310e-a8f9-4688-a816-125d0efab18b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ace4025-bc1f-4966-ae0e-de56d08ff5fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa12840e-e2c5-4112-a99e-8c5d7f644cce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26352b21-221e-4dfc-8d73-25d39dabe00b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "964a4421-9397-43f4-895a-d5ce6a4004f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f6326f-53e1-44fd-8ab5-66f2c513cbbc",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da16c79-7413-490e-a811-9525ed6fbc11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34c48c4f-b9f1-4d18-b56d-9c44a6780b59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "952835ec-1d63-4934-85d3-1217f34bce51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d8892bf-8c3b-4d47-a899-292007ff537a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0a54c0-2423-40f8-bdff-a4684e26384f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1002e14-e768-4c02-98a3-b95a8b8535f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951bf684-ac3e-4872-a66d-33fe1ca109bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aae646d-df3a-4152-b05c-78824c07d6cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04492b5c-1fd3-4919-8f0b-367824acd6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b92dee-54b6-4b21-9b95-62da94f23c21",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ff8944-5112-4553-851e-e663fa69380b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1759e2a-b892-4bf6-b103-eed521d31215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6bd2372-f510-4220-a36b-be5832489b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158d6964-5af8-4595-a4b6-36bd0cd4f24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d9cbaf-cc9a-41c7-8a29-369309f2d65a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090eb360-2585-4265-94f4-2b7b98d4a4ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2df25c3f-c19e-4e4f-a935-16f6bee13072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f304996-555a-41b0-81b3-5650f9f979f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "982f95d3-7c87-4e93-b948-ffcb5b6bf133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9a2974-360f-4b7a-8a91-8ab619ea2950",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af09ea76-ed9d-44b8-9323-8f7687824ab0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e0b136e-26a1-4616-a34c-34a936f258ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e9eaa9-f0f6-41e9-9386-4fae3bf84265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8904d986-a80a-457f-ba8e-7bdbe7c5adce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5cb12c-d23d-4e36-aa16-921de5ded1f4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88316b5-f74b-4bae-b483-5987f527649a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e310607f-d596-4b16-ac46-2f47fde8f48f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4944e0b-a1e2-4429-873e-bca0489fa020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58bba520-4ada-46f2-9512-19c8ba0dddb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780419f1-2d36-4476-adb4-42c33a9037a0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6baca571-a712-4291-aad0-395447350c80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60a5b33c-9b14-4348-ae88-08f2e701c5ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5cea35-580e-4b27-b7c7-2dc6acdace6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2333944d-1a72-4dbb-88c3-3552ce1e4072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649907ba-ed42-4bc4-9ff6-b128a7865105",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af56ce04-2254-48fc-b512-e6d2d767a9a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92243235-dab8-4106-85c4-3c4d7b81741a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a9e2b3-35b6-4f8e-be85-0d5e948c9aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e5ece4-7a33-4fbf-ae7c-2aa77393780e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619e36d5-c554-4d71-afc3-7b671f55be3a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc37a446-400a-440e-abe3-465f58e2813d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea95658a-e1e4-4f3a-a5d8-21500ad9efb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f361e37-9fc3-45a1-b2f7-7e9d021f1fbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b93cfd5-ede3-45a5-94d3-9178ac83b086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794bf509-bf1a-41da-987e-ccc3bec2535e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54324395-13ee-4701-8b45-f2007276c172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "472ff431-5462-455a-b14d-eb792381a70b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec3c764-c091-4ccc-a2f1-313d278d0410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b9c4d81-272f-47cd-a5cc-09d7f410ad0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2561a6-2a22-450b-886e-c6a4fcb75a04",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d03b518-62dc-4d68-a389-c4bbb128d603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "900301f8-daf4-4635-be20-5456128e16ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f97249-1edf-4279-8974-f8a54fe19eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7903a663-ca96-433c-b804-191568fc541b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021def77-59a6-4aa3-b549-f5cad670effe",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac69b605-5e57-4f15-8de1-05c979516657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889902b0-e7ce-4881-8ba5-8fa02f1c8c44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c32e8c-99f8-470d-b197-062b038ff9e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513e1246-523d-47ae-9976-9261965333ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57321a88-39db-4983-b74b-603689f84d22",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93e8cb2-03f3-4a92-9f16-acfb49509358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16819e7b-3fc6-41e0-985d-bc4a1679417d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3b3770-3752-423b-882e-37f8fa1de70b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31665827-161b-4307-bce7-44f64a8b430d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e0cf5d-7561-4ac5-9348-50eacd9e7bbb",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d4ede8-a6e8-47f7-8956-683e6b4ac3dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1fd1444-24a2-46f2-a9c7-3f4aac00b63e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4d7130-a9ac-4f09-81d5-1a5bbe9343c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada8e777-411f-4b82-8466-47ca1651647f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec36c8b-b870-46be-90f1-c2536a3d9559",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380ba9f0-2d25-4e08-9b98-ce3bf1398dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c65a49-f27a-4ebd-8c32-6ff32dad1dbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "917781b3-abba-455a-9541-5fbb802be381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b81b3433-3e65-4c83-b39d-937c7de6e5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df270f3e-bf44-41c4-a565-e8dd056b046f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc55c4c-72c0-4179-a169-fd8cbdf0c243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e009fec3-0060-46b2-aeaa-16ecd86871f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb23d9a-66e5-4c7c-91ec-251cf9079bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c74dd580-97db-4fa9-a960-e32377dc5cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37911aea-b537-46c2-a0ee-7dc6a0fc91b9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b11a1a-4cdc-436b-b5cf-52e3d971775b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2836840e-c37c-4ea7-a7b1-301fa46b6ea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95f89b8-63ac-478c-93e9-79b304a6a8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec975d47-e539-4117-bc28-aca0f6eff56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd610ab4-b22d-402e-85af-25b1d906d630",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61eb05db-bd24-4b9c-ba5c-bd52b5698771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec6e0e0-7d85-4f98-8625-d5021c459007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2f5b2c-d63a-4442-bf72-4ec0fcb91f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9de17b3-1e96-4482-8df0-c837b2872089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d6138c-782c-4141-bf83-f46f6eecabfb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1c2186-fd6f-4f67-acf9-6d6b76bd4c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6960605-c297-4fd6-aa49-801daae4c0be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32f5fef-293d-444f-b9bc-3024fda53113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595a23e4-0871-43c9-9876-94c90460e8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68985525-bfea-4641-a37f-da895cecbb09",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8157c83b-74ff-4b68-af04-b2c3c2a528d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f2fcb5-c718-4ed1-87d2-60f5ced2b96f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "273142c4-216e-41f5-9130-730f817a4afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b572846c-f860-4505-985d-eee78dea8a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e25a389-d7c2-4d65-a499-fd208fd30634",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58468655-dc8d-4e08-9412-d868c54b4c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fbc4369-d633-4d1e-ad6f-900a4f7576a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47ea0b8-d57a-4151-a1e3-12ca73cf0109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af00ea88-d2ab-424b-8267-29bee4695df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70e74c5-0bea-4e2e-9fc3-758867e11637",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6174ed45-112a-4f61-8dba-38e406cb4cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8342838f-9880-4cca-ae4c-3202d9a3954a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6248733-18ae-4599-8ab9-f568c6853d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba1a706-f3f4-4591-9a83-5470c9290d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5d079a-a22d-490b-91bc-b5b688e1f975",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f4e84d-607d-4610-aa94-30e35c34bfba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f4179b-c312-4cc5-8187-89ce1ddc319b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f5f9ab-15ff-41e9-bf86-2f2ac9c56c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b03a0c-c476-4e28-af85-9995f601ef43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956031a0-6ba3-4358-8852-3c088fff4eee",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94f646f-637c-4c3d-8516-1981b03b5c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d5bf19-452a-48e4-bc97-3aaeeaf579e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3709059-6187-4e21-9027-4c3ae7af76f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ebac76-387d-4b83-b905-92c7ad518fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22c5da4-7aad-4a56-98c4-2525d5b9eb7d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b6a9c9-dabe-4a2c-9f3a-71c4772a23aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535775fc-9b0d-4b37-a063-9bd7e9b00a01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee35bbf5-48ff-4738-a998-76afd62cc47f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35453ad5-0926-4fa7-b3e6-4b69c87d556e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3e2a92-c4e1-4d4e-8b60-ff403a9f4e62",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53d1644-9cc8-44b5-998d-8947e64915d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c177f2a-af50-40ea-acf1-97be06dae0f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaae8307-818c-471d-a71e-aa8d3cca3a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56497d7d-bbfb-47e7-85fe-0685a4eb4807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6fabccc-4ac0-4e59-8a3e-0368f4bf08a3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f82b654-d9c6-4a27-913a-5eac643f9724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93419d16-3a44-4a3b-be67-5617a1d32843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81534f5-1967-4ad0-a648-09c6b67a161f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d07148e-bfdc-466f-98e4-08499880476a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17290f92-73df-4de5-958f-d4baedaf75b4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c8b3b7-1df0-4370-a6de-0672bd14ec88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f89646f6-b163-4704-aa90-4eb8f58bef46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ee2b28-de9f-4528-b741-82113fb864fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d94b4683-67c2-424e-895e-b251f63cf62b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de878b88-ea17-4fb5-bd6f-91cda83e8b57",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a8bad5-c0fa-4476-bc81-e2a595fe47ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf83cefc-8e0b-423d-b76c-0711be2051b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2bacc7-5a7e-4964-b67b-0b4ecab35135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e117cb-8bf2-42f3-b288-633ed0fff521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c09708-342b-4a87-9a99-de636f04f86d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24edcba9-c7ba-45cc-8daa-c1d609b461aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85fd73e8-c555-4ee3-8f51-3c3bc910143c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b118869-8e86-4a8b-8466-61eab2592b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab6a883-5b4d-4937-94c1-eaef92466611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1656ba10-7209-40e0-9e30-fd0133b91f8f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2180078f-0871-487c-9d3b-2afc5137a3f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdce8158-cbd7-453b-ac78-ec35e48312d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfc49f8-c4be-4487-85c5-08d66a2860d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd19913-a3e8-4c17-9a6a-94d1c68fffe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957da55e-9372-4ac3-82c3-7933ead173cb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f241aeb-0297-4be8-9f61-68eb63106018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62318728-c08c-4d8c-a2e2-34ae0d91af84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89183e36-4e6e-48da-8659-48e293ebac2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "375dbe34-d60b-4039-922b-e2d3667423cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b1f1da-5c4a-409c-9c0e-06b480c13ec1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5b0742-959d-4831-8cde-a9318f3a3b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b5d1cc2-7781-45a1-a844-79599e9fbbaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbf1701-708e-40e5-90a1-08e2d981ba8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e4a8d1d-9683-4312-a4a5-889a76d1820b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815f2981-8c56-4c38-bb99-25f18f11d3a0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d95790-1a84-4ee4-b137-e681ddee7d88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26139484-ea01-4560-8224-9c91be1f3e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3185f55f-b7f0-4f51-bee1-bf3a623df9ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0d4575-37fd-4d04-bc6c-de521c361c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e19ccc5-58b0-4704-9d34-6588ed22db78",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548ea199-da9c-41e8-b05d-dc03046fc70f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7642c1f7-4226-4a4c-93ae-e5cfeac28b3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b0d69a-c488-44a3-9ad5-48d2053aa3a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acaa20ac-c847-4020-984a-ccb1e87f1f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae4e9db-8a09-46d9-87d4-16795884d00d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4efc3e-d923-477b-9daa-ccb027bbc161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9c39372-d841-47a3-aac8-7a60603fd6dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db428316-b8df-4320-ad8b-ad780e7c9372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b5add0-853e-49bd-a298-af2b3cffda7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f581c8ad-eefe-468c-9bc4-a21314543787",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ba32a6-3380-4da2-8bb3-03cf9d80ea2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4397873-a2de-4299-8a35-1837845f0586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd0393a-0461-4023-8e4a-275f2439c276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dafe16e4-3dae-4d31-9541-ba6c846b6f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f78200-1d19-401a-9842-764302e11c5c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c266afc-c3c7-4da3-a1be-e59f9111ad08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22904e87-74ac-49ec-be71-66bdcbae0419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acaa6ab-2b6a-4b87-a435-9f580c5ce07a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1eea5aa-ec1e-41f9-846b-57b4bf005aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2eb8c2-abbc-4d70-8e93-9b1d383b8ce7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3c5d08-2657-4656-8cc3-e5e623e05857",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3fcc8e6-82d2-49b1-8a03-c7529a80dbda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7fac83-61c9-44a4-987a-aae349ccd319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f7f925-539a-4e97-b59d-77276bb05446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18008c3b-7c42-4f89-8ea8-ba63fbf2d552",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88cfa4e5-5e48-4fd7-97e4-cb6861a5fdb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbec98a8-24d7-46e4-ab92-9f40dad002db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "249ce3f5-2e63-4712-9e4f-7cbcb943c1d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b16da783-ac19-459f-aa9e-e5232be618df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd262ac-9e42-4f51-8bdd-be72447a1f27",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782eb255-8bfd-496f-8082-5f2946f66b65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66f42c81-1b2e-4914-b3fe-4ef1ce805918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23552515-cac7-423b-a9a2-465a9a9dca6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce37663e-e98c-4169-aa5c-be0d7341311e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483cb16f-f1bf-4582-941b-c71a07ae2d38",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aee7991-3244-47d1-97d0-4a264c718914",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b556fb5-31ef-4a10-bd47-6e5ec3fdd2dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ba5207-7219-4c5c-8fec-62df640c7c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60079f45-ef49-4c2a-81c8-5bb0f7de0a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96937fd-9c39-40d4-bea1-4c2d56c1305e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f10360-7993-4ef9-99c2-844ef0f8c796",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c55c23d-225e-436c-91ba-31892d6208d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28138282-755c-4550-8a02-f855c8eef130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3634678b-dea5-46bb-a0ed-d1c60d22f778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461ed85f-d512-492e-964f-7bd749be1a66",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ec3059-a1ab-4e02-bd8a-1ac82d0561c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a23310d5-5927-4d54-a636-b14f16631210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7356be51-7164-4a1a-a402-c7c44203881d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76b03a4e-b8ec-4769-9724-00e498122a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4eb8c71-acf7-46c0-9fe5-b1d4f1b21c4e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70b39c5-368b-4206-9335-936f2465d062",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c6c6d11-3435-43d2-b617-da6187057129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cee4b6-da4d-4798-ac3e-1fe68cc28389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "301a65c0-3918-48be-b084-4b544d233801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6dbf323-4bf9-4adf-ad5d-f5511830eaa3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e04caf3-8440-485d-8332-cbcf7e49f124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da80a4a2-6070-447f-8f27-f906c3c2cdf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98901f5c-952c-444f-9260-7edb417b0787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dfc754e-08e8-4428-bcbf-bf2f3a06e0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced282b5-6b26-4ce7-9741-1be86b95d7e0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0926a81-d612-4c2c-a17f-421fcedf4ea2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "704eb7fa-69c1-4222-bf1b-af17f72a591b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d178da-6eb5-47e3-9279-c4d03706c16d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "440479b5-277e-45e4-a68e-8ffb438b4f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7abae666-65af-445a-bbe1-71f650db6b54",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9216e31c-063c-408b-9f82-f1bb7b5ffbbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ca0c8d5-4b64-4d6c-94f5-7bb5df8822c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa122a6-305d-407d-abee-371034d06c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c9c59c-aea7-4eb6-b90c-0d84fea7e032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf156c4-d5d2-4f63-9b20-fee137d8a16f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b18e777-0cfe-422e-8f65-27ef1c1bdfbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "116b361f-c341-43ee-8b64-772055c36f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d21085-f582-4e14-b009-a436f920fb70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480028ec-9f96-4734-b7bd-9c4c98c6a07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbaac58c-3480-40fa-9862-cb45d59f847b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1b536e-95e9-48d9-9861-26f08e5b76c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4261435-8791-4a67-9c0d-6e117897f126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5543e80-4c55-4b89-b02c-764e2d2ea5d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeeb1d89-735a-49f4-bcff-ec0f778206d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa30928-de8f-477d-8f4f-dc8723766426",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48aa52e7-1c05-4d26-bf1d-97579b59d306",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9c8cfe4-88c6-4d37-8a4f-9d315f9c571d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20dfc04a-530e-4d77-bbdc-551306e25c33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f368eb8-aea8-48d5-81a3-69fe416afbfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7459f5fb-1ecb-4ba4-bf45-94a1eddccdde",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf2f365-483e-4277-a5b5-d383a7390275",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "123f67d3-30b5-4133-947d-15e2e53c7d4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f34f12-8b87-4302-a5db-f723612184a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a445e12c-6da2-4f22-8578-7958a6af91c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d74176e-79bc-4c31-ad43-e9cae325f68d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058d88ba-25f1-4b27-8ded-f010c837fd24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "891ed98f-0b25-463d-80b5-99ceac960621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7bed903-b807-4042-a4be-62164e662a35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c54a7a15-a32e-4da7-91a6-5ae6bfdc3cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8906794-28bf-4cf6-9156-1bcf9ff61648",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed65bd95-24f2-42c1-ae74-0a595e14926a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5866b563-fd31-4e3f-9897-e9325a561373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4260a7-c56f-4014-bc02-ebebc34f7924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d472caf-1808-4b61-9fa9-132f6f2a34f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75bcc555-39e2-40cd-81bd-4da1184e2fe0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efc6e94-2121-42ee-ad16-30e1183f0eae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37570105-0396-49cf-9c53-12a2fdcdeed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb66ee3d-9ae6-45bb-88fb-8229a5e656e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a6e2260-b20a-4959-8f6d-2623e4405687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f55d94-b680-461e-92c7-2530c1eb04ab",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f406a458-19f6-498a-96bd-d9552522707b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e36b45a-1324-4b09-b4aa-a4c28a9b7ca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83aea47-0684-4421-8a95-e579d1761342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde914db-9cf0-4072-9789-9de17647f0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b9ab52-cdb3-4b7a-958d-c3e7d170c03c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e3b15e-588f-4b4d-b2cd-cada0af403a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95c967d3-083f-4ae3-b2a6-aac2ca0d0959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dabad21-1f9a-4a4f-a071-2b4749cc6ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d80b5158-c2f5-47df-ab9e-1cc619128c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e091434e-e0f6-450b-9cd1-8354961bc3f2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5169253-3277-4192-be12-0946346297e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfe47ebf-96f0-43bb-a426-851e2b69aa65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8b15a8-b493-42e2-bd45-80353110f8f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "175f389f-5cb4-4f76-a489-e239a4472077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc35c82-a7fe-4f67-bdb8-29c90c231412",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d2fb14-904d-4796-8dbe-657ed9e3cec6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9122a91f-8a04-496f-a5c8-a0fb68dcef81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2456b392-2c9d-42f7-a9ea-8b88daa4e1ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6318a088-65c6-49ac-b926-b14afab84307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4ead86-636c-4cd2-a392-3633423eee72",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa1fb4a-53e3-489b-a1d9-748164f17f2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58a613ed-aaef-477c-a72a-374db9e787d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f145513-6dc3-44e5-8043-cd936ba5f5ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8de511a-d5e7-431c-ba65-7eacf1c9438a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0d0ebe-c85c-44f8-a2e1-a8a631564fbe",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246f94e8-4107-417d-a260-4d6c9a48d6ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4bebdc0-e0e6-4071-afbc-d66a32057015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9c3591-f91b-4fd3-8128-11db93235bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e64ca460-5c1c-4693-82fa-593c6ec8a80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c7f598-b07c-4eb3-a96b-95d9c5e7001c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9953cd-c521-4a00-aff6-22523281f675",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfbc0374-53b7-47c6-9938-2b1a7068c69f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a1dc7e-05bc-45fb-bef6-a5f9701d2084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e803e796-6234-45d5-909d-d6b9a2d64823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bb2346-5871-482f-851e-c65b22f4f7c3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e24fd16-96ec-4c16-bbeb-f014b5cd032e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec626b99-fd8a-4a6e-933d-56337702f5f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df22f39-a301-47f5-a430-029c2c83a4ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e95fd2-0727-477c-a488-3264aac316ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224c2420-3020-4e9f-b6af-554d249d7d91",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6066901-f179-41da-b75c-d511f349fb70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d54f184b-db3c-41c3-a1cf-2cf8119b5f4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5257cf22-870a-4641-aec7-f8c81836d0fc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3c724a9-cf3e-4355-8704-538efbc162a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a355404-ba3c-433e-93d2-bd7648ef7e6c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f4183c-9ec3-490f-a5f9-d12809b60fc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e7cdd3b-6fdc-42ba-8e2c-0ddd8abe52a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e02181-4d63-4e6b-9ff9-8fdba6018516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26649022-2799-4d6c-ad7e-00d739ea2c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92604ffa-feab-4e1f-8d61-2f000068d58d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1a1371-356f-4077-a58c-0a15c0503401",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58d39449-c5d8-40c3-bb98-b840e90d75c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabc8405-2e13-4ea8-abab-3338a236838e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576ee3c9-e973-414a-81dd-9396aad65bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950a16b2-fac7-4ff0-b46b-4edfce9047f1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540bf075-5058-4eb8-83c1-8c77f534a51d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4691aaa-ee22-47c7-b04b-19d76f5e25cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e386e3-3799-48a0-af36-7cbec0aec2c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f765ef3b-105e-43af-9a1d-2b2ed390636a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56138895-b74c-4579-9477-df1bc49bc7ce",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97524d1-3e96-4eac-95cb-2fe7b102b99a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f179b07e-0e1a-415f-a1cf-f48e428753fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c438481e-a9e1-4675-9dcd-4efd75061bd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b92cd4f-82fe-48f5-9043-60e74c54fc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d25350-f46d-4b1e-ba5c-ede4797c9a67",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a27d562-9299-4c69-9387-57b3f0e60953",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0388e5fa-fb7c-495e-b1d3-6d274ed5a82f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f4b44f-c612-42a7-b7b8-52610ca5ab78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b71ce3-2c92-4e5a-80f5-c419cd65a99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbb0e6e-5dca-47ca-a987-d26094a9bf27",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507450dd-c80a-46cd-8e72-d3a211d698cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c581e80-353b-4cca-b545-c187ac3a6fb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ed51ec-4b49-4492-a883-e24066aa3c91",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e7e20d-a45e-47c3-84f7-c6c268e0df86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac68c12e-ed27-4e78-86a0-c7306996be72",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94562c9d-0cd7-4972-9883-e830e9b33b20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1191ffa-8e5d-4aeb-b69b-723a2937eda7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcfebf7-a638-46c6-a43f-f2564b07d81f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a34e537-7dab-4259-85d0-5b243a728283"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56c670cb-9446-4e9a-93e3-7b763945f5fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e38c71d1-c4df-4055-8f6e-935553899dea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "54195a74-d2cc-4cef-a1fa-a3a486984735",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "560cb7f8-ce5b-417d-a8d1-051029c54769"
                    }
                  }
                ]
              },
              {
                "id": "73fbb631-6e1e-4ca3-9a0a-1685c4ba361b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "06f37529-a9c4-41b0-b7db-c148d6555d39",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceacbcf1-8605-47ad-8a83-8abfac2f197c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d5d86f44-60c9-4f59-b22c-9a9d147d10fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5747d80f-10bf-405c-8199-37015f03a10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65957d71-3f6b-4327-aebf-019c59f4b5cd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "446abb8c-3496-4fb6-97a1-82a84e4bc86c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13f62116-3127-4bda-93de-790d94721f68"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "615fbb80-2f56-402d-a587-edb0c85c3d45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcfd199d-4c44-4ed1-9e39-5070e5e226b9"
                    }
                  }
                ]
              },
              {
                "id": "3dbbd978-aa8e-4565-b83c-a6ad4d3fa769",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "380ad9aa-06ce-4660-87cd-d2982ac3040b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca40bb7c-268c-46d6-83b2-dabbe7ac6551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "29e3d700-8133-437c-8da4-229165c228b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b75bef0-83b3-4ab1-ab00-aeeed0bc7054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bda962f-3c6b-4bea-87f4-9249d5b02ff4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "efbc7f3d-c25a-4f93-81e0-b1ccecea2e4d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d0bdbcaf-6660-44ae-bd00-8cbcaabd165e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7842412c-8c76-4e86-b754-897916dcd3cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e8bba597-de42-4c5c-b4ed-1eb23408e09c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27a3b56b-d8ec-44b4-87cf-92a64ac927a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "973131b0-87cd-433f-bc2f-db6339f44941"
                    }
                  }
                ]
              },
              {
                "id": "8b65af6f-8a4a-4007-9c62-891bf81c1cbe",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "12d33f70-2ef5-4182-8596-0b7df2daa8f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "db467e24-1bf0-415e-99be-e9233354ef2a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fefc3da2-c869-4e02-997f-db8818384d77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a59b098-889b-4701-900c-b9814dfe9b59"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7df51056-c41f-45bd-97b9-cdfb07eb386a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "23364220-5d2e-457f-be4a-26cc080c6851"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f77d2b3e-2e0b-4a38-b540-e483e99369e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "961d0a5a-2355-483d-a9ce-766eec654acd"
            }
          }
        ]
      },
      {
        "id": "9eb7173c-0e0d-496b-8834-10a92ace396c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "528a1910-8e84-4a36-a991-275761088cb4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "508575b2-7c99-4289-a408-b1d55e2cb11d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f1e4e72e-62bc-44b5-b552-9ca506b0c9da",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5778cef4-f54b-4d1b-87b5-56d531a94a1d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "11b16e32-12a8-4600-884c-8a4515f62abf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f0b9b8-ea1e-47ea-9461-5fc583506161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8fdd8c18-f6bb-42a1-be57-c9ca962bb00a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "273d8ee6-ead0-4fa2-b869-81bd3b891849",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dda69972-3dc6-484f-a445-2aba2e885ee6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce650295-123a-4ec1-8521-3907add8a87f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c84f621d-13e0-4877-83e0-31e01857ec7f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fad31e75-9cd2-4cf2-bca2-ed6c7c6c3e63",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "07ce4580-db2c-4151-82c2-3c6fcd28f6d7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7306151-bec1-425d-86cd-a29e72389312",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "041e63d9-ddf8-4af2-a798-4f96242f28cf"
            }
          }
        ]
      },
      {
        "id": "baa1e730-b4fc-4a66-9f14-21900325b4bf",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ce52dc7b-c796-4fbe-a8f4-c1d65a3db228",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2289edb7-93c7-4102-9b63-006bca9dce60",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "498c9c5d-e5c8-4118-8987-f8e822598211",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7731f7e-f781-47fa-9493-75257c774026",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f71dec5a-6216-43a9-a04b-d2aef3c5e72d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19970f10-f992-47c6-9ccb-9b771e32f1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "575ec143-8ed0-4238-9cff-11a3ecf00d98"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ee9bffb-a552-45dc-bedf-16dbc58ace59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "237cf336-7245-4492-b794-f5f65e5b23a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b49ab4a9-9e62-4bf1-b8df-5852d4052bf8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "244f799a-5638-42ce-a68e-c435527477ec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01736219-b75d-4dd4-a5fd-e427e09737da",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7406c1dd-a856-45a4-adae-38049625d890"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57d3ad11-b82f-4bb1-bbde-5d6f94366f9f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a1e8ee3-2cc7-4d2c-98cf-1a29d171cc90"
            }
          }
        ]
      },
      {
        "id": "fa9a7e54-0c84-486e-8d60-d2b5e50985fc",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f7665eb5-acfc-47fd-b70b-08ddabbb4c51",
            "name": "Negative Testing",
            "item": [
              {
                "id": "48abf07f-88bf-4407-98b0-92ddba195ad0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d0ba78bc-9e22-456a-a1f7-ce4a392935b2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf37785-fb61-44ed-ab90-8f3aa660ec7d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b9fa13a-1c9a-4bad-b070-5349b76884d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e60419-e919-4eba-be00-fc2d6041ff68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3693cc9f-06ec-4927-bba0-e5aefa68d457"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85b59070-7479-4efd-bb23-dd11c53d49c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad89e36f-8c0c-446a-982a-7269c11f6dae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4b0529c-326a-44ec-83bf-7975f9a7774e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22f01699-1050-40a6-89b4-5f072f692ded"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca3e394b-950b-44fa-80f0-d5aad854eb7e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7f4cfdf5-faa5-4b58-966f-74d20e8a0f92"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b55911b5-0447-4179-9967-5bbc6c40fbaf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "076713b5-827b-4346-8bbf-fa4365292fad"
            }
          }
        ]
      },
      {
        "id": "d701cbf5-498f-4219-903b-269f73e2268b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1bd4f4d-0fcc-4465-ad5e-f03587fee1e2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd3040b0-8c0e-4333-a5ac-e9e4ab039866",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e53b6088-3871-4f9d-b5e4-e4ad924cfd6a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4840c05-ed8d-4abc-9d58-fbf0fdd2f8e5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "116daffb-e10d-42ce-beef-4a943b05cc44",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 118.37894736842112,
      "responseMin": 10,
      "responseMax": 3060,
      "responseSd": 354.6264903062974,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704069577329,
      "completed": 1704069620819
    },
    "executions": [
      {
        "id": "11ad4d86-c8e9-4ac9-b2b5-52d723da0428",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "05783f17-afa9-450d-a9c8-dbf6c8ba6534",
          "httpRequestId": "bcf4ac63-4141-4d6b-8fd5-1996490b9e19"
        },
        "item": {
          "id": "11ad4d86-c8e9-4ac9-b2b5-52d723da0428",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4de6d009-c051-4e2a-9203-2d5b9597d0bf",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "9cb65961-054e-4fa8-89f9-3f305948024a",
        "cursor": {
          "ref": "7e86f866-63e8-48b9-9987-28594fc72f17",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "774a4116-b1e7-4d13-a830-fc5d927a2f9f"
        },
        "item": {
          "id": "9cb65961-054e-4fa8-89f9-3f305948024a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bc0abf7f-0440-48db-ac2c-983fd2ad6b30",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "9c48017b-2674-45ad-93e8-1bf3955ec790",
        "cursor": {
          "ref": "e148e7d0-3439-4982-91fc-f7c2067354af",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1e1e6564-dbd0-4694-a6ae-1494914c0a9a"
        },
        "item": {
          "id": "9c48017b-2674-45ad-93e8-1bf3955ec790",
          "name": "did_json"
        },
        "response": {
          "id": "b38a15c8-4b5d-4b7c-b956-d81f96bb08b4",
          "status": "OK",
          "code": 200,
          "responseTime": 590,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceff4ac1-b60d-48d6-b570-103b4f6dabe2",
        "cursor": {
          "ref": "d7c1c05e-8332-4223-85bd-9baea8a60b24",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fe507b89-c411-47bc-9f28-03675067110c"
        },
        "item": {
          "id": "ceff4ac1-b60d-48d6-b570-103b4f6dabe2",
          "name": "did:invalid"
        },
        "response": {
          "id": "6db600ab-3caa-4577-8b54-fcc7d1b9d46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceff4ac1-b60d-48d6-b570-103b4f6dabe2",
        "cursor": {
          "ref": "d7c1c05e-8332-4223-85bd-9baea8a60b24",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fe507b89-c411-47bc-9f28-03675067110c"
        },
        "item": {
          "id": "ceff4ac1-b60d-48d6-b570-103b4f6dabe2",
          "name": "did:invalid"
        },
        "response": {
          "id": "6db600ab-3caa-4577-8b54-fcc7d1b9d46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460af47a-cdc7-4d21-a1fc-b8e538f6dce1",
        "cursor": {
          "ref": "6f16712d-c035-494d-89e8-59c506d2ceaf",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4bbf627d-1f1c-42f1-9b87-3bd737cf1256"
        },
        "item": {
          "id": "460af47a-cdc7-4d21-a1fc-b8e538f6dce1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c83043cd-e133-4ae7-a74c-a770e10fa4f3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 117,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d9086d-7cd2-47a2-aebb-bd545528dbf2",
        "cursor": {
          "ref": "ebf6ee0a-ac5b-461f-9606-0756f40bb2af",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5f5e1b51-61b3-4fa3-8b55-f76972ea2992"
        },
        "item": {
          "id": "41d9086d-7cd2-47a2-aebb-bd545528dbf2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "49fc5523-da33-4c87-8b08-c2e2f4651ec1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 52,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "277b690d-509a-4d06-8331-0dfc66a9f552",
        "cursor": {
          "ref": "be87e807-d6ca-4ae4-82b5-4449ab63cf66",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ecb62261-47a5-47d7-a025-313d1ca88857"
        },
        "item": {
          "id": "277b690d-509a-4d06-8331-0dfc66a9f552",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e3fb0829-2ef4-4d02-8c1c-2af36be6fa7f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153c152d-cf29-491f-b29c-567e9e2a6422",
        "cursor": {
          "ref": "74c953d0-d126-415d-813d-da66df495952",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a3aa0853-7f31-462e-b5e4-fdd4edc2018c"
        },
        "item": {
          "id": "153c152d-cf29-491f-b29c-567e9e2a6422",
          "name": "identifiers"
        },
        "response": {
          "id": "42085f66-a0d0-4d9a-94b6-0947d10cdb21",
          "status": "OK",
          "code": 200,
          "responseTime": 296,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4606e4a4-758c-41ef-bd02-a9698917d2b1",
        "cursor": {
          "ref": "19eb3234-5d58-438c-a5c2-f02bc8c955f3",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d3cf2771-46ce-4e92-86c0-2a640534753a"
        },
        "item": {
          "id": "4606e4a4-758c-41ef-bd02-a9698917d2b1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "85007443-511f-4869-ada0-d8ba2ca47e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3b757d-fa1d-49da-83da-2ddf5a953397",
        "cursor": {
          "ref": "cfade28c-6b5f-485c-b028-8eb7dfcb8d94",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1cf773b4-d786-4a50-a3d2-c5917476f2ee"
        },
        "item": {
          "id": "ef3b757d-fa1d-49da-83da-2ddf5a953397",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b2aecddf-eaee-4d08-b398-950ed42fa29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c941d4ed-c3f9-4270-b6ce-3fb23c554154",
        "cursor": {
          "ref": "a1969bac-eaac-4240-912b-a6a64a4187b8",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8c9710f3-c309-4d5d-baaf-f93585cf2d47"
        },
        "item": {
          "id": "c941d4ed-c3f9-4270-b6ce-3fb23c554154",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d8587c7e-85c3-4a34-a39c-2db9e233bfc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33aee237-4aa0-4bee-a302-6d3f9b3dd032",
        "cursor": {
          "ref": "56f38445-260b-4090-b933-5eeb09f62205",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a6b9fb58-095a-4821-b090-1baf49183d08"
        },
        "item": {
          "id": "33aee237-4aa0-4bee-a302-6d3f9b3dd032",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b5abbd66-3b68-449f-b332-8ab111762327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a0397c-fb6b-42ce-b48d-c8cf749e7d0e",
        "cursor": {
          "ref": "0e7d82a8-67c1-4417-a0b8-28e44ee74279",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4578f6a8-9027-4722-8f94-72df3fb1ea09"
        },
        "item": {
          "id": "c7a0397c-fb6b-42ce-b48d-c8cf749e7d0e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7dca0d23-c2fe-4b2c-9620-9d849b618510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc81390f-9a16-4722-94eb-682077971ae8",
        "cursor": {
          "ref": "b5ce6f67-c90b-49f1-a913-d1d1970453fd",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "63d1ad16-37f7-42fe-bca8-a002b5c2bbf8"
        },
        "item": {
          "id": "bc81390f-9a16-4722-94eb-682077971ae8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a57e7d31-08ad-40c3-ab18-e3ad492e9a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8974cc4b-c0cd-45d6-86f0-28be714f0b8b",
        "cursor": {
          "ref": "02e68150-3622-4035-abb3-352f23647eff",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ecfbd412-76a0-423c-a957-63933ffbce0f"
        },
        "item": {
          "id": "8974cc4b-c0cd-45d6-86f0-28be714f0b8b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a0586183-30b1-41a9-a6a0-19a6f0f2921c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7464279-cc79-4072-bd7d-166aa7b732b0",
        "cursor": {
          "ref": "8f9bec73-df3d-46ab-89b5-8cb3ffef37f3",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "eb6b0bfb-fe60-4dd4-8b26-7bb572d6aa7b"
        },
        "item": {
          "id": "c7464279-cc79-4072-bd7d-166aa7b732b0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c8dd985a-4656-48f1-9be6-b3f249fd40d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f464d91f-7537-4168-903c-6cea0e3fefbc",
        "cursor": {
          "ref": "4769f1df-a50c-42d7-94b2-8be6c293ca98",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "29a7abf8-d3c3-42ab-b823-c2af615a6cbb"
        },
        "item": {
          "id": "f464d91f-7537-4168-903c-6cea0e3fefbc",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "bd562bd9-a436-47d4-9624-a92b7563b760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f49e29-13ec-45eb-b074-998d7173462b",
        "cursor": {
          "ref": "fb392b96-2c61-405a-b54f-0c5f9a3dc8b1",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7399fe36-f20a-4107-9488-44a6f2380742"
        },
        "item": {
          "id": "e3f49e29-13ec-45eb-b074-998d7173462b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "39755c82-dd70-42a3-a6f5-daf15e2a0d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b4b759-8598-40cf-b440-1733ffaee181",
        "cursor": {
          "ref": "849fcaee-bfb4-4d7b-8cd0-9f06945ec218",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8fa47478-56ed-4af2-802d-bfd4c3d8f353"
        },
        "item": {
          "id": "e4b4b759-8598-40cf-b440-1733ffaee181",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9680f494-4761-4e3f-9af1-dfeb2f72f9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3342e5bc-ffa1-415e-b18f-9b7ae6d83af5",
        "cursor": {
          "ref": "dedfd50d-70c4-4054-a20b-d862f5c5387f",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1e671142-c402-4d50-a2e1-f0ca94fbaa0d"
        },
        "item": {
          "id": "3342e5bc-ffa1-415e-b18f-9b7ae6d83af5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e9eda934-8fd2-4524-9963-ce930579f9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60288a9c-a57b-4bc1-b04e-cca567a980aa",
        "cursor": {
          "ref": "d99b04ac-6f0b-420c-883f-42bb2f72b9f7",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a91bbfd7-0e59-4baa-9044-6e977988eee6"
        },
        "item": {
          "id": "60288a9c-a57b-4bc1-b04e-cca567a980aa",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d0ec5112-3bc0-43ba-8f31-407318fb710f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331214a1-8bbd-4ae1-a636-00973d3f9fc8",
        "cursor": {
          "ref": "0177dd95-f4b6-4dc3-8045-cea68943cebc",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "dd6b07ba-1bcb-4c1f-be4b-c777e32c43f2"
        },
        "item": {
          "id": "331214a1-8bbd-4ae1-a636-00973d3f9fc8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "57134c3a-cfd3-4115-b106-f10ed1204954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac442b79-241f-4ee5-a350-2681d210140c",
        "cursor": {
          "ref": "538fd797-8b65-407b-b227-6d7e87895850",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5ca8703f-2484-4886-8c2f-0f0a8b8a4eff"
        },
        "item": {
          "id": "ac442b79-241f-4ee5-a350-2681d210140c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "512385fb-9cf1-4489-a499-d5f25b8ccfd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1750fbf6-efc8-4d80-9724-d1c2ad146f4a",
        "cursor": {
          "ref": "e9031b11-f780-4b44-8fab-e4dec9056c67",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "bf7210b0-83b8-4f95-8ae3-cdc1be7a5e00"
        },
        "item": {
          "id": "1750fbf6-efc8-4d80-9724-d1c2ad146f4a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "708d1830-1f00-40af-8f0b-337ad82ef6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950c66b1-3e87-42fd-8835-e3548063b8fc",
        "cursor": {
          "ref": "dccceece-e0f1-48fc-adff-0c703440ced2",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8a3663c5-0c10-474a-baf9-f8cfeac7f5ee"
        },
        "item": {
          "id": "950c66b1-3e87-42fd-8835-e3548063b8fc",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "50e78096-3543-46c8-b386-3e1a4cb3475a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15050ae2-d593-48f8-8aac-5b836559d872",
        "cursor": {
          "ref": "8286d1b2-de6f-4f36-9be4-8851977bb088",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "484bfbff-524d-44f4-802d-a79b3e950182"
        },
        "item": {
          "id": "15050ae2-d593-48f8-8aac-5b836559d872",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "633de0ec-bb8c-4846-94d6-5226b07903ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3573a4-8756-428c-9e9e-8754d3e36dee",
        "cursor": {
          "ref": "89585ffa-cd3d-4f85-aeda-1f6e962156c1",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "af008674-fc78-4234-9ad2-615058709a70"
        },
        "item": {
          "id": "9f3573a4-8756-428c-9e9e-8754d3e36dee",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "dd972eb2-07c4-45e9-89e5-f25e9a73a412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06554f0a-26ff-425b-9972-6233c7a59aaf",
        "cursor": {
          "ref": "4449c64f-c604-44b4-b0f2-07c177325c06",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7a2adc15-52d4-4444-8174-b42be9bdcf78"
        },
        "item": {
          "id": "06554f0a-26ff-425b-9972-6233c7a59aaf",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b1b32c9f-422c-4c4a-b37f-b65f17c96f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb1fef9-562a-46ae-bdfd-94972de10071",
        "cursor": {
          "ref": "f0042d22-a2d1-4e4b-85b9-a84b80d78a99",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7422a68e-6b9f-4e74-a9d0-ba3b0e98d341"
        },
        "item": {
          "id": "6bb1fef9-562a-46ae-bdfd-94972de10071",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "011d727f-1569-4ead-8aee-1430bbc41740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f678e64-d23c-4e1b-abab-de3299789313",
        "cursor": {
          "ref": "78525298-ea22-4444-9dd3-2149eb3ac83b",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d86edb32-5618-491f-8884-bd05a28cfd89"
        },
        "item": {
          "id": "0f678e64-d23c-4e1b-abab-de3299789313",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5c306647-41dd-4173-8fa3-46389841f676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e52889-d57d-4e27-b3cc-68b5eb84c222",
        "cursor": {
          "ref": "5a9df7c7-5ad6-4af0-9f12-1ad9a85eeca7",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "30522e54-7bdc-460a-853e-843c7113404c"
        },
        "item": {
          "id": "b9e52889-d57d-4e27-b3cc-68b5eb84c222",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "235bd719-4d68-4a2b-9899-c805e7103fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62cbaf95-97dd-4383-8a61-f9777d2c7981",
        "cursor": {
          "ref": "ad2bd2f5-27b8-4802-bf6f-276b0fec90e3",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b00a01ad-1e52-4004-a47d-2ce9fe66eb2a"
        },
        "item": {
          "id": "62cbaf95-97dd-4383-8a61-f9777d2c7981",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "73816d90-a98f-441c-94e6-3c93cb321cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68010d6-96d5-4314-b44c-4c036b1b0bec",
        "cursor": {
          "ref": "2a56d8ee-d211-4c18-adaf-94a5d33b74b3",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f5280f02-e26c-4444-a2d8-e797ba572527"
        },
        "item": {
          "id": "b68010d6-96d5-4314-b44c-4c036b1b0bec",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d369557f-380b-448f-938d-127c8714aed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be95261-6189-4edf-88c2-ec7c6ed8ab26",
        "cursor": {
          "ref": "78082940-260f-45cf-bdac-47cb70d24bd6",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e759742a-5786-452e-99b2-d97c0773746b"
        },
        "item": {
          "id": "7be95261-6189-4edf-88c2-ec7c6ed8ab26",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cefc78ac-c2a3-4647-af2c-471121a390e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1c6777-c174-4a26-aea2-f27d5bdbdd65",
        "cursor": {
          "ref": "9aa77148-8548-4233-a202-131efbf18068",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9be206a7-99c3-4691-b056-3f2178a06ef8"
        },
        "item": {
          "id": "0c1c6777-c174-4a26-aea2-f27d5bdbdd65",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d5d4f218-0e9c-425d-bba5-6e136b9b8648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06586394-aeae-4818-a460-42e975977354",
        "cursor": {
          "ref": "ac82fc79-c9a5-41ab-9c73-26e2733a7047",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ef1c22c5-1ecd-456d-bf7f-e61892d4c8f3"
        },
        "item": {
          "id": "06586394-aeae-4818-a460-42e975977354",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8186eaae-1f7e-4429-9ad8-9961b3cdaa0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9152b79-e9ab-42c8-99cb-778b84544aad",
        "cursor": {
          "ref": "ebaa8532-1f97-470f-83cc-7f432015adac",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2daf478e-01fc-4fb5-832a-2edc30132afb"
        },
        "item": {
          "id": "b9152b79-e9ab-42c8-99cb-778b84544aad",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3ef51d94-d65a-49d8-8fad-7d5337bb36a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bf0a2c-f073-45dc-991a-2dd5fb18d440",
        "cursor": {
          "ref": "4c3e542d-8c50-4e38-8960-f236b3906b97",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "045d50c3-4ef7-4d69-963b-66273c7c91fb"
        },
        "item": {
          "id": "a1bf0a2c-f073-45dc-991a-2dd5fb18d440",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "49c51ba1-b92b-4d81-a041-c46314c3f2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3a7989-3783-45a5-9f97-942c8c75efe3",
        "cursor": {
          "ref": "2b22e0ad-1bcc-4354-92c9-f285cc93f3d7",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1651975a-abdd-4963-86cb-a7388271190f"
        },
        "item": {
          "id": "8a3a7989-3783-45a5-9f97-942c8c75efe3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d631a74b-2e44-4810-83b6-6686c07439d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c594cce-71f9-46c2-acb1-f6b839d33edc",
        "cursor": {
          "ref": "6879a8d0-7c24-45d1-851b-bc440d05079a",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8c39504c-f43c-475f-a9b0-6e577816b1e0"
        },
        "item": {
          "id": "9c594cce-71f9-46c2-acb1-f6b839d33edc",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "db3a3199-27ed-42e4-889d-8eea47bdbeec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69c89b6-14a6-40e1-b944-02ab4df84ed4",
        "cursor": {
          "ref": "b84c26f9-26f4-4113-8ad1-7b775aa7e2c6",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d2d1bcd7-a5bb-4f04-a1de-75ce37d23864"
        },
        "item": {
          "id": "e69c89b6-14a6-40e1-b944-02ab4df84ed4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "76dfdac6-f114-4f19-96e8-23c8226f8a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dca4851-3e56-4f4e-bb0e-f197f82c63fb",
        "cursor": {
          "ref": "a2061ea7-ddc4-4ac6-b5a1-c6d2093b7602",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8af30a7c-999b-4953-8b57-c39d2fb4020f"
        },
        "item": {
          "id": "4dca4851-3e56-4f4e-bb0e-f197f82c63fb",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "090d9f68-7dcb-4d0a-882d-e6865982696b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9a7f6b-89ce-45a9-a29e-587102881115",
        "cursor": {
          "ref": "f81dd787-e58f-4d52-acf8-af240f9c4c11",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "945d3f06-a0b5-451e-8041-bfc25dcdb91f"
        },
        "item": {
          "id": "cc9a7f6b-89ce-45a9-a29e-587102881115",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "cac7ace3-b9ed-46f7-97ba-681a81372ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1f5419-2ab7-4582-bf99-1d0952221e3e",
        "cursor": {
          "ref": "fe6eab53-6969-4485-9c40-79b975b5c99a",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0b95b966-2900-467b-9c38-8e9df40be430"
        },
        "item": {
          "id": "ec1f5419-2ab7-4582-bf99-1d0952221e3e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6cc84707-91a4-4e20-9029-260a85bfbaf5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 332,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fb2796-6731-4a65-a973-3621bcadde0e",
        "cursor": {
          "ref": "1be9c85c-ac44-437e-8114-4f442967669c",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0a12cc29-edee-43b9-a889-2fd1ad85cd97"
        },
        "item": {
          "id": "81fb2796-6731-4a65-a973-3621bcadde0e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "098ee5c9-873f-440c-9ab3-ecb0320306d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b1f80d-0aff-4f03-8969-171aaee583e0",
        "cursor": {
          "ref": "defab0d7-cbf1-4480-8c81-b37ff6d529d9",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "93e6a0cd-79db-4077-b4e0-5754110826ac"
        },
        "item": {
          "id": "25b1f80d-0aff-4f03-8969-171aaee583e0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2ebb722b-7c81-4124-9d45-f85694bda44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3bb80e9-377c-497d-a27e-d2fa71e2d767",
        "cursor": {
          "ref": "cf03c473-7e52-430f-8a2d-482cfc426a5e",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3f8fed5b-523b-46e9-94bc-6184fb54486f"
        },
        "item": {
          "id": "c3bb80e9-377c-497d-a27e-d2fa71e2d767",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "37185240-5587-4b4c-bcb3-a17d8310de19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1144966-84c3-41cf-8427-9538f87a7de4",
        "cursor": {
          "ref": "31d95525-e815-470e-9e4b-093cad48f2b0",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "50fc8109-2e41-44e2-b81a-4e8cd7d464f3"
        },
        "item": {
          "id": "c1144966-84c3-41cf-8427-9538f87a7de4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "85d8ce70-4fd6-4e26-994a-b14344d29d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ab34a0-bd97-4d63-abd8-c6c4dc833c07",
        "cursor": {
          "ref": "bebeb760-b8a1-4dd6-a9e1-eb9c245764e4",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1114c6ea-dde6-4c6f-8f39-d88355c9ccc2"
        },
        "item": {
          "id": "a0ab34a0-bd97-4d63-abd8-c6c4dc833c07",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f66ebeab-a5e5-47ae-9e53-0b2af75f6430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f26d3fe-a5af-477e-a107-0c943a6115c6",
        "cursor": {
          "ref": "1d185c0a-e15d-48ed-91e5-18968deb6f18",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "88fd4261-b749-4a8c-bcd6-38bc3272f138"
        },
        "item": {
          "id": "0f26d3fe-a5af-477e-a107-0c943a6115c6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c7db014e-ed70-4289-bd74-0f767691de90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9384d9de-6da9-4917-806b-11fe0e362b8e",
        "cursor": {
          "ref": "8218c98e-512f-4b1c-97d2-a3115953a4ea",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c048a1e1-21a3-4f8f-b625-5491697e4004"
        },
        "item": {
          "id": "9384d9de-6da9-4917-806b-11fe0e362b8e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ac687b23-7024-4dcf-9604-76a407ec8ec9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 325,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48fc5a17-a349-45f4-aaac-6537e67a7c67",
        "cursor": {
          "ref": "22f7fd40-3edb-43b4-9fc2-c2ff3e305902",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b0ddb7da-d9ac-4568-b6ee-24013620759c"
        },
        "item": {
          "id": "48fc5a17-a349-45f4-aaac-6537e67a7c67",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3bef2551-0bc4-4c9c-ac63-352725555843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3354ce1-2ab8-449f-9311-fa5349d1428e",
        "cursor": {
          "ref": "101077a0-43d7-46b9-8834-01f8d70729a8",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a9c0c359-da75-4138-8524-182572f490c6"
        },
        "item": {
          "id": "b3354ce1-2ab8-449f-9311-fa5349d1428e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "bd8b1e31-9602-4f31-9e98-2c06886327d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356a92bb-7fd2-4ffe-9f8f-73e477903707",
        "cursor": {
          "ref": "e774213a-2ec2-4526-aa36-263f2f23f21f",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8dac516e-d622-4676-8928-5d6745ea8350"
        },
        "item": {
          "id": "356a92bb-7fd2-4ffe-9f8f-73e477903707",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0c2821cc-b0bf-4edd-ab3c-023b65502bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668d1c32-0284-4fce-8e16-f3ab3b2fbebb",
        "cursor": {
          "ref": "c83f96c3-c217-47f3-b24d-5663b0e166eb",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "757a59d2-17d3-41e4-a1bc-8b428b9b1b97"
        },
        "item": {
          "id": "668d1c32-0284-4fce-8e16-f3ab3b2fbebb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9b345119-c5fe-4472-8680-9a292b8cd080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7328b08a-1ae2-4fdf-97b4-a4c918ff535f",
        "cursor": {
          "ref": "28117344-1075-443b-82f2-119c2527ca0b",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "237a45bf-2c3c-46e8-95f3-b563d66d4dbe"
        },
        "item": {
          "id": "7328b08a-1ae2-4fdf-97b4-a4c918ff535f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a232acc4-7f10-47ea-9d1a-3688460b9e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1e6e4b-287f-496c-b058-d2a8cb0d9db9",
        "cursor": {
          "ref": "c41e44fc-eb89-40db-aa7a-4dc456dc1a18",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b2cf2b44-cb87-4a1d-8f6f-ddb629ab5dad"
        },
        "item": {
          "id": "9f1e6e4b-287f-496c-b058-d2a8cb0d9db9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "00680ed3-bd73-419e-a558-0865fc6b0ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b741f597-81b7-4b33-bb50-cec9ceb8aa1c",
        "cursor": {
          "ref": "f722ac82-a1f3-47ba-83c8-287a8569cc84",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fa141904-6398-4873-9008-520fd53db21b"
        },
        "item": {
          "id": "b741f597-81b7-4b33-bb50-cec9ceb8aa1c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "86cce491-39c4-41e7-b79a-53b5558937be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbedce8-b8aa-457f-84d8-5e0bb0ba0bb8",
        "cursor": {
          "ref": "fe7016f7-3f71-4c6c-93f3-c217d99e8ef4",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c12dca0c-7019-4964-8f40-ab25fbe8418b"
        },
        "item": {
          "id": "bcbedce8-b8aa-457f-84d8-5e0bb0ba0bb8",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8d42925d-9c8d-48a7-9046-4dd8b728cd80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5856f504-613f-4f07-b5e5-738e740d6147",
        "cursor": {
          "ref": "f9c396fe-0e9b-41dd-b1d0-aed06e64974f",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "51617a20-8452-4971-8446-107ee42ecd47"
        },
        "item": {
          "id": "5856f504-613f-4f07-b5e5-738e740d6147",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2995dd69-4208-4c8e-bf3d-4b6daadde10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9f69ef-21a7-4e1c-ab65-6d0b92906fc0",
        "cursor": {
          "ref": "7f3956ff-a280-4059-b4a2-5b73a3f73631",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d7e62db8-6a2c-4c2c-ba30-28749e7a6d9d"
        },
        "item": {
          "id": "ff9f69ef-21a7-4e1c-ab65-6d0b92906fc0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a2c8cced-f1f7-4bbc-afbc-2d6bfcb26e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2970f6b9-6f11-498e-a1f8-bba8338a15e7",
        "cursor": {
          "ref": "98887a83-8820-449a-a28e-2ab52479d8fe",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "64be9723-8534-4edb-9832-6a810613636a"
        },
        "item": {
          "id": "2970f6b9-6f11-498e-a1f8-bba8338a15e7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4d7c1cf8-b8a1-4d0b-ad09-a5c6426e4e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ab2e5d-23b6-4cde-a052-e4f165fdecd5",
        "cursor": {
          "ref": "515e6c20-136c-4149-87ae-383837bdd699",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "40d996da-ec86-47cf-9dcc-9f89af228544"
        },
        "item": {
          "id": "a3ab2e5d-23b6-4cde-a052-e4f165fdecd5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "50175477-8062-4b28-bd1c-6f1f4a64784f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa050320-1f3d-41c0-a65b-5e6f8b1d82be",
        "cursor": {
          "ref": "14d30799-358f-4429-9b7a-f158ac46da52",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a124b766-c17a-4658-81b3-18b7e8a334e0"
        },
        "item": {
          "id": "fa050320-1f3d-41c0-a65b-5e6f8b1d82be",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d27f4d40-b4f9-4940-b9c9-26e07c81ee58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727bf074-ba13-4f3f-825f-1fc161ed496f",
        "cursor": {
          "ref": "deb46918-6743-418e-af77-341522d7eaf2",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1b22cb0e-c40b-4a2e-8bc5-49780a700130"
        },
        "item": {
          "id": "727bf074-ba13-4f3f-825f-1fc161ed496f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0acfa8b0-53f8-4abe-80be-06e7caee92b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb65c5d4-f9d6-4244-b4b2-77ffc1c2913b",
        "cursor": {
          "ref": "a181719e-181f-4c00-a4bb-80ebf5286327",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6b666e90-ae38-40dd-b49e-56df6859fe36"
        },
        "item": {
          "id": "eb65c5d4-f9d6-4244-b4b2-77ffc1c2913b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5b43e85f-150a-4f12-8fa3-02f0821b15e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab62b9b7-60b4-44e5-8c31-9288db70cdcc",
        "cursor": {
          "ref": "7ede7880-5f3f-44ba-be45-59aae8807a1d",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "dd574ef7-7414-464a-9afd-cc7351359ffc"
        },
        "item": {
          "id": "ab62b9b7-60b4-44e5-8c31-9288db70cdcc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cf2e33ef-9c49-4714-826f-dcfc8ac72b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901ed0fa-0ff5-4530-8b45-3797699b3c1c",
        "cursor": {
          "ref": "73979904-764c-42dd-a339-73b4fddfd178",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "679c16b5-23a3-480f-92f9-a986d8c52785"
        },
        "item": {
          "id": "901ed0fa-0ff5-4530-8b45-3797699b3c1c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "df38daba-6509-46ab-add3-caed689231a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5360b7-67c8-436f-a8f3-aefe0786b972",
        "cursor": {
          "ref": "0048c84f-b15f-49f5-8dda-a6f280a02d53",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "12f90564-164f-404d-bc11-999e423d6abb"
        },
        "item": {
          "id": "fb5360b7-67c8-436f-a8f3-aefe0786b972",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "76620e3a-1531-4617-a767-0fbb8adf7a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88dd25a-8cb3-413b-b730-616e6befc8e8",
        "cursor": {
          "ref": "64ecb920-785e-4761-baa6-00fdb3e5428c",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a161251a-7e2f-45ba-b9b2-8f79097d8c22"
        },
        "item": {
          "id": "c88dd25a-8cb3-413b-b730-616e6befc8e8",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5f6274fa-025d-4b36-b1a2-06ced62713f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece49ba2-5275-4e68-8c06-abe08feb57d8",
        "cursor": {
          "ref": "b815e396-76cf-4eee-b11e-743ed0e8aa6d",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "98791ade-b391-42c1-9cd4-e0fc13a1d143"
        },
        "item": {
          "id": "ece49ba2-5275-4e68-8c06-abe08feb57d8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "513a8800-109b-4d29-9aa2-f0d3a2b3c836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa9334a-c09a-468e-b4e2-a66a6829fac9",
        "cursor": {
          "ref": "41cf53f1-bd87-4c80-8535-c5177d94d0b1",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "154c11e9-5995-42de-a911-5a6ad6b6465b"
        },
        "item": {
          "id": "5fa9334a-c09a-468e-b4e2-a66a6829fac9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ab428452-6268-4562-8e55-0fc687867d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fd9123-0fa5-46f3-a44f-2b8920355747",
        "cursor": {
          "ref": "0a4ebc52-a799-4333-8ab5-8feb519c73f7",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ccb2d335-8225-458b-a96d-90b183387dc8"
        },
        "item": {
          "id": "e2fd9123-0fa5-46f3-a44f-2b8920355747",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "564752ce-4ae3-4c8d-b8c6-3f1b5e947c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb6789e-6b11-43f8-afb4-25be8a58be00",
        "cursor": {
          "ref": "e16abee6-ebfb-46e5-a8fa-e5e6dedb5733",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0fc83486-22ba-4ba0-b58e-85a5976aba0f"
        },
        "item": {
          "id": "0cb6789e-6b11-43f8-afb4-25be8a58be00",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "eae163b6-9e72-4ffd-ba2f-36b934e04695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6f4313-f8f5-4310-98f5-9faaeb470ea6",
        "cursor": {
          "ref": "b440b100-5eb2-470e-8d9e-e27743f17dd4",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3567b095-f1fc-45f2-bc5d-d5d0ac048307"
        },
        "item": {
          "id": "fc6f4313-f8f5-4310-98f5-9faaeb470ea6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "69dcd6f9-c6d8-48f5-8122-59f4ef07f5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70132447-e2ec-47dd-9202-f52b3993c08a",
        "cursor": {
          "ref": "1ce398bd-fc75-4128-b9e5-372c3aca1114",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a394042e-cb34-4bd6-b67a-43113e8d0d7b"
        },
        "item": {
          "id": "70132447-e2ec-47dd-9202-f52b3993c08a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "32ef42f3-edf8-4937-b0d2-ba7fdd45a586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954a0725-f428-4fca-95ab-7889cba6149a",
        "cursor": {
          "ref": "b0989244-d290-4ec7-a3e8-987a79e6623e",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "61b83ac3-fc7a-45ad-8884-cffa6fa38c69"
        },
        "item": {
          "id": "954a0725-f428-4fca-95ab-7889cba6149a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2b1d0733-6106-4ee5-90f0-130852670aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f3c46a-544b-435b-be32-0718b9e4a39e",
        "cursor": {
          "ref": "15df4ad3-54e1-4584-b794-03f743a24c9b",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "281f03b5-8503-44f8-bcb3-056a85a37089"
        },
        "item": {
          "id": "d4f3c46a-544b-435b-be32-0718b9e4a39e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bbfc0505-7e37-490e-84ab-6bf1b048eb09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6accead3-12d3-4828-898f-9b584531276f",
        "cursor": {
          "ref": "985a9818-56e1-44c1-9069-3acdeec4f7f4",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "48184217-c9ec-46fe-8251-276b17a6979a"
        },
        "item": {
          "id": "6accead3-12d3-4828-898f-9b584531276f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c46f51d7-d911-481e-a404-44bce863450e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87636f0-8b78-4ba2-92a0-32cebfb7f91f",
        "cursor": {
          "ref": "9f8ed778-ed84-4bb3-814b-5ea74a8578d6",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "04273764-22df-4046-a43e-0f4b61c1853d"
        },
        "item": {
          "id": "b87636f0-8b78-4ba2-92a0-32cebfb7f91f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "db7e9cde-9c65-4c99-8736-00e82929a5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b53a29-e35d-4695-8759-e418ca32c06f",
        "cursor": {
          "ref": "75f0b5ed-379a-4e21-8056-1d7d4daa7261",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "087c7974-bb68-415d-8645-2694031d0bb9"
        },
        "item": {
          "id": "45b53a29-e35d-4695-8759-e418ca32c06f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "918b98f7-8131-4d82-b466-978474383197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb020ad-0a8f-4c6c-b3e4-7e82a2f98306",
        "cursor": {
          "ref": "865663f2-7798-488f-98af-430253ade008",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "da036ac4-a6a2-46d8-8037-df1134c07dc5"
        },
        "item": {
          "id": "bdb020ad-0a8f-4c6c-b3e4-7e82a2f98306",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0c62e89b-1c43-47ab-b865-6c1087d9b7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70195e44-31fd-40eb-838a-24d09e92623d",
        "cursor": {
          "ref": "4dac53d6-c508-4e5a-aa21-d1a63721b92b",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "311bc001-4770-4655-9771-fb75338570c1"
        },
        "item": {
          "id": "70195e44-31fd-40eb-838a-24d09e92623d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "fd715167-fa5f-471b-93b0-88165ab2e2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04dde17f-1ad3-43f2-8c0f-0c0e82247eec",
        "cursor": {
          "ref": "470433cd-4313-4969-849b-4d690732b24f",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "26142cf5-0d96-4233-bdd2-52b016b25e64"
        },
        "item": {
          "id": "04dde17f-1ad3-43f2-8c0f-0c0e82247eec",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6bd332be-c989-4fe4-9073-1ea465fbfe7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67e192e-ebab-4eec-8abb-5b992350e079",
        "cursor": {
          "ref": "4fdd31ef-285c-40f2-8d41-37540bdbd681",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0c8a4b28-a818-498d-b7a5-d06dff8f3700"
        },
        "item": {
          "id": "f67e192e-ebab-4eec-8abb-5b992350e079",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "206ed980-33d9-47df-96c7-921c7416bb9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eddade9-25b7-4e65-8725-61dfc3029b27",
        "cursor": {
          "ref": "b0ff49f1-e558-47ca-acd7-fb95988d8a1d",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "19f2fb9f-70b0-45c9-a750-7c248d173186"
        },
        "item": {
          "id": "8eddade9-25b7-4e65-8725-61dfc3029b27",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8837cb56-2446-4f2c-adfb-d9215de73e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52976e1-f1ec-442b-b009-9c33e0a2487e",
        "cursor": {
          "ref": "94d12c1b-c9bf-4168-9459-d0ad14b4a074",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4af7a40e-4b24-438d-8299-846e5e11fe7e"
        },
        "item": {
          "id": "c52976e1-f1ec-442b-b009-9c33e0a2487e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "65b31e6d-91be-403e-b271-1e05cda7ecbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a49d72-1dab-4ded-a6a6-95ab2d1f1354",
        "cursor": {
          "ref": "db436115-63d6-4628-a8fc-0008803020df",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "41cec498-2889-4b74-bba3-50664823d56e"
        },
        "item": {
          "id": "d6a49d72-1dab-4ded-a6a6-95ab2d1f1354",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b4413e10-12c6-4b75-abcf-344032bef016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d287adb-8974-451e-a07b-d357f5cc4829",
        "cursor": {
          "ref": "c851bca5-bdfd-4d62-a89b-662766d929e8",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f0e7a80b-6775-4003-9a79-2a332a3bb603"
        },
        "item": {
          "id": "5d287adb-8974-451e-a07b-d357f5cc4829",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "74aafbf4-75d2-476b-bc4f-5f48164877c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a1917c-3f2b-4810-9899-92422067cf31",
        "cursor": {
          "ref": "dc576fc3-a0b2-484e-bcf7-25ce7b2efda5",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a284c121-296a-48f5-b8fc-414d31209029"
        },
        "item": {
          "id": "04a1917c-3f2b-4810-9899-92422067cf31",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b7a782f2-0b9f-4397-bf92-413ffe17050e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0309736-18d2-427d-81b7-2cbddc8f77b2",
        "cursor": {
          "ref": "512c74e9-bafb-44a8-8f2c-3e77bf84a9c2",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b1db7e21-b668-4144-8d05-ef5c33cbf171"
        },
        "item": {
          "id": "c0309736-18d2-427d-81b7-2cbddc8f77b2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6bc3e2a6-cfe5-4ef0-9213-6c9b4aec9764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619c6141-52f6-4bee-8c1e-15dd8068a186",
        "cursor": {
          "ref": "1e082f46-ed8a-4bc7-9696-2a350d106156",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ef7d8937-5c52-491b-9d8d-b2a102808dda"
        },
        "item": {
          "id": "619c6141-52f6-4bee-8c1e-15dd8068a186",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e0138b60-ad6e-49a2-b000-98e6979e8ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1b9514-4ff5-48b7-9425-8fc0f02d8bbe",
        "cursor": {
          "ref": "fcee2ac8-4a3f-4b39-80fb-e9f058ac7b4d",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8f0d0f89-c973-4ff6-b390-f13ba9557c43"
        },
        "item": {
          "id": "0a1b9514-4ff5-48b7-9425-8fc0f02d8bbe",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6f9e370b-ad76-4378-bb15-5860b540b810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31e6921-7147-42d8-b8d0-cf4e91f92786",
        "cursor": {
          "ref": "a8cf3b26-1ad2-4b3f-a8c2-3a0c9a562499",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d49feda1-6736-4c2b-8cca-8f4193430c0c"
        },
        "item": {
          "id": "e31e6921-7147-42d8-b8d0-cf4e91f92786",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "56407eb9-94a8-45fb-9d59-b019f8adfc6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c861288-a138-473e-8615-a2ccdb93dacb",
        "cursor": {
          "ref": "c7335993-c222-42ba-9894-8dab2d867e30",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a571647f-4ab2-4925-a46a-3319a308b2f9"
        },
        "item": {
          "id": "3c861288-a138-473e-8615-a2ccdb93dacb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fd1b451f-5fd9-4c19-bf6d-0d2f836d9cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f54086a-c354-4d31-aae3-7ef3f33734b8",
        "cursor": {
          "ref": "4393f220-f5b6-415b-a172-0c5885509298",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e3790298-3f67-4d95-b779-4c759180a2af"
        },
        "item": {
          "id": "6f54086a-c354-4d31-aae3-7ef3f33734b8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "df2c589d-03eb-4d6c-ae78-819744819be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7e55ca-11bc-4fc5-bcdb-e268e6ac6268",
        "cursor": {
          "ref": "cbf37eef-e6e1-4798-8330-7b8032f80455",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a03c6d07-b7f8-4421-9711-4a0eb4a3efbd"
        },
        "item": {
          "id": "7b7e55ca-11bc-4fc5-bcdb-e268e6ac6268",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "04dd7126-0d89-4617-8d0b-1a8c7a73650d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a40d22f-b5aa-4f90-a836-76db68741d5c",
        "cursor": {
          "ref": "ebf1bdb4-cb01-4a3d-b1e0-4f83b8d8e379",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "356c5088-7f39-4466-b2f6-d512d18eda46"
        },
        "item": {
          "id": "1a40d22f-b5aa-4f90-a836-76db68741d5c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "fe760bef-683b-4c20-947a-ab81e4f8cffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae674c1-1984-4d5d-ba89-46f1b1d0338c",
        "cursor": {
          "ref": "1d7d0a36-6b71-4a01-ac00-9820e63f54c8",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6712f859-84b8-4da6-b218-ed82ea37f5a9"
        },
        "item": {
          "id": "fae674c1-1984-4d5d-ba89-46f1b1d0338c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "419f3388-eec7-4156-9c1f-1ed66d696019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aee9e1f-2d89-4d6f-85d3-c8017aec69c2",
        "cursor": {
          "ref": "1bfd7b7e-0bd3-4d13-9ece-1c1bb12ebe5c",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c2da528b-aac2-4f04-99d5-90ecd4eaf447"
        },
        "item": {
          "id": "5aee9e1f-2d89-4d6f-85d3-c8017aec69c2",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "86647688-59ca-4f13-95a6-12f0ef489f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41320d54-1bbc-46e0-a863-e0f45601bd6e",
        "cursor": {
          "ref": "2c868e3d-a2cb-4af9-a619-c6dc09ae84ad",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "90e3562d-e477-47e7-a695-6e702fc3e470"
        },
        "item": {
          "id": "41320d54-1bbc-46e0-a863-e0f45601bd6e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8194e642-2545-42a8-bf33-0e23b9e23346",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d0c1ec-9f7f-45c2-b9bb-d5328a18c571",
        "cursor": {
          "ref": "67447b33-f8ab-4f47-8815-00ccee160c78",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a6028dc1-1670-45cf-8470-0b9943b7b5a6"
        },
        "item": {
          "id": "d9d0c1ec-9f7f-45c2-b9bb-d5328a18c571",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "5c860822-f72d-4f29-a654-6f2f8ec04045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "02e6b4d0-ef42-44af-84b1-fd31b533ce98",
        "cursor": {
          "ref": "77af0a5c-d0d0-4966-9abb-75e34366d5a0",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2bffc5bd-fbaf-433a-99c5-0460d22d4b07"
        },
        "item": {
          "id": "02e6b4d0-ef42-44af-84b1-fd31b533ce98",
          "name": "credentials_issue"
        },
        "response": {
          "id": "881cc806-0228-4368-90d0-7b9124fbd724",
          "status": "Created",
          "code": 201,
          "responseTime": 3060,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f540ef76-b0d2-4df9-b22e-b53d911663ff",
        "cursor": {
          "ref": "c50876e1-ffce-46d1-b013-89d46a649e9a",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9f49ce24-9456-441f-b610-16877dec24bb"
        },
        "item": {
          "id": "f540ef76-b0d2-4df9-b22e-b53d911663ff",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c473af69-4bf5-44c6-8ce0-4d5656165db7",
          "status": "Created",
          "code": 201,
          "responseTime": 2837,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd83db7-0f04-42fb-ba4a-cb3fbc99d6d9",
        "cursor": {
          "ref": "228080d5-a3e9-4412-b322-d85e459c8f51",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "24618651-55ca-44a2-8464-07fb95ffe247"
        },
        "item": {
          "id": "5fd83db7-0f04-42fb-ba4a-cb3fbc99d6d9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "dc96db90-08d4-4f7a-a7d2-c59f8a2483f1",
          "status": "Created",
          "code": 201,
          "responseTime": 2447,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d500c60f-81fa-40d8-a938-cfa35ecfa885",
        "cursor": {
          "ref": "3614c968-1653-4c30-85df-a00401759365",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7dff8aee-a847-459c-bcab-d05cb32a500f"
        },
        "item": {
          "id": "d500c60f-81fa-40d8-a938-cfa35ecfa885",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "df1a2a6b-3327-44b7-81d3-8a87b10d5487",
          "status": "Created",
          "code": 201,
          "responseTime": 2000,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2d52d4-dac7-4cd0-9e46-abb057844135",
        "cursor": {
          "ref": "b40ac8d1-cf42-4f9b-bb80-228ee1315ad7",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "353db470-91a1-49d6-a98b-f2dba2efb937"
        },
        "item": {
          "id": "7c2d52d4-dac7-4cd0-9e46-abb057844135",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2fb0c1bd-f65f-4ece-abb0-802652ac998f",
          "status": "Created",
          "code": 201,
          "responseTime": 2423,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f63ea3-4b39-4739-9e95-b790925bd80d",
        "cursor": {
          "ref": "dc773be0-c67c-4530-8c83-933e8c897868",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9486462e-ea42-4bcd-b37e-06dc719ea152"
        },
        "item": {
          "id": "b7f63ea3-4b39-4739-9e95-b790925bd80d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6dbdfdac-9e88-4ec4-b048-20939bf0014d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "1447ea78-eb14-4011-9712-0a2841d53e02",
        "cursor": {
          "ref": "e8620d21-096a-4e5e-a0c4-94e27b030bc5",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1f4fe27d-44c2-4d24-ab6e-e8c6f272956a"
        },
        "item": {
          "id": "1447ea78-eb14-4011-9712-0a2841d53e02",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d3061376-f708-44c3-a2cd-f0f3812a25ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225c42a6-2328-49e5-96b2-3755502b8ad4",
        "cursor": {
          "ref": "05913e06-62de-4aef-a021-9f90032e7b96",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "58b3e749-5f9b-4f4c-b0ee-21aad2a53ac5"
        },
        "item": {
          "id": "225c42a6-2328-49e5-96b2-3755502b8ad4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e965cd0c-c501-4176-8ce4-0b96fdd6992c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1949b1-360b-4930-82f4-18e9f81472ba",
        "cursor": {
          "ref": "4829abf7-d8a7-4e57-a864-cfdfdb92f090",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ae88a8b5-545e-4ad5-baa0-957d0ffde450"
        },
        "item": {
          "id": "4a1949b1-360b-4930-82f4-18e9f81472ba",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c9a451e0-b8fd-406f-959d-36979183eb57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5a4fbb-7c49-488b-a7e0-7fc720bd6ed7",
        "cursor": {
          "ref": "d8720db8-79c8-4d36-889d-aa027313ccf9",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d81b5968-94c3-4851-8457-35c26bf65201"
        },
        "item": {
          "id": "8f5a4fbb-7c49-488b-a7e0-7fc720bd6ed7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "39f91975-ce78-492d-be43-e83c1b15304c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6105b0-a5de-464f-aba4-176bdf37aa91",
        "cursor": {
          "ref": "ebd1f500-3c4b-4b07-a4bf-b05b23d1aa37",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b9b67acb-d235-43d1-b64f-2f57f2532fa1"
        },
        "item": {
          "id": "ab6105b0-a5de-464f-aba4-176bdf37aa91",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e8b75772-26f1-44e4-84f2-ccd26528c9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77369902-3536-412f-b8a5-81471a8bd14f",
        "cursor": {
          "ref": "32ae1980-a9d1-4758-9ed3-788709ce0e22",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "cd8e70b6-8930-4ba0-9d61-cfa5c2c18b90"
        },
        "item": {
          "id": "77369902-3536-412f-b8a5-81471a8bd14f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d60739dd-2660-4178-acca-3c3076326ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97195067-676d-4c1e-9961-4a27f299aba4",
        "cursor": {
          "ref": "36938fc8-e63f-4133-b17a-3f660c53fe28",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1dd07317-0010-4d5f-9ff3-c246a0cc4a8f"
        },
        "item": {
          "id": "97195067-676d-4c1e-9961-4a27f299aba4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c8112ed7-d393-470c-87b1-46ed0b87af2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e0575d-b87a-4480-9c30-54ea00553fff",
        "cursor": {
          "ref": "c8fdfad1-a89e-4202-b49f-6a816f234ea7",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "03547dea-6130-44f5-bab5-f9489213200b"
        },
        "item": {
          "id": "55e0575d-b87a-4480-9c30-54ea00553fff",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "71ef4d96-9a1e-4bb9-a5eb-9890cf125d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8090d19e-3fbb-41cc-bf6b-9dad36b4b0cf",
        "cursor": {
          "ref": "670c1fff-20d8-421b-a48b-a47e8462eda1",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "61cf4973-03b4-4320-a8a5-aea090c7ba19"
        },
        "item": {
          "id": "8090d19e-3fbb-41cc-bf6b-9dad36b4b0cf",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6129eba1-a583-4c0a-859b-1ef4ca4ffa33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b79683-d32c-4ccf-adb0-474efe113a83",
        "cursor": {
          "ref": "1f626736-fa4f-48b1-8d3f-4de998bac24b",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1c6f66f9-585a-4c29-bdfa-6ddea91bb243"
        },
        "item": {
          "id": "91b79683-d32c-4ccf-adb0-474efe113a83",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d699f70d-b89c-496a-9b6e-1ecd05742152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca74a5d-a15d-4375-8402-f7f0beba5774",
        "cursor": {
          "ref": "b3ee3149-f060-44d8-b8c3-53400c8cf68f",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "cd89f53e-16c9-4dab-99a5-6d4a714ac46a"
        },
        "item": {
          "id": "0ca74a5d-a15d-4375-8402-f7f0beba5774",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "90d4470c-6789-4807-9e11-af1da85dea47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50ecaaa-b708-454a-bcde-7c070fb42153",
        "cursor": {
          "ref": "151bb178-ff8c-4afc-b159-8a81a3fa381a",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "672e1015-ad1c-4cb8-b16e-515a5e11d684"
        },
        "item": {
          "id": "e50ecaaa-b708-454a-bcde-7c070fb42153",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f80bd662-1a35-4c01-b03a-b9b16bf5a532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72bad26-8525-494b-bfff-85c8f385c0e0",
        "cursor": {
          "ref": "e054008b-6ae4-48df-9ee6-9bdee76ca546",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "456c62a8-e002-47f7-867f-8aa7c708f556"
        },
        "item": {
          "id": "e72bad26-8525-494b-bfff-85c8f385c0e0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3b437073-cfe0-420b-8468-d5d7cc17574d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843cd068-8394-4fc4-ad93-f1f86ab0b794",
        "cursor": {
          "ref": "7ea06eca-3b0c-41b7-8abe-fa9f19cb370f",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1a7c5a09-b16b-4154-ac5e-1b19fb74ab55"
        },
        "item": {
          "id": "843cd068-8394-4fc4-ad93-f1f86ab0b794",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ca1443ed-9ddb-4def-aa67-13bea52960a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a112aa-f977-4725-a5e6-c5099ddcb5f5",
        "cursor": {
          "ref": "25ad111d-994a-4370-9bd4-1d6387834fdc",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a01073ad-f83f-49a5-88d1-f65036a08704"
        },
        "item": {
          "id": "61a112aa-f977-4725-a5e6-c5099ddcb5f5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9bd23f78-8a54-424c-8d49-dddb2c89f6fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e92dcf4-cc36-463d-9237-688787efac3d",
        "cursor": {
          "ref": "39928485-4c2e-46c3-bf19-37799a110029",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e2ba522c-1a9c-49b0-9765-1788b4e29bd7"
        },
        "item": {
          "id": "9e92dcf4-cc36-463d-9237-688787efac3d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e95c387b-a770-40c9-a63b-19049472c736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535129c5-26d1-4ab7-a50c-02f03d02198e",
        "cursor": {
          "ref": "876b3b84-5330-49c9-9e04-0052a7181c0c",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f250fb9c-542e-44ae-82e3-188a665bb373"
        },
        "item": {
          "id": "535129c5-26d1-4ab7-a50c-02f03d02198e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "365f872b-9fdb-4909-9d02-d15d857ddddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bea5fa4-923c-4400-98b3-8ae2656d4a37",
        "cursor": {
          "ref": "89dd2692-ab06-4233-96b9-4cb9ce6fc710",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "68c86d15-b58a-4448-acb2-45b2b1482356"
        },
        "item": {
          "id": "3bea5fa4-923c-4400-98b3-8ae2656d4a37",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7c043be4-46e4-406d-a2bc-57921a183d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51728dfa-d7b3-4896-ae04-0e11b0519e70",
        "cursor": {
          "ref": "5f1e619c-a298-4531-9a45-280d3bba56e9",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "bd159c7c-df9e-4cbc-8b86-a19496acbe35"
        },
        "item": {
          "id": "51728dfa-d7b3-4896-ae04-0e11b0519e70",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ca5f520d-cc19-452d-9b4a-d53888ea8dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be89bbb7-517f-4c91-a290-df88ef9e858c",
        "cursor": {
          "ref": "ce70a557-e4db-4a94-918f-aff9b317b178",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "696da1ae-264a-4e3a-9481-735ddb0a5712"
        },
        "item": {
          "id": "be89bbb7-517f-4c91-a290-df88ef9e858c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b28c9337-6708-490d-9e9a-ab672b391607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730c9d56-1fac-4a2e-bfe6-8e628d76f2fd",
        "cursor": {
          "ref": "47525383-125a-403c-bbc0-75571ef5bbb2",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "87b8c272-bb97-4987-b636-c3f9d77d5d29"
        },
        "item": {
          "id": "730c9d56-1fac-4a2e-bfe6-8e628d76f2fd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3d8b757a-78df-4953-a0e6-67311dda8ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ced2c69-562a-4c0a-8860-9e12abad3fa6",
        "cursor": {
          "ref": "f1f76bc6-fbe5-4835-9c2d-70ae413a2c46",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "272760c9-24be-49e4-807a-c0afe8d50b97"
        },
        "item": {
          "id": "6ced2c69-562a-4c0a-8860-9e12abad3fa6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "45e71bba-f9b0-412c-aa80-2e9e268212b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dabf457-e7fe-4b25-9858-a227a706f60d",
        "cursor": {
          "ref": "cd3060f5-e2dd-4983-ad39-3dbec53f6c42",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4ec47a2e-198f-475b-a691-e21a1c924c01"
        },
        "item": {
          "id": "8dabf457-e7fe-4b25-9858-a227a706f60d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a2f01ae1-4958-4c15-9a4a-48303f18835e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2177955-b3ff-4fb0-bb45-00611abab9ab",
        "cursor": {
          "ref": "0b7eeaf8-696a-4d79-8ceb-b2e317bb341a",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5392e4b3-4339-4b91-8fb6-cda1c21dc864"
        },
        "item": {
          "id": "a2177955-b3ff-4fb0-bb45-00611abab9ab",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "07787209-a1e3-469f-a45d-e0c028429e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1f6169-e879-4f36-85fc-8a22af2ddb1f",
        "cursor": {
          "ref": "6ef0a092-f344-46db-a73f-dbb06fe91f69",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e28ef592-d8ec-46d8-8eb2-6e5ec08de257"
        },
        "item": {
          "id": "ea1f6169-e879-4f36-85fc-8a22af2ddb1f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b0700b33-c158-4e1b-96d4-bf3293672481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932b3654-4572-4e86-be90-27de63d7ec6e",
        "cursor": {
          "ref": "8e72266d-be90-41ee-a5fd-709c6cc3de75",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f36e6112-b297-40c4-894b-61cbc483646f"
        },
        "item": {
          "id": "932b3654-4572-4e86-be90-27de63d7ec6e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "528c2dbf-496a-4692-9d73-897dede77dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93844661-cbd4-46cb-8db3-1077272172a8",
        "cursor": {
          "ref": "ef32a741-7142-40b9-8f32-315ddb11d5ad",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "203131c7-be9b-43e8-b9ee-69981391ce30"
        },
        "item": {
          "id": "93844661-cbd4-46cb-8db3-1077272172a8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ed60080d-554e-4d53-ba62-f6aa620146f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac84334-908e-41be-840c-b52de7650b5e",
        "cursor": {
          "ref": "32be916d-e44d-4b15-a3b9-1b5e23b027e7",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "06340fe3-2f6c-4695-8c53-656aa680fa54"
        },
        "item": {
          "id": "dac84334-908e-41be-840c-b52de7650b5e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "64383130-08f5-4528-b93a-4820f2b4f462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2390acde-32de-4f97-8e84-8b30f329864a",
        "cursor": {
          "ref": "09913107-f981-41cf-84a2-2c937e5dc359",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "748ff6ca-4592-4773-a951-2b32925acbfd"
        },
        "item": {
          "id": "2390acde-32de-4f97-8e84-8b30f329864a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "55771a19-2914-4fd1-a38e-bd22d38c309f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601043d3-950a-47ec-a702-6d919c836eb0",
        "cursor": {
          "ref": "e93f956a-b28c-4da5-b89f-9f0e628adc93",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c518312f-666b-4b45-9141-982dd167cfea"
        },
        "item": {
          "id": "601043d3-950a-47ec-a702-6d919c836eb0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d469c008-1bac-4834-948a-76415a6494fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8561cda6-7260-4c0e-b32c-d75d2392818e",
        "cursor": {
          "ref": "dc310572-a8eb-463f-88fe-f93cdacfcfe4",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3a838971-8023-4514-bd59-9d6d019d0546"
        },
        "item": {
          "id": "8561cda6-7260-4c0e-b32c-d75d2392818e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "657d7ef4-857e-4cad-ae3d-04bc86a0d4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40efb857-c18f-452e-9ee7-a12de0057417",
        "cursor": {
          "ref": "df16a945-a627-46e4-becb-462c39009451",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7ed45151-7d3c-4b05-9c11-f232cdf4b7ad"
        },
        "item": {
          "id": "40efb857-c18f-452e-9ee7-a12de0057417",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5f5a0910-3d87-4795-8ac3-337de84e2861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64bb457d-dd40-483d-9a6f-38edfa1e16bb",
        "cursor": {
          "ref": "562513bd-9477-425d-8947-308ba53b5d72",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "33fc411c-6ce7-4233-9400-08f43050dbc2"
        },
        "item": {
          "id": "64bb457d-dd40-483d-9a6f-38edfa1e16bb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "14d412f2-5cef-4072-b0c5-f5ddfe06ea8b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369cd797-f228-4b37-bcec-752aa556f60c",
        "cursor": {
          "ref": "403d06b3-8c62-459f-8e4a-000c9493de9a",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "56c2089a-d3a7-48a3-90b7-f68e058fc403"
        },
        "item": {
          "id": "369cd797-f228-4b37-bcec-752aa556f60c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f8358061-9acf-4140-a8b7-86e7763c2b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9c007d-a035-4282-997b-b78a91c39ade",
        "cursor": {
          "ref": "dbfcbc09-cc67-4d0b-87c4-b55f91032a85",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f6dc1eeb-8b3c-4adc-a84b-7ee37339bbca"
        },
        "item": {
          "id": "bc9c007d-a035-4282-997b-b78a91c39ade",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "679e3633-b293-457b-8cbe-8e971e92d441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859a1bd3-487c-4d4c-bc44-cf29ea0e6b90",
        "cursor": {
          "ref": "9f9fa0ef-c7ce-455c-a90e-97aefaac70e5",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4c56d784-c090-4b17-ab77-a10ac15dfb02"
        },
        "item": {
          "id": "859a1bd3-487c-4d4c-bc44-cf29ea0e6b90",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f7de9ec5-5fa5-4687-bff5-ae423652c538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e640c3c-d790-4fdf-9b44-3456a3490716",
        "cursor": {
          "ref": "a58363e2-d430-469a-9115-9978986d29df",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d6b63989-97e1-4a72-bd69-e3f6cc62ee24"
        },
        "item": {
          "id": "0e640c3c-d790-4fdf-9b44-3456a3490716",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1dd9ae47-859d-4343-bb1d-d8d2d9460eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd25ea2-56e7-4e9b-b11d-b770f9a7ec06",
        "cursor": {
          "ref": "b82a7426-62f0-4e18-ab95-c6bfe54904c6",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f363e84c-0a3c-4c6e-859c-ca211d16a647"
        },
        "item": {
          "id": "1bd25ea2-56e7-4e9b-b11d-b770f9a7ec06",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5ee553dd-a9c9-40e6-8d7b-5ccecf66ee4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae81d718-f9c5-4afb-a328-d78f14f7fa3a",
        "cursor": {
          "ref": "cf0be568-8773-41ce-a4cc-8b7b6a6f6bc5",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d65dec2f-35b4-4759-b7f8-ebc0e7cdd01d"
        },
        "item": {
          "id": "ae81d718-f9c5-4afb-a328-d78f14f7fa3a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9cd72d04-db6a-4b07-9b0d-3abaa8c41931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30460d5-a666-45da-8706-d5d70d10c4b6",
        "cursor": {
          "ref": "5aa81e0d-1f14-4799-8628-79f3875cf07d",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "35b2dbd4-263b-4a03-a63a-6e69e04b4422"
        },
        "item": {
          "id": "b30460d5-a666-45da-8706-d5d70d10c4b6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d462a059-98ee-4625-b728-cf5f06e6a97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8d01b6-db93-435a-947d-70519cfc3d04",
        "cursor": {
          "ref": "01297bf0-e3c4-4624-9777-73fcbed10b34",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2c351fe0-f953-47a3-b3f9-5308f76283c0"
        },
        "item": {
          "id": "bd8d01b6-db93-435a-947d-70519cfc3d04",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "420beda7-845c-4950-9011-0adfad72c624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127be8b9-300d-42b9-8fdf-87f8722c46ce",
        "cursor": {
          "ref": "22104e51-ede8-4cb5-bc3e-e293366a9759",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9cf54d0d-f584-4bbc-9eea-8cb4c91bfba5"
        },
        "item": {
          "id": "127be8b9-300d-42b9-8fdf-87f8722c46ce",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a5d2b841-0c63-432a-b692-db8c1dabb25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e853c3-3a48-4cc8-b5ee-d493b6ebb57a",
        "cursor": {
          "ref": "091a3eab-2895-4e3c-b90c-192e4d6c8920",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cd90c16f-24c1-42ce-b9bd-dc98d61959a0"
        },
        "item": {
          "id": "a0e853c3-3a48-4cc8-b5ee-d493b6ebb57a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6f47bec4-c008-407a-8493-8fbf8febaf4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e176ae95-c22e-40f6-8774-5fbe61c6703f",
        "cursor": {
          "ref": "6eb3251e-2686-40d1-b562-039c06bfdd55",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5289151a-4b2f-4abf-894d-876862af2175"
        },
        "item": {
          "id": "e176ae95-c22e-40f6-8774-5fbe61c6703f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "41331c7e-a15e-4d30-923f-a2c9530a0da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef037c8f-44bb-4431-80d4-11e04975aea7",
        "cursor": {
          "ref": "5a642a48-7ee6-4f31-87f4-6bfcba391dcf",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "179b57f3-59f2-4082-800c-cafbb9228bc8"
        },
        "item": {
          "id": "ef037c8f-44bb-4431-80d4-11e04975aea7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2a6d4c61-7bbf-4510-bb3b-93bd587b19b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ff37e9-28bb-401d-bbb3-6b67f8c50ed1",
        "cursor": {
          "ref": "1c6d6a50-6d18-4913-b81b-372dab5e77f4",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c413084a-ae0c-42f0-b162-c47db44a0f4d"
        },
        "item": {
          "id": "e8ff37e9-28bb-401d-bbb3-6b67f8c50ed1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8a2af5c7-b508-4bbe-896e-b5dbe84dacd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e59b3b-0d39-4423-bfd3-8fc03cf5f450",
        "cursor": {
          "ref": "52d7db62-6d24-4f5a-a6fe-56edd09734ce",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9055b4a9-afee-49c5-a053-68df1df95fae"
        },
        "item": {
          "id": "42e59b3b-0d39-4423-bfd3-8fc03cf5f450",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5350df04-ce0f-4fc8-938d-79cb41b5402c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23edaebc-c6ad-4ad7-9679-4c93876ec927",
        "cursor": {
          "ref": "6c4172e8-c02a-4e5c-b97f-51fd60ec693b",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b28b48ac-c468-4b5b-9975-dff739390420"
        },
        "item": {
          "id": "23edaebc-c6ad-4ad7-9679-4c93876ec927",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fb1457dd-653c-4779-8c92-e8ddb567d68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8827b2-2b11-4717-8eea-cd620ff50e35",
        "cursor": {
          "ref": "3446d994-df66-4fa8-8e9e-c5cf6c0cd8bd",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c4fa1e2a-bd9b-40e4-90ab-57300be864c8"
        },
        "item": {
          "id": "5e8827b2-2b11-4717-8eea-cd620ff50e35",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f99d0dfc-6d1c-4354-9bde-e7922f1210ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a94d2f-5959-49e3-b464-583440b9530f",
        "cursor": {
          "ref": "9ecc36a1-0658-40c9-be29-090f2c8a978f",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "197df51a-5bf5-43a3-83c8-eca37fcb957d"
        },
        "item": {
          "id": "28a94d2f-5959-49e3-b464-583440b9530f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6fff58d4-4bde-4a84-b092-7f8d12cabc49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f589045-86cf-4b81-958e-a28dca5e2c07",
        "cursor": {
          "ref": "19752801-eeda-4cff-a99c-11445095d07a",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e53c5fc5-7da7-404a-988b-359631ae90e5"
        },
        "item": {
          "id": "6f589045-86cf-4b81-958e-a28dca5e2c07",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "34780e6f-2c35-4a77-92fc-b7963d2305fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65d7b74-8ccc-4e62-a0ab-ab7c20a39347",
        "cursor": {
          "ref": "33798b78-1b37-4b0b-9a84-f47176a5467c",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e38c199d-7e3a-46ea-b866-6292ca346e27"
        },
        "item": {
          "id": "b65d7b74-8ccc-4e62-a0ab-ab7c20a39347",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "64795d3d-e3dd-4ce3-9fa9-a7a1e13c8eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327cdd26-3528-4414-b37f-8fea07a82976",
        "cursor": {
          "ref": "91a3702e-8456-4150-9b00-d466990f1bd2",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ee08a063-2cc6-4eca-83e3-ca2e5f46a6dd"
        },
        "item": {
          "id": "327cdd26-3528-4414-b37f-8fea07a82976",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d36dc8fb-ec56-47a5-aaf2-ff4a7d83a193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757a09f7-c505-4e9f-bc3b-d657a5f0d634",
        "cursor": {
          "ref": "bc1d4f56-d0d0-4e9f-9007-6e1781f207d4",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8b5e6e3d-15f0-4dcc-ab11-16a56fa96874"
        },
        "item": {
          "id": "757a09f7-c505-4e9f-bc3b-d657a5f0d634",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "36681775-eed7-4c4f-9ddd-291fdbf47a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15529991-b520-48bf-a3a5-67d2c77d4418",
        "cursor": {
          "ref": "75f8506d-192b-4a73-8e3a-1d50909ef8e6",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ab1c15d2-384c-4910-b8c4-0d3f01e18873"
        },
        "item": {
          "id": "15529991-b520-48bf-a3a5-67d2c77d4418",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d7123cb4-b5b9-4fdc-b59d-0e490e598ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51582fb5-9f34-4361-b713-60008460e030",
        "cursor": {
          "ref": "69880924-e73b-4114-a7c9-5de24273fad4",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fab80830-04b4-4b87-a3c4-991f4f08624b"
        },
        "item": {
          "id": "51582fb5-9f34-4361-b713-60008460e030",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f60ec9b5-5f5f-4978-91eb-e21e3a50dbad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9d8c0a-9d95-4462-8103-743fd8f0d103",
        "cursor": {
          "ref": "9465cd73-db9b-4b84-a8cb-d95bb404a62b",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "38edee41-54e2-45fd-b647-fe9933b51265"
        },
        "item": {
          "id": "0d9d8c0a-9d95-4462-8103-743fd8f0d103",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1c53e24e-fabb-49e1-8c48-807712dc64f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e71d746-a5ba-4c41-874e-f6ab36dc45b7",
        "cursor": {
          "ref": "ddc69528-75bd-4b68-9663-3835b45b405a",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "fb0f9308-d303-41e9-8931-3959a60cf808"
        },
        "item": {
          "id": "2e71d746-a5ba-4c41-874e-f6ab36dc45b7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0b42a3fc-7b2f-456d-91c6-f6f32342c888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9aa529-bfb7-4982-90b9-808d97659462",
        "cursor": {
          "ref": "e7b31469-f112-4fe4-b164-8cc5be5ea786",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8088ebad-e272-4bd9-91db-b9f42dd93c85"
        },
        "item": {
          "id": "5b9aa529-bfb7-4982-90b9-808d97659462",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "263ab7b9-b34d-47aa-b49b-77bce4eba389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1237030e-a17d-4746-a0bf-f53dfdd252b0",
        "cursor": {
          "ref": "080d1473-7e10-445b-8bdb-853bc9445847",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f839336f-c532-413f-9abf-299da3177b91"
        },
        "item": {
          "id": "1237030e-a17d-4746-a0bf-f53dfdd252b0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dd6a8de7-7ec2-4545-aae2-d1c5526f19eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43993fe1-e7db-45b0-8bdf-b481eb79b1da",
        "cursor": {
          "ref": "7395af88-0257-453b-8024-613f79a55cb2",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9dd6a372-9698-4126-ae91-fa0941ec56ed"
        },
        "item": {
          "id": "43993fe1-e7db-45b0-8bdf-b481eb79b1da",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ff91bc32-f847-43d4-b10a-87c8ff8c931c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891464cd-1614-45e5-ac1c-f881fdec931c",
        "cursor": {
          "ref": "008c8b94-90fc-4ce1-be09-008d74bdd89f",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "830c8192-2423-43cc-85a8-f5f464228a19"
        },
        "item": {
          "id": "891464cd-1614-45e5-ac1c-f881fdec931c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "68b0ed3f-a53c-4712-84c4-664e78d474c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe8cd39-d049-45b1-aaeb-48d62bd47a3c",
        "cursor": {
          "ref": "38705a1d-0ef0-4101-a8e6-e7d8a4b045ce",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "50a9046c-24dd-4a53-8195-b088fb283500"
        },
        "item": {
          "id": "3fe8cd39-d049-45b1-aaeb-48d62bd47a3c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5dbb844d-8b31-4897-8d1a-4a862066bb47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b9178c-7cc2-464d-9f4b-79830cf4a8a2",
        "cursor": {
          "ref": "1d3c005d-110e-4bd1-8532-08dfb6b074d3",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "565576d1-2df7-4d45-99ae-5181794d123b"
        },
        "item": {
          "id": "94b9178c-7cc2-464d-9f4b-79830cf4a8a2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "aff2d546-b2e2-4c8d-98a2-d6d731336df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5dadb20-bae1-4142-90ad-79ab90f60007",
        "cursor": {
          "ref": "94c01c13-90cc-441b-9155-51d35c99ba0c",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a4975cb3-d42e-46a7-8ceb-0a4c358bbde2"
        },
        "item": {
          "id": "b5dadb20-bae1-4142-90ad-79ab90f60007",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9c6ed3ae-64fe-4469-a2a4-f44f5d31bb3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9b9bc0-571c-41f6-aae5-4439406d2fee",
        "cursor": {
          "ref": "4adaf7fa-0bac-4c9e-979c-ba13b446d342",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3c80468d-592a-42b2-ac6e-cc0617506258"
        },
        "item": {
          "id": "ce9b9bc0-571c-41f6-aae5-4439406d2fee",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d3e3e25c-1862-419f-ad56-f8041aea5d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a87934-038a-41fc-93cb-5bd0c0efd385",
        "cursor": {
          "ref": "ce9c27c2-d652-4ab6-b434-9536bdcd07b0",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5196412b-965b-4284-a838-f63a20b5f165"
        },
        "item": {
          "id": "91a87934-038a-41fc-93cb-5bd0c0efd385",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "745a75a0-b31c-4f5d-9811-32e54d8c5817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab46d4d-7615-4186-8d28-22a241dfdc11",
        "cursor": {
          "ref": "cabd8cf7-8e18-4ea5-a585-6dadec6d2bf1",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f0066040-c867-405d-811c-fb1f8ead5f57"
        },
        "item": {
          "id": "1ab46d4d-7615-4186-8d28-22a241dfdc11",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "18d11eee-09e2-4517-aab6-e31bbdca9fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0a3093-91fa-494b-9009-5d279068ef3c",
        "cursor": {
          "ref": "3680a94b-57d5-4139-a8e9-ccf6d424bc10",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1414061c-3de2-4279-beb1-73940d3ba07d"
        },
        "item": {
          "id": "5a0a3093-91fa-494b-9009-5d279068ef3c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "89cf2d69-0757-42ef-a743-7f132de26654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4cc5383-db88-430d-a1f4-e48eced16ebd",
        "cursor": {
          "ref": "24297424-a78a-4f5b-9b62-992122427b16",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f17e562e-e2d4-465c-9a09-6e3b43950be7"
        },
        "item": {
          "id": "c4cc5383-db88-430d-a1f4-e48eced16ebd",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "17c26971-8f6f-4bcb-883e-60e42afa3a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4b66e9-975b-4164-bc97-9e126b500d5b",
        "cursor": {
          "ref": "b29d4462-0fec-47ad-a07d-efbecec877f4",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "06a24595-6423-4f33-982b-5bb26b8a1f6d"
        },
        "item": {
          "id": "0b4b66e9-975b-4164-bc97-9e126b500d5b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "eeb0ff72-6fbd-482a-b961-021446f6bb65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ac354f-ef96-4787-bf88-c0341e7f7377",
        "cursor": {
          "ref": "bece5ae7-3ca1-410a-bf61-047d3d5a80de",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "afe47e48-05af-49d0-b2a1-615032294473"
        },
        "item": {
          "id": "c2ac354f-ef96-4787-bf88-c0341e7f7377",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d6aff593-7a35-476c-9427-3fde9e1f8e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ad91c4-677a-4dcb-a59e-a7e158f63ead",
        "cursor": {
          "ref": "eed163e2-4db8-4997-b4e4-1d8e5914f4aa",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "888e3d8c-fdec-4d25-856b-aa4d8964db9e"
        },
        "item": {
          "id": "f0ad91c4-677a-4dcb-a59e-a7e158f63ead",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a0c0ce1c-f893-4b54-aeae-a1d520ea0494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b75bc60-88a3-4307-a511-2bb077a95833",
        "cursor": {
          "ref": "b3881d8c-88ab-4d93-9ac7-0b80e3011af5",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e41e02f3-5298-4978-94f5-81d967104ae8"
        },
        "item": {
          "id": "9b75bc60-88a3-4307-a511-2bb077a95833",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7472f33a-84a4-4a97-8b61-5f2015b03166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401de3b6-bb2a-4c47-b49e-8a631dde6a1f",
        "cursor": {
          "ref": "4e848880-6465-4929-89fc-32cf83138ba8",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "72aed986-c471-4ac2-bfb1-eb9d524f5fec"
        },
        "item": {
          "id": "401de3b6-bb2a-4c47-b49e-8a631dde6a1f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d01a34c5-c428-4a71-9190-305501f7cf42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06154afb-664f-4e85-9472-887fcd81385a",
        "cursor": {
          "ref": "8ad7b3b7-c2aa-4545-b216-9b1ddfe4f75d",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "06e11f4a-29c9-47da-b676-96142142f008"
        },
        "item": {
          "id": "06154afb-664f-4e85-9472-887fcd81385a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4b991c07-996d-4fe8-9b67-5f24ba25555b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb382377-30c0-400d-8bb1-91a34cc2b6e5",
        "cursor": {
          "ref": "5b4b7cbc-49ef-496c-991f-c00497a47d8f",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e33af732-603c-4ff8-88f2-51e554aaea6b"
        },
        "item": {
          "id": "fb382377-30c0-400d-8bb1-91a34cc2b6e5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5e18712d-d588-49da-ba4b-7a6f56026ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff26989-2028-4659-a24b-6c3234c9885e",
        "cursor": {
          "ref": "68992264-2c87-4d9e-8144-ff5ea75a418b",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f481c9bf-b404-41dd-b182-f709a8536362"
        },
        "item": {
          "id": "6ff26989-2028-4659-a24b-6c3234c9885e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9537e407-bde5-4e46-8257-e5754da85ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa926a3f-4a64-48f7-80e0-064d894597f9",
        "cursor": {
          "ref": "06a51b48-88dd-4d9a-a6ed-4634dbf11a7e",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b076551b-9706-4efa-8cb7-d59aee2e5429"
        },
        "item": {
          "id": "aa926a3f-4a64-48f7-80e0-064d894597f9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e22eb345-af6c-4569-aa1b-c9da3460cfa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab417ded-0b9f-45b6-b451-2aff32ab32d0",
        "cursor": {
          "ref": "bfeeda57-d163-4f48-84ab-96357673c3d4",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8a419c31-56a1-4761-b917-ea00e37e75f6"
        },
        "item": {
          "id": "ab417ded-0b9f-45b6-b451-2aff32ab32d0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c5f31e90-51a2-487c-9fee-2ab40d5247c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc5ead4-1e48-4c95-8c06-923aecba8fb8",
        "cursor": {
          "ref": "f7680d77-315a-4165-a99d-348d84968393",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8f2a762e-f5bf-4fa7-984e-f0b6dddd785c"
        },
        "item": {
          "id": "5cc5ead4-1e48-4c95-8c06-923aecba8fb8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d0c8d34e-7ecf-42bd-8719-4314310e9896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8310db50-9a4d-4c44-9381-c08d75a4fc8f",
        "cursor": {
          "ref": "f54f948e-74d0-4a16-a17e-d29a1dd8bc21",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "79865f5b-4482-49e4-a08c-a6e3def3507c"
        },
        "item": {
          "id": "8310db50-9a4d-4c44-9381-c08d75a4fc8f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b02c581d-1495-48b2-a6cc-d05cad08ee3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9bdc0d-9b3e-4d30-bb24-f51b08558d25",
        "cursor": {
          "ref": "fe7fc226-ab7e-4a8e-bbff-c124484317ee",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5919f194-5b60-489c-867f-ed3b4601d561"
        },
        "item": {
          "id": "9b9bdc0d-9b3e-4d30-bb24-f51b08558d25",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "94261d2c-221d-4470-b04a-3fabeb022768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23e82e4-3502-4ac0-b29d-abfda469c19f",
        "cursor": {
          "ref": "8173545d-96a2-4e07-a800-3a6c190b646a",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "64565dae-6791-46f5-99e0-fa455eb711a7"
        },
        "item": {
          "id": "a23e82e4-3502-4ac0-b29d-abfda469c19f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "975ad654-b370-436a-a8df-9ab4af9c64ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceefa0bf-9a36-44b5-8649-f5d14f8c680a",
        "cursor": {
          "ref": "644110c5-c82d-4c78-8e87-25da5834dead",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fa8d6e9d-dbdf-46fd-87f6-7356ca29212f"
        },
        "item": {
          "id": "ceefa0bf-9a36-44b5-8649-f5d14f8c680a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "260e399b-5770-445b-a808-7c93419b800b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01635fa-a5b5-4047-8b13-b21a9f877acb",
        "cursor": {
          "ref": "55a3fdac-0104-4f90-baaa-f39d917c1f7d",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "37d7f58c-9548-4f57-a2ed-36c56eae4763"
        },
        "item": {
          "id": "f01635fa-a5b5-4047-8b13-b21a9f877acb",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "756d5835-cb10-47c2-aa6c-f673a74fa611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45af7ffe-5dbe-4d44-8fac-872f6a90d53d",
        "cursor": {
          "ref": "f3aa8385-619b-405c-b9ac-9bf307a42f59",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fb53897e-d29d-41d6-95ef-502b4dd3641c"
        },
        "item": {
          "id": "45af7ffe-5dbe-4d44-8fac-872f6a90d53d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "af6f8ba5-0c2f-4e57-bbe6-fcf8fddcd1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a56028-0f7b-4ec9-b8ca-c4bc07b5dd04",
        "cursor": {
          "ref": "772aa7ac-3773-4a1c-8fd6-89f9f639afa2",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ac24e853-7017-47ce-ae78-5680b4d0bf37"
        },
        "item": {
          "id": "02a56028-0f7b-4ec9-b8ca-c4bc07b5dd04",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "18f986ba-61dd-494d-b252-748e317bd9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744b04c1-551f-474f-9c81-e4f0b7bce950",
        "cursor": {
          "ref": "d14dbe31-4365-488b-889b-7941f95c94c6",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a7760f9a-f408-4e58-a983-dc8cd0e2da52"
        },
        "item": {
          "id": "744b04c1-551f-474f-9c81-e4f0b7bce950",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "091a8a9a-7152-4420-a35d-bbd618f447e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3646d6-3168-4c7d-8ea0-d6ad63668aaf",
        "cursor": {
          "ref": "9795e0d4-f86f-40dc-ab5d-7f4113b8cf03",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6d15f85c-7b26-462e-8c2b-e622675fd48b"
        },
        "item": {
          "id": "1a3646d6-3168-4c7d-8ea0-d6ad63668aaf",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e7c59b35-741d-4754-a940-40aa159f6d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd11b0a-a2d8-4ebd-9478-2c1711b720b1",
        "cursor": {
          "ref": "97ea6c40-56ea-433b-83b0-76a76957adde",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "fef83f60-64a5-4731-8d4a-c4ed9ac6fb0e"
        },
        "item": {
          "id": "0dd11b0a-a2d8-4ebd-9478-2c1711b720b1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7550adfa-36ec-4813-b7c8-9438178d1ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf07e8a-2014-4438-b4a1-6ddf3807f894",
        "cursor": {
          "ref": "a79a289d-5c61-4a99-9629-fc6cb0820c97",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b7c80c3c-d72e-4c2c-a13d-00f908c632e8"
        },
        "item": {
          "id": "dbf07e8a-2014-4438-b4a1-6ddf3807f894",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9d88382d-baab-4b17-a9cc-af54d88e5124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d418a9-9ec5-42d7-a9f9-6261060e979a",
        "cursor": {
          "ref": "90287815-f9d3-4816-b487-9c4b4f7dba4a",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "507e105a-7069-4529-aafa-eafcd2785dfa"
        },
        "item": {
          "id": "94d418a9-9ec5-42d7-a9f9-6261060e979a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2d89b8c8-7f0c-40cd-975e-32b2e029b33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867e12b4-3452-4f89-afe2-bd48d9cfa460",
        "cursor": {
          "ref": "f5745a0a-c985-421e-8cab-4355911cc26e",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8f53c267-23fd-4a26-a0df-d8f577cd5269"
        },
        "item": {
          "id": "867e12b4-3452-4f89-afe2-bd48d9cfa460",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e6d67a95-b062-48a0-bffa-4309683a7fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e495c405-3513-4a0a-a049-22bc469bcad8",
        "cursor": {
          "ref": "ed74f85a-c933-4e42-91aa-1f0e1592a44b",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "28bec31f-5a5f-4a4f-930b-968b15d58307"
        },
        "item": {
          "id": "e495c405-3513-4a0a-a049-22bc469bcad8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c319767f-9851-4f1e-97f3-2685c0a9600b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7340d7-ede4-48da-8ea5-e7df5bd86001",
        "cursor": {
          "ref": "a116a180-df45-405f-82ee-a51d4ffa16b2",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e2330dbe-fd56-44ce-bfff-82c8ffa43c3d"
        },
        "item": {
          "id": "3d7340d7-ede4-48da-8ea5-e7df5bd86001",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "69d7ceac-6cb2-47b2-98bc-ee8049593455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ed310e-a8f9-4688-a816-125d0efab18b",
        "cursor": {
          "ref": "683bdade-1789-485f-b274-530ab3ce7296",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c5e5475d-6128-4bf2-bc94-7d405c2446c8"
        },
        "item": {
          "id": "87ed310e-a8f9-4688-a816-125d0efab18b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "87e134e4-d7a3-4a56-beb1-79599bceb6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f6326f-53e1-44fd-8ab5-66f2c513cbbc",
        "cursor": {
          "ref": "90640547-46c5-4fe9-981a-cdbc2c687e29",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a958416f-c803-48c6-a5ef-026c65b43a8f"
        },
        "item": {
          "id": "35f6326f-53e1-44fd-8ab5-66f2c513cbbc",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2404ccaa-58fc-4461-ab15-6a70e1661116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0a54c0-2423-40f8-bdff-a4684e26384f",
        "cursor": {
          "ref": "77ee26cd-e0d2-4277-ab05-2af2c80daf9a",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6a57e724-26c5-4722-b3a8-84fce820cad3"
        },
        "item": {
          "id": "2e0a54c0-2423-40f8-bdff-a4684e26384f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c32f30d6-0d00-48ac-aed9-e4a569715f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b92dee-54b6-4b21-9b95-62da94f23c21",
        "cursor": {
          "ref": "923ab672-d6ba-40f4-82b9-6d4a12a693c7",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "efdc356e-9b1b-4e3e-8b8f-dc6a0333088e"
        },
        "item": {
          "id": "60b92dee-54b6-4b21-9b95-62da94f23c21",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1206aaa0-d275-49ec-a1d5-209fba8f8f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d9cbaf-cc9a-41c7-8a29-369309f2d65a",
        "cursor": {
          "ref": "ff12813f-c0f4-4e86-bc85-0f93dbcd4639",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c3009939-7081-432c-8d82-4c61713370f0"
        },
        "item": {
          "id": "79d9cbaf-cc9a-41c7-8a29-369309f2d65a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ce61ca7a-dad0-425d-9ec0-9ce52fa6d1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9a2974-360f-4b7a-8a91-8ab619ea2950",
        "cursor": {
          "ref": "e477ec0f-6c55-4d7a-bd0f-a625c896a7c2",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "709dae76-bbf6-49da-b314-f67446c3c8f8"
        },
        "item": {
          "id": "7c9a2974-360f-4b7a-8a91-8ab619ea2950",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9ff82e60-95db-42a9-9b5f-4eea126458ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5cb12c-d23d-4e36-aa16-921de5ded1f4",
        "cursor": {
          "ref": "84fd84e0-dcaa-44e8-b594-95c38eba7637",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ca56fe09-2cf9-4bdd-9f11-4300a367ce3c"
        },
        "item": {
          "id": "ef5cb12c-d23d-4e36-aa16-921de5ded1f4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "710fea2f-895b-49b8-b743-00191787c00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780419f1-2d36-4476-adb4-42c33a9037a0",
        "cursor": {
          "ref": "5a9004ce-6476-49de-ab87-fd33a636d472",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4baa1720-5610-4bc0-83e8-ac305e8ccd06"
        },
        "item": {
          "id": "780419f1-2d36-4476-adb4-42c33a9037a0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3c2de95b-9014-4a19-9f71-2922b60d3846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649907ba-ed42-4bc4-9ff6-b128a7865105",
        "cursor": {
          "ref": "9abe879a-e6a8-45ff-8652-3226e1be0597",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7920a1de-2a21-468b-ba96-c620d48aeb37"
        },
        "item": {
          "id": "649907ba-ed42-4bc4-9ff6-b128a7865105",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "39933c91-5a54-4849-b614-6e26646af233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619e36d5-c554-4d71-afc3-7b671f55be3a",
        "cursor": {
          "ref": "c90f4052-ffed-4dc4-bb36-8ae949af1ef1",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2775d3c2-c9cd-4809-83fe-a1a72659d42a"
        },
        "item": {
          "id": "619e36d5-c554-4d71-afc3-7b671f55be3a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "be2ea942-5b10-4d25-af29-9649be63efd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794bf509-bf1a-41da-987e-ccc3bec2535e",
        "cursor": {
          "ref": "56f493c1-53c2-4324-bc43-42726d649af8",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1cd5662b-009f-400a-84e2-80543fc1273f"
        },
        "item": {
          "id": "794bf509-bf1a-41da-987e-ccc3bec2535e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a1ec81ca-5749-44be-8833-806f2241f6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2561a6-2a22-450b-886e-c6a4fcb75a04",
        "cursor": {
          "ref": "828fe3f0-b7e3-4872-a8dd-372869177a2d",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "bbecf7a6-425e-482e-a305-795e4b83a532"
        },
        "item": {
          "id": "7a2561a6-2a22-450b-886e-c6a4fcb75a04",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fc8e38fa-87eb-49e2-aa47-6f27ca922bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021def77-59a6-4aa3-b549-f5cad670effe",
        "cursor": {
          "ref": "5575a4e6-4684-45fb-8684-9a4c41a24b51",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7f1e7f26-1ae5-496e-bc45-35a60048336d"
        },
        "item": {
          "id": "021def77-59a6-4aa3-b549-f5cad670effe",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f5e762fe-abab-4415-8f1b-c7fc1c84218e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57321a88-39db-4983-b74b-603689f84d22",
        "cursor": {
          "ref": "598d20cf-6a2d-44bd-a47e-1decffd096ae",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ac39f86e-dba8-416f-b9cd-e8a35b567b74"
        },
        "item": {
          "id": "57321a88-39db-4983-b74b-603689f84d22",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "38b24eee-be45-4ce4-b579-d6a52120d9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e0cf5d-7561-4ac5-9348-50eacd9e7bbb",
        "cursor": {
          "ref": "d1eb70c4-98f8-47e1-b14a-1ed6f0bd1fe4",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "abb49ec4-a89d-4488-b145-168cde9f2d3d"
        },
        "item": {
          "id": "05e0cf5d-7561-4ac5-9348-50eacd9e7bbb",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "81c02bff-909e-49f9-9698-a7a82833b510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec36c8b-b870-46be-90f1-c2536a3d9559",
        "cursor": {
          "ref": "e9709ff8-4667-4c53-861e-e645dba7e6a2",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1842347f-3b14-4b49-9d86-039f5b555e6a"
        },
        "item": {
          "id": "fec36c8b-b870-46be-90f1-c2536a3d9559",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "968c9ec1-c07a-4cd9-99c6-30c50fe33f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df270f3e-bf44-41c4-a565-e8dd056b046f",
        "cursor": {
          "ref": "4b94ba1a-cf0d-4bbb-a0c3-f85a4178dd80",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "31cabc64-6b5a-4b29-bdf3-f4922c5887fe"
        },
        "item": {
          "id": "df270f3e-bf44-41c4-a565-e8dd056b046f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3136b6bb-63c7-4788-bfc6-11a946040726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37911aea-b537-46c2-a0ee-7dc6a0fc91b9",
        "cursor": {
          "ref": "ca6a4133-2108-4cae-8b1b-6b5e17a88ac7",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6cd28862-549b-494d-8d7f-df928536dfc2"
        },
        "item": {
          "id": "37911aea-b537-46c2-a0ee-7dc6a0fc91b9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6f667d6d-3519-4769-ad20-f7d719ca7bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd610ab4-b22d-402e-85af-25b1d906d630",
        "cursor": {
          "ref": "f91e3e14-8f12-493d-a3ef-0961bef3777c",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a07538cc-d26f-4b90-a4ca-98439d3a225c"
        },
        "item": {
          "id": "bd610ab4-b22d-402e-85af-25b1d906d630",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "73a5b8b2-585a-4ca0-9fac-a28627ba7fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d6138c-782c-4141-bf83-f46f6eecabfb",
        "cursor": {
          "ref": "50936d79-c418-44ac-92e0-9dceb2eed0ac",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "abd93d46-9f14-4062-bdb4-1ab9b9945251"
        },
        "item": {
          "id": "d2d6138c-782c-4141-bf83-f46f6eecabfb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a15497b8-3849-4cae-bcd3-7398b95bde7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68985525-bfea-4641-a37f-da895cecbb09",
        "cursor": {
          "ref": "a693d228-37bf-4bfa-beaa-2dc84efa54ef",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "028eea23-8d5c-447a-a8d1-0ec0c9ad5e1b"
        },
        "item": {
          "id": "68985525-bfea-4641-a37f-da895cecbb09",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "de5706e2-ade3-4aef-b05e-5eb16cc4ea66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e25a389-d7c2-4d65-a499-fd208fd30634",
        "cursor": {
          "ref": "550767a3-0981-47fa-a253-b835296b4eec",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "99274cc4-1211-47eb-a9c8-bc8487dedee2"
        },
        "item": {
          "id": "0e25a389-d7c2-4d65-a499-fd208fd30634",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "98491d7f-94f6-4f67-9fa7-1b366be19283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70e74c5-0bea-4e2e-9fc3-758867e11637",
        "cursor": {
          "ref": "73049306-14e9-4085-a5bb-fef85be8b751",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fe6e2a2d-55ee-4d0e-a4a0-8258400ca510"
        },
        "item": {
          "id": "b70e74c5-0bea-4e2e-9fc3-758867e11637",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e4deb91e-3ddd-425a-80ed-775e1497a368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5d079a-a22d-490b-91bc-b5b688e1f975",
        "cursor": {
          "ref": "7cac89bd-378b-4c42-8e63-c935679c413f",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e5f2630e-9c64-46f6-8407-488e735d10f4"
        },
        "item": {
          "id": "2e5d079a-a22d-490b-91bc-b5b688e1f975",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3b92df6c-a594-463a-936e-09298ec2226a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956031a0-6ba3-4358-8852-3c088fff4eee",
        "cursor": {
          "ref": "d30666d7-5592-4b99-a3d9-14d5fee0c649",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c32dae07-751a-457c-9a81-ef9f49cbfd12"
        },
        "item": {
          "id": "956031a0-6ba3-4358-8852-3c088fff4eee",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ae3e95d2-705e-4158-a8a7-3c40b0448c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22c5da4-7aad-4a56-98c4-2525d5b9eb7d",
        "cursor": {
          "ref": "afd061f5-bb8e-4f12-98cb-2ebb1661d9d9",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a60a964a-d074-48ad-aa92-87336eede1e6"
        },
        "item": {
          "id": "f22c5da4-7aad-4a56-98c4-2525d5b9eb7d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "00283401-5f05-4bfc-9fbe-13b8dc704b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3e2a92-c4e1-4d4e-8b60-ff403a9f4e62",
        "cursor": {
          "ref": "d42ebbb6-d978-46dd-a3fc-2e2e9c296c42",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d1e0b8a6-2459-4e44-9ede-b9d5f98fcbc0"
        },
        "item": {
          "id": "ed3e2a92-c4e1-4d4e-8b60-ff403a9f4e62",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8626a511-2e44-4a8e-a0b5-a2a8ee9af6ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fabccc-4ac0-4e59-8a3e-0368f4bf08a3",
        "cursor": {
          "ref": "6969f5f9-fe5a-4e40-a462-d8e4be01e210",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "70bb5af8-cab5-43fd-938c-f09c7156cb90"
        },
        "item": {
          "id": "c6fabccc-4ac0-4e59-8a3e-0368f4bf08a3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7e60c394-f830-4ce4-8ae1-04d1cc81e8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17290f92-73df-4de5-958f-d4baedaf75b4",
        "cursor": {
          "ref": "42b9c8a4-508a-47d5-9bf1-b0e1f0e1daab",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a86cfde8-519a-4988-904d-000e7a80f4c3"
        },
        "item": {
          "id": "17290f92-73df-4de5-958f-d4baedaf75b4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "07730a27-ebf1-4cf6-80e0-0019752e2647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de878b88-ea17-4fb5-bd6f-91cda83e8b57",
        "cursor": {
          "ref": "2e40b972-6602-4953-bdac-f974ec4146c1",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0958ff7b-db50-43c2-9b80-4431245516d2"
        },
        "item": {
          "id": "de878b88-ea17-4fb5-bd6f-91cda83e8b57",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0ee6c302-1d57-4860-b02d-d5f68c6c71d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c09708-342b-4a87-9a99-de636f04f86d",
        "cursor": {
          "ref": "8a9ac499-ec14-42cc-b97b-e484d747df61",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0126ba14-e491-49d1-bdd1-a23da378f581"
        },
        "item": {
          "id": "89c09708-342b-4a87-9a99-de636f04f86d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ddb7b368-8158-4192-8026-df525f4e1e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1656ba10-7209-40e0-9e30-fd0133b91f8f",
        "cursor": {
          "ref": "2ff0fd70-af6e-438e-be5d-45a1262d154c",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6b90c744-93bb-4c9c-9b00-4e4dcc1be3f1"
        },
        "item": {
          "id": "1656ba10-7209-40e0-9e30-fd0133b91f8f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a7c1ea7c-5834-4e72-b10d-03880dcb0a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957da55e-9372-4ac3-82c3-7933ead173cb",
        "cursor": {
          "ref": "66520704-b6dc-4cba-95d9-d921dfb58526",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "fe099bcc-ee00-4c75-9ea5-c7866a92fb94"
        },
        "item": {
          "id": "957da55e-9372-4ac3-82c3-7933ead173cb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e694074a-f6db-404a-a568-d0bf7869ce6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b1f1da-5c4a-409c-9c0e-06b480c13ec1",
        "cursor": {
          "ref": "74613718-b3d9-42c7-815f-88b2bd987180",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "822e361f-c56c-412d-a738-58f2c57d76ec"
        },
        "item": {
          "id": "40b1f1da-5c4a-409c-9c0e-06b480c13ec1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d4dbc3de-3bc3-4ea7-a54a-b4798f2e91d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815f2981-8c56-4c38-bb99-25f18f11d3a0",
        "cursor": {
          "ref": "79644bb2-7b56-4237-8150-34e011472b4a",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "faa9de05-b3b4-4c27-a553-daf29744be2f"
        },
        "item": {
          "id": "815f2981-8c56-4c38-bb99-25f18f11d3a0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6c0bb893-849d-4328-bc09-71ef18025f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e19ccc5-58b0-4704-9d34-6588ed22db78",
        "cursor": {
          "ref": "1a31ca21-f390-4bca-937e-ad115890bc8d",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d3113589-530a-40e2-9b69-55fcc3e015d4"
        },
        "item": {
          "id": "5e19ccc5-58b0-4704-9d34-6588ed22db78",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2ee392d9-6ab5-48a1-985c-80e7cf3326fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae4e9db-8a09-46d9-87d4-16795884d00d",
        "cursor": {
          "ref": "ca990662-3550-4c40-b8cd-5bd5893b68e2",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ebf66015-3c0b-4bb8-b63c-c7985192f5c1"
        },
        "item": {
          "id": "4ae4e9db-8a09-46d9-87d4-16795884d00d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "dec0a1bb-5810-4036-8081-2fc6ee4d2da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f581c8ad-eefe-468c-9bc4-a21314543787",
        "cursor": {
          "ref": "b893ad7e-45f2-4705-a898-547a59f91a4d",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "abc81d83-3558-45a0-b801-7ee854d98308"
        },
        "item": {
          "id": "f581c8ad-eefe-468c-9bc4-a21314543787",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "55b9cf79-bd89-404f-84cb-938b41c12174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f78200-1d19-401a-9842-764302e11c5c",
        "cursor": {
          "ref": "71c46cf1-9972-4eba-84a1-a91463012b83",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "18479db0-474b-48e5-8d5e-c5942de5f1f8"
        },
        "item": {
          "id": "e7f78200-1d19-401a-9842-764302e11c5c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "666dfc90-9553-42a6-a259-c4cfe294074b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2eb8c2-abbc-4d70-8e93-9b1d383b8ce7",
        "cursor": {
          "ref": "77da84f0-c5d9-4a90-8a86-48ea7afc6d38",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9e7d09ce-428f-4d8d-a1a3-e95ff989b19a"
        },
        "item": {
          "id": "ae2eb8c2-abbc-4d70-8e93-9b1d383b8ce7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9d932a0f-f66f-41f1-8d5b-3066456ed38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18008c3b-7c42-4f89-8ea8-ba63fbf2d552",
        "cursor": {
          "ref": "b5f54afa-3788-412e-bbbb-8750946b1614",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b3c00ef7-5652-41a3-a55d-c31a09b5f066"
        },
        "item": {
          "id": "18008c3b-7c42-4f89-8ea8-ba63fbf2d552",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1160ba72-5c52-4140-b1e4-36e4bb66cff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd262ac-9e42-4f51-8bdd-be72447a1f27",
        "cursor": {
          "ref": "6c35247f-90af-43d6-94fe-869ed3ae1384",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "41a2cdf4-bc33-4d1f-862f-2156ae4a0f43"
        },
        "item": {
          "id": "7bd262ac-9e42-4f51-8bdd-be72447a1f27",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "fa27f424-daee-44b6-93df-820cfe22cf30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483cb16f-f1bf-4582-941b-c71a07ae2d38",
        "cursor": {
          "ref": "65c8e281-42c7-488a-88e1-9fcaebf0cd32",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "166c2b54-9d74-4c66-aea7-d0462d949caf"
        },
        "item": {
          "id": "483cb16f-f1bf-4582-941b-c71a07ae2d38",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2b9dbcbd-5b3e-4731-8f41-a1b47943c13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96937fd-9c39-40d4-bea1-4c2d56c1305e",
        "cursor": {
          "ref": "fe8c59b3-3140-4c56-be85-b88caad8c093",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e0f3038e-100b-4431-8e8b-87afa0f98dc0"
        },
        "item": {
          "id": "e96937fd-9c39-40d4-bea1-4c2d56c1305e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "61f000bd-3c69-4ec2-81fd-f03f318f18eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461ed85f-d512-492e-964f-7bd749be1a66",
        "cursor": {
          "ref": "0003a386-8438-47c2-b71d-cf69214e83e2",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "60e778f5-5cf8-49ba-a6ec-7c3a84e7b327"
        },
        "item": {
          "id": "461ed85f-d512-492e-964f-7bd749be1a66",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2cc4dfe3-0560-450e-9b7d-9b9a70fb579d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4eb8c71-acf7-46c0-9fe5-b1d4f1b21c4e",
        "cursor": {
          "ref": "97923e23-d7c5-408e-92b4-8a68c258179c",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "00b82379-8171-42c6-893a-68611a61783b"
        },
        "item": {
          "id": "f4eb8c71-acf7-46c0-9fe5-b1d4f1b21c4e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6f09397d-a8c6-4c34-a19d-12bde0733a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6dbf323-4bf9-4adf-ad5d-f5511830eaa3",
        "cursor": {
          "ref": "36caf5d5-f7ef-4b4e-8a01-d7998a324250",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b67dfe02-2dd7-4b22-b6ee-73b0cd3d17e4"
        },
        "item": {
          "id": "b6dbf323-4bf9-4adf-ad5d-f5511830eaa3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7ae2e9b9-60c9-44fb-b703-d722d338abca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced282b5-6b26-4ce7-9741-1be86b95d7e0",
        "cursor": {
          "ref": "6b0a3ce8-28e3-4c82-818d-f00b404fc2db",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "34499cdc-cae3-4747-9f8e-eebce012ac3c"
        },
        "item": {
          "id": "ced282b5-6b26-4ce7-9741-1be86b95d7e0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6f6cdd80-0b8d-468a-9efa-e1a69748991b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abae666-65af-445a-bbe1-71f650db6b54",
        "cursor": {
          "ref": "0dc229f9-5296-4269-b006-51db9387bebc",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "25c4dd65-a11a-49d7-ad86-52b618821f1f"
        },
        "item": {
          "id": "7abae666-65af-445a-bbe1-71f650db6b54",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d50f0a3f-5e8d-49ca-9d73-ea96b9a3d1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf156c4-d5d2-4f63-9b20-fee137d8a16f",
        "cursor": {
          "ref": "b0c494d0-65f8-4111-b07a-3241dbe116b6",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b4657346-8425-458d-a5f1-be86d55caee7"
        },
        "item": {
          "id": "1cf156c4-d5d2-4f63-9b20-fee137d8a16f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "15ad2856-e1d9-444e-8ec4-6bec23ca8976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbaac58c-3480-40fa-9862-cb45d59f847b",
        "cursor": {
          "ref": "eee99f37-8303-4ed3-981b-def1a203f9d9",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "46450872-5714-4976-91f0-db8f1a5c1075"
        },
        "item": {
          "id": "dbaac58c-3480-40fa-9862-cb45d59f847b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e627a691-14c0-43cd-b038-2f3809851719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa30928-de8f-477d-8f4f-dc8723766426",
        "cursor": {
          "ref": "ec7bc071-5c2e-4a52-b305-15fc07f05c1b",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a7721ab4-0ef7-477d-aebf-d44210d96408"
        },
        "item": {
          "id": "dfa30928-de8f-477d-8f4f-dc8723766426",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "18522e82-d2ae-4507-baca-e61a397dfb47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7459f5fb-1ecb-4ba4-bf45-94a1eddccdde",
        "cursor": {
          "ref": "6f96e438-bd8c-4fb5-b94f-ae83d5f66019",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b46b5c41-073a-491e-9a26-265e610e20d0"
        },
        "item": {
          "id": "7459f5fb-1ecb-4ba4-bf45-94a1eddccdde",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "57b88689-88e1-4435-93d3-6162ab26d9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d74176e-79bc-4c31-ad43-e9cae325f68d",
        "cursor": {
          "ref": "8ffd4700-7edb-49c7-973b-41f0235b868c",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "fc769305-64a7-4bcd-9907-e26d9c7c0513"
        },
        "item": {
          "id": "5d74176e-79bc-4c31-ad43-e9cae325f68d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "55543f82-d721-43c0-82cc-b18707c70d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8906794-28bf-4cf6-9156-1bcf9ff61648",
        "cursor": {
          "ref": "f4895c73-3b26-489d-8752-cf0c3cf1475c",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "edb6e525-3470-440d-a230-b09f8019a72e"
        },
        "item": {
          "id": "f8906794-28bf-4cf6-9156-1bcf9ff61648",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e9547477-2a2b-4069-928f-2d309497d2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75bcc555-39e2-40cd-81bd-4da1184e2fe0",
        "cursor": {
          "ref": "b1ff4612-4375-44ac-9993-6a0157ce0043",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e0d95e9a-8428-48db-bfab-18f3548c21c7"
        },
        "item": {
          "id": "75bcc555-39e2-40cd-81bd-4da1184e2fe0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "83395f02-d0e9-4b97-90a6-7bdb4c41061d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f55d94-b680-461e-92c7-2530c1eb04ab",
        "cursor": {
          "ref": "ac271e9a-3259-4b60-b7ea-9fa5d8338270",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "5529542d-9ba4-481e-af93-7eb85381b438"
        },
        "item": {
          "id": "89f55d94-b680-461e-92c7-2530c1eb04ab",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ff0f23da-41bf-41ff-aead-05249ee75fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b9ab52-cdb3-4b7a-958d-c3e7d170c03c",
        "cursor": {
          "ref": "522a1a4f-3fc6-419d-8a6c-6133904b086e",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "8a8c1739-4788-4ff0-bbe2-0adb56cf4055"
        },
        "item": {
          "id": "36b9ab52-cdb3-4b7a-958d-c3e7d170c03c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4f5f4740-5366-4cfb-8a7a-611ab35f04cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e091434e-e0f6-450b-9cd1-8354961bc3f2",
        "cursor": {
          "ref": "9125c2cb-b0fb-4c3c-a6f2-37297926e818",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a24e4335-7ee3-44f0-8d9a-43140704e799"
        },
        "item": {
          "id": "e091434e-e0f6-450b-9cd1-8354961bc3f2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4d59df90-f036-449a-916f-65d4d088b458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc35c82-a7fe-4f67-bdb8-29c90c231412",
        "cursor": {
          "ref": "ebc36ae5-5f1a-4d98-a6d0-3f192c874698",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a0e686ea-005b-44ef-adfb-a86f77691239"
        },
        "item": {
          "id": "9bc35c82-a7fe-4f67-bdb8-29c90c231412",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ceb0a323-5218-46eb-a0e1-50c0e3413b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4ead86-636c-4cd2-a392-3633423eee72",
        "cursor": {
          "ref": "c969f6cc-9391-42b7-827c-cdd0846751ba",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3bdcc397-96ea-495c-93f6-8eb9a51d52b9"
        },
        "item": {
          "id": "2f4ead86-636c-4cd2-a392-3633423eee72",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8290b00a-ac0b-43c3-bfef-730f9c469519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0d0ebe-c85c-44f8-a2e1-a8a631564fbe",
        "cursor": {
          "ref": "260a3f49-8a0d-442d-a88c-7067d5b1cb9a",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d9f11d65-4072-46c0-896f-3dd778422217"
        },
        "item": {
          "id": "ab0d0ebe-c85c-44f8-a2e1-a8a631564fbe",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6a106732-4580-4c1f-a618-4878dfb9d0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c7f598-b07c-4eb3-a96b-95d9c5e7001c",
        "cursor": {
          "ref": "f8956697-530f-4ed5-9765-61a6b8864a6d",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "45f49014-0a26-4c3f-b295-03368adcde73"
        },
        "item": {
          "id": "57c7f598-b07c-4eb3-a96b-95d9c5e7001c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b261603f-73e8-4304-b540-46643507e5f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bb2346-5871-482f-851e-c65b22f4f7c3",
        "cursor": {
          "ref": "9484d634-0ed6-4725-9474-d8f7d3f0eef4",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "5229f470-eca6-4ed4-859e-b1bff0ea53c4"
        },
        "item": {
          "id": "b2bb2346-5871-482f-851e-c65b22f4f7c3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "74368c56-e717-46a1-9ee8-6e90f524a29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224c2420-3020-4e9f-b6af-554d249d7d91",
        "cursor": {
          "ref": "0c21c965-3f99-4f32-8c7b-5aba21c85edf",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "0fe2e04f-e694-4713-bd46-3e6cd13012f4"
        },
        "item": {
          "id": "224c2420-3020-4e9f-b6af-554d249d7d91",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8705739c-cbaa-442c-94f7-68744bc339c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a355404-ba3c-433e-93d2-bd7648ef7e6c",
        "cursor": {
          "ref": "88d1a89d-22a4-413b-a71b-b7cb1098361a",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "0b82bb89-2b9c-443c-9b66-7a663d7f3ae7"
        },
        "item": {
          "id": "2a355404-ba3c-433e-93d2-bd7648ef7e6c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1456c1e6-d67a-4bbc-8ee6-35eae84d39e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92604ffa-feab-4e1f-8d61-2f000068d58d",
        "cursor": {
          "ref": "a879eeb9-c8de-4fea-bb10-59bfd34eb98c",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "7246f7ab-1d2c-4bec-ad58-10d93fc213a7"
        },
        "item": {
          "id": "92604ffa-feab-4e1f-8d61-2f000068d58d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0d3b3677-2692-4aba-b4cc-47f356bb7a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950a16b2-fac7-4ff0-b46b-4edfce9047f1",
        "cursor": {
          "ref": "873e6b6c-9739-48ba-91aa-7484497ee665",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "0a58435c-5124-4adb-8361-aef29c21ccf2"
        },
        "item": {
          "id": "950a16b2-fac7-4ff0-b46b-4edfce9047f1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d87e2240-69d8-485c-9f6e-c5c34409cd85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56138895-b74c-4579-9477-df1bc49bc7ce",
        "cursor": {
          "ref": "efed2259-48d6-4451-8c65-5222951ac3f8",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "81d049d8-d3ce-4f73-9319-3ce5b931da7c"
        },
        "item": {
          "id": "56138895-b74c-4579-9477-df1bc49bc7ce",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "407b65b7-8e88-4885-a82d-b143b5a4f245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d25350-f46d-4b1e-ba5c-ede4797c9a67",
        "cursor": {
          "ref": "83374ea3-39fb-4eb1-ab2e-43fd8052363f",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "becd3f71-7791-45eb-9337-59fc0d9f274a"
        },
        "item": {
          "id": "40d25350-f46d-4b1e-ba5c-ede4797c9a67",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9884164b-6bf1-4115-bd72-9ffbfad5f735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbb0e6e-5dca-47ca-a987-d26094a9bf27",
        "cursor": {
          "ref": "a23ff6a3-eed0-43ae-a805-6a32253773f3",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "14b117aa-7ab9-4314-a25f-485870149839"
        },
        "item": {
          "id": "5fbb0e6e-5dca-47ca-a987-d26094a9bf27",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "23c0dc20-dc63-4d35-ada2-5c9dd983fa9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac68c12e-ed27-4e78-86a0-c7306996be72",
        "cursor": {
          "ref": "c8664210-3938-4f92-bc8b-827f4ef8ca75",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "80486098-b2fa-4dc1-9509-56e621acb433"
        },
        "item": {
          "id": "ac68c12e-ed27-4e78-86a0-c7306996be72",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "81f1cd9c-eeb9-4cef-8959-7fbd3f94dbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f37529-a9c4-41b0-b7db-c148d6555d39",
        "cursor": {
          "ref": "944dfc3d-3693-4083-a621-09d7f983859e",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "1783e2c0-21fe-4e1f-bb1d-6a46916d859f"
        },
        "item": {
          "id": "06f37529-a9c4-41b0-b7db-c148d6555d39",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f6bb633b-2f42-4925-8c1c-df5584a63f7d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380ad9aa-06ce-4660-87cd-d2982ac3040b",
        "cursor": {
          "ref": "c56e81f9-077a-4572-9ef8-ecc414245513",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "446a5205-96b9-4012-a264-0588b7edff3f"
        },
        "item": {
          "id": "380ad9aa-06ce-4660-87cd-d2982ac3040b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d1e6e910-c886-4e69-8bf0-222036cccba4",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0bdbcaf-6660-44ae-bd00-8cbcaabd165e",
        "cursor": {
          "ref": "1e73470e-f29e-4816-bbad-a563d38fa526",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "4678b523-b0bf-4bf5-a4b7-8d8e69435803"
        },
        "item": {
          "id": "d0bdbcaf-6660-44ae-bd00-8cbcaabd165e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "77fd6920-c9e1-40c0-b836-8506e8c6ed25",
          "status": "OK",
          "code": 200,
          "responseTime": 1545,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b65af6f-8a4a-4007-9c62-891bf81c1cbe",
        "cursor": {
          "ref": "0c540d48-e81d-416b-b326-31137b867ea9",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "811b038f-c1d5-4416-a1cb-e7f7f40f94c8"
        },
        "item": {
          "id": "8b65af6f-8a4a-4007-9c62-891bf81c1cbe",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "02f90fbb-7d7b-44a5-903d-a8b1405c3a29",
          "status": "OK",
          "code": 200,
          "responseTime": 1522,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e4e72e-62bc-44b5-b552-9ca506b0c9da",
        "cursor": {
          "ref": "83d127da-4f01-44aa-8e22-83a1bedb080e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3313109e-708e-46c4-8cba-6e30d9ce27bc"
        },
        "item": {
          "id": "f1e4e72e-62bc-44b5-b552-9ca506b0c9da",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b7f92c69-28d3-4103-be3c-5ac1a9e89be9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e4e72e-62bc-44b5-b552-9ca506b0c9da",
        "cursor": {
          "ref": "83d127da-4f01-44aa-8e22-83a1bedb080e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3313109e-708e-46c4-8cba-6e30d9ce27bc"
        },
        "item": {
          "id": "f1e4e72e-62bc-44b5-b552-9ca506b0c9da",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b7f92c69-28d3-4103-be3c-5ac1a9e89be9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498c9c5d-e5c8-4118-8987-f8e822598211",
        "cursor": {
          "ref": "cb972062-6965-4309-b4c7-e94ad919d725",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "dc7c9134-e764-4f6d-892b-275f577c6039"
        },
        "item": {
          "id": "498c9c5d-e5c8-4118-8987-f8e822598211",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "de17487c-c70f-414d-881f-7e6b94d7cbb1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ba78bc-9e22-456a-a1f7-ce4a392935b2",
        "cursor": {
          "ref": "fe49dc9c-53cb-46d9-9062-600d188a1d8d",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "b865575a-fe1d-4451-bf2b-ffde73a5ba08"
        },
        "item": {
          "id": "d0ba78bc-9e22-456a-a1f7-ce4a392935b2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "41ec2629-7cea-4bcb-a360-09d9a976968f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}