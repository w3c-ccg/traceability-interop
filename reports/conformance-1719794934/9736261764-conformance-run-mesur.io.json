{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "01994ea7-f8ee-497c-b0d5-a10b0863336b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "877b7c39-b8d1-477f-be04-451c460f2f88",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bfaa235b-4b63-4fd1-a7c7-3388f8ed4e33",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5f3ab318-cb9d-4134-8dec-919cba930b32"
                }
              }
            ]
          },
          {
            "id": "d230c2a9-1b68-46f1-9b64-ac6f7e45da24",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a38842eb-0665-4d59-80ea-db6dc02f7d2a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a4abdb96-865d-4340-825f-8a6b509cb832"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ac3a8b36-ab4c-4255-ac4b-bad5f2ea2feb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "424a6fb8-3f5d-4e3c-9742-6d1acbefc58c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eeeb369f-9a32-4557-9278-d750e66bf795",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca1c7015-da38-4188-8ef3-14279d1f0fbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b8005904-383b-4816-94d8-cc6527de410a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d11a2538-e632-49ee-9a71-0fa56ec1aec8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a0f0121-151d-416c-a202-2021818fb07e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "37818122-3c16-4e56-87b9-e5cb0d903a61",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a934ebc3-f5cb-4f52-ab4e-7da0d27a3210"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "326cf450-230c-4f8f-9490-508eaa4b9258",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8765886e-f089-472d-92f2-ee1b577e7464"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d28f1d3-9c35-483c-b281-1a688302e8c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f0e084e-7f74-413c-8600-c67b14a79772"
            }
          }
        ]
      },
      {
        "id": "022a2b9b-e1d0-4d4e-88e6-cf9bc807897d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "45afe434-838a-401d-ad46-dfb518a9dcb2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4f07bb49-0fcc-41fe-a6fe-82cb0bff8fb5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9bdada92-f3a0-459b-b209-56fb2412b2d3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c25c10f-5a46-4f83-ac9f-0cab5cb83f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfdd6615-0804-4827-8a0d-14f2f3893bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d4c320-328e-46f0-8d07-b9ee8f4145e5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4484745d-9a0a-4f4e-b699-a1603c3c4713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f18c5ee1-3d99-462d-a411-eff256ac5c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5d9a87-57ef-4622-83ce-e42d1452e34c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2afe135-6e8d-484b-a514-01ab6fd13c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2116c77a-e17a-4055-9477-a75cf543d8e0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5d10d716-6a0e-4cb3-a3a7-f2219a7f2548",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ee10546-d3c7-463d-85c1-f576fcfe58c4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d01e2ee-bfc4-482e-80ac-cb271de6a6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c550b764-71fb-49ab-ad52-85745931a2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2019ae28-8396-4e9d-b8b6-5c9f2b912de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b95a693c-0df8-49c5-ad36-efed23305cc2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6ab5e30d-1148-4e59-bac2-2fdf4526dedc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "96183379-6204-4cf1-9e5b-d462cf62b596",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7fa2dff-8191-4810-a5f0-bf1703cd47a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5d3fc3e4-c33f-46f0-a465-3bdb9161cf30"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d5c259e9-7857-43f9-8679-34a5eff279c4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b5aaef1b-04d7-4a3a-9c90-61b68fe8751d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8e88868-e0fb-42ab-8140-f04dcb6af9db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cb4cb635-2a96-49d3-acc3-b67eb7cfa022"
            }
          }
        ]
      },
      {
        "id": "7fac8d15-276f-4b4c-bdb1-f485b7bc79df",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6a2bf821-cbdf-48dd-b046-7d80503a3f19",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ebda1dd-e7ff-48ad-8254-d54ffc70c586",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "230dda98-537f-4414-bdf6-927d898c8c5f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b63a2d-3c18-4249-9f5c-bcca72cec6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e00bf0-35c3-4467-b699-d92144ff8bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057298f5-ef6e-4bd5-8f7d-62eaa74edacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dee56caf-0931-4e27-89fd-77cc04c8c40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31f53e8-a23f-410e-9713-74b86d88fff9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40244820-3a4c-4daa-9fd4-a1e308971715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02e5eeae-1bcc-4858-8d88-1622d6329809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862477d3-c5af-4ff2-b14c-af89b050beed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "516679e7-1002-42e6-927a-4bfe0ad3e404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1eacb06-be5c-4d15-9cf7-29c8175b361f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179bc682-16b6-475b-b273-9e59ededfab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8cb24ed-fcc9-4564-8da8-af46cdef212d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe561f8c-af40-41cb-b26a-ab30d3dcd1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c02d0878-20dd-421a-a5c1-4784c5fc6658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f38fa0c-1dcb-4221-8c1e-a9b00ed4ed6f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0901faa1-51d6-4d58-b7a0-9cf1d44b451c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d65b01a3-4ed8-4c8b-b787-407b7bb0fdec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e93e8f3-e715-480e-a8c4-69675a7930ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e539b3b-9053-4e38-afca-e2e2c806c2bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2f9284-933a-46f6-961f-8629ad908822",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4950ca-d0ed-49fd-a418-e5511f4d64a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f3043b0-576a-498e-8646-1e50c585c379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd73aa1f-714b-413f-bd18-085ad158d422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a21a5e8c-26a9-4fc0-98cc-e02e9f04ba26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e73f554-af3a-4031-a28f-885858c85237",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b3a521-0699-4a6b-bf92-40c277dedad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c157279-4d53-46b8-8ed7-8c123961dc90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038c7a39-e7d3-441c-816e-136c13cb7fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56b60700-2828-4557-bd66-9eec981d5873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3c1c7b-c49d-4159-b0b1-8d44b3bba252",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aea1c71-4bc1-4fff-a30d-1a1bced286d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef1d41d-9543-49e8-ad15-5c23b718eaad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81612eb2-c2c7-469a-8ab1-1b77d1762f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06a7283e-8f20-4292-aaf5-c1631ba1389c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f1dab9-2d68-4e83-accb-4ef1d9ac81e0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02128fd-b23a-43f2-aa80-389c13d30325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e122d562-773c-47f7-b6a8-df84bc243bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762911f2-fadc-40bc-919d-4380ae2ff693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b77b0664-80ce-422d-b975-7a609b01f3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dac2dfa-3211-46f8-aef4-eca85cb72f05",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f59cc74-9043-4465-9a3c-2a3fee8f7056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d1c0b91-e78c-4ed7-b2d9-d087415f5cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb14397c-c456-4df1-a2c2-90520fc11b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d673dddb-6c08-4aa8-b859-b849bab7c416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ecb54b-39c3-4546-8f66-2870e89f3a4f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09281ec-1b4c-4e6b-b721-deefc6619332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f38ce112-2ac3-4e0f-b57c-92a05fb5f98e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ef4e3f-a580-4a73-9c32-886327718886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "568b7771-f2c3-4b31-a39c-74867fd40959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0750b03-47a5-4c51-a8f2-ca5080351bb7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aafe543-7fe8-4da8-b6b7-789c4e86fdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1274528a-91e3-4f0b-a3ed-b543d0d3145c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2f38e1-ea96-4b99-a755-1c8cbaeb2ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6847a73d-5d79-4b06-95bd-1d9e743b8c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b074043b-4fc3-45a0-a23d-290f8c9819c0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521b2c41-5ab6-4d5c-99ca-5d4cb406459e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf593b7-b7c5-4545-b424-a618e636a75f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b70af1-7bef-4ddc-b5dd-aee6a79104a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c332b6f5-2381-4d8c-88e6-397634dedf52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f245d256-17c3-4907-9228-a418c3e11843",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e739deb-cd7e-4833-88cb-debc99f52c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23da8bd9-a822-4291-b5db-d578980864f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed1cfb3-b5d6-4325-b1bc-fb88c646f2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86c97dbd-0710-4035-bd83-3ca048cfad81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39dc904-b932-4a39-b8ee-e4d5a0582b66",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf530e8-a9e8-41ff-94f7-1f447cb1d4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aff2b55-ba75-4099-a66a-87b754acda22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3161b09-0610-4082-b68f-84c35e7dc8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "605e7448-9131-4a84-bf7a-a2beb3a9e06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e1c88a-4079-4fb8-8bcf-06d559109979",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dae4e8d-74f4-41b8-860a-5a907994276e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eaccf24-0bf0-4caa-b1f3-48fc1d9305de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052c85cb-4689-47de-ba3a-ca213f13d1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "368e6769-f33e-485f-978f-04c97a552645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce203056-0a75-4eaf-96e3-ce5d9cace652",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f191a684-e171-4854-8921-b509922dc047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b171f7b-f671-49d4-a454-7b59a9119afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ec7d27-07d5-4234-921b-d70875616512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28b974ed-0462-4a1e-95e2-1f6a8557cafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc3dbe4-ae2b-479d-8790-b74204dd494d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15be1076-0c66-49d3-8f38-b40ceec9cef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa1a6b0-4dee-4a78-a5ea-6156a2f3ccf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f534030f-3e27-4434-8463-03377c3fa386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a574eaa-0046-4552-9953-e8acbd869162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24124745-45a9-4522-aab2-d80b9891d568",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79c4170-048c-4034-af15-b9aeccd309c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76396e3e-db7d-4bc3-9180-23702ac655ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7221a71a-e2ba-4e43-9077-2d7d2f63c9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "24e423f8-50ea-4b07-b96b-be8a976d337a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2badf677-dd53-4173-a4b8-e38ae2128538",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c267774c-843e-4a42-aacf-36238b577a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea8397ac-158a-4ffc-b316-1a01a5482a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35a0168-c073-4049-8549-eacee2c38903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a870ded-7fda-4951-a7f9-f6817f67febc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096b422a-6a81-47f1-a7b2-40fdf72fb636",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "835485b6-c5a2-47a9-b62c-7a079cfe5e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9dda032-af06-46fe-a25a-bca5be377073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d5916d-c390-4e00-8894-ef2b06b60fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5983284d-1fb3-42ca-8e79-28b3fb653d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea4bdd9-4096-4844-9754-ca083ec7c617",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b6b944-e528-40fd-9228-b7b89f4b3e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272703db-de00-40eb-948d-fc110429e30f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a699b3fb-8465-4571-9b29-b2bbeb5166ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9661e580-c9df-4041-b877-b2412e7314da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7bf53df-9746-409b-b929-de2e7f558c97",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3553ae2a-085b-46dc-9bb8-8e3aa8fc0bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bddf5f83-89ff-4e7e-9618-6fb797a866c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29880c02-43b7-434c-86d6-3b3148772706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e441d818-e0d0-46bc-baec-23d996a82d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4a3320-a5a2-4270-ab87-c42f73aa0d44",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bc067e-5a08-4301-bf88-76c477384daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee38e236-98ff-4b5f-8e26-d18874e25870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031d8e6b-60b2-4d89-8eda-0f00389f7741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e19bdcc9-5d5e-4514-ad38-d4a07b734d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587611d1-8c96-4451-b7a6-8c9f4b7d62a4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c10d0a-8ba9-456c-9bd8-c6e8e7a418cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945be700-2000-4ca6-ac33-51f9f432549d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad68522-e755-4789-8028-9a263cc14602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfee6439-2d8f-4cae-8d96-7134f81a7dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e11c1f-93ac-45ca-9a34-60a1436dd94a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f766d6-96d6-4ff1-823e-8ea074eeaf90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fbc44e1-7fd6-4d25-a649-81e7e1ec4a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c3c5e1-cd0c-4929-ba08-4f5d33ab3323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "86b514e0-3395-4ee8-80ce-8a43c80fdff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c87b45-72f1-4c32-8e17-5ee38e5f3947",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f018c00-0fe5-4038-aed5-8ec2b0e3663f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb0f889-b93a-4ce0-afdc-0ecf1a69edf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4cf3e9-2806-4881-9549-0ec409f55440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e4ad1e4-c650-4fa8-9aec-1234482861c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11048f2f-5171-4083-85b0-cb8dad085943",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d731ec-3355-496c-8640-b9349d5bebac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3adfb2b2-6a9c-45f0-9ce4-a58ce2d0c09f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30376536-7e33-4f8c-97cc-e2f8aced96a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "494bbde8-e901-4311-8910-b4f0d60df90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8492cce6-c873-4567-82fe-f7aa11424b7a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ad331e-72e5-4e3a-a7bc-4373f3068dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed1e79a9-f76b-4b9c-b342-883303d83ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab12dd1-48f3-4cc0-8a76-6f156fc8facd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ef8a4d1-da64-419b-b78a-2f6436a6a730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9a9dc7-e9b3-478c-996d-cdd035faca36",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c32a09a-8174-4848-a027-3a7f0f305746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3721a8b0-3810-4e92-8a3a-18fb7e82567c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b96e3a2-c18b-414b-a61e-24b4193f760c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "74498c57-7be3-48b4-8f5a-525f2bdfa5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1380f6c-c6b7-49cb-a82f-3d7e86223cfe",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a0412e-8706-4885-8d8b-cbe142cd0741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60dbd08a-ed4e-4831-9fb2-7361e538269c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd3188a-d1d5-49ea-b373-649598a259cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d26ed8d-c538-410a-901d-3685001217c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744a649a-a129-460e-972d-0776a3e1353f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b42005a-f5c5-4f20-bed6-0a5b89cd60f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "826dc78d-68b2-40ce-8fc5-608df5327944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4a3dbf-f6c6-4e82-b346-d645d14abb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbeb260e-b2d5-40b0-bee2-c3f7440529ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42a16cd-1184-4404-80b9-f30772545c43",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd452670-cc48-49eb-a946-d4d31c31b3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a1fd001-5184-416c-b48b-188da4ff775f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7ebab6-aad3-4b84-b351-58312e8ce801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca579ab8-a34c-440b-84df-0da9e1679355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f82b061-005b-4dc4-948e-8305ffa866ec",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41460af-7c9a-43bd-9e9d-f6aca6e8b32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef93f1c-5fe7-4216-8167-ccfe48f295dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6287d5e-004c-4402-97db-90490442daae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38e641d4-1f06-4dc7-a8c5-f3443aa5cdb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4488f9d6-4d15-4906-891f-08a6958519b9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c56a6d-b76a-4d24-9de3-ab0d5270b490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6936fda-d5a4-418d-a88f-42d686f7b2b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f43435-c54f-4a4c-9b0c-67e8e225a7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60c6fd0e-6f8a-4f0f-b6d9-94830fb8c099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980b5950-bc9d-4676-b66f-a8df092f88e9",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd004c6-207b-40a9-bf1c-ad667df32da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "038fa7a6-65db-4c11-baba-806e2a2076f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d8490a-3fdf-4d37-b07a-908890276662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fb66f02b-93b0-4da4-8dd1-c4b6483709b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ff571f-3aee-43b6-be38-78ffc6aa8005",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da1dea6-fe4a-4742-a444-25d5c7c08062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e4f482e-b27f-45e0-be12-6bc5fd1eb45e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c845a693-68eb-497f-a86f-5f5e4afe83c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c32dfcf3-3023-4f33-aa4b-438b7a536786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7113ca-53a9-49c3-9a2d-3c35f2c86658",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c68b66c-9d85-4c4a-b6be-8b26826b973d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d9bfa2b-6acf-45c6-8073-b7e389d88f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2acdd7e-ce36-40c8-957f-5d7342e031f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a117d9-360f-482e-b7bf-a36bb9f0191e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88adab67-eff9-402f-9faa-ceacce327ef7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fd8a90-be61-4b37-8f53-e7cb08807622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b54870-eb5c-4b97-9dfb-25f89decacef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bd00c2-2077-4b58-9406-496c8bc6cb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc9d965f-bb4a-4d61-8ba9-45ee13b3fbef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3acdcb24-e41e-4374-adef-eacd297b0f53",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5db66a3-f99b-44de-b16c-58023ebd100a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c39f0310-e0d8-4610-bc3e-5272a81980b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc58f756-5bfe-45a0-9a34-212b84f563d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "698437d7-4707-481a-b059-84387a22a04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8c00e7-0860-4cf6-ac47-a7b70d6f1baf",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b90ec2-d377-4a6c-b56e-040168399382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a547875-eeda-4704-9b4b-aa01d3680fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091cc006-884e-4ea1-b320-28c7d64c20f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "90f5b3f7-ad5c-45d6-aa5c-27aa95f92059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7000ee70-2239-42ec-b0bd-14b9465b5e6f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7127fcb6-1749-4450-a6b5-8e53694eacd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9bafc32-8640-4e7d-890e-75b31b5c9074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21756aa-8f16-4475-9fc4-817e3b65a147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ef95ed-94dc-47de-b1b6-30fa19824163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7868871c-e576-408e-986a-9df5649ff1e8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91df5be-bd0f-4cad-8da0-354f605dd240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c05e5fb-21d1-4461-8e01-7bbbecd77cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc2410c-1668-42d4-b5b1-65f784361725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "cba6ad97-699a-4e00-a6df-7d922d5fcf7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3911a9-d8a1-4f31-82e2-dda3c4973e5f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00e0ba0-b061-4478-a201-33454786733f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4641326-e01e-4efb-af18-28f35a17730e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0347e2c8-aeb1-462e-9937-43c7155f9091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "01d7cd52-18b3-4627-96d8-170e4e63889b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7823eb3f-1aad-4edc-8511-e5373b4c8397",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f376ac51-aa21-4415-b457-c27958b7f281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f1926c-fccf-4364-92a1-fbb94591719b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f9ffac-52eb-4918-96af-0c4c16a39d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d79a7734-6c75-42af-b7ba-e81ba5b3df6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7c91bd-73a1-4dc8-a45e-8c78e056466c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "472462b0-2aa6-4fc0-94ac-584f07787631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113ef5ec-ba04-4aac-930e-128258e2a9c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d5ffc7-cb6a-42dd-9948-f1e27353c18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c83f13fc-311c-4c3e-aa57-12b4ebae5ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4aaea61-7f61-4a41-98e9-48b4916634a0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbd9217-a7da-4f9f-80ae-3d4980872f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad122b4-99f4-4856-9ace-ac20d61689b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575f7049-85ff-49ff-b150-e3d47e411a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2d806d3-05e4-4caf-b7ae-d2942d5cfe88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5604a6a-6d47-49c1-b55e-4383b6837789",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baec3c81-5c3b-40e5-8914-e66eb3233b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15870c82-59a9-4dc4-8c3c-a18971dff0dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c90d51-430c-4057-90cf-613fdad32eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc6b1aa9-66f0-4bc7-bb40-ff8f3a0aba17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c53e551-fa34-43b8-a3a5-c39d5f306309",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87fb2d4-44ef-46ae-9a38-fdea597b4c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9835660-fdfa-4c86-9555-11a3665156ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b43fdc-906d-4301-94cd-8f70b65fc9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb55c09-e2e7-4767-9e39-35bd0a9ea124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408bfb80-e416-4ede-8975-b3690d537ec7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5298cb46-1749-475e-babc-ed99bb5b9451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e2b696-d1da-4d98-b687-3b1ea1382c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26c6517-644e-4c31-b6ce-1f04fcc62a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "82f30078-5cd5-44d1-b79f-882d45f0ac30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64659d4-626c-4c61-b8b6-e0dc2e056a7b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55a4ddf-6556-403a-a78c-24aecee1dd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6c42a1e-d4c6-4768-b408-c5a3211f7851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d0bba4-f461-4fb3-aa0f-b43f5de8adc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ba2eeacc-d445-4d6b-b1f9-73ffccb8a24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54022c88-8763-46f1-8d18-482993328d3d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66b3dd1-27be-44ac-80e6-3a6b32195b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd538e15-62cd-4a29-8b56-5634ca352e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da64ef1-653f-4917-997f-1b6c41e6edb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c9bb40-7da7-4d92-994d-e1de9a611865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293f7409-b504-43a6-9884-c77667a7b4ed",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b7c49e-8f9b-4e87-ad9e-f3a0ef61baa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f554715-875f-4c0b-97cf-12782fd682c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ab3bb8-068a-4de3-bd62-f82725b66905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "125785ff-fa81-4f55-814a-860356cb31a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c8c3f7-4af9-4d6f-a8e4-1cafdf852c16",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3bb2a1-6ae6-4136-b245-f99293fd36f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2fd6b4d-f789-4bde-86e0-3daa48c77228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01eb460d-094c-4ab6-95b4-a2c5866fa09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2718407f-64db-4438-ac77-87d99a67b8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbd2cd3-8a31-44bf-9ffc-bada73022351",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8a2b5d-a6a2-4f8c-a19d-2eeefd0021e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34da61d-979e-4733-8837-10c09ec00d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68f3c81-4d1f-46df-9ee4-070b322f314e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9e8511b-9e34-4778-8cae-dd2b97b53b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127e9657-2f02-4966-84ba-f736465c37d8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41705024-e874-4196-8684-77e7aafd9ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd831bcb-6de7-4ff9-86d1-78c51e971f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b897cee0-5d84-4b3e-b35b-82d713ca2fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3da50f-25c3-40e9-9144-6a9f095bf451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01df85fc-e08e-41f8-855e-609c2f619aae",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d481f1b-bf10-4cad-9d25-5df42bf74955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b07468-7871-4427-b4c9-b767ad5b4e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25bfce8d-0dfd-4d35-b993-dbf84389631b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ed57a513-6333-4a30-9f67-a9b0aa545e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7dbca4-dddc-460b-9b66-570182396af8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05246e18-7c2e-4ff6-bf59-938dd0e7757e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e3e872d-ba45-41d3-bad0-b07e4640b546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14485230-5a32-4c48-a5b5-7477fe015d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd17f01a-6a51-4393-8f25-fad06cebd608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de68a7d6-9750-43fa-a0b8-f1628e44b34d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "462dc404-2a95-4b2e-8236-438177bc8c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d414c37-c715-4e58-aed9-82328f3169ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d812c4d7-0fac-4dc3-b985-da6702be63da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc60604-fdbb-48ec-a49f-58c69b550708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e35cc4-28f5-4675-b67a-955215282d83",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454040a2-6604-4bf8-95f5-e89749ed92c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35671e47-3115-4018-99e9-0c46a8ff9b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dabe3f55-61a0-4e9e-ad76-ea4194cafafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e891fb1a-95ae-403b-bce7-c644661be676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de027894-55c0-4834-a0b6-620de12a5a45",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a1f5bc-2e3c-4f86-8480-a9a7705d461d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f56203-7497-4b9e-9d99-96c439302e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ed5eed-27e0-4a67-af06-237ed547d231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f037fe16-cac9-4786-983e-cba0cd456b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480af006-9f0f-4a6f-8b6e-2620c66171c1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cff0a5a-d4ce-4f23-9700-5ea7c4dc5e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6641dc0d-31dc-4eff-a882-5f9cc4027feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93deb63b-2ddb-4d9b-997d-c93308d940ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b116c94c-36c1-4a5d-8ed1-1e20c7246c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b632b55e-1248-4789-ad0f-cfb29cf190c7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7a0a3d-fb6c-4a6e-9f73-182a9663f8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a52b822-77ba-4d29-8c28-88def8be3b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b93546f-2b7d-4e38-a72b-4564c69d0603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "37c52b74-7fc6-4440-b82a-e858431eb1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8732f1c7-296d-48ff-b039-2ed7775a8b5d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b28458-910d-4b85-b268-99a0e0544ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fbeb5e3-b436-4827-9be9-a5432a4c5e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af21667-0fbb-4769-b25d-3bbe225ee3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6edbbafd-9d70-42ef-bede-237c4c162cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8b991d-2f11-4c6f-a0fe-b495c77d0e05",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3a0d73-cae0-4d0a-9a9e-cb6156c7fb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "908a8b75-8d9d-47fb-9780-066ed47409c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045b7cf2-9ffc-43c9-bf66-52769d7070d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c10bc12b-f9b8-437c-a2cd-10c8941a44f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058010ed-cf08-4527-9ef9-76a9e1df1a74",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e828a47-f61a-478a-9346-9dc385377a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5157412-65e8-4508-b0e5-b78a39123902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fcb6c2-6312-4a78-9bc5-37c397e4ffce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98d5dd58-7d8a-4a2b-bbbe-d03d85b8e1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07095793-d26b-4b29-b6af-48b010c78eb2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97597812-66b7-4d3d-a7f8-9f9235c7f4a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4870e35-fc49-47f5-8c93-cdf2e2605e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e8c8e1-22f2-45fb-815f-59d5837de482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b896e61b-8d82-4fa6-9b0b-83ebcba3c9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04143b4f-aa89-45c3-88cd-c07ff18cb897",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b460f77f-fbbc-40c7-b5af-47b3f6179a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b0fc61f-5759-4357-8d11-142c06eb2751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0964d4-699a-47d5-a429-ae090e395f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9f2788e4-8224-4c89-abe1-a52e6f941adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b91ab6-1015-4d56-904a-75c4e1f0e938",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0319f288-5c8f-4b0d-a6cd-5a4e47090e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74ad9e4-07d3-46fa-980e-c1bed37027af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da48d762-5b21-4f5f-9f66-41f2ffb01f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "829a1ee1-a0ca-4a17-a97c-e6054b496546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3dc139a-eca2-4b0b-8082-866adcb77805",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666b6f13-df26-406f-8efe-0a9539a9ae1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29031fe5-8ec3-4823-8f46-e8a662e3a928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713c7226-d94c-4fbb-bec7-657817a42d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb2634cd-c488-40d1-a240-adee790c44b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7f4f5c-37a7-44a2-ad71-64972e6c3f2a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11326b07-4cec-4236-92ed-5c03dc6e17cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f659f4d-9cde-4dd1-9b1b-b1f95321755b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e988fdde-d5b2-4e8f-a88d-3b133dfae24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1021a1e-3b78-4079-916f-a72b915b8bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f6b584-689b-42a8-b91b-5557ffa36540",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4907b8b3-57c5-4bf1-a73a-349927087820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28ca4f20-1684-47d5-9a33-c214522b491c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c11782-6827-4b43-b2f0-342845173b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a593859-63e0-4bbb-a2ec-80179f47330b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11fe059-0e50-48fa-b39a-7fb7e5e3d8d1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5453740b-06f6-4836-a02f-3f3f17655426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9009e0bf-7942-4767-bce3-f1faecab870e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac4e698-f74f-4bac-9e1a-b441a7663272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a58e74b-709d-4ce1-84f1-d32fe83bb875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf97ca3-2200-4f7f-b3d1-c722694df4b1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "861c8b75-b76f-4551-944b-83f2e42b6918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c938c2b-d978-4f1a-b1ca-c2ee4d7c614f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3634b56-bc07-4ca3-b7eb-8375391caead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "480c80eb-498e-4c28-9955-d6e992046839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712c1f10-82bd-4351-9ece-0fcae146c9a2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fda69b-3c94-4dc1-b116-bb72638fad0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5df4ff8-bdd8-4f3d-8e76-dd718dab75de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b303164-7a00-4fc3-bc29-ca95825b75e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4319af7-9f07-4c56-a666-1e799f85ade1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eab66a6-9c22-495a-95ec-bb5d93e55591",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1dca34-37e6-4055-b99c-717a379a52fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cea10f4-aa68-476b-999f-4703cafbdf8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db726d9d-a2a8-46c9-812c-1ec42e10ef84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5946b935-3530-46df-9910-dd78c8aa50bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8d1d34-a93f-4ff9-896a-5c46eecfbfc8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0276bfda-9842-4929-9d2e-3ae8b75e38e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37891b87-35e3-4ba9-8417-9c7978788454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4c1129-ad2f-4a35-8dbc-3d1e7fd86f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9249c549-38ae-46f2-b217-810af57f6d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c7a10d-02c8-4a37-b099-f214459f6b17",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5001dc4-b169-4789-a7f6-959676bb7250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "227a7eb6-7ab8-4e2e-94c9-a7c7323b4d9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234448ba-18fc-427f-826d-796bce6c4c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bee5757b-dd11-4d0b-b551-abd484f33431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ffe46c-7dde-4d75-a0f4-fd2eeb7bcfff",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bfbcbc-06a5-4d9c-a5db-04e349070461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43c8806-e2b3-46f6-be22-38247d944e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b4f8b5-b963-4981-a132-0b45c207ce4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a28751a-dfc9-45d8-8d02-da4b17395936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdce2f46-e5eb-4207-8fee-4dda72cf0337",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9301f01a-f205-422c-99a4-aa3f28ebe816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c16bf7c-208f-4c00-9c1f-5df6c709cb77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d17b03d-741c-4e00-a079-cd3be6231874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b0998db-9f95-44c6-96b4-e70f539ff120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c192c6-9382-4cab-9d43-0eda9fa5fc33",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2a6e86-79dc-4c48-a64e-ab685e826656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d30e25b-9fc2-4c09-9cef-100603812632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f620f3-6d90-4556-915a-13eba3f6c745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "688ebe4e-679a-48a4-b18b-6aecdc2fcc80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149c576d-1e5c-42d8-87d0-5e3607291ac4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "017bbf97-cf4e-40a1-99ae-39435497967c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed2da9a-9c6c-4f53-9b6d-3736ee6369ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ebf7b9-b397-4bba-ba36-24a3ba51b094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "808bbf5a-6fd9-489f-9a63-a72acf549f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a03a5c-b7ab-49f8-aa08-b660f6d03ee9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e75343-0e80-4519-9a7f-4ad2ab2ff893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c6204e3-6706-4a5b-9b21-650ea756fea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa42842-484d-412f-b2bb-4f95e7ed6206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e17c7c48-0579-4fe4-8b57-1034dffee2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1557b952-2abb-4001-a311-057ebaa25fef",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec869d2-ec49-4870-b3c8-67ca16dd101a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c247cd2-1af9-4e98-bc2e-ac15192597bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1b5dab-418b-4cd8-9e60-a185ad83e813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74331afe-a621-4fed-9e6f-54cf9a456b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2cfe2df-f793-434c-baec-f0dca38372ce",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd936a7-4b79-4030-84a5-f496ca28bb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f156c8-e032-4170-a162-061359c37cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37d4d99-9b08-4f26-bc8d-7bba528a5a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15a748b2-bff7-4a02-8e20-ab430c7530ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62559da-a74e-48da-ac09-5c6fdb048ab7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050d5929-8cb6-47fd-a969-701214afad0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba135e2e-53d2-45bb-b72c-571c87be8b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb0bfd1-6449-4bc7-affd-9b7dd302bb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c0908d1e-53db-4f3a-80d6-88c47813254e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1351c49f-658e-44cc-ab3b-be7bf589a945",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7d3e4e-15cf-43d5-9101-08d3041e893d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7576a926-57c8-4013-b761-9a1e026bf559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4096915e-84c5-472e-a72d-80d9a4987c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9cec151-cfbc-4886-9d50-dd003098d0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ff220e-a636-4d01-8e7c-d7c500a842fb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "941c10d2-53bc-4d3e-8c25-83b507863abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2756c11-b1e6-45d0-b6c4-60d4acb2c6d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b228ec-f678-429c-a759-ffcb2da60879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b45e688-46a5-4da4-9737-6434142613ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b039f74-fcc8-4083-b1f9-ff42908c31b1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079d5550-b5a7-42a1-8cc1-03fb0682fcc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "885cc7f0-f13b-44e1-a460-5d08c8cd475d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35f01ce-a700-4c2e-a8b5-cce34259bc29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a05c0803-a18d-43d5-a3fe-1d9e120b071f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af78136-c77a-43f0-8ca4-fee9c36ce7d9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e777207-ec31-4ff2-a929-f6a16b542f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c376f3-ab04-433e-bae3-61559c6e77ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cce146a-9dbe-4489-8dc5-cd77cb5e185f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ed22d03-49e7-47e2-9ecc-332935360f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b343f4b9-462d-4fe9-986f-352511af9e4b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733acb7e-b45e-4605-b745-779cf943a14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d1da14-1c56-4634-9628-384faeaef254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66d3289-04df-4fdd-ab7b-ff5fe95e4fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c0aa49-23ac-42ca-be4d-7366cb2f4eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bea461-b47c-4172-b575-5b81d57a3a87",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0d4c67-8e2e-4cc2-9cf7-e5651a2f46b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "604ce9c9-29a9-4ba6-b547-fd423af18924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317d83dd-70e1-4b6a-aafb-c1ab29ec5028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2981554e-f14b-4890-8872-a2e4e8cb61be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4e8ff3-45c7-4a4d-9baf-1412e156d60c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377ace22-058a-4488-aece-e57de74d8fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f9961aad-607c-4e26-8f8c-d75fc62cc1ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f81c5e-60b1-4e6c-8f86-9a2aaae02af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "76ac98a9-e6bb-4709-899f-57fd7c18cd57"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "11a7e525-e484-402e-a15f-201a527f1a55",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a41395e-6a9e-4635-8367-f8fc16e4bf47",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fade33-f1a7-490d-b4dd-ccffc4ce2c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0fad5558-a9a8-43cc-84be-d36c247fd761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7effa2-0502-40a7-8df8-1c06382d1177",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f75521d-5b97-4521-a35f-f350077abe01"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53eb1e64-0297-4f01-b116-527649409edb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69ba960a-dc04-4076-8e58-d2c37c782962"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9195fe07-9137-4b1c-83eb-b8b7ce47cda8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a779260-005f-4b21-9258-2f6ed60fd12c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6c75f98c-38bb-4f9e-b8b0-9d358621e79e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "012fecfd-1fce-4b7c-997b-b2e0ee51284a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "434887ef-f335-4b40-a331-dfc73630f5be",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "23aca4b5-5ee6-456f-9b0b-75aad092470e"
                }
              }
            ]
          },
          {
            "id": "1a144d44-2eb4-4f6c-9900-5c8e55684f0e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7710259b-75b5-4ed7-b834-e70217f8afab",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "fafc6a84-5cce-41ed-ad82-90dc9aafffd8",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "091727f8-b17c-45e6-9771-bce4a5c34780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a64de3b6-eb80-405b-8ee0-850dd1c7a683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb52216-1fef-457b-a0ef-35718ae1cf19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c52fe2-b181-46e1-b115-167dc856038f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ed0e850a-1aa7-4599-bee2-cb2d6fee223a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59d6d92a-3b01-475a-bd91-c96e8ca94b64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91a6932d-e52b-47eb-9cba-9766c826372d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "635ff53d-02c2-42b5-8de9-644169d4ba3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "23743930-f9d9-495c-9dde-80fff9d5138a"
                    }
                  }
                ]
              },
              {
                "id": "ab6a818e-03b0-4b32-ab87-9a5a96f00163",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad7b3dd7-48ce-49e7-bf3a-0a4c366886bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "792a042a-4377-42a1-af90-6662a69b6c0f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90048f2c-b6b8-4893-8a83-4fcb32348bd8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "297db8df-5c0a-4ed9-95a8-f1b94cb0d2ce"
                    }
                  }
                ]
              },
              {
                "id": "6f6a7676-ae82-47f9-b5b4-20318df380d0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54cd034e-296c-4350-9fb8-fd9e3bb3294f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb85f396-9273-4d4b-9964-8f0ec749eeec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04ae7194-b508-4f8b-bab7-60ae9501fa18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "420e7485-85d7-4463-a325-ce7da18a32ff"
                    }
                  }
                ]
              },
              {
                "id": "94700eec-c7cb-48ee-8bf4-fd04b9cabde4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1368925-9e3b-41c6-8f17-2e4662331167",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a19df50a-4694-4855-a04f-b197d794b161"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02ace23b-58f9-4fcc-92ec-1d93a66f6281",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4068c93a-3288-4f70-b1db-9337e4bf9250"
                    }
                  }
                ]
              },
              {
                "id": "e1e4eb1f-f407-4410-aeb2-44d61e4d98f4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef1319ad-ff30-423c-9125-4ca75e77e2a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97d1d942-acc4-4123-9857-c6d81f9e9500"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "618d8141-a443-4bc3-87a7-1425e9f49eb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "787b5d57-bf11-4ddd-880d-66f3d4ad5ead"
                    }
                  }
                ]
              },
              {
                "id": "0a082606-d5a4-4881-9c68-4a5ffb04fa9e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13423c10-0330-4092-9a73-49e9f4ca8032",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6be3868b-ce5c-498f-a10b-ff3d0fce61d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15da45cd-31c1-4257-9ea6-ce04fd27318d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0c4e40b0-5fd5-4220-93e5-2f55b3205419"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "803d74b0-aa5c-4911-bef6-fa2921762a12",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a5941fe9-2684-4ca3-a8bc-1f11f7c78009"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f39da002-1be7-451c-ad78-c44974d1ba9f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "25aad346-0dfe-422a-8bf3-8874320de117"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "10edc91d-96df-4a6b-bc7f-85a66e587912",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "78d7d098-892c-4728-b342-d0546263acf8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d04028e-7892-4bdf-9259-b10b0832faef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27fd0ab3-49df-4b82-9629-73c11927ac99"
            }
          }
        ]
      },
      {
        "id": "71e2eb29-df22-4ef1-b95f-039e25f5ba1e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "41f0b69c-d005-41ce-837e-95ff3576d947",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f5ad8398-27eb-45b1-a1fa-bbf72c43400b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6348120c-2ee1-4912-8758-7c294ae6a0ea",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21265fc0-3971-4451-9f8f-8d006cf5cb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "193b1bb3-7819-4410-8763-12bd17f32f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c125f72f-3680-4100-9657-38a55a07ed06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb76378-97b7-4f2f-be0a-ee4cf358f5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b79e33-eaf2-4178-b310-0bbf47112f73",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e70eecc-6ee2-42b6-994a-643979daf3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7a2a09-b001-4d9f-a0ab-b4ffc468cd92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d1ba7f-9a32-440b-8990-f3fb13af5326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aee01cc-1ab6-443d-8476-3b98426525bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a4f957-9650-4b7e-9f30-2cfa5202eff6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee1bfc4-d432-41c8-a068-5db8ab301dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "941be809-ee9b-4b13-8ac3-3d18e4a7f606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadd685d-7719-4a6b-b5d0-2e6ddeb0667a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "79a3347c-24b8-4010-814c-9736d20f4007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99410b19-41df-4542-a1db-90c3e7536981",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7325ce8-c58a-466d-9d2b-a903bda69f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ddf78eb-8104-4565-ac82-98b08c77ace1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b9e846-e0fa-4265-9607-4ead44ad7855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72b50e81-da86-4c7e-8dbd-600473b787f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f5a8aa-216f-42d6-ba00-72be86d7a688",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9419276c-2f05-4be4-b3e7-57e93be49527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef31177-bb97-4c11-8e3b-3875d34411eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16999753-ebfa-47c9-9799-9d86b77fea24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "659cf0a2-e7b4-4556-8c15-a1da10b45740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d8f633-d422-4102-b993-2ae278aef73d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775775ef-1ec2-4cef-9284-d6fa6ba36849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b417b5ed-f2b0-49a5-b1f4-dffc77c52b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd97689-e3e6-4d20-bf8d-76be1198955d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc145fb0-ddda-4b37-b576-630119061306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57208e2e-4680-4622-9310-8802715d15c6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07b5096-6e2e-4930-9529-c82d39e4f4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f6f55e-37a8-40b5-96b1-2defb1c2146a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b38e20-dcdb-4ed7-a744-9b8116f434a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f1aa38c-9d9c-4d05-835c-e70aec37a7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bda60b-a10c-4541-a884-1503e13052ce",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76e6010-ba00-489a-871d-189bc793240a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28680727-686e-4477-bcda-923144f0d922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2823251-aa1b-4abb-9820-c1163bcf8bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de8a451e-be37-4be9-aad7-0cfe0b234c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f15b6c7-3fec-4523-9860-e84f7246f416",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea43332-cdf0-4688-aae9-a70c04211743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5045285-43f4-4b3a-b983-7f1a6c809073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071105cb-04bf-442c-a4c6-43b72163c54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eeaf29a9-aa7c-4d0c-97bf-0a315740e92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce5c2f3-82bd-4461-a396-ff332e3a9c95",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9293eaed-8086-41c6-bc87-d8ec63e28f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae22616-9937-4f94-8780-581a1360a0df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c915be3-f7b9-4fb1-80fb-b5e5610a80c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5562fd6-82be-4b4b-b34a-f2ad5f466ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396d724a-fee5-47b3-a39d-4b3e9bde1719",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1394f3-6c99-44f4-a3c1-13727d404894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b660c8-20d1-4cf8-9054-d4f16ce176e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25925398-31e6-488d-8a12-2ab2f02c5b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c3a0ce7f-e492-48cf-b839-11416ac5b751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1af6c3-4c28-4bee-be11-061cd259b2e7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9154d90a-4148-4c6b-ab1a-2b0b427fd443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63dcba6e-243b-4abd-8650-5cbb14046486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e0f99b-77e9-443a-956e-ee85dd3fb0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6775b5d3-57d8-483e-b407-536a6b57b266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a6f1c7-e7cc-4c04-a531-73309dc1d2af",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d40d75-e851-4be8-869e-90555f2eb9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5e080e9-ecf3-4340-b240-616640bf79b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c29a2f4-e918-43a3-9630-77a15802f9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1be5a0ed-031e-42bb-83f3-fc17cd11fb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24a4f5b-1ea5-496a-9d49-f584bb388980",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87078d91-8609-4333-b759-b2231be0e02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c6dad5-f6de-4290-b291-d65912e831ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62869cfa-028d-440a-a1eb-c676746e1f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c590e0dc-c39f-4ad4-bcd5-c2e3adc21c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee9d02d-5e60-4b1f-b1c6-e73b2b525d1c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a754a34-de84-47ca-8205-fcce1c5bc91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "633adafd-af37-47f4-a5f2-b8f8622a90d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99bdbad-700e-4a23-a0c9-413fa004a8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9639ecc-4a62-4c72-850a-8d82bfe61cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad8ce86-f96a-41e8-97a3-4ea595143ece",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437ce944-e6e3-41e8-81f9-7f673ceb263b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d73359be-23d1-4a95-bc0d-f228ea93bd17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee68ba5-45f1-43d2-9b56-cda0450bc3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5acf35e4-aa6b-4fc4-9f57-c72253252379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1402c159-8d5c-4a95-af1f-6a20cbb70837",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b094a7-e2d4-48ec-aeda-a31ddc75f60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846490fd-77fb-4d0c-b95b-75ff77d54a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b6eca6-f1c7-494b-85b5-b4a108351a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c94f68a-080c-404f-a695-602e1e8978bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92afb18-da03-42a8-9091-1416ce0c3895",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4fafe8-e475-4a69-a969-ea009b8d3de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff689b8-ef93-4ef5-8c44-1a1288573f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee02c47a-51f4-42cd-81b3-474eee98a7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1350c8a-ce8b-4e34-8506-a736c84cb80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0418b8-cc9e-4327-8469-5dcccbc9762e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94aedbc2-2a25-4a95-a0fb-e352e3a76598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e18f2af-fab1-4455-9c9d-81dd53ade3a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec653312-5869-4afa-a623-c0f19415a219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10fff87f-91d4-498c-973a-7c9d349b5da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34397d6f-1f3d-45f2-b3d8-d07c3017ab05",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6abcfe-e24d-4823-8ee7-c610e08523c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae59670-61d4-4c72-8507-00054ef5714a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3de6bdc-4639-443b-ba81-9fb2fc3d8a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8979ebb7-15e3-4030-bec2-9718760e7b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e60d64-b6ce-4996-86df-64bf16c42f39",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab74d324-4a34-452b-9ffa-e857229daf04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a5a55f-a53f-498c-b29f-119620400fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368795f4-52ab-4866-a3fd-b8c0e09170c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "434d57e0-e4f8-43c3-8b32-97e0cd251063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646d285b-6f15-4857-92a1-9de937807fd4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417f49a8-f3ec-4765-a35e-bbd56477ca78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c3f540-c47b-43af-817b-162c8c4021fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f23cd3-956a-4b96-b9fe-c296fa8bd0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66cb269e-88f7-43d8-be52-6febe4a9da6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7d2a2b-80fc-4a54-bddc-4e09d3716068",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7efd70-f721-4014-a98c-6fcfe8c8ee93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97409b8c-4cb0-48b0-a344-f3269017a351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09686c18-854f-4bb5-a2a6-10dc486bbdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "874f9b35-708a-43e8-9cee-5654751abab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5471cf-0240-4e59-bcef-67c9d62af4c9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc091f6-2f36-47a6-a59e-e6b5053103b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc9596d-9059-4dce-bbbe-5da4385eba5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da1264c-adac-41c3-b45e-c9a143d10894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a634641f-001b-41be-a8be-fd9b72366dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527d427c-8f52-4407-ad6a-6944c34ecc34",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e04a74-b40d-4da2-b892-b5b1d9fa8cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e783bcc7-3ef6-4e1a-8123-2818ba69acde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca79c169-3ebf-40c2-9009-035f79114d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8cc262a-456e-4980-a106-63aa68e62623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0df483-e337-464c-b1d1-0b5c14fa3e5b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48310f63-e166-482b-85e3-dd1b4cb3c4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8223bb8a-688d-40fc-bf35-1aa4dcbfba38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812ee91c-7b67-45b9-82ff-55faacc0da4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef222548-bb39-419f-a4fa-5c999e93c7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06403242-9171-485d-8b39-04cdbdaa7149",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324dfb3b-4035-4276-ada6-c0562934bb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e1712e9-0f6c-4a43-a563-e9241be1840e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5f10e9-11cf-443a-bbcd-58b94792a83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea06ff44-339b-4bfe-b3a3-d703d22118a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01b5969-a3c4-415b-b41c-d6ab8222f4ba",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662f98f1-3ff1-4533-8f6e-7592cb05d608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad4ad9bb-e3e6-494a-8bda-c89680d3d7f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e64d85-da07-4ebf-b26b-f7c7e2390564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "201c873a-51c7-41a0-b663-0c68fc8b2635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e9f875-706f-440c-83cf-6cc188232197",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeae1a22-d07b-427f-92fd-04126150c694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f28e265-3b9c-41cb-97cc-d27dfe181a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5288ce-cccf-4245-a5c6-a8d86fda6620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c6cf7b2-2eb1-46b7-8a2b-c4ec184d2d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe19f5db-ca56-44a8-a60a-73cfc7ff6967",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624f62af-5d91-432f-91da-d0ca87e59008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6fe4634-30e6-4cb3-9e56-6d755c896d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710a6dac-7160-45e5-83c3-da3d31f1947c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71332847-1a60-4c56-86ec-48c7d29a1fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5aa1202-565e-4cb5-b56b-2c725a860443",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8096c71-7f5a-4ba2-838e-abf674591657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53ea4799-61a2-4236-aa28-24c4d8fd8de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331e7536-c780-4488-9c45-f66296afdc0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a4c44b4-4351-4b5b-8a80-e1879d345819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612151f8-61d5-48d9-8b21-e79147d682be",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c90ece-0ad0-4d64-a7b4-6df51d72e26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640f4eca-c43e-47c9-9d8a-59d98cd3f73b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1dbdb9-0478-46e2-9402-7ff76980fdc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6832e1b-d860-4b4b-93df-d044261d8260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c72fc9-0a19-41cb-baa7-f24269d62093",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d067adf8-a28a-421c-884d-42c57534c835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787795ad-6202-4667-9044-57628c631ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfea9a6-473b-466e-a835-9d4386fad540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec28b124-470c-4607-a2bd-dca84d2f8489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a330877-c331-4663-97de-20fa7f88ba53",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01aec578-0b24-4125-bd81-86ca3f219b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de3df78-ebba-4108-b8b6-3f6c578b181e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09e91ce-4e4f-4a40-b97f-eb6926680703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4fa9f95-7119-4d20-bd9f-a516d0a79b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ef8b4b-1923-4798-a701-cd51d1942737",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95801e4-eb17-4eec-a686-6e02e632ce30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2bfbf3a-45f7-4899-9a45-9e0c055e9161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b565a4e5-c73c-4f5e-86b6-6646ce151edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b08738fe-7cc5-4c8d-bb28-ad2d5ad2c408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beadd126-5875-4e7d-892f-0477351d98cf",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161abd2e-c041-4f54-954e-03e1f6ddbc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39fb9ef6-6118-4722-b681-627a8c13303d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828b9586-63a3-4097-b4a3-a892b55022d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c67965a9-9a4d-4ded-84e2-17c9cecdc6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9726f8b8-c2d9-4ba7-aef8-89116e02b867",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22558753-24ae-4fae-b9b4-7542ca3a25eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9039d047-c83b-41bd-b8d7-c1dd66e2c22f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ddd4c36-af74-47f2-8dc0-103f6c5ca500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe890ae6-69b8-4647-b9b5-20b90d506dcd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f1efb948-3b31-4137-96e7-af617efa35e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3387e652-171e-43e1-a253-f068badb8ae8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe03665-31e7-4d19-a353-487768b0dd26",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "002972a2-8db1-471d-95b3-b9a18449e729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c51b34-ec51-4b87-b85b-237682527fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2bd3464-8928-43e9-a0a1-1cb0457fe7f9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9d19d2a-e416-4a12-a88d-12727e658640",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7aa47f17-0e01-4cbd-8dfe-968cf6b85fa1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "99398fe1-16b5-4631-95fa-93ff38efdf6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4b252a7-4001-4e2c-9c37-e7c62e9b2faf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1b123f07-b671-43b1-9dc6-de9d53b916c6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2003a1e9-6d97-4658-bd03-b3225635f284"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af477f71-aa43-49de-be62-82e19959b80b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a5cefd9-e404-4756-bb35-7fd1fa8fb89b"
            }
          }
        ]
      },
      {
        "id": "d480ce88-30c4-4084-8c8d-dfe0a2f7e23d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ef42e479-6390-47ac-9a74-5a6874728338",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6d2689bd-8400-4b1a-9c5e-ca2bc7a81db1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a253cff6-e190-4575-aa5c-2aff001060fd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2bb681c-37e5-456a-9eb7-c3c2a4cdc557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b775afb8-8498-4520-bc04-3982a4ee3a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beee25e2-13f6-4473-afd4-e33cdd05e930",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd7cfe2-8e0c-4abf-8c64-e9b947ffa224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d789a533-ab14-4292-8863-0c465cea3873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf95619-46ca-4499-8ab3-fd7d74ed3ae7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24922326-47c8-4d7d-8e87-95f1e66f5441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b4daa7-3c53-4d94-ba2a-4753b4a96d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6ecbbb-1b9a-428e-96dc-02efa35ef52e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1b21ed-2d3f-4010-a75b-ac3cefe6c54e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43172a6d-5188-4ef6-a9b2-1514f8694d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86261ead-9f77-464d-8194-fde586ab04c7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0117b6be-2e46-43f9-af30-d6d5a5de4b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b037558e-41d8-4734-8469-ae3779eddccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e046df1-8784-4e6d-b4e9-433e632732c3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccb782b-cd66-426e-aec1-545571293492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3afcc806-402c-4e0e-b73d-fd769404a2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a9c5dd-c998-41d3-85ed-01df7da81e75",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdec0154-931d-4fd9-9cf1-fcfdcee89721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd5086fa-a953-4f93-ab83-515bc009aadb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3883ee19-36ee-48a1-a7bd-3067891e90d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d662a1-0ee6-43b1-a6f4-52b0d51426e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5967b26-f4f6-4ff9-b0e2-4d4d55908683",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e0eeeb-f087-4629-8620-851f921c122f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "403a51f9-0078-4fa5-90dc-87f9295f7e27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba2d705-819a-44c6-99c3-73e3c2f579e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d42455-97b7-4b07-ae12-abed0a295a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05029f4-52d6-421d-9bf5-87c3e211a8bf",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86558ee-81b2-47e8-889f-0f0a1373fa79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "723f3b69-922f-4325-9f4c-ec1aa9be2a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e180a367-ef3a-4e73-8923-2e07612a6650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f37db70-9523-46d3-9c04-228c88ceb4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61360ad8-b8e3-4c9f-8955-4ecc80f99e18",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4d6329-54e8-4e49-a8ef-95ed09e0713b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e99f73f-1ccf-4adf-8240-03eeb446cb1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28006099-f386-4d03-9a04-1963d0bdafb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e56310-915a-4648-8429-f15aed97c4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706d7517-6f96-457e-af16-77cba6644b6c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbae97b0-4069-40dc-afe6-715402440f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108cf1f3-f798-450c-ade3-51cc3c1ea0b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a23f9ec-7311-4cd4-b673-e2f4a11d9591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e851dce2-e2b4-41b4-bb17-dab93dd74b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88905338-36e0-4422-85e6-582f58be158e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485f4c56-acb7-44c7-b3ca-a662fec89d4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5de10f-404e-445c-97c4-57cec1a9255c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "546213d0-c878-4159-adda-dc4eb24cb947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf60d8c4-e6d5-4c55-878d-dff58f98fcae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e3f843-81ca-4005-955b-455b5254aece",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678c2374-1d49-48b2-a360-f1451a57e3d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdad9e0a-93b1-437e-a758-09edf8ec7a18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e67ce8-5803-4542-bb9b-92f9b9b8eb89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f37e9e-96e5-4f5d-8d80-819ba1fa6fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2cba05-478b-4db4-901e-3a8c7e62190f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7a7867-ee52-489a-8ef0-0723feafe41f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37336ee3-a3b9-47d3-97f2-2e070092c9b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3948ed59-caa6-4121-954d-ebd709b66ab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476111bd-0e3d-49c8-b2dc-d2bcb5413021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ec7f42-1f84-4514-a2a4-283eb5e54ebf",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ccf677-31cc-4926-953f-5a5aac2c557e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fcf0e47-cf0e-44f5-8ca9-85a2347d1ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2107483c-1d4f-499a-9eff-6753c6b9b555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39587f6a-1ba5-45ba-b4eb-f0bd3fa7d467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09f626c-3edf-4a9c-a7db-a9de4f9cda86",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5043150e-2dbb-43be-bb3f-0319ee98ab20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26f688a3-8ae1-412f-914c-b3c29329f949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fff12be-ab79-41d0-9565-3f6c120f8638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c845ca5-b4e7-4326-bd28-514e2938cad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2d5288-f1d2-4833-ae0a-d4794ec5c772",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3979fbb3-17b3-4c37-bb58-f42ed9c08b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e63acf77-5cb5-4355-af45-b18ab719d060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "935225e5-97c9-4834-8d18-641136f010dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e331b30-d996-4c89-a3e3-f5faea4fa491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da0b0de-8ef0-48c6-aa22-cbef23dc4089",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7cd6f42-a9a4-4db1-9a78-8ecf03fe29f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "326dabb0-06ab-49c5-a5d6-6b4374e0ae68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a57b1c1-a65e-4106-8007-40a644a90d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dca7965-b53c-4f60-8514-261744d6d6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5feed5b-082a-4704-b335-00093deb7e80",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802900af-0847-46df-a0e7-8e1fba5361d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "febc6ae0-81e5-485e-a31a-e99a60123f7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "583353e3-4af9-4510-907b-905bf5ae6c33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43554ad1-19f0-4f58-a9ef-df596f06513b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8787110b-7a1c-425a-8f1f-d585de79ac50",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09388429-39c6-4f84-8a68-1d8e97eabd86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc2a995-d157-46e3-b504-a500155a9419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "766b53a5-7865-44f7-9b3c-9dcaf4b3aa1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a16fc643-7716-485c-ad77-a32e109ea6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a6d611-b008-4656-967d-0637bd95e11d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b1ede8-226c-4466-b49b-2fd6abad3e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff8c768-7ec7-4d6e-a135-6f19e2eb5fea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6aa824a-fbc9-46ec-b6c8-47a91f9ff81c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e50d792-8624-4eb7-a9fb-96c3b807fa08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86708542-9317-446b-afd7-17b1a619f9e1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0320afd9-2b51-4c65-a04b-50d91b77900f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "916dc162-cdde-43d0-b92e-56dceb1454cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eed89eb-f503-46f3-a211-98ff9c3d533d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a7a7ac-25b1-4105-999a-fc2a6fe098e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90fe9bfc-f8c5-4670-9903-8d32e59a3cb5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a14910-b9ad-401e-8a27-d4668335a1fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc06298-9dfa-4c5b-a18e-cca1871fe33c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad9ac01-b36c-45cd-bbb7-cebd4e954013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "823ca573-f26a-41d5-9727-77cfa83ceef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20fec7de-bd1f-40a6-8e38-862996f25ff2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39989ce4-0a09-487f-9777-245cb3ff7e46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a71a659f-68c7-48d7-83b8-dc0c57a35d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d33a290-798e-4da1-ae17-5c6559a9fe20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5935fe77-9f72-4c93-aa20-c0ed95358b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a63fb03-4e2d-4bdf-810e-cede49e35a60",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e05f6c-e9f7-46ac-a0c6-d1654f4b93f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c18ec8b-4f31-437e-b628-1040718bdf0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7a30b0-9807-40f9-b9b9-0d7d96cbe866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a3712e3-c4fb-4536-a5e4-93a9eb0f20d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f54fd2b-05e1-4a95-8c01-5a15ab9177f6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db6a293-ad78-446f-a28b-a0b72985ea0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "922f4277-6de0-4607-8ec8-1a04d6e7ad28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b221db-e7e9-417d-a7f2-8c0abb94303c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "095b204a-2081-4819-93e5-26ce0b2758c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da60b430-002c-429c-8e7e-f162c38afe6b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fdd632-39b5-4dfb-8ada-e6b12da25329",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e537527b-fd1a-499e-968b-1f6e88522463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aee6e29-af46-4b38-86a6-04f65a8f6038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3706a74-193e-48c5-8833-08b97b00981e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64039023-11e4-4410-a986-a2681a42f0dd",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614807a9-2ea4-424c-aada-290ecf8725d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90cadf52-8716-4e90-895e-7f85b46e4e72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c21ca9-5ac3-4758-88e9-734d14d03652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f7a9c8-4f6c-419b-bf5e-3f37898f1639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf5409b-4bf9-4828-928b-322618f9ee86",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826fe256-06c6-49a0-b756-e3c3e7974832",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2e22d93-49b2-45ec-9683-4ad0313b5d60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89e0e00-3601-4822-b25e-82e6b421a7a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79eac25a-4e03-4a52-9bf5-7981547d46a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ac5c02-72ab-4136-9e95-d973451945b1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2d6399-ef28-4646-a812-cc6a5de21193",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff892d8d-d5a6-474e-81df-4482e4ba09b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e1eb31-8c76-4ea1-a9f2-79ba26514731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "577c39a4-66f2-4957-b6ce-f5a9b52dd1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470ab274-79be-4bf3-83d8-16e5bc1021ed",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4db800-b131-49a8-8b58-d15492e5364d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97b8f879-ae5b-434f-a447-024318f2bd2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08602ffc-43ba-4855-93db-44274edc4425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3160e4c6-b33c-4670-b7a1-5faaeb1e5de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bfd0fa-9216-498c-806b-deffd9f31da2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6447bd-7934-431c-89c1-0481c7f823d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e9aac23-2b5f-4069-89dd-25ae3add4ef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f4b12d-f5b4-457e-bb0f-db95a6b4e7bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8302bfde-df86-4733-a945-49beac5e0cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0975177a-7b15-45cf-b0bf-581f21700774",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b75aa08-b41d-4668-a758-ee6a3b51a5c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf3b4a0f-ee9c-40c9-9da6-dfcad2e64637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b523eb0a-ae06-43e2-8ae5-84d122f23d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7066e4b-ff4a-4444-b5cc-8534ea1e3457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff4bb69-47b2-42d1-8d99-c1f886ed1986",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37c17bc-4da0-4e26-af13-57ae80e9d69c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aa310c6-72d4-43f3-9fa7-e30e4e7a44eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a258c6c2-b87a-4b31-ab34-af339a1d938d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f1c4582-8b0c-41df-9894-35916ff55227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74d597a-bff8-49cf-bf29-20364e18fe8f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb518a4b-32c8-4d13-8e59-655892e483fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a52011f7-fc38-4b9d-a881-603d83865e22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ab419b-f181-416b-a6d2-0eba55cf6e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7666251-0a46-4ade-b4a3-b825ea3edb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59dd2237-71e6-42ae-8513-5a08354f0374",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d2342f-a467-4b8c-a257-7ae4c0b0f881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb73511c-83a4-4972-a189-41e3966492b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "807c035e-423c-43b0-855e-ca3423dd2c24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870ee89a-4feb-4c08-a6ca-290c1559cb6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150734c6-b9c5-4711-9bd0-3bbce7c9818b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c727be-8d2d-4fdf-9fcc-6ad06adbb021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d3133f-5908-4719-94ca-9632d483df2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2498b5c-9bb1-4ea4-ac15-d1ad01c2a121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a42fec-dd1c-42ca-a13d-375b1d4e5116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aff1619-6897-4f6b-9b9a-2e39925ebd54",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f34db3-dcce-42e3-b555-39302d25ba63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bfd23f6-46b7-491a-8b86-2ff78f7aefe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc33d0c-60c6-4cad-a81a-103e4f0c6fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f99041-bef8-4327-8769-9b74a2cbe52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86428c86-d7f4-4f89-af70-ea13894abcb2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c1e88b-5d64-4289-af0f-dc0fa0f2254c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c97d329d-2e60-491b-9525-975644106c60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "416e277b-f98e-4fc6-b951-e45bf87a47cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "812d02e7-db94-4610-b33e-5ea5463e1ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bec54b6-a4d5-4d64-bf61-107b93f01461",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe9dcbb-b962-40cc-ac3f-7b2c9f052b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0fabda-ca37-4f82-8840-c616c3a957c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa9164f-f030-4926-ad22-b2750874aaeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e10724-89bf-419b-928c-ee7da4b2c4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf71767-aa40-4cb1-8249-5c2bd79da6ff",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5bc4e10-dc91-4173-b12c-bc8d55a09bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47d5aeb7-ab16-44d1-a5c5-67987d54a8b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c882063d-b355-4ad6-87d9-b005af743753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ac59d17-6c24-4311-aef6-56a3be9a5067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628ca79d-9fec-40d6-8944-bdc2e7cb52c1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43209c30-0c97-4e13-8f3b-e025d5269eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2d01d27-73a8-4091-a559-2e455ded7605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "528a0707-89d2-4748-be61-0579ea922bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4295d673-6e31-4def-ba4d-5bd93660b858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231a5d5d-984b-4b73-94d2-b34c892ef6ae",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993b1235-e17e-4e50-b6c9-e0da9e39c719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d03b98b-64fd-4aab-8787-b55660a5bf9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2494cc-3f97-4f42-bcb0-d0419a99daf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e817b1ad-ba17-4b89-ba77-fcf0ff289f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac5aa65-42d2-48e6-88f9-553416598485",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a30bbee-484c-421f-a414-a6fba8b06159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e48ace97-76fd-4e53-b885-62b74d8b5e1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd3953c-a425-487c-8199-ab47d8ffd2b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d5776a3-c9a4-4f1c-987e-9fe9305450e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0061db-8b37-41f7-b142-5a10f7687cbc",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc15a3e-830e-40b0-b4cb-e61a51720c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a476f48b-fe5f-46d1-b1df-6050eaeaaae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a79dd96-9d52-4b7f-a750-3d3e1ba4186d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56d3bc9-d79f-4186-bd01-821610b6b344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92399756-996e-4ab8-b211-f532523e305a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69beace-7bb7-4f46-8c96-902fe8dff037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d3c556-5a6b-48ee-a3e9-dea6b82bb02f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2396e39c-45ba-4010-8495-14cbcf07878d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9869e856-6ae8-4410-a57d-d3226fdca820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919a7f26-d2fa-46a8-ab4c-09cc241385a0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8dabcb9-27f3-4867-8f58-7d82c275301c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2678d7f5-7fe7-4d04-a45c-190609b02d19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b3d8fa-b6ac-4505-bc5a-7cdda9e0cb3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9673c6b2-0738-4b87-837d-6ddc4631716e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d258c9eb-2ac4-4c1b-bcf7-45a3eabc6741",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7280794a-4e9f-4c41-945f-a7170318adb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfad5e23-fcb9-494e-a483-10e88e8dc8db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36661f7a-60ec-41ad-8976-f178ea1d7c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a6c137b-b00d-4ed0-9c11-b430e9e73e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e35a672-d65c-4546-84db-c7e68964864f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ff9e73-02e0-4a8e-923d-9ccfe05a9082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d61b5549-558f-4207-b628-787e267e07c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4be86d-de13-490c-bae0-3c6167f0fbc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5070e452-7204-4e2d-b556-032c73687f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727409fb-1408-488b-87e4-d1f2dc57e383",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db55a348-fd63-49cd-9e45-7f39058dcf2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117d8aa9-cdea-4d63-8797-d82294d5799b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5539271-a903-43b9-b777-7afe86442cc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f063bec-e960-4fe1-8d83-1e1e2bf11b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df73afce-2630-4165-8380-568a83879369",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6518e8-09ac-44ea-853b-5c55b93828a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca6bd77-edfe-4a3f-9c9b-32a038d7dc13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c466657-a75f-493f-a134-55afd33e3df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "248bf5f7-f7b4-423a-8052-9aa7411612a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e7aca1-fb43-459a-a8ea-94157f51aff6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a866115-3bfd-4168-b730-b09ae6f18497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a589ce6e-5c36-4d3d-9076-a9e4e1486246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2e54c7-cb28-4efc-a888-97f88961126d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d0c72f-f2a6-4c56-8fc5-5c3303131355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bcf3dc-3cca-40aa-ad73-2b90f2fa77af",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e75688-1eb2-4cbd-893b-3944114f7c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e24627e-0c7f-4580-ab30-535e6e98c921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a20d80-6806-4230-b69e-41aed0e71e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb3cae3-ac5d-4d8c-9f8d-a241cf80b0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c738402-440b-4745-a2e9-9e478fe72dcc",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a598fc7-8566-4d3d-88e4-12f59a050bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b0f0ec-2098-436e-9611-851d0eff3ba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efb6f5c-974e-4653-9d95-f7f312bee701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a1488ad-e0a6-4cc0-82db-6a64d55c0941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f37da9-c097-4bba-bc64-3e68312831d5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86eb54f4-a760-4d1d-86f7-b7914a4e742c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd7ea0b-2f5b-4733-b464-3ccfe519a906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9061bc-1ce0-4f1b-85c4-46e266c91003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc5b189-0a9c-4449-a9d6-64dc91a273e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c8ee10-0551-453d-a4e4-7c03dfac1ab8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c61bbc-5676-4600-91df-da900ecd4402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108a5a9f-eb9f-4f4c-b497-5a348a61370d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9652f0f3-16cf-4a2c-829e-dabfcfff9672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3400735-95e3-432e-ac66-0ff1885cc711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d27cbcc-ff84-4e38-87b7-a0877d89357d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebd1b80-7d26-4ea1-9a48-a028b64530dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ff3f87-80cd-4f43-b887-baf092e605c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3753ad-ff9a-4613-a9e7-e92b8357ff7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "333f48b9-5ed5-44a6-ad27-bda2a34110df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b7431c-48a1-4a25-82b9-25de64b94eb6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1f1427-998e-487c-9858-cea5b0f6a494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23903870-06c2-4430-9824-d20a05be7ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41070840-5172-4d00-99f3-25248bdde44d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310427ad-a60d-4886-a8f8-e9ed3b14c628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc60df1-cdda-417c-aab7-b6375af398ca",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f18f385-a7dd-440d-abde-926605d62325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e66d0c-ca7d-4fd0-96bd-abbfc96d913d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e9ba5f-2755-4400-8b2b-78e9821043b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2906301e-4e2e-4d7a-93f0-cb27d629ae47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22fb70c-5153-4e87-a864-df6cd31543eb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96711d7f-52ef-480a-9c63-4cec90139ffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f1d8af-0a89-4ed4-b51b-ce1304f1a85f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60016cc-906f-491e-80ad-0c0170d990e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32994cad-f526-46eb-a364-042f45f42d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a65a9a-f6cd-4e2b-9cd4-c1560f092090",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79ce93d-432d-4a40-89ce-ec6d6b35c6ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "086bacfe-7b14-4d4d-91ad-2810b6c7484c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a56ea41-a90f-4f2c-be5b-78414fbc70f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d351d1a-f0f6-4c7d-b272-5e3160e60a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1e4c4e-4708-42b2-a294-76f8106124bf",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34665d66-aa72-4897-8736-33bdec5594f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0308bbba-8e9d-4e26-bf51-04c601292033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f7e1c4-0971-4c3a-bdfa-9aa70d8e9833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d648bfcd-304d-4216-8b55-15cd33972f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57e9381-ecf4-4ad3-be7e-4dfd6a8893c0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e803d1a1-620a-4613-8899-75ab7c875c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81efa20c-0745-46d2-940c-1388d56058e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e2fe7d-271d-4d35-8574-d2d954105ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "885e7ce0-93f5-42e6-b60b-3135a6cc0a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78656ad0-4ce0-4977-9dc9-30cf51d80203",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591dc2c3-3aec-4af0-92c8-3e8a7aca7d46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cf9013c-565e-4700-ac3b-4d0b03172c6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f90704d-d862-47ff-ab56-305df40dd285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e39bf7cf-faba-498c-a111-7b4bf04a793e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c455358e-5d3f-49df-af8d-29eb6b0f96a3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62909257-18ab-45e5-8b39-cec691c8399f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87e555fc-fc1c-4fc7-8080-1e484aab6d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bae7df7-9bec-474f-a1e7-327d1c63a5df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681fbcbd-7af3-4099-9bb0-3df83f7ab965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13077cc-0a18-4843-9b02-efbf0513bb9f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba37111e-2ae9-48ed-92c3-7c80d85528b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76a24512-d81d-470c-b5ce-eed7fdaf7084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8da85c-5d53-4a5f-962b-362ffe8d964d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ed1095-ad7d-42bb-9319-f7d594b52e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f017d23-825a-4c1c-9ee3-b06e3e1fcb54",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb16ded-7d77-4245-9e80-e664e0b9ee33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d6df00e-9039-40c5-a602-4d47e50edf0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9ebd10-a77c-4948-8246-8ab4e463a070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4923a84f-b81d-4d32-bd3b-e52c7bb33fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf4632a-98a0-4c11-98b5-30924bd4e06a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a910224c-d9e0-4ab7-90bd-5e444e986741",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d06a862-23b9-4a33-a7d0-a4a00700c8b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82908420-e0d2-45b8-b4f1-52d3b46d4a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64fd168f-7a56-4a60-ab05-0946c561d381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973f7323-440b-41ba-bad4-ebc71ad46747",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148a5cab-c391-4fcc-ae30-d225d412291b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5db84b7d-6e84-4d9e-9b97-6d42c3c83b5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2deb9711-046a-4793-bf8f-8305d251c2f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22baaf14-53a5-4647-b03b-a792a7a11fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec29b55-a11b-40cb-adcf-d1eea998839f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f678014c-4267-49ea-aa77-a92c0ebeeb5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59abf1c0-1e2b-477c-a107-28a3ff524c88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db12376-9157-40ce-9840-844e32fc8553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69d3dca-f175-46c3-82d0-23b53385087c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9d3312-7d69-4f84-afde-4545140cbb4c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036c2456-1da9-4041-bb7e-43bcf5ac4706",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab5e8b20-97f9-4a1d-9a92-0b45110368ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcfbba3-5e72-4c2f-9341-edd816a6a522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b94495-87fc-4669-81ed-95a1498a0d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b72e4b6-c8db-4ed9-a735-7c3fceb8662d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3386cfd6-1626-4e4c-8707-c9786c2a9a4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbe6c29c-a059-433c-93b9-f8c48950dc25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cdf67b6-1d35-4e85-960b-1cb409e3158e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab6a438-febe-42b6-a13d-6d37e3d0d8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d156f5-1c54-4909-a55b-d52e80d797cf",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b643a5-dca3-4fe0-a79d-894881cf3f57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bbdd781-c088-4d0a-9666-36bc7a81d45f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce12a54a-8192-4cc8-96dc-0d73ab284acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e4c3c3-938b-4fc9-b6e5-b0e1dc9e22f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47ed7b7-f231-4f23-b2ab-ee04f7ed5dcc",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f83f8f6-2d4c-4e32-a401-320bd23b5c9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e00b9b2-8c93-4e77-900e-b7a01943fdc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d1efd5-666f-4477-9c15-b7cabfb75ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081c5bee-43fc-46b0-95e7-af848cfb5d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7bbe6d-16c7-4fd2-8d07-a0f1e74e6004",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbbe52f-acc8-4408-a74d-af1bc4e4fc83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79905b07-789a-4632-abe6-35537b4fd3b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3361ae-c091-42cf-910f-53e458492b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f05bf61-b3c3-48c8-aa91-9dbb28cda8a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c168e6-f700-4b1b-8c59-18dada5b0152",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3edd13-8517-4b0b-a1d9-81c67d381560",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a3499ef-6a27-45fa-97c3-b28d22916e8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6337dac5-2203-4386-82b5-a2edc78bc0c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41784158-150a-4d7c-bbf3-6e504b5d2230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7198b4d9-8a99-4f40-8edc-85a976693b28",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5879d4-47eb-4a3c-bb48-9f07343bb6ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c98ff1d6-032e-4e33-8144-907176975809"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba78d80-1e3c-4b69-9862-c553935bfef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a72394a0-9b97-47d9-a96d-c26ebdd6fac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebbf8ad4-9f6f-4c14-831c-671210553211",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb5d9c5-9392-48b4-b023-5a478193f344",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e59c237d-a94b-43da-8b06-5458d3c26e64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde55fa6-7a61-4fe3-91b9-675ecb9727b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bfe64a9-1c68-445d-a52f-60165e8a6b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a638b8e-52d2-453f-b564-d5ca6361f758",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce08b2c-26a4-47c8-b08d-e7a6ac5aa970",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f57a3be9-ef77-4c33-8ef2-176df64475f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e095d5a-ef99-4aca-a39a-5d6efc75d04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aace0aa7-afdb-4395-9cac-fbc810aa5831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fb77fd-11b9-4ff7-9f9f-f6ad5deec054",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4162cd9d-d50b-48d1-b9ae-47a09bac167a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9f0adab-aa14-4bae-b5d6-2070087c0866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d130ef-78b1-401d-b11d-118e2d8ed6f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9eeae44-a9ae-4b4f-9355-7eb7e236e910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52597a6-60f9-4d6d-a686-0b70ca6fc093",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6d230f-cd1c-4df5-b3e4-ac813b3def82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2908f3f2-be26-4f35-b90e-1a9498a85b5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4634c6-6ac1-4374-8feb-610ca85010d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20adb9a9-b383-48d8-b456-9e109b960daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf345c43-606a-4359-8ba0-4c4858249500",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d6e056-59c1-46e6-bdab-1c07d2bbfd8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7563e20e-dbef-4e72-8097-852a8ca1db43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "042933f2-ff7c-4d10-b93a-334fb65d20d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "434e58ef-fd2a-484f-9c0f-16a4a9841452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58200fa2-7b46-432f-9cc0-fd6fa68a1557",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ba99bc-cbdf-4230-aeb8-d5df443cd317",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14fd8029-8e37-4b83-9b6b-419e8a56d7bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7710734c-24d5-4274-8ccd-64c09b26868a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ce2906-7fca-4a3e-9d51-52f886e0d5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd7252e-2880-403f-9dff-e1a0768681b0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e65b0a-243b-460c-b38e-a16a91bfee5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "286ca8e0-0a08-410f-9c09-a51549bc741b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74449510-288f-4427-93bf-4be0c85b4fb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "216b54b5-f342-44e1-997d-542d44ff28b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be93d9d-6fe1-4cb6-ae6c-36b658861614",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b0839c-9c91-40d8-b38b-aa3e8f0d7f9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46e08a28-10e3-4504-9583-cd3b8855e70c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07d2554-74f5-4ca7-920c-c93893c0cc3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac5d9f9-b568-47c5-9bac-4fef552393a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4acb5f6-caaa-485d-af95-65c6f3f50f57",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc3bcce-15f7-40a8-a1cb-d56c0e7d1acc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d32739b5-e7a9-42d5-bf33-d86fc55ed313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "063d1a71-4f46-4f07-9cb3-6afb2b225774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a3bfce-6ae4-443b-940b-dab74caff984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e7a98e-3513-494c-8a79-e5e0e69d0d80",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d08bd7-fffd-4b96-910b-cacdf1307e77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65fe954e-ff88-4bc7-9c4c-e34d30d19315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47221ab0-7100-4bb4-b302-eaed1230fe2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e247472-5383-4538-9406-caaaadf99a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d65c044-eeca-47ec-baa2-878f213b9eb3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a86cba-2a73-4d28-a6db-72b04e0fdee3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3273de1-2c4b-4771-8124-c3ac0c340ed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c9cd5a-54db-4c82-9121-f623b8864a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b931f0-62cf-42b0-a390-4233c1337591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd265e24-72bb-47bd-9fb7-a68dc8ef106c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778cab5e-9c60-4e02-944c-4bb041bd8870",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47343943-0ba3-4305-941e-842b5d19244b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef20c013-c0ee-411a-bd43-303b6fe9b14a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ec4a40-64e3-4ae5-8cbf-911ca7addc2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c5f47a-7b99-4928-8782-6ce2cb58275c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06e9b63-6fcc-4531-aea1-f2f3e6043bdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34a04465-d62d-4cca-9214-90782c36db51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cab9c4-18f8-41d2-b883-36f6ed81bede",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "935dd437-71ce-425a-80e1-701be537b25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb629e8-00b9-4a3b-9b4c-75a4dee3e5a3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7aa5a7-1d26-45c9-b5bf-25ca9446a0e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc12aefb-df6f-4988-bb25-2aa7f0e44309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8db602-4f17-4531-92d0-ca3b40baab14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e9bb326-ebe6-4b4e-b7a5-2737dfd159d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b53c55-ea8f-4148-912a-4d2182d46eae",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47e7ea8-e9f5-4f55-8cfe-7e7d733974ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50625c31-206b-4c2f-9e9d-4d448e4b3eb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ffbcf39-a7d0-4619-b3d1-56cae6cd0934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09075cb4-1f7f-4e6c-bb5d-c1a8d3fe5b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c54d66-4e87-4f94-b6dc-b7b97b5d000e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f234138e-636f-4cf2-b461-9bd5fbc6c3f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "817c202e-99ef-4cb8-b256-be93bdb60577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "924f87dd-7cc7-4643-a4f9-7e0e12c36536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff062ce9-55fc-4259-b056-a71bbdcac890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638c273c-cc26-4f1a-90a2-81dff7e63252",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cff343a-8d93-43c2-b43e-944a8c8a5777",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb4ab38d-155c-4940-a48c-d0c2a00c5ed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b1d382-a9c0-47d7-a1ce-b05dd3dfd19a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66848bb7-815c-4281-b024-7927a3d97f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a772e2-f7a8-4cc6-9a64-f0bb83964e51",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283d8353-b0dd-4fe1-83da-b14027a9d18f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d337d197-1782-4da3-9651-321d949d8559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e199e69-50e1-4888-8ab4-90043619c4ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf7e7b8-ab4f-43bb-982a-c6b37869c65b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb92cf46-04f7-47f5-93a9-c3c1cb27d6e6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5830e37f-271e-4ba5-bf08-642ceb38cd2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f97770f-1d61-4de7-9170-c5cd1b0b6774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e772a0-eef2-4ba0-a156-2049b488c373",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e6b0fe-3f4f-4f7d-85b7-58f3999011c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2c9e2e-3065-4c44-ae14-423995439d95",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12444cb-a596-4176-b182-e77ad96c01c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0328f69-a5df-4a26-919a-a5b26924559a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0ce574-3241-443a-8e33-d1570449c578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b9cdcd-aa57-4869-b8ee-1d32b7e6b811"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c253d9ac-3d15-4f38-9c12-038426a77d6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00faca64-6211-4a0b-ab20-a4f42c417223"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d6e1fb8-80ec-4eff-9ce3-9c2ebab21572",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "faf1891e-4b4a-40cd-a129-4be5ed47f31f"
                    }
                  }
                ]
              },
              {
                "id": "f194550f-4312-48d5-a74f-31d00b6856e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca98282d-323c-42c8-aa5e-7493113d60bd",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324ffb2a-a64d-4506-bd9c-38ca9b7a7ed0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5254e099-5ac8-4725-a5cd-41b72cfdbd00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "721b5a8c-7268-4f7c-8e90-cd703ea26dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53634735-4f8f-4f4d-8e2d-80c51df33e9e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3569df0f-2849-4649-9c17-2e33a49b610b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3490baa9-7f4d-4ebb-aff5-1e64dacba4c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2198585-c5a4-43c7-84da-4e568a38ed0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17ae757e-d3c7-48f1-b180-b55a484623de"
                    }
                  }
                ]
              },
              {
                "id": "c55f9fc7-5a78-4986-8466-858fd7d96292",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1e416536-f8e0-434b-8c34-d0e17e845be6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a734c40-536b-4430-8337-594b048f1d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "013937e6-25a5-41f8-ac8d-f49848d02090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd7ddf7-5f53-4923-ab69-fe3313f49e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9888ca86-67fe-437e-a997-0bc100521da6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4d3c54aa-bbe2-46a3-b11a-8287ef9f4b2a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "23cf5ae6-5ea2-476d-a1fb-2c12100904b8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6ed1c68-7947-4da0-b541-f0092baf422e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a1a7f3ec-705e-4c9a-9908-2a4b6f6541c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e90d837-a348-431b-a3b8-28822416e26a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05c0fe8a-fab1-468b-bbb9-0d11a36aca50"
                    }
                  }
                ]
              },
              {
                "id": "80ee5a35-c9ff-4641-8828-8ac461be86c0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb4a638e-4f1b-4b5d-a499-d65115492784",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f91fa7c7-f991-4446-9693-ee1ec8193899"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9519d5d8-c8a2-4bd3-a5eb-9f7e193c9ee9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d492361a-b60e-40e2-966a-d50274da890b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8471470e-4c38-469d-a125-1ec136c6314f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3eedba61-1388-4c5a-aa69-876b6fe97a31"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5258c27e-5d25-4699-90a1-cee34d74cf8c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3fa4ef77-0e77-4002-bb8c-cd07dc00a964"
            }
          }
        ]
      },
      {
        "id": "ca80204a-6e12-4df7-8ad9-13fb88ba4e33",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "596dded6-8b5c-4dc8-9f27-081509bac86c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0eb4c81c-62e8-4a4b-85ab-b0d478616c14",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ab61fcf-add1-48dc-a822-70ddc6b76b18",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fcf2a2-5796-43ab-819b-0ea3526c4dfe",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cc6e49fa-1660-458a-ac3d-2236464340c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "030a9f5e-a93f-404e-902a-ea2987a19b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "598ba586-4942-4d1f-918e-8893bd05f164"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d917b12-67a0-4678-9513-cad55838ae4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1d980bf-a597-488a-a230-550881a68872"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "15909ea1-b4d9-4bae-a846-77fef18c2fbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f5b62fa-0762-4d57-91fe-c719ebe96f54"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df004f34-10a7-404f-8e46-9207aef0bbff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "091edd33-92e4-45bb-8d9e-7c4d239ca803"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "883985c4-5b1d-4cae-92bc-2539079eea33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21c23117-d17c-4e5e-b340-5876c4c2b65c"
            }
          }
        ]
      },
      {
        "id": "fdef8e07-f51a-4c9b-a990-d36ae005031e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4bd8d2a9-159d-4d1f-9d13-24f29ce87376",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e595178b-d74a-490a-9bd9-cac1f20eee06",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "68839180-699f-47c4-863b-1adc1805c103",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9366cae-a833-46fa-a444-406e5063b935",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43e09a73-07f1-475d-8cbe-7ac2b68059a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee303e6-37e9-400d-87d4-c93dce3ad669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4712a558-21c3-4c67-8ce4-b69b5d670b4f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f6a6df9-eada-42c8-833e-2161c3ab867b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76074f7e-87d2-475a-84bb-fe654eca5306"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74226973-db41-46a4-a9d5-443f22dc4fe7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4734ce7-1bad-4704-940f-43ad525531fa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b766311a-05e3-4643-8310-dd4bddc1e28f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "35c514f2-b124-44d3-84f8-2541a51cf5a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86eac295-c21a-4bae-9b6d-26aa87f4611c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62aeb6f3-bad4-4283-afb4-e4e661469345"
            }
          }
        ]
      },
      {
        "id": "efc4b9b9-6437-47ad-b0bc-7d82f35b7b94",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "11107229-880d-41e8-8d1f-4aa4a8266727",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea8cc16a-16b2-43c2-9e21-f93a747f2e93",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2704f311-11ca-410c-ba1d-95056af2730a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321cdf8b-99fe-482d-aadf-8c847677e474",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a687c9a-8f40-4a79-8b86-f33a7e6774ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5eeb7d2-c701-4447-8099-d0f2cc4a307e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f5be99b-11c5-4778-88ed-ebcf436b7b4a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04cd3f63-6031-44e9-b225-aa62e720040c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "076be20b-95d1-42d6-8485-a5c758074d28"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "53eba2d5-0a7c-4bd1-9750-b5dde284918f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42408d9f-8072-4a3c-9ca0-b0b96b9c0213"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d32c2c61-7e93-44d9-a46f-2a0d8af93191",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f9b4acc2-d25f-4272-b218-b4883ae93b4e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b118001-b667-49f6-a86b-b850aaa05b8b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea9dd4bc-7425-4b1f-b420-50c3d098af7f"
            }
          }
        ]
      },
      {
        "id": "b1d7f4db-df36-49bf-864d-70ed65ef2fc5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3727165f-cea7-4733-b20b-b05cc564fc4f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02a57a89-2b34-478e-b6cb-adc5ba3fc72a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6fd3c5ab-8967-4d7e-8063-9a18aa85244b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "473cb178-b1cd-42e9-bdb6-ddeb502a845a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8fbb05b-4bc1-4e6b-9882-9904efd79e58",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 38
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 11.805555555555554,
      "responseMin": 8,
      "responseMax": 282,
      "responseSd": 22.734620845943713,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719794638969,
      "completed": 1719794649976
    },
    "executions": [
      {
        "id": "877b7c39-b8d1-477f-be04-451c460f2f88",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d3d08cad-7572-4e7b-a1df-576cc1a117fd",
          "httpRequestId": "d2a4ddd6-be49-4409-8db7-99aefd3ff981"
        },
        "item": {
          "id": "877b7c39-b8d1-477f-be04-451c460f2f88",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8daed5fc-f47b-45b7-b873-a0b51cea4d3c",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "d230c2a9-1b68-46f1-9b64-ac6f7e45da24",
        "cursor": {
          "ref": "0bede629-5672-4810-ad4e-be5c577cebcc",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9b5bd83d-6c00-4985-80d0-618d2579d422"
        },
        "item": {
          "id": "d230c2a9-1b68-46f1-9b64-ac6f7e45da24",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "db9b31dd-c84d-4354-99b7-f8ea9b3c71f1",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "eeeb369f-9a32-4557-9278-d750e66bf795",
        "cursor": {
          "ref": "3230a03b-efea-4cf0-939a-3efa42a54b1d",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7f591241-f7fa-4e49-9512-728a63b32f87"
        },
        "item": {
          "id": "eeeb369f-9a32-4557-9278-d750e66bf795",
          "name": "did_json"
        },
        "response": {
          "id": "c4daa419-b8c1-47a1-8d56-0f31b8a6ec33",
          "status": "OK",
          "code": 200,
          "responseTime": 215,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bdada92-f3a0-459b-b209-56fb2412b2d3",
        "cursor": {
          "ref": "7a5bf7fa-a496-4395-bc7c-8c8a084129de",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3cada0c6-7e53-4a0c-9c23-2850c6248e74"
        },
        "item": {
          "id": "9bdada92-f3a0-459b-b209-56fb2412b2d3",
          "name": "did:invalid"
        },
        "response": {
          "id": "71c504ff-4796-43ac-b0a5-0eb4e44eed17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bdada92-f3a0-459b-b209-56fb2412b2d3",
        "cursor": {
          "ref": "7a5bf7fa-a496-4395-bc7c-8c8a084129de",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3cada0c6-7e53-4a0c-9c23-2850c6248e74"
        },
        "item": {
          "id": "9bdada92-f3a0-459b-b209-56fb2412b2d3",
          "name": "did:invalid"
        },
        "response": {
          "id": "71c504ff-4796-43ac-b0a5-0eb4e44eed17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d4c320-328e-46f0-8d07-b9ee8f4145e5",
        "cursor": {
          "ref": "1da25508-14f4-4342-b4a3-130829b4a1ff",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "73b7e427-581f-4804-9f14-89d4bc6cc732"
        },
        "item": {
          "id": "a4d4c320-328e-46f0-8d07-b9ee8f4145e5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c3ed99cc-968f-41f0-8bc1-44dabd42255f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 112,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5d9a87-57ef-4622-83ce-e42d1452e34c",
        "cursor": {
          "ref": "6c3f3f8f-0c87-4604-aed8-3845c34e41b5",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "28f9a7b4-b362-4fad-8dd5-692c9f6a6d42"
        },
        "item": {
          "id": "1f5d9a87-57ef-4622-83ce-e42d1452e34c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "da390715-8919-4b42-9508-adbfaef81831",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee10546-d3c7-463d-85c1-f576fcfe58c4",
        "cursor": {
          "ref": "75ae6fc5-b9c3-4cd9-b944-343e72fad403",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "05ddea04-10ed-4c4e-9753-0edc2c907f7a"
        },
        "item": {
          "id": "4ee10546-d3c7-463d-85c1-f576fcfe58c4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c26954d0-d190-475f-bc66-cb0c9f34801e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96183379-6204-4cf1-9e5b-d462cf62b596",
        "cursor": {
          "ref": "5ca056e0-8a5e-4d3c-8363-80e7b9552fc8",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a2f3bb4f-83c7-4819-a38c-d23b65dbac10"
        },
        "item": {
          "id": "96183379-6204-4cf1-9e5b-d462cf62b596",
          "name": "identifiers"
        },
        "response": {
          "id": "b18a0d19-5170-48a3-a6db-f03732d5ad7b",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230dda98-537f-4414-bdf6-927d898c8c5f",
        "cursor": {
          "ref": "e0f9ae09-0f80-4e1c-b649-2a5c15646044",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "40f229c0-0e42-4955-8c26-35dc176d6023"
        },
        "item": {
          "id": "230dda98-537f-4414-bdf6-927d898c8c5f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ac5036b9-f034-42e2-9f47-6d01f1ec70bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31f53e8-a23f-410e-9713-74b86d88fff9",
        "cursor": {
          "ref": "5b92c6dd-45e3-40b4-9a43-cf185e75015d",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5fae057c-f653-4213-a6ac-135e1b54d355"
        },
        "item": {
          "id": "d31f53e8-a23f-410e-9713-74b86d88fff9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0c42dc0d-ec5b-41ea-bdcd-bc7a6acb6175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1eacb06-be5c-4d15-9cf7-29c8175b361f",
        "cursor": {
          "ref": "1e859f6f-6782-4079-81c8-54b25f72b9a2",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c83f7910-1267-48ee-afe5-b825b89ff157"
        },
        "item": {
          "id": "a1eacb06-be5c-4d15-9cf7-29c8175b361f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "dcf2e686-149c-49cd-90b2-ff9fd8e9bf76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f38fa0c-1dcb-4221-8c1e-a9b00ed4ed6f",
        "cursor": {
          "ref": "18b2831d-6da6-42df-ad77-b9df48c117e7",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3be29db5-2886-4956-ae30-4baf8b9634aa"
        },
        "item": {
          "id": "9f38fa0c-1dcb-4221-8c1e-a9b00ed4ed6f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "24737d02-d811-42fe-ba90-729be014f3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2f9284-933a-46f6-961f-8629ad908822",
        "cursor": {
          "ref": "b74c7c77-d5f7-47bd-856b-bd6e8c8838a4",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9f99c97c-36bf-4821-b9a9-2e8ef930218a"
        },
        "item": {
          "id": "8c2f9284-933a-46f6-961f-8629ad908822",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a0d7aacc-9751-4a01-9909-cde9b9081110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e73f554-af3a-4031-a28f-885858c85237",
        "cursor": {
          "ref": "8c11480e-6120-41a4-afd9-bc02bbf00bff",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bb96f834-648d-4adc-842b-69345d50255d"
        },
        "item": {
          "id": "2e73f554-af3a-4031-a28f-885858c85237",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "80a62c52-e94c-4fdf-9884-43dd988d6006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3c1c7b-c49d-4159-b0b1-8d44b3bba252",
        "cursor": {
          "ref": "43041c06-0e97-4dc2-bc77-900ef65685c7",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "99440116-b190-4f37-be9c-e99985e8537a"
        },
        "item": {
          "id": "7c3c1c7b-c49d-4159-b0b1-8d44b3bba252",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "15f1ac0c-498b-46c7-9a8b-648cfdfef17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f1dab9-2d68-4e83-accb-4ef1d9ac81e0",
        "cursor": {
          "ref": "80ceed73-c228-4b28-9fe7-90c80f253658",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7cc76550-a59c-44c4-ad97-b2e961ba8a30"
        },
        "item": {
          "id": "b9f1dab9-2d68-4e83-accb-4ef1d9ac81e0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "591c86a3-138a-483a-ae88-321833a0d26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dac2dfa-3211-46f8-aef4-eca85cb72f05",
        "cursor": {
          "ref": "9cd930c4-95c5-4174-a723-5c32316c8eed",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "981143dd-636d-47df-a24b-0f60ef6a6b74"
        },
        "item": {
          "id": "4dac2dfa-3211-46f8-aef4-eca85cb72f05",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "33b758ad-5b5b-4409-82a0-c2be7efbb5f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ecb54b-39c3-4546-8f66-2870e89f3a4f",
        "cursor": {
          "ref": "2e383225-c6c0-4da8-8f7d-f8f2d073f43e",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ffa86f7e-2d57-4551-a85b-678532213ad0"
        },
        "item": {
          "id": "a3ecb54b-39c3-4546-8f66-2870e89f3a4f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e9103ab0-9b4d-42fb-bb11-082b206b1469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0750b03-47a5-4c51-a8f2-ca5080351bb7",
        "cursor": {
          "ref": "13cc98fa-d950-4fa3-a6fc-e6f36476faf9",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c0b6e4ee-119a-4af2-a829-abfd9a1285db"
        },
        "item": {
          "id": "e0750b03-47a5-4c51-a8f2-ca5080351bb7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "049c12a1-357f-48d4-ad62-95af4234a598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b074043b-4fc3-45a0-a23d-290f8c9819c0",
        "cursor": {
          "ref": "0fd0b920-0f47-4fe6-bd16-4fe264c43790",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "303d42d0-d1d9-4526-8300-9a49e4609166"
        },
        "item": {
          "id": "b074043b-4fc3-45a0-a23d-290f8c9819c0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "53bc174e-d604-49b6-b264-c758745eccc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f245d256-17c3-4907-9228-a418c3e11843",
        "cursor": {
          "ref": "88f641d6-1f54-4810-a0f5-d3053ce70abd",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "04b55bde-c971-4d6f-a91d-d24693717530"
        },
        "item": {
          "id": "f245d256-17c3-4907-9228-a418c3e11843",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a116f69c-90aa-495a-8046-fe37875472a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39dc904-b932-4a39-b8ee-e4d5a0582b66",
        "cursor": {
          "ref": "d0999c98-33fc-4f5b-965c-c2db6ddcaffa",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "da003208-46a4-4bc8-8441-1ef8b3f5391c"
        },
        "item": {
          "id": "b39dc904-b932-4a39-b8ee-e4d5a0582b66",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "01b6433e-7e48-4aa6-9e41-e9dea937867a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e1c88a-4079-4fb8-8bcf-06d559109979",
        "cursor": {
          "ref": "a36313a6-9196-4c88-a05c-f55f44242709",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d79d45bd-37c1-4aca-9dd2-74aa3f4e0694"
        },
        "item": {
          "id": "42e1c88a-4079-4fb8-8bcf-06d559109979",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a72eaeb0-1789-4726-a3d2-3a521139023c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce203056-0a75-4eaf-96e3-ce5d9cace652",
        "cursor": {
          "ref": "416f2b31-52bd-4308-8d45-6a87c8380a01",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1fa91624-8fdf-49b3-ae0c-0abeeae315ef"
        },
        "item": {
          "id": "ce203056-0a75-4eaf-96e3-ce5d9cace652",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bfe7c6b1-acde-474b-89db-61fb580cba65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc3dbe4-ae2b-479d-8790-b74204dd494d",
        "cursor": {
          "ref": "dffb2fdd-12ab-4cb0-bf51-b1e9bf2165c2",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3d6aa8c9-0cf3-4384-adf2-de568750266d"
        },
        "item": {
          "id": "fbc3dbe4-ae2b-479d-8790-b74204dd494d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1b073855-49d4-463a-a866-44ab193c20ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24124745-45a9-4522-aab2-d80b9891d568",
        "cursor": {
          "ref": "c84d4445-0161-435f-a22d-f7d4bd6c5712",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8d88fb0c-91b1-4101-8c08-c33687803270"
        },
        "item": {
          "id": "24124745-45a9-4522-aab2-d80b9891d568",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "51b495bc-797c-49e2-90da-dfb2bf4f466a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2badf677-dd53-4173-a4b8-e38ae2128538",
        "cursor": {
          "ref": "e7602bae-cd8d-4fad-9450-3d338c5520ac",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "438465cf-dbc4-45a0-b7a9-1f91d810f5c9"
        },
        "item": {
          "id": "2badf677-dd53-4173-a4b8-e38ae2128538",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b86e8907-78a1-4dec-b9b9-d020fbd41cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096b422a-6a81-47f1-a7b2-40fdf72fb636",
        "cursor": {
          "ref": "bdcdfcea-0f92-425c-b0a3-a909b516fb3a",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3df51dc0-5655-4f10-8f41-32b11c557eff"
        },
        "item": {
          "id": "096b422a-6a81-47f1-a7b2-40fdf72fb636",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d103962a-b6c4-447e-ad51-52dd75015e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea4bdd9-4096-4844-9754-ca083ec7c617",
        "cursor": {
          "ref": "c2620248-ca5d-49c3-bd5f-d064f169c6c0",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e2fc5d80-8e91-4d42-897e-c3e8ccb46b29"
        },
        "item": {
          "id": "0ea4bdd9-4096-4844-9754-ca083ec7c617",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f633ea95-0170-42d2-9d29-9274587fcd17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7bf53df-9746-409b-b929-de2e7f558c97",
        "cursor": {
          "ref": "b7a22a1a-3945-429d-a9c2-80b86f6ce388",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f59cc7e6-e7cd-4336-8bd7-81dcbbc89846"
        },
        "item": {
          "id": "b7bf53df-9746-409b-b929-de2e7f558c97",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6c09e1ed-4578-4ec1-b97e-c47d8922a8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4a3320-a5a2-4270-ab87-c42f73aa0d44",
        "cursor": {
          "ref": "917041ca-e9fa-4c6a-8311-7f8b69d8d7ab",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f03aa7de-2239-4f29-82e7-62dd395304b6"
        },
        "item": {
          "id": "9f4a3320-a5a2-4270-ab87-c42f73aa0d44",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b03fe33f-881e-4409-807c-5afdaac52f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587611d1-8c96-4451-b7a6-8c9f4b7d62a4",
        "cursor": {
          "ref": "69be172a-ee0d-4abc-8b99-9f9fe6f45891",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0e17658e-3fad-41c2-a4a9-eaaeaec48201"
        },
        "item": {
          "id": "587611d1-8c96-4451-b7a6-8c9f4b7d62a4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "326fad40-61fd-49f8-8487-370553224071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e11c1f-93ac-45ca-9a34-60a1436dd94a",
        "cursor": {
          "ref": "7a76f566-5273-4806-8166-044386958577",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "964d3426-4b88-4f34-9700-3158ebc9e1d3"
        },
        "item": {
          "id": "51e11c1f-93ac-45ca-9a34-60a1436dd94a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "65d637dd-5b3b-4f10-a396-6d1182b4fa23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c87b45-72f1-4c32-8e17-5ee38e5f3947",
        "cursor": {
          "ref": "5eefb821-e63d-4eb6-ac11-aa0d8c9c11d0",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b4becf39-a167-4460-b95e-80fd0476ca91"
        },
        "item": {
          "id": "57c87b45-72f1-4c32-8e17-5ee38e5f3947",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b05363cd-52e2-4bee-bb70-d11d165b3ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11048f2f-5171-4083-85b0-cb8dad085943",
        "cursor": {
          "ref": "a2b2536e-3a68-4c0b-b906-89d4a17dca7f",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "37411c35-2ca6-444e-8530-6655f67de9c8"
        },
        "item": {
          "id": "11048f2f-5171-4083-85b0-cb8dad085943",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ba16c57a-85c0-4777-944c-83e1dbedf0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8492cce6-c873-4567-82fe-f7aa11424b7a",
        "cursor": {
          "ref": "073b539c-f03a-4835-9fe9-1030f1af292c",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9247d262-7e66-4283-a34f-e983f021e6e2"
        },
        "item": {
          "id": "8492cce6-c873-4567-82fe-f7aa11424b7a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6697569b-d187-4793-b637-790b00f42f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9a9dc7-e9b3-478c-996d-cdd035faca36",
        "cursor": {
          "ref": "a7312ebe-f14a-41ff-ab28-84a77e3934c9",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "db6bad82-00cd-4cf3-b1eb-86e199cf5b0e"
        },
        "item": {
          "id": "bf9a9dc7-e9b3-478c-996d-cdd035faca36",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8f1a9ea3-0564-470a-92d9-8d1729996584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1380f6c-c6b7-49cb-a82f-3d7e86223cfe",
        "cursor": {
          "ref": "8946a46b-9138-4e51-a0a7-18cad16ba11c",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1e79b16d-4374-409c-8f3c-9a77d23dcc6c"
        },
        "item": {
          "id": "d1380f6c-c6b7-49cb-a82f-3d7e86223cfe",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2346070b-9f68-4eea-b138-000816f83107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744a649a-a129-460e-972d-0776a3e1353f",
        "cursor": {
          "ref": "cebdaa69-2a4f-4426-b4e5-7ab9d7373ffd",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "50358a50-e145-44da-9c15-db8e6b9eb8e5"
        },
        "item": {
          "id": "744a649a-a129-460e-972d-0776a3e1353f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a425dc73-b481-45f0-945d-edea9532546e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42a16cd-1184-4404-80b9-f30772545c43",
        "cursor": {
          "ref": "535eac2b-ae0c-47fb-8ad8-1308ea7043f9",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d176f99d-1136-4eb4-8b5a-a012561809ea"
        },
        "item": {
          "id": "a42a16cd-1184-4404-80b9-f30772545c43",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2ea8f1e3-8ff7-4b82-8a16-d6e21a2a6c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f82b061-005b-4dc4-948e-8305ffa866ec",
        "cursor": {
          "ref": "cae87984-ac83-4bde-bc70-ccf84f2fba3e",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "96834b70-953c-4005-a8ca-e5cd12e60bf0"
        },
        "item": {
          "id": "7f82b061-005b-4dc4-948e-8305ffa866ec",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fd4c878a-0685-4bd2-88e2-90beaaa630bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4488f9d6-4d15-4906-891f-08a6958519b9",
        "cursor": {
          "ref": "34edb5dc-9133-431f-915a-ebb98cc2accb",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "dabf252c-0827-470e-9acb-2bc99cfa8bb4"
        },
        "item": {
          "id": "4488f9d6-4d15-4906-891f-08a6958519b9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "540e1f4f-f39c-4674-9ca0-7c495d6abf96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980b5950-bc9d-4676-b66f-a8df092f88e9",
        "cursor": {
          "ref": "63b13dc5-d0e2-45f8-94c5-074a2df693ee",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "06c2f189-1bc5-4998-b1f0-853894af07f0"
        },
        "item": {
          "id": "980b5950-bc9d-4676-b66f-a8df092f88e9",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "98aba66d-7a6a-4a17-b8ef-a25c2d7af7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ff571f-3aee-43b6-be38-78ffc6aa8005",
        "cursor": {
          "ref": "a5795413-9db8-4f1c-8a7e-7c54bd4febdc",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a8216e5e-abc6-4418-88dd-073827f8dc8b"
        },
        "item": {
          "id": "b2ff571f-3aee-43b6-be38-78ffc6aa8005",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "49e47cd4-69cf-4430-8c0d-5ee2348c7064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7113ca-53a9-49c3-9a2d-3c35f2c86658",
        "cursor": {
          "ref": "de73b12e-9b61-4547-aba9-5a3a33daaa87",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8736f99c-726f-4f0f-950a-314577d07542"
        },
        "item": {
          "id": "fd7113ca-53a9-49c3-9a2d-3c35f2c86658",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4b037dd0-de2e-4984-bd86-bc1a7b014661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88adab67-eff9-402f-9faa-ceacce327ef7",
        "cursor": {
          "ref": "a8afa32e-930a-4936-8402-861f5a1052db",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4ba20938-62a4-4d19-93ac-e44e8b213378"
        },
        "item": {
          "id": "88adab67-eff9-402f-9faa-ceacce327ef7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b25cba16-fb3c-4f4e-8f2f-6c0924d96105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3acdcb24-e41e-4374-adef-eacd297b0f53",
        "cursor": {
          "ref": "138e7784-3542-400b-aa33-9735db25c613",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2b7b00f9-ad58-40b8-8771-7d422b49d930"
        },
        "item": {
          "id": "3acdcb24-e41e-4374-adef-eacd297b0f53",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "deacf610-bb36-4d5e-ab04-9ef5cbb1e1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8c00e7-0860-4cf6-ac47-a7b70d6f1baf",
        "cursor": {
          "ref": "46b2b9ed-20ed-4860-9ae8-95c6630e9ef5",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ee5640b6-4bab-4c13-8092-dbf30c568253"
        },
        "item": {
          "id": "7b8c00e7-0860-4cf6-ac47-a7b70d6f1baf",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3bffedeb-b6f0-455c-a36c-6c13df68d7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7000ee70-2239-42ec-b0bd-14b9465b5e6f",
        "cursor": {
          "ref": "67d9f49f-8c10-4ab2-b9c4-25677f88e9b5",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0d717ce5-94b2-481a-ba31-d0c12109db66"
        },
        "item": {
          "id": "7000ee70-2239-42ec-b0bd-14b9465b5e6f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "acf4c372-c7ce-4f60-9e0f-162c2e0b0ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7868871c-e576-408e-986a-9df5649ff1e8",
        "cursor": {
          "ref": "d86a949d-221b-490b-a29c-ef56619207c1",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "10184fab-be34-4c5b-a86b-5259dd438496"
        },
        "item": {
          "id": "7868871c-e576-408e-986a-9df5649ff1e8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "bfd3f275-2154-4c6a-99d6-f9e177dbb5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3911a9-d8a1-4f31-82e2-dda3c4973e5f",
        "cursor": {
          "ref": "bd812650-04ed-4ec0-836e-54e11e12941d",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "fd76072c-93ce-41fb-8f79-b5773ecf4e58"
        },
        "item": {
          "id": "3c3911a9-d8a1-4f31-82e2-dda3c4973e5f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "febca204-c2c5-4aae-8085-e821718460a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7823eb3f-1aad-4edc-8511-e5373b4c8397",
        "cursor": {
          "ref": "42d7ac92-235c-40a3-b1c5-ed452f9ddec0",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "eef697e0-d9b6-4177-96cb-75918c22c9af"
        },
        "item": {
          "id": "7823eb3f-1aad-4edc-8511-e5373b4c8397",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e6a63069-002b-4324-9ccf-7587d643ce7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7c91bd-73a1-4dc8-a45e-8c78e056466c",
        "cursor": {
          "ref": "c74114ab-3b31-4be3-b677-85f628614000",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d8fcba5c-5238-40e3-a591-0dc586ae5676"
        },
        "item": {
          "id": "3c7c91bd-73a1-4dc8-a45e-8c78e056466c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "71540034-4416-4f3d-a6cf-287fbf076616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4aaea61-7f61-4a41-98e9-48b4916634a0",
        "cursor": {
          "ref": "ab877dd2-8757-4c10-8e7b-4dbdd8bc2215",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c2fbc9d0-a9ad-441e-bd38-4956193a2d85"
        },
        "item": {
          "id": "e4aaea61-7f61-4a41-98e9-48b4916634a0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ef6b64fa-7bed-4d21-96c6-eda4970152e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5604a6a-6d47-49c1-b55e-4383b6837789",
        "cursor": {
          "ref": "4f2aff43-422b-4079-952b-5bf26e0c5163",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e386e159-27e4-462c-9281-6536ef558ad7"
        },
        "item": {
          "id": "c5604a6a-6d47-49c1-b55e-4383b6837789",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7207834a-4d0e-429f-acc4-2a3ba09f74a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c53e551-fa34-43b8-a3a5-c39d5f306309",
        "cursor": {
          "ref": "0e5a6ae8-d910-4674-bce4-925f90533fe9",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d7725ec3-8d62-400f-986e-1e0237fa8ec4"
        },
        "item": {
          "id": "2c53e551-fa34-43b8-a3a5-c39d5f306309",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ec551646-7bb3-4cb6-a59b-26eb38aa7066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408bfb80-e416-4ede-8975-b3690d537ec7",
        "cursor": {
          "ref": "3c03d92d-5fb5-4bde-b6ee-7d6515adb988",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1a57b28c-6bae-4c16-bde9-a442bb838ad5"
        },
        "item": {
          "id": "408bfb80-e416-4ede-8975-b3690d537ec7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "134a29fd-2aea-4459-9f15-499e3454131a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64659d4-626c-4c61-b8b6-e0dc2e056a7b",
        "cursor": {
          "ref": "23b01a09-5061-471f-91e0-60e330d5846c",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4264da3b-c9a3-40d7-b027-065bd27eba06"
        },
        "item": {
          "id": "d64659d4-626c-4c61-b8b6-e0dc2e056a7b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "292977b1-57ff-4c4e-af5e-74af999056ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54022c88-8763-46f1-8d18-482993328d3d",
        "cursor": {
          "ref": "7c1da98a-7ee6-4ee0-bfd9-b242767103d6",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d1012b98-fe31-4016-8c31-3a36fa2556d5"
        },
        "item": {
          "id": "54022c88-8763-46f1-8d18-482993328d3d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8800e5f4-5eba-4574-9f38-2201dfbe1eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293f7409-b504-43a6-9884-c77667a7b4ed",
        "cursor": {
          "ref": "889a8406-48b7-49b7-b41c-d2d6a5faed0f",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2d59ceb5-7d9d-4cea-b1a8-49c88af7e4cd"
        },
        "item": {
          "id": "293f7409-b504-43a6-9884-c77667a7b4ed",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "248464f3-c6d2-4941-8b83-e389ead92e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c8c3f7-4af9-4d6f-a8e4-1cafdf852c16",
        "cursor": {
          "ref": "0fde9cb4-d20a-4721-9b9f-47b4b5830dc8",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7104633b-0822-45ba-8d5c-09119f431860"
        },
        "item": {
          "id": "49c8c3f7-4af9-4d6f-a8e4-1cafdf852c16",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1ce412e5-6492-4229-9867-ae4e73d855bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbd2cd3-8a31-44bf-9ffc-bada73022351",
        "cursor": {
          "ref": "d9986407-6d1f-4d53-8894-deaaf6640331",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "328b1bcd-3cac-4d28-bc61-c6aca6f901d3"
        },
        "item": {
          "id": "9bbd2cd3-8a31-44bf-9ffc-bada73022351",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "cd7a4218-739a-437e-9346-5a013546ef19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127e9657-2f02-4966-84ba-f736465c37d8",
        "cursor": {
          "ref": "bba89558-e4d1-47d6-ba62-8b45ef51e408",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "afb9e5cb-9af3-45a2-a927-e0310379efd7"
        },
        "item": {
          "id": "127e9657-2f02-4966-84ba-f736465c37d8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a32e53d3-c22a-45ad-a247-cb3dd52c5d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01df85fc-e08e-41f8-855e-609c2f619aae",
        "cursor": {
          "ref": "4e39dcc0-2ee1-4194-9a69-b9fb72a17e1f",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d1a4cf0d-0177-4194-ac68-78201d3000b1"
        },
        "item": {
          "id": "01df85fc-e08e-41f8-855e-609c2f619aae",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "abd9fbc4-6cea-4ca3-aa7c-bd3f47c35cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7dbca4-dddc-460b-9b66-570182396af8",
        "cursor": {
          "ref": "cf34e227-23bb-4f1a-b1e5-34e5343c3787",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "22470f3f-d68b-4d0b-baa7-fc4b7831431a"
        },
        "item": {
          "id": "4e7dbca4-dddc-460b-9b66-570182396af8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2ea1e743-8e62-4880-ac6a-caa3e16dfbfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de68a7d6-9750-43fa-a0b8-f1628e44b34d",
        "cursor": {
          "ref": "383203be-1a5a-4c70-9521-73b302e9161d",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f6db212f-bd3d-40b5-9a06-d9690b428f25"
        },
        "item": {
          "id": "de68a7d6-9750-43fa-a0b8-f1628e44b34d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0a63e180-cd1f-4edf-9181-332b845a7209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e35cc4-28f5-4675-b67a-955215282d83",
        "cursor": {
          "ref": "bd63d43d-1229-4e4b-a642-f21292df69f6",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0e573832-1bf1-407b-ac37-f0f406b19a4d"
        },
        "item": {
          "id": "a1e35cc4-28f5-4675-b67a-955215282d83",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "68bc890e-2ec7-4b72-b4ff-a8cce4b65170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de027894-55c0-4834-a0b6-620de12a5a45",
        "cursor": {
          "ref": "86c66323-0724-4631-8ed2-5ec39dfbe211",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a5ff87d5-0c35-4f40-ba8a-d1e71e71bb20"
        },
        "item": {
          "id": "de027894-55c0-4834-a0b6-620de12a5a45",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7477d2b6-c142-4d9f-b41f-7c45bc0048d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480af006-9f0f-4a6f-8b6e-2620c66171c1",
        "cursor": {
          "ref": "57cf86f1-2d54-40b9-b69a-892c8e5a737a",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9d9eb91d-6d6a-4a27-b685-c36e61b322ff"
        },
        "item": {
          "id": "480af006-9f0f-4a6f-8b6e-2620c66171c1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "bda6c2de-2902-4a60-b02d-171209f76118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b632b55e-1248-4789-ad0f-cfb29cf190c7",
        "cursor": {
          "ref": "375e7040-3222-4d93-960d-cdb3c66d18c8",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "332bdca9-d0f6-4415-867a-9ee21b6b3820"
        },
        "item": {
          "id": "b632b55e-1248-4789-ad0f-cfb29cf190c7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7e1a266b-e6cc-4a9c-8559-abdd30f6940b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8732f1c7-296d-48ff-b039-2ed7775a8b5d",
        "cursor": {
          "ref": "2d9c317b-98b6-4def-9067-8bc12ed366b8",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c65617d3-bdd0-456e-9ea6-fe5d589c6c8f"
        },
        "item": {
          "id": "8732f1c7-296d-48ff-b039-2ed7775a8b5d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ce9a8f33-ad33-4e97-8cef-16ab828bf71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8b991d-2f11-4c6f-a0fe-b495c77d0e05",
        "cursor": {
          "ref": "cd5840e9-0015-4fa0-983f-c7886baaae62",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "48b0936c-2dd1-46a9-9a2d-ba32ce9a8888"
        },
        "item": {
          "id": "4d8b991d-2f11-4c6f-a0fe-b495c77d0e05",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "68d6e930-3e3d-4b64-90fa-a50ee7ca4005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058010ed-cf08-4527-9ef9-76a9e1df1a74",
        "cursor": {
          "ref": "735d6a75-072c-47d1-a6db-e5a8aa4321c0",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "28664119-dd11-4176-967a-9752ab258651"
        },
        "item": {
          "id": "058010ed-cf08-4527-9ef9-76a9e1df1a74",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "aafa5749-a9d8-4ae9-8b04-8ea4ac2e4ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07095793-d26b-4b29-b6af-48b010c78eb2",
        "cursor": {
          "ref": "d401fccf-e333-4a50-97c4-ec44d84724dd",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1b4beeec-87e4-438b-be15-12498dc304cb"
        },
        "item": {
          "id": "07095793-d26b-4b29-b6af-48b010c78eb2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "62720264-6ef4-4857-84e3-2e2c95b261c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04143b4f-aa89-45c3-88cd-c07ff18cb897",
        "cursor": {
          "ref": "ed17ed72-6ea8-447b-a7f8-02c10a490e8d",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f69deb69-fabb-4eb6-9a2a-708b371cb96d"
        },
        "item": {
          "id": "04143b4f-aa89-45c3-88cd-c07ff18cb897",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c133c1a8-fb27-4caf-a043-eb7141a3aeca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b91ab6-1015-4d56-904a-75c4e1f0e938",
        "cursor": {
          "ref": "4444abc7-ad56-4c8a-9604-409dce258121",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "08cdf43f-5325-4a08-a185-8d91e5906636"
        },
        "item": {
          "id": "96b91ab6-1015-4d56-904a-75c4e1f0e938",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "284f0c59-48bc-4ff5-89be-6758e35cc17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3dc139a-eca2-4b0b-8082-866adcb77805",
        "cursor": {
          "ref": "b372a075-e5c9-430e-b1b0-256bede86258",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "08c91163-f5bd-4b14-b5be-5fa66a0b7cd4"
        },
        "item": {
          "id": "c3dc139a-eca2-4b0b-8082-866adcb77805",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7751d556-babd-4ba0-bce7-dc58914ee204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7f4f5c-37a7-44a2-ad71-64972e6c3f2a",
        "cursor": {
          "ref": "f89a6e90-07d4-4777-8350-ca7436630df9",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "eb4aad10-ec3a-4807-a42e-c3c6a6db41ae"
        },
        "item": {
          "id": "de7f4f5c-37a7-44a2-ad71-64972e6c3f2a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8e93a889-5fff-48d4-a469-4caeddb18481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f6b584-689b-42a8-b91b-5557ffa36540",
        "cursor": {
          "ref": "d68f0e68-873a-4756-b66f-5cba0edf2723",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b25855f2-1c79-49c1-981f-50979ab7764b"
        },
        "item": {
          "id": "23f6b584-689b-42a8-b91b-5557ffa36540",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b5b5022c-4d46-4bf1-91f8-649c602cd7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11fe059-0e50-48fa-b39a-7fb7e5e3d8d1",
        "cursor": {
          "ref": "6132d115-e885-4aa6-8ffc-288babb4bf86",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "44cbc242-089b-4479-a8c2-1e7b2e5dafe1"
        },
        "item": {
          "id": "b11fe059-0e50-48fa-b39a-7fb7e5e3d8d1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bcb32361-ddf9-40ab-a775-3fad1ac09656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf97ca3-2200-4f7f-b3d1-c722694df4b1",
        "cursor": {
          "ref": "b5bb2dc5-9eeb-436a-8f98-469ce4adff55",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "be21e9a9-cc0c-4e50-b850-a70f2714776c"
        },
        "item": {
          "id": "3cf97ca3-2200-4f7f-b3d1-c722694df4b1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ed5e2abb-752d-446f-a5be-2beff53b0f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712c1f10-82bd-4351-9ece-0fcae146c9a2",
        "cursor": {
          "ref": "5afaa1c9-0187-44fb-8d97-099047933694",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b62006ba-3355-4303-ad23-0b966906bb41"
        },
        "item": {
          "id": "712c1f10-82bd-4351-9ece-0fcae146c9a2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "dd02b73c-7306-436a-9e05-2850d15cd8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eab66a6-9c22-495a-95ec-bb5d93e55591",
        "cursor": {
          "ref": "e3bc2762-61e0-437d-96b6-a1a8d9de9295",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1a8d51f8-528b-4547-b88e-aee602435e42"
        },
        "item": {
          "id": "5eab66a6-9c22-495a-95ec-bb5d93e55591",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "06aae60d-c8b0-4adb-abac-3f30d2e8d2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8d1d34-a93f-4ff9-896a-5c46eecfbfc8",
        "cursor": {
          "ref": "35bed5ec-d9c5-4e90-b3f9-9e44eadece80",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "289df13f-3f39-4dbb-855c-6e82127df54b"
        },
        "item": {
          "id": "6b8d1d34-a93f-4ff9-896a-5c46eecfbfc8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f5a3fce3-2e2e-472f-a059-61351f26388b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c7a10d-02c8-4a37-b099-f214459f6b17",
        "cursor": {
          "ref": "9e6b56c8-11a2-4f4e-add4-f76ffa72444c",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "13d7f480-3f3d-4964-a634-a3938714b1be"
        },
        "item": {
          "id": "40c7a10d-02c8-4a37-b099-f214459f6b17",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3c925569-2474-472d-8aa7-6d5ed748cc83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ffe46c-7dde-4d75-a0f4-fd2eeb7bcfff",
        "cursor": {
          "ref": "7fa6d2f7-bd4b-4973-910b-d2455e257fb5",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2de21970-cc80-4cb8-a78b-2b508c61a46a"
        },
        "item": {
          "id": "66ffe46c-7dde-4d75-a0f4-fd2eeb7bcfff",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1ead4737-65ba-427b-bf21-5cf477fd9599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdce2f46-e5eb-4207-8fee-4dda72cf0337",
        "cursor": {
          "ref": "ecd43d0d-3f99-451a-ad48-d3ffdf8407f3",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d08ccb7d-6e7d-4ec4-8b3e-e8f311ce5db2"
        },
        "item": {
          "id": "fdce2f46-e5eb-4207-8fee-4dda72cf0337",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "73ef84dd-8406-4338-bd13-ada32107577d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c192c6-9382-4cab-9d43-0eda9fa5fc33",
        "cursor": {
          "ref": "d74c66b1-2f8d-4d31-8741-b913a5724a5e",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "631e71ef-2052-4dd0-ac37-e36029dd32d2"
        },
        "item": {
          "id": "c7c192c6-9382-4cab-9d43-0eda9fa5fc33",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c79be370-9789-4af9-abc2-03739c1b369d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149c576d-1e5c-42d8-87d0-5e3607291ac4",
        "cursor": {
          "ref": "517509ae-86f4-4dff-875e-bca1e10c48e8",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ff377308-a9e2-4df8-9afa-ffab8c6ebbc3"
        },
        "item": {
          "id": "149c576d-1e5c-42d8-87d0-5e3607291ac4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "31e06315-9afa-484f-bfc9-e1fe4760ab21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a03a5c-b7ab-49f8-aa08-b660f6d03ee9",
        "cursor": {
          "ref": "4cf268b8-302e-4dc6-8693-089bc04986c2",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4c874933-2123-4d45-9629-8534c87d1b9a"
        },
        "item": {
          "id": "38a03a5c-b7ab-49f8-aa08-b660f6d03ee9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "bd2b947f-8847-4844-a4af-e8b1abf24f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1557b952-2abb-4001-a311-057ebaa25fef",
        "cursor": {
          "ref": "aea7d106-eaa0-4345-8d78-28056fbf3b87",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "88b39f54-9c3f-4795-a6b9-9adbfd815a8b"
        },
        "item": {
          "id": "1557b952-2abb-4001-a311-057ebaa25fef",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "de86ed2e-73f8-4223-8646-7c4d8678a4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2cfe2df-f793-434c-baec-f0dca38372ce",
        "cursor": {
          "ref": "deaecc43-51a1-4bd1-9a99-2c4a678970b9",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8e96e8fc-63cf-49dc-9bf4-8ea165651776"
        },
        "item": {
          "id": "d2cfe2df-f793-434c-baec-f0dca38372ce",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a0e885c0-f8b0-4dcd-90c6-a7cf552175ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62559da-a74e-48da-ac09-5c6fdb048ab7",
        "cursor": {
          "ref": "e53d492d-bd66-4ed8-a09e-d641bcb3b8c3",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "428a00c6-5044-423a-8301-3208ca0b0d50"
        },
        "item": {
          "id": "a62559da-a74e-48da-ac09-5c6fdb048ab7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c2be048a-8b6c-457b-a035-14c1497e1192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1351c49f-658e-44cc-ab3b-be7bf589a945",
        "cursor": {
          "ref": "bb8c5074-4c41-479a-8c86-ea64f265d429",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d6c1a0c6-c302-41fd-be90-3e76254795d2"
        },
        "item": {
          "id": "1351c49f-658e-44cc-ab3b-be7bf589a945",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "41011404-d15a-448f-b029-a1b05164e887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ff220e-a636-4d01-8e7c-d7c500a842fb",
        "cursor": {
          "ref": "8bd219ea-ae87-474b-a8cb-3b0077cdb06a",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "942dde9c-0b20-42cc-8618-9dc50998005b"
        },
        "item": {
          "id": "80ff220e-a636-4d01-8e7c-d7c500a842fb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "577cfb87-554c-4d68-891f-a38732830cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b039f74-fcc8-4083-b1f9-ff42908c31b1",
        "cursor": {
          "ref": "ee724526-9a86-4e59-ac15-606be16f880e",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b57ec4ca-a31a-48bb-ae18-f8743c19f657"
        },
        "item": {
          "id": "2b039f74-fcc8-4083-b1f9-ff42908c31b1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0d3067bc-96f4-4f36-95eb-ca921f4ef286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af78136-c77a-43f0-8ca4-fee9c36ce7d9",
        "cursor": {
          "ref": "1c211c33-97d4-4795-b066-ab59dc39cb6e",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e055b462-2a7d-42b2-b108-486f794c1d3b"
        },
        "item": {
          "id": "5af78136-c77a-43f0-8ca4-fee9c36ce7d9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1fe86a43-be87-4e47-b8fc-6093543927a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b343f4b9-462d-4fe9-986f-352511af9e4b",
        "cursor": {
          "ref": "40c1530b-f3ad-48d5-84bd-55b692964c02",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e7ade967-2906-4f67-aa6d-dabb84036bec"
        },
        "item": {
          "id": "b343f4b9-462d-4fe9-986f-352511af9e4b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3e6a8d5f-c6fa-4057-a7cd-75532de06e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bea461-b47c-4172-b575-5b81d57a3a87",
        "cursor": {
          "ref": "ab637059-b255-42bc-b294-360ef770ce9a",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d3729eab-7cf2-4ce7-9f90-3fd35ef915f9"
        },
        "item": {
          "id": "24bea461-b47c-4172-b575-5b81d57a3a87",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "68df083c-9306-4fc1-b3e0-640f3e4c50ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4e8ff3-45c7-4a4d-9baf-1412e156d60c",
        "cursor": {
          "ref": "69ff34a7-c1f5-4911-a226-4481edf0f940",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1362f5e3-5fa8-4cc5-ba3f-8470a82c3d32"
        },
        "item": {
          "id": "cc4e8ff3-45c7-4a4d-9baf-1412e156d60c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "63d2c922-c065-4ab1-9666-3d8fb684765c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a41395e-6a9e-4635-8367-f8fc16e4bf47",
        "cursor": {
          "ref": "a48e3839-1b01-4d1c-8f49-95d22fd524df",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e3166765-f1b7-4061-9315-d070606441ae"
        },
        "item": {
          "id": "5a41395e-6a9e-4635-8367-f8fc16e4bf47",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "62a320a9-3c1f-4895-be42-239ec41e9f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafc6a84-5cce-41ed-ad82-90dc9aafffd8",
        "cursor": {
          "ref": "6c2a4e96-d293-4a27-953a-2ddf0216135d",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c186aad9-b3f9-4087-bcd4-1ae3e784df5f"
        },
        "item": {
          "id": "fafc6a84-5cce-41ed-ad82-90dc9aafffd8",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "35d2ccca-b46d-4dea-ac4c-61952adb6e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ed0e850a-1aa7-4599-bee2-cb2d6fee223a",
        "cursor": {
          "ref": "3c9be007-955e-4283-8e6d-62eacb38cd3e",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6bbeb4fa-5ac4-4d9e-9550-ea73ac4433bb"
        },
        "item": {
          "id": "ed0e850a-1aa7-4599-bee2-cb2d6fee223a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2750fda1-7dec-49e5-ba13-eae32d808b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "ab6a818e-03b0-4b32-ab87-9a5a96f00163",
        "cursor": {
          "ref": "ebb38ee1-5732-43d4-a797-d7078df890a6",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "04d3e0ad-9b59-48d2-9e8a-9c08f4600fbf"
        },
        "item": {
          "id": "ab6a818e-03b0-4b32-ab87-9a5a96f00163",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c1354a9c-0162-40d0-88b2-2e2deddc1c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "6f6a7676-ae82-47f9-b5b4-20318df380d0",
        "cursor": {
          "ref": "9401c834-01a6-437c-a423-cb17939ac933",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e1bc87f8-6fce-4811-b44c-9caa742eeb80"
        },
        "item": {
          "id": "6f6a7676-ae82-47f9-b5b4-20318df380d0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cc1a5f06-4bc9-4509-9bb5-3f47abd8b8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "94700eec-c7cb-48ee-8bf4-fd04b9cabde4",
        "cursor": {
          "ref": "7f18cc76-db96-4bb5-9dc3-59f48b706e4a",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "09d8cc95-842d-4799-8bf3-247bbb1613a8"
        },
        "item": {
          "id": "94700eec-c7cb-48ee-8bf4-fd04b9cabde4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0833d761-1e0d-498c-ac37-c447d89c20a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "e1e4eb1f-f407-4410-aeb2-44d61e4d98f4",
        "cursor": {
          "ref": "d7906e47-7a1a-4106-aab6-e3442c878f5e",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "008a82cb-c599-4545-bc0b-7b8a65eb4396"
        },
        "item": {
          "id": "e1e4eb1f-f407-4410-aeb2-44d61e4d98f4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c93eedc2-f57a-4e54-8eaa-241012daf005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0a082606-d5a4-4881-9c68-4a5ffb04fa9e",
        "cursor": {
          "ref": "6197fb7e-b7d0-4696-85ef-fd5c16719ac4",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7d9633bd-1df2-40c5-a793-8afb1e69e3fa"
        },
        "item": {
          "id": "0a082606-d5a4-4881-9c68-4a5ffb04fa9e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "33e0c2b1-8152-40f5-a5ba-e24edc7fb8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "6348120c-2ee1-4912-8758-7c294ae6a0ea",
        "cursor": {
          "ref": "94279bea-1cf5-48d4-9b0f-56776d26f601",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d93ab17b-5953-406f-9b74-59139ae57dd3"
        },
        "item": {
          "id": "6348120c-2ee1-4912-8758-7c294ae6a0ea",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f82eaea8-784d-451d-9b59-858ed5d90534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b79e33-eaf2-4178-b310-0bbf47112f73",
        "cursor": {
          "ref": "04158e86-e3bf-4c93-9ddc-0edca6a74cc7",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "27eed8f2-4821-48aa-b74b-0d628bba8235"
        },
        "item": {
          "id": "29b79e33-eaf2-4178-b310-0bbf47112f73",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "281ae54f-bba5-4898-8c78-f1f830a6977d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a4f957-9650-4b7e-9f30-2cfa5202eff6",
        "cursor": {
          "ref": "f2bbf688-a7b6-4fa7-85d3-d3040d4cf463",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "017e3fed-f963-418f-a060-0aff5a0734bc"
        },
        "item": {
          "id": "f1a4f957-9650-4b7e-9f30-2cfa5202eff6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9af27b33-9e60-4985-b4ed-aa2a537cc22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99410b19-41df-4542-a1db-90c3e7536981",
        "cursor": {
          "ref": "f1e503c2-bdab-46b0-820b-7a5531cf0fc2",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "91491a73-fc36-49da-a0e7-654d72ae7a63"
        },
        "item": {
          "id": "99410b19-41df-4542-a1db-90c3e7536981",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "16b28f5e-7fc6-419a-95a6-871660b4629e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f5a8aa-216f-42d6-ba00-72be86d7a688",
        "cursor": {
          "ref": "4e7bf622-9a1a-4136-b15b-f6215ac04aa8",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c856afa0-123d-4e5d-b9aa-739f38808aaa"
        },
        "item": {
          "id": "a4f5a8aa-216f-42d6-ba00-72be86d7a688",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a5725110-c6b6-422e-93fa-18c9b76b007d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d8f633-d422-4102-b993-2ae278aef73d",
        "cursor": {
          "ref": "3dd507d5-88b3-4441-94f3-d5162d4cd786",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4cef581a-ef4c-49e1-9855-d3a4dc9de0ba"
        },
        "item": {
          "id": "e0d8f633-d422-4102-b993-2ae278aef73d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "89e32334-9ceb-419c-b1f8-e0b8da1b88e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57208e2e-4680-4622-9310-8802715d15c6",
        "cursor": {
          "ref": "28d78719-dc60-4cab-aff2-0e3a87bb427f",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4e9f5c90-15ed-4231-9eed-c59670370801"
        },
        "item": {
          "id": "57208e2e-4680-4622-9310-8802715d15c6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4027091e-f315-4114-bfaa-57a43094f270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bda60b-a10c-4541-a884-1503e13052ce",
        "cursor": {
          "ref": "c6ded300-9da2-4ed5-ae36-aba6def39f67",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7449dfbf-dfcd-49fb-8fe8-30e47ef85c22"
        },
        "item": {
          "id": "c9bda60b-a10c-4541-a884-1503e13052ce",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6fb3dd95-af87-4cca-8a24-46d20366b582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f15b6c7-3fec-4523-9860-e84f7246f416",
        "cursor": {
          "ref": "e8a7880b-d9c4-4339-a2dd-7c62c0e07c4f",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1aa1144a-84b1-44f7-b580-8242b1e0b32f"
        },
        "item": {
          "id": "5f15b6c7-3fec-4523-9860-e84f7246f416",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "429887f6-56c5-4708-be51-f36e390aa691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce5c2f3-82bd-4461-a396-ff332e3a9c95",
        "cursor": {
          "ref": "cc755dff-a4b9-4660-830c-f8859fae683d",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b8a40163-dd6f-4536-9ced-845d70b2d6d8"
        },
        "item": {
          "id": "7ce5c2f3-82bd-4461-a396-ff332e3a9c95",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7f9d3243-7396-43c2-abdd-50af0c6131e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396d724a-fee5-47b3-a39d-4b3e9bde1719",
        "cursor": {
          "ref": "8a3c73ba-9618-4959-aaed-02b5a933d5b8",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6d40e528-f1cf-4b0b-b1c6-3156715cd842"
        },
        "item": {
          "id": "396d724a-fee5-47b3-a39d-4b3e9bde1719",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "09d8ed95-0f40-43d9-b7f3-a4a99168bc04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1af6c3-4c28-4bee-be11-061cd259b2e7",
        "cursor": {
          "ref": "b14c43c0-d717-4109-9613-80fae012c5ee",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0fabe509-d717-458e-aa01-aa3e2e629fad"
        },
        "item": {
          "id": "6b1af6c3-4c28-4bee-be11-061cd259b2e7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e38a4294-1e9f-4f43-8546-85ae567b06b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a6f1c7-e7cc-4c04-a531-73309dc1d2af",
        "cursor": {
          "ref": "d2b35465-10b1-42b2-aeed-9f3d90961329",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "61192c8a-23e2-4629-a017-7c59c14f2a21"
        },
        "item": {
          "id": "a6a6f1c7-e7cc-4c04-a531-73309dc1d2af",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3f622fea-9046-44cd-8897-ee6ac52be309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24a4f5b-1ea5-496a-9d49-f584bb388980",
        "cursor": {
          "ref": "44d197e4-0183-4fbe-bbbe-b12084ce079c",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9c370d10-df32-4446-b59c-dbd20f262cb5"
        },
        "item": {
          "id": "f24a4f5b-1ea5-496a-9d49-f584bb388980",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fc7fca4b-dc07-43e2-9565-05ab4cd79b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee9d02d-5e60-4b1f-b1c6-e73b2b525d1c",
        "cursor": {
          "ref": "e808b1e1-0d10-4775-9b2e-e467f66ee4e3",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d45eb136-b1ac-4a65-a236-8fcb17153368"
        },
        "item": {
          "id": "1ee9d02d-5e60-4b1f-b1c6-e73b2b525d1c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a164c50e-ac3e-406f-903e-467da58f2f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad8ce86-f96a-41e8-97a3-4ea595143ece",
        "cursor": {
          "ref": "e9435813-acb7-49b0-971c-75212d0e4903",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "618da92d-845e-48f3-ab68-82352ba6adc9"
        },
        "item": {
          "id": "1ad8ce86-f96a-41e8-97a3-4ea595143ece",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8d5a537b-55d3-424f-8cae-dc48db239589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1402c159-8d5c-4a95-af1f-6a20cbb70837",
        "cursor": {
          "ref": "a7621fa2-9da8-4259-89be-779780c8f846",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "80821ea4-0e1e-4dc8-86e9-f6fab5b40a01"
        },
        "item": {
          "id": "1402c159-8d5c-4a95-af1f-6a20cbb70837",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "69ebc0ee-0376-4647-b5bc-01b576b29088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92afb18-da03-42a8-9091-1416ce0c3895",
        "cursor": {
          "ref": "413adacd-e896-42df-b53f-0d642d92b905",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "201238db-23f5-4cbb-95c4-5ef02bde134f"
        },
        "item": {
          "id": "c92afb18-da03-42a8-9091-1416ce0c3895",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6eb2590a-4741-41b5-ae3e-c555b0dae0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0418b8-cc9e-4327-8469-5dcccbc9762e",
        "cursor": {
          "ref": "e5189105-16d2-486f-84fe-645e5d3eb135",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d3ae5cb9-849f-459e-a2ea-c1a7e0bbb3ae"
        },
        "item": {
          "id": "9f0418b8-cc9e-4327-8469-5dcccbc9762e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8002031b-818c-43d9-bc68-5420fffc33a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34397d6f-1f3d-45f2-b3d8-d07c3017ab05",
        "cursor": {
          "ref": "6d779fd8-763e-4e63-9abe-21fde02bfce4",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "10a2e22c-4d57-4398-b56f-9d1341397129"
        },
        "item": {
          "id": "34397d6f-1f3d-45f2-b3d8-d07c3017ab05",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ffef7063-a56f-4f77-afb9-5bcdb725037f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e60d64-b6ce-4996-86df-64bf16c42f39",
        "cursor": {
          "ref": "4ca1b58f-443e-48ad-812b-bb54ecb073b7",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c29d549c-270e-4cf4-96fd-4255a74cff53"
        },
        "item": {
          "id": "c7e60d64-b6ce-4996-86df-64bf16c42f39",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bc7df398-52e9-4041-b8c4-fd9d2757b776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646d285b-6f15-4857-92a1-9de937807fd4",
        "cursor": {
          "ref": "94048fe2-e1ff-4d38-bea7-c183d2593c74",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e8a2c9a5-8cc7-4595-803a-c19f6176c8f5"
        },
        "item": {
          "id": "646d285b-6f15-4857-92a1-9de937807fd4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fd799a6c-70ea-4e9a-9a48-6b9f010c6ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7d2a2b-80fc-4a54-bddc-4e09d3716068",
        "cursor": {
          "ref": "ce75b882-84c8-4dd3-bcaa-f0e5df640c82",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bf5f33b4-796c-494d-a138-392fd10b0c37"
        },
        "item": {
          "id": "1f7d2a2b-80fc-4a54-bddc-4e09d3716068",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1fe10d6e-74fa-43dc-8f2f-591b6ad47a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5471cf-0240-4e59-bcef-67c9d62af4c9",
        "cursor": {
          "ref": "7629a263-bcd8-481f-a9d8-22e9075506c0",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ea0cb3f6-adf8-4bb4-b6ca-cf072ba45b51"
        },
        "item": {
          "id": "0e5471cf-0240-4e59-bcef-67c9d62af4c9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "dcd6346c-c462-40f3-8efa-26cd06532c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527d427c-8f52-4407-ad6a-6944c34ecc34",
        "cursor": {
          "ref": "6eca9de0-4a40-4e76-b09f-e0db6dbd76ef",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b22f59ad-5401-4d2b-8840-4d14caf8621d"
        },
        "item": {
          "id": "527d427c-8f52-4407-ad6a-6944c34ecc34",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "98f3168f-aa27-47b9-89ca-961eb965b760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0df483-e337-464c-b1d1-0b5c14fa3e5b",
        "cursor": {
          "ref": "98ceb81c-992c-4238-bbe7-dead70c258f2",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "527350d9-e481-4ce0-b0c2-b1d81245d21c"
        },
        "item": {
          "id": "5f0df483-e337-464c-b1d1-0b5c14fa3e5b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d36771e3-7c45-43ac-ac64-e88997cce245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06403242-9171-485d-8b39-04cdbdaa7149",
        "cursor": {
          "ref": "81e7833f-d691-4cf0-81f3-37daf0a0fc77",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "121e276e-151c-4b43-a1b5-86231e5a26d0"
        },
        "item": {
          "id": "06403242-9171-485d-8b39-04cdbdaa7149",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "eede04ba-7345-485c-814e-71a4c9c59c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01b5969-a3c4-415b-b41c-d6ab8222f4ba",
        "cursor": {
          "ref": "4b1ce096-46c6-4c38-86aa-0775bd3cbee8",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4c86394a-bb16-4252-9495-45daa26d705d"
        },
        "item": {
          "id": "e01b5969-a3c4-415b-b41c-d6ab8222f4ba",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8f2ef4d7-0dd6-4db0-a612-29370a61e5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e9f875-706f-440c-83cf-6cc188232197",
        "cursor": {
          "ref": "2901371f-8efa-4586-a06b-9ba31a8532df",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "29e2e3a1-28ec-42f0-bd9e-546460c631ce"
        },
        "item": {
          "id": "00e9f875-706f-440c-83cf-6cc188232197",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8effc177-c7e8-4baa-bc64-b9c3c7caae0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe19f5db-ca56-44a8-a60a-73cfc7ff6967",
        "cursor": {
          "ref": "a34d32a7-6954-48ae-80a6-6badadc49cd1",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "880483cb-c73b-4f6e-bcdc-5a3201f12fc4"
        },
        "item": {
          "id": "fe19f5db-ca56-44a8-a60a-73cfc7ff6967",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "335a5053-85d8-4ebd-a4e1-5813f3641548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5aa1202-565e-4cb5-b56b-2c725a860443",
        "cursor": {
          "ref": "66be3f5a-8903-4730-9311-37546af66ed4",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6220f211-5a2c-45cb-866d-d848bf078eda"
        },
        "item": {
          "id": "e5aa1202-565e-4cb5-b56b-2c725a860443",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "285495da-25fe-4fde-aa5f-7f0d9dceaae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612151f8-61d5-48d9-8b21-e79147d682be",
        "cursor": {
          "ref": "d1fbe092-223c-4a0c-b6fd-3739772ff8f7",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2fc2d692-2011-495e-8a29-d166f0cd7083"
        },
        "item": {
          "id": "612151f8-61d5-48d9-8b21-e79147d682be",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c54df03b-61ce-44f8-b3ef-26c8ca8487fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c72fc9-0a19-41cb-baa7-f24269d62093",
        "cursor": {
          "ref": "3f8fd49a-9709-43ac-9764-8be4aa9ed5b1",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8b106ec4-cf65-497e-bbeb-0c018424f0c1"
        },
        "item": {
          "id": "04c72fc9-0a19-41cb-baa7-f24269d62093",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "af724ea2-40a4-450b-a4ff-6b93c0d72790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a330877-c331-4663-97de-20fa7f88ba53",
        "cursor": {
          "ref": "e34c2e59-91df-46eb-9ae4-87086fd4cd88",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "943ef672-74d2-402b-9311-f862a2e0b464"
        },
        "item": {
          "id": "8a330877-c331-4663-97de-20fa7f88ba53",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f601de4e-40dc-4ff7-8dfa-e7e7e4174bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ef8b4b-1923-4798-a701-cd51d1942737",
        "cursor": {
          "ref": "fc7e274a-ab4b-4320-89e2-31e702c6c08c",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c3b3a90b-aea9-441f-8212-0314e8e020a6"
        },
        "item": {
          "id": "69ef8b4b-1923-4798-a701-cd51d1942737",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5b5a45a6-6948-4cda-a556-19d7c4e22ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beadd126-5875-4e7d-892f-0477351d98cf",
        "cursor": {
          "ref": "c7f062c0-d46f-49b6-8f1e-aa3923e69aba",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b5f390dd-2d33-45a0-8d8c-8338f966febe"
        },
        "item": {
          "id": "beadd126-5875-4e7d-892f-0477351d98cf",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "678aa57d-0c1a-4914-8402-5cc784afa706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9726f8b8-c2d9-4ba7-aef8-89116e02b867",
        "cursor": {
          "ref": "1e86a618-6586-4f85-a661-fc1886a24e4d",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c9af82c5-7836-472f-8773-9f3769009a11"
        },
        "item": {
          "id": "9726f8b8-c2d9-4ba7-aef8-89116e02b867",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "35c22969-bfdc-4ab5-b009-9877aab4bcb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3387e652-171e-43e1-a253-f068badb8ae8",
        "cursor": {
          "ref": "b32f9322-9ccf-4177-9e73-2551e7c7bdae",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "40325fcd-b14c-44ab-b558-998c656703bb"
        },
        "item": {
          "id": "3387e652-171e-43e1-a253-f068badb8ae8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e0543873-5807-4e2e-b2c8-97da7f862082",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a253cff6-e190-4575-aa5c-2aff001060fd",
        "cursor": {
          "ref": "b77552ce-814c-4ef1-81c4-435cf961ffcd",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c3621fb1-4236-4de2-a756-79da5f96beab"
        },
        "item": {
          "id": "a253cff6-e190-4575-aa5c-2aff001060fd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f143b4b1-4f08-4dfe-9686-21615ba7ad88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beee25e2-13f6-4473-afd4-e33cdd05e930",
        "cursor": {
          "ref": "bb65e5bd-78f6-4d73-bca4-eeb3d7245f05",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "fa768fe5-57b5-4d1c-a299-353eaaa04aba"
        },
        "item": {
          "id": "beee25e2-13f6-4473-afd4-e33cdd05e930",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "742a20c5-151b-4665-9dcb-b62233cec11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf95619-46ca-4499-8ab3-fd7d74ed3ae7",
        "cursor": {
          "ref": "6656a322-a600-4f01-8ae3-ad5ea5fcf665",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f5b3e935-3c61-439a-880b-e8e6432481c6"
        },
        "item": {
          "id": "dbf95619-46ca-4499-8ab3-fd7d74ed3ae7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ceecf0c6-1868-4060-8a95-46ea5a4e05ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6ecbbb-1b9a-428e-96dc-02efa35ef52e",
        "cursor": {
          "ref": "7daad870-9993-4437-ba9c-8196860727be",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f31bf5d9-b8be-478f-b952-a3e6ec0021a2"
        },
        "item": {
          "id": "2a6ecbbb-1b9a-428e-96dc-02efa35ef52e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0caefc5a-b714-4d5d-8ee0-55219826f0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86261ead-9f77-464d-8194-fde586ab04c7",
        "cursor": {
          "ref": "55df6fe9-1ebc-4291-9138-916c7f3a53c2",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4923a395-f690-4e16-b2a0-36cea211f62d"
        },
        "item": {
          "id": "86261ead-9f77-464d-8194-fde586ab04c7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "77804aee-847a-4143-a68e-fce40f4e03ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e046df1-8784-4e6d-b4e9-433e632732c3",
        "cursor": {
          "ref": "a1763da7-b4cb-4351-b453-b7ba02e1e50e",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e32a2832-7dc9-4506-a8a4-f155d526f501"
        },
        "item": {
          "id": "8e046df1-8784-4e6d-b4e9-433e632732c3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b2201235-8514-41e9-a39b-6edb8f8f2805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a9c5dd-c998-41d3-85ed-01df7da81e75",
        "cursor": {
          "ref": "4412c773-9a3e-43cc-abcb-bb28414ad93f",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fd8c31df-0878-4cc0-ae58-4aaca227fdd3"
        },
        "item": {
          "id": "22a9c5dd-c998-41d3-85ed-01df7da81e75",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "dbfb69d7-1dc7-4b53-a835-1489e9b07f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5967b26-f4f6-4ff9-b0e2-4d4d55908683",
        "cursor": {
          "ref": "156d5731-00e4-4cad-87e6-fd9c0e28ec5c",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0350e3ef-dd48-4520-9ccf-9767dd27fc04"
        },
        "item": {
          "id": "d5967b26-f4f6-4ff9-b0e2-4d4d55908683",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "26be0844-e124-48fa-b230-0a07b9135e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05029f4-52d6-421d-9bf5-87c3e211a8bf",
        "cursor": {
          "ref": "3a7b231f-bedc-4b0f-9824-1ee806869be7",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "87cbd64b-7bca-4f5b-b3b6-3285ff00eb70"
        },
        "item": {
          "id": "a05029f4-52d6-421d-9bf5-87c3e211a8bf",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8c37e647-b165-40f2-b6fe-0125dd3190b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61360ad8-b8e3-4c9f-8955-4ecc80f99e18",
        "cursor": {
          "ref": "8323bfd0-f6b4-4f0a-a8fe-57443461a3f6",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d5f93942-41be-40ec-b4e7-7bac33d5b309"
        },
        "item": {
          "id": "61360ad8-b8e3-4c9f-8955-4ecc80f99e18",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e4525c26-6600-40c9-98fa-60366315576e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706d7517-6f96-457e-af16-77cba6644b6c",
        "cursor": {
          "ref": "73ac8933-fce5-4853-bcd4-f5e0cbffed35",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "02b9340c-8540-42e9-9e61-f05daa7db66f"
        },
        "item": {
          "id": "706d7517-6f96-457e-af16-77cba6644b6c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "befb6f84-9950-43a8-adca-572874f95bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88905338-36e0-4422-85e6-582f58be158e",
        "cursor": {
          "ref": "b1ffb6e3-be6d-4b92-9053-a7f0488abdf6",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8fea2b6e-953d-4d4c-b013-22f2261517d3"
        },
        "item": {
          "id": "88905338-36e0-4422-85e6-582f58be158e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d3913909-fd6e-4616-a023-c93e6fccbdf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e3f843-81ca-4005-955b-455b5254aece",
        "cursor": {
          "ref": "5f1ed321-a423-4664-81c5-7703b2e8fb07",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3ae900c3-23ba-46f5-b649-561e8aab0f47"
        },
        "item": {
          "id": "b5e3f843-81ca-4005-955b-455b5254aece",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "65bfcc18-ac92-4e0d-8680-89153b14f521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2cba05-478b-4db4-901e-3a8c7e62190f",
        "cursor": {
          "ref": "7dfe9108-8f31-40fd-9e79-5a488cf36ba9",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "35b2d636-1e65-4a9f-b199-97ead929d9a4"
        },
        "item": {
          "id": "8a2cba05-478b-4db4-901e-3a8c7e62190f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4194bc5e-0d7e-4b7d-9dcd-01c8811c03cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ec7f42-1f84-4514-a2a4-283eb5e54ebf",
        "cursor": {
          "ref": "3b3f557d-ecb4-4112-abf8-b3dc36bdb14f",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ec947158-4c11-4e38-b407-afe011181e95"
        },
        "item": {
          "id": "f3ec7f42-1f84-4514-a2a4-283eb5e54ebf",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "639e7627-5b90-43fd-bd31-fb42e90df90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09f626c-3edf-4a9c-a7db-a9de4f9cda86",
        "cursor": {
          "ref": "2594f708-f600-4243-bc2d-f6a8d17045ad",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f8f53e54-5450-497f-9ef1-9554e07cc440"
        },
        "item": {
          "id": "a09f626c-3edf-4a9c-a7db-a9de4f9cda86",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0530bd68-8047-4be9-ab5b-9361a86e211d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2d5288-f1d2-4833-ae0a-d4794ec5c772",
        "cursor": {
          "ref": "136285f3-1e37-4b8b-9505-2aeab1de6ee5",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8ac49b85-8b58-4f6c-80b9-f851e4f1af17"
        },
        "item": {
          "id": "5b2d5288-f1d2-4833-ae0a-d4794ec5c772",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "91599554-dcfc-4fca-8300-cf2d74a3cffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da0b0de-8ef0-48c6-aa22-cbef23dc4089",
        "cursor": {
          "ref": "a0f68fba-b000-4d99-9705-8890a559efaa",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "bb411d9b-0c3c-4f19-9849-477311c7d0ad"
        },
        "item": {
          "id": "4da0b0de-8ef0-48c6-aa22-cbef23dc4089",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2757654a-d13e-4a56-b530-b01b3027f07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5feed5b-082a-4704-b335-00093deb7e80",
        "cursor": {
          "ref": "86468a7f-30c1-4052-bc2d-e254cac45166",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ee13dd3f-a621-4086-9a98-c8467db7fff0"
        },
        "item": {
          "id": "d5feed5b-082a-4704-b335-00093deb7e80",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5062c57d-e7bd-4152-81e9-ed3995fdd3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8787110b-7a1c-425a-8f1f-d585de79ac50",
        "cursor": {
          "ref": "4814806f-c0d6-400a-9f11-ba4acc9d2567",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ee64184c-bd10-44dd-bfd2-5ecf8edd72ea"
        },
        "item": {
          "id": "8787110b-7a1c-425a-8f1f-d585de79ac50",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "68615f64-3209-4c0b-9d93-80908d3193b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a6d611-b008-4656-967d-0637bd95e11d",
        "cursor": {
          "ref": "4a79dd89-e497-4279-a8c8-1bcb2be41bae",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c8f2655d-aeb1-4bbc-b4f9-0e59cd8dbd1c"
        },
        "item": {
          "id": "00a6d611-b008-4656-967d-0637bd95e11d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c62c5ec8-50ed-4c0a-8dc0-8b1caabfb8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86708542-9317-446b-afd7-17b1a619f9e1",
        "cursor": {
          "ref": "1ae2c1a2-ae2c-469d-8074-84f995982e68",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b72d4e58-64c9-41cf-ac74-83dcf1085124"
        },
        "item": {
          "id": "86708542-9317-446b-afd7-17b1a619f9e1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9aebdb2b-a1d2-44f1-8e4b-14659ef62b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fe9bfc-f8c5-4670-9903-8d32e59a3cb5",
        "cursor": {
          "ref": "058697e7-2232-42c6-815a-c1d69534e13d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a12f05b6-e604-49b7-87c9-5765d12e2ec0"
        },
        "item": {
          "id": "90fe9bfc-f8c5-4670-9903-8d32e59a3cb5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c642177a-c7e5-4530-9875-bc928ddfb7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20fec7de-bd1f-40a6-8e38-862996f25ff2",
        "cursor": {
          "ref": "e891c766-f096-4d25-b33a-3a239ea4f8ec",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "eb2215c1-baae-4cbc-a81f-b9a860f39a39"
        },
        "item": {
          "id": "20fec7de-bd1f-40a6-8e38-862996f25ff2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5b852dde-87ec-43b5-a516-e5dcacba03fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a63fb03-4e2d-4bdf-810e-cede49e35a60",
        "cursor": {
          "ref": "17e13046-3e33-4b6c-959a-c3264384de26",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c47d2d94-ed8b-4cbd-b3d9-4f96ce8ea802"
        },
        "item": {
          "id": "4a63fb03-4e2d-4bdf-810e-cede49e35a60",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0ad486a6-5769-4c1f-a1ae-136ccf21f0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f54fd2b-05e1-4a95-8c01-5a15ab9177f6",
        "cursor": {
          "ref": "53db4f66-42a0-4db2-b0dd-cb73fd7a85eb",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bf03deb0-f39e-4d10-b8f3-1de6614b3f8e"
        },
        "item": {
          "id": "1f54fd2b-05e1-4a95-8c01-5a15ab9177f6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "029d18c8-857e-4ab7-8150-06d35b0fe27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da60b430-002c-429c-8e7e-f162c38afe6b",
        "cursor": {
          "ref": "4a8e63b4-f685-4207-b259-47245a51a024",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c9fb7b3d-5512-4b1f-af2d-b9b2d53284a5"
        },
        "item": {
          "id": "da60b430-002c-429c-8e7e-f162c38afe6b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b9664216-b430-4ba4-baa7-8a25a7cfcde7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64039023-11e4-4410-a986-a2681a42f0dd",
        "cursor": {
          "ref": "c9155097-0836-4e70-beca-8ccc75c7868c",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1579bf3b-c18e-4197-969e-2df8ed8cfa25"
        },
        "item": {
          "id": "64039023-11e4-4410-a986-a2681a42f0dd",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3cb351a6-607e-4558-8689-9d2dbe209988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf5409b-4bf9-4828-928b-322618f9ee86",
        "cursor": {
          "ref": "a3d405d2-2957-40dd-85d0-0fb7644c6df0",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "05669848-9cd1-452a-99c9-a88f7c37d38f"
        },
        "item": {
          "id": "bbf5409b-4bf9-4828-928b-322618f9ee86",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "eb4d177e-624a-40a8-b92b-7818459ab772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ac5c02-72ab-4136-9e95-d973451945b1",
        "cursor": {
          "ref": "310a0739-7760-417c-9ae2-ab65241e54df",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "66f4a348-e121-488c-9f3b-cf26ebafcaa2"
        },
        "item": {
          "id": "d1ac5c02-72ab-4136-9e95-d973451945b1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "51f1bf20-f9f4-41f6-b057-9bf5ff3b229e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470ab274-79be-4bf3-83d8-16e5bc1021ed",
        "cursor": {
          "ref": "db761ce7-25bc-43f4-b62f-0dd82cac4b72",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6440d2ba-ffbb-4dad-b266-7575c91d878f"
        },
        "item": {
          "id": "470ab274-79be-4bf3-83d8-16e5bc1021ed",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a3a40e10-af8d-49ec-8872-3e3e577e879a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bfd0fa-9216-498c-806b-deffd9f31da2",
        "cursor": {
          "ref": "b9e82d9c-f48c-4580-9cd8-54b0164ed39c",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "94cb619c-ec2d-4417-96d5-320ed142913b"
        },
        "item": {
          "id": "c1bfd0fa-9216-498c-806b-deffd9f31da2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0d9703d7-10a4-45fd-8596-8531f64628d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0975177a-7b15-45cf-b0bf-581f21700774",
        "cursor": {
          "ref": "8dcf6aa8-0e74-442d-a344-2beaa5d5c44c",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "abd2b504-9de9-4a52-be24-f00241d0e431"
        },
        "item": {
          "id": "0975177a-7b15-45cf-b0bf-581f21700774",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f3cebc75-9aac-4b1e-8652-398e7f7ea247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff4bb69-47b2-42d1-8d99-c1f886ed1986",
        "cursor": {
          "ref": "97208a16-4bb1-44d4-ab18-2eafa30ec742",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "dda17488-2a92-485e-b39d-4d555d912faa"
        },
        "item": {
          "id": "6ff4bb69-47b2-42d1-8d99-c1f886ed1986",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "12d4e65d-dfba-4a83-84ce-b56948b38274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74d597a-bff8-49cf-bf29-20364e18fe8f",
        "cursor": {
          "ref": "3868b377-3198-438a-b6d4-b765a91b991f",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "308aef1d-d954-4924-adb9-68f0ff3b7dd7"
        },
        "item": {
          "id": "b74d597a-bff8-49cf-bf29-20364e18fe8f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "51f725df-f4be-4bef-8d62-63c6bb7f5f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59dd2237-71e6-42ae-8513-5a08354f0374",
        "cursor": {
          "ref": "d15226ce-5822-4033-b8ac-25a651ca4d1f",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e29706c4-aac0-416a-8239-4a8f98968274"
        },
        "item": {
          "id": "59dd2237-71e6-42ae-8513-5a08354f0374",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d27584e7-b842-4c87-9c01-de730a244542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150734c6-b9c5-4711-9bd0-3bbce7c9818b",
        "cursor": {
          "ref": "e4ab2592-e6de-4fa7-9e30-f1b472ed8775",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7d2b1b84-f33a-4e2a-9932-f826c5d2481b"
        },
        "item": {
          "id": "150734c6-b9c5-4711-9bd0-3bbce7c9818b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "29bb9d45-85f1-4ec9-b640-b7f8344cb8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aff1619-6897-4f6b-9b9a-2e39925ebd54",
        "cursor": {
          "ref": "917e7a3e-0490-47e0-9499-79bd17c63d09",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a1cef6b2-d49d-4a28-b817-4d6e232d7010"
        },
        "item": {
          "id": "0aff1619-6897-4f6b-9b9a-2e39925ebd54",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ed04c578-f028-498d-a9dd-b7fce6f9b636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86428c86-d7f4-4f89-af70-ea13894abcb2",
        "cursor": {
          "ref": "09ec4c72-9d0f-4333-bdd3-4b1f80e0472b",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "18901431-0197-4c06-989e-c1f7f7159540"
        },
        "item": {
          "id": "86428c86-d7f4-4f89-af70-ea13894abcb2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0d843dc3-19d6-4203-aaea-c1f448ebe670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bec54b6-a4d5-4d64-bf61-107b93f01461",
        "cursor": {
          "ref": "abbb2ff4-5891-4347-825b-d2d446c00218",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "01635018-fb12-446e-8f02-27982dc66b4d"
        },
        "item": {
          "id": "8bec54b6-a4d5-4d64-bf61-107b93f01461",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ae6fa15b-db8f-4307-94be-67dc2754c96c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf71767-aa40-4cb1-8249-5c2bd79da6ff",
        "cursor": {
          "ref": "ad910078-49b1-4414-a4ec-c9317d1b51da",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e8ccc558-a51e-4fac-9e0e-ff12fefc330c"
        },
        "item": {
          "id": "bdf71767-aa40-4cb1-8249-5c2bd79da6ff",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2fe41603-5d4c-4c4a-a84a-46b7a86113cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628ca79d-9fec-40d6-8944-bdc2e7cb52c1",
        "cursor": {
          "ref": "317dbe01-6e8d-4a78-bb38-c085ba974c79",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b04df7ad-e6fe-45ea-8ee3-1213ae96d58c"
        },
        "item": {
          "id": "628ca79d-9fec-40d6-8944-bdc2e7cb52c1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d0512803-0222-41d8-aa96-dd995e3cbd8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231a5d5d-984b-4b73-94d2-b34c892ef6ae",
        "cursor": {
          "ref": "fc39628b-a3d0-409e-ac98-3a1b6212829c",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6812d8f3-e79a-4514-972a-d9169dd591c5"
        },
        "item": {
          "id": "231a5d5d-984b-4b73-94d2-b34c892ef6ae",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ff5f8001-cdd7-448c-a282-4f63cb86fc09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac5aa65-42d2-48e6-88f9-553416598485",
        "cursor": {
          "ref": "0d608b55-3cd5-47d2-9604-9eb258f45bc0",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4f1dbf63-b3c1-4e87-9db3-2d381278b970"
        },
        "item": {
          "id": "aac5aa65-42d2-48e6-88f9-553416598485",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "85478d7e-a357-49d6-b39e-9fba8d347e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0061db-8b37-41f7-b142-5a10f7687cbc",
        "cursor": {
          "ref": "f9a67544-0104-4811-ab79-c6ebc01bdefe",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e4403206-0910-4b92-938c-38283808453a"
        },
        "item": {
          "id": "5a0061db-8b37-41f7-b142-5a10f7687cbc",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "824cf8aa-fe1b-4848-a152-803cb2ea63c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92399756-996e-4ab8-b211-f532523e305a",
        "cursor": {
          "ref": "9da81e00-88fd-4da1-b867-bbf53d8eaab8",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "759337fa-2c58-4fa2-adf5-58dcadb4c249"
        },
        "item": {
          "id": "92399756-996e-4ab8-b211-f532523e305a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "60a74ea0-394f-412d-9ad8-7b6a7e561710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919a7f26-d2fa-46a8-ab4c-09cc241385a0",
        "cursor": {
          "ref": "f43fc81e-970e-4579-aa75-0aa67c0f20fe",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b2e00b3a-6474-42df-9339-98db92c53c75"
        },
        "item": {
          "id": "919a7f26-d2fa-46a8-ab4c-09cc241385a0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fc7e580d-3a62-4755-b6d5-1eb30a91163e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d258c9eb-2ac4-4c1b-bcf7-45a3eabc6741",
        "cursor": {
          "ref": "6775f02e-87dd-444f-9b8b-d8006519bb37",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3c152609-1244-440c-a3db-8a76c8561ea1"
        },
        "item": {
          "id": "d258c9eb-2ac4-4c1b-bcf7-45a3eabc6741",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c165215e-fac6-4390-8cef-97071dc79b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e35a672-d65c-4546-84db-c7e68964864f",
        "cursor": {
          "ref": "dd2547e8-1046-4155-b4d9-5bd59bbb993a",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "188a0f37-4222-44a0-a9aa-74904f312a19"
        },
        "item": {
          "id": "2e35a672-d65c-4546-84db-c7e68964864f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a7cbd6ca-254a-4036-9f25-5b0e048e94f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727409fb-1408-488b-87e4-d1f2dc57e383",
        "cursor": {
          "ref": "18c12bc9-f429-4643-82a4-627053f1e328",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2dfe58fb-a38b-421b-97f7-4aa363810d1a"
        },
        "item": {
          "id": "727409fb-1408-488b-87e4-d1f2dc57e383",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b06cb7ae-4f2b-4ad9-8ea2-b7e4ef9adedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df73afce-2630-4165-8380-568a83879369",
        "cursor": {
          "ref": "6799b7dc-4682-47ad-a975-c8f3c2c0f4e6",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2adbf6b5-653e-417d-8a4e-4cdd1d91bfb1"
        },
        "item": {
          "id": "df73afce-2630-4165-8380-568a83879369",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "03c40c6f-7fdd-4a90-9954-ef14a051a9ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e7aca1-fb43-459a-a8ea-94157f51aff6",
        "cursor": {
          "ref": "2a32eaab-44de-4077-9313-655910dd67bc",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a45b875e-9e6b-4424-a32a-e4050a252653"
        },
        "item": {
          "id": "d6e7aca1-fb43-459a-a8ea-94157f51aff6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9282ce73-5c32-4b9d-9a9f-08cb222f1196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bcf3dc-3cca-40aa-ad73-2b90f2fa77af",
        "cursor": {
          "ref": "f9862638-6c67-4952-b479-f1901d958111",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4e95c98e-9121-4b81-9f09-39c1bf1a7a2e"
        },
        "item": {
          "id": "72bcf3dc-3cca-40aa-ad73-2b90f2fa77af",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ac5ce2ed-7e05-431d-ad17-03ee6843334d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c738402-440b-4745-a2e9-9e478fe72dcc",
        "cursor": {
          "ref": "f9aec51b-23eb-4967-bea0-6e79037b2475",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b1ce8c01-bf29-48a3-a612-f935c3c665e8"
        },
        "item": {
          "id": "3c738402-440b-4745-a2e9-9e478fe72dcc",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f58de592-cb1c-4392-a730-4202a7247645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f37da9-c097-4bba-bc64-3e68312831d5",
        "cursor": {
          "ref": "24331609-c9f7-4064-b8dd-2dcd0b044e8b",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4d614236-8c47-4bf1-b586-3def543029d0"
        },
        "item": {
          "id": "e8f37da9-c097-4bba-bc64-3e68312831d5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8133315c-d35e-4be2-8a66-ae9bad993272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c8ee10-0551-453d-a4e4-7c03dfac1ab8",
        "cursor": {
          "ref": "dd7d9073-40a8-4568-ab08-1547bb65acce",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b50830fc-f173-49c9-ba96-9797ec27760d"
        },
        "item": {
          "id": "d5c8ee10-0551-453d-a4e4-7c03dfac1ab8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e8ade2e5-a96d-4975-8cd3-9f8cbd8581c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d27cbcc-ff84-4e38-87b7-a0877d89357d",
        "cursor": {
          "ref": "21dc5e13-3376-498f-826a-757447314da5",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c2ddbdf6-bb0e-4c2c-bf17-edb98ff5766a"
        },
        "item": {
          "id": "8d27cbcc-ff84-4e38-87b7-a0877d89357d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "aaff16be-79f1-4434-a8e9-c58b3592120d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b7431c-48a1-4a25-82b9-25de64b94eb6",
        "cursor": {
          "ref": "27b7a6b4-1953-40a7-aaae-90e1ac83b89e",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d8e7a148-9bad-4ef1-81b9-383b9419f31a"
        },
        "item": {
          "id": "75b7431c-48a1-4a25-82b9-25de64b94eb6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "81a83ffb-b2d7-43df-9680-dfdcaf8bb833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc60df1-cdda-417c-aab7-b6375af398ca",
        "cursor": {
          "ref": "dbf7787a-b12f-41d9-9dda-9806f0bb280c",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d22f24ea-c6bd-42f5-9d25-077c45eca6f6"
        },
        "item": {
          "id": "ffc60df1-cdda-417c-aab7-b6375af398ca",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "46debdd4-193f-4e7e-a089-01896afb1758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22fb70c-5153-4e87-a864-df6cd31543eb",
        "cursor": {
          "ref": "66b292e6-572c-47e9-a311-4f5e5d23e573",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a00267fb-966e-4e4c-9e1b-7712114bd2b0"
        },
        "item": {
          "id": "d22fb70c-5153-4e87-a864-df6cd31543eb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "983e5140-9c3a-45f0-a697-3ae8904b9901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a65a9a-f6cd-4e2b-9cd4-c1560f092090",
        "cursor": {
          "ref": "516da215-0085-4c2f-bee9-69776844273b",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "bdaca24f-b4f1-443b-8106-aed5aca5e4d6"
        },
        "item": {
          "id": "00a65a9a-f6cd-4e2b-9cd4-c1560f092090",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "242fe0f4-f76b-4220-8b84-9520b7c2bece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1e4c4e-4708-42b2-a294-76f8106124bf",
        "cursor": {
          "ref": "f55c1bbd-7c63-446e-9d12-046cefebe4d0",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b51a396e-a13d-4b02-9fc8-4a9e106477fd"
        },
        "item": {
          "id": "db1e4c4e-4708-42b2-a294-76f8106124bf",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6053f4ce-674c-470d-8ee6-1a03b9aa36b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57e9381-ecf4-4ad3-be7e-4dfd6a8893c0",
        "cursor": {
          "ref": "2895a66a-8ba2-4375-8ea0-91217423f8e2",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ffd1805e-5011-422b-b02e-119450a80b65"
        },
        "item": {
          "id": "b57e9381-ecf4-4ad3-be7e-4dfd6a8893c0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4010375d-071b-482e-aa00-0d623cac8a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78656ad0-4ce0-4977-9dc9-30cf51d80203",
        "cursor": {
          "ref": "abe6684a-41c4-44fb-88f5-1cbecdeeb674",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e5e5901c-5b3e-4a4b-acf1-21d909e7daea"
        },
        "item": {
          "id": "78656ad0-4ce0-4977-9dc9-30cf51d80203",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "24781a87-d725-4bc5-bf6d-d7e0064e16e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c455358e-5d3f-49df-af8d-29eb6b0f96a3",
        "cursor": {
          "ref": "ff9f1572-d029-4b2b-93bd-4e297df8ac3a",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f9760c82-1963-4341-a28f-651525b90098"
        },
        "item": {
          "id": "c455358e-5d3f-49df-af8d-29eb6b0f96a3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "076d6d8b-2615-4290-af64-4fa2cf96bb9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13077cc-0a18-4843-9b02-efbf0513bb9f",
        "cursor": {
          "ref": "39bb9e85-8b0f-4579-b793-4c1ca3a51f87",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "82c5c688-4cc3-462c-98ca-809d40974c4f"
        },
        "item": {
          "id": "f13077cc-0a18-4843-9b02-efbf0513bb9f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "bdfb1aee-3b2e-4ae4-a1dd-c044b984c8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f017d23-825a-4c1c-9ee3-b06e3e1fcb54",
        "cursor": {
          "ref": "ae10f158-5b15-4642-ae36-54a91d4ff3a1",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ba13716b-e92b-4635-a3f3-b5ce7850ba3a"
        },
        "item": {
          "id": "3f017d23-825a-4c1c-9ee3-b06e3e1fcb54",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ab704300-3950-4e5e-927a-1b8b05689bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf4632a-98a0-4c11-98b5-30924bd4e06a",
        "cursor": {
          "ref": "638f8534-57ca-4b86-837b-5d1a78110217",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a8f1cf3a-9e38-44bd-9636-f210eb16e538"
        },
        "item": {
          "id": "2cf4632a-98a0-4c11-98b5-30924bd4e06a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4b3ea0bd-e9d4-4e8a-aa80-81c0b797d329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973f7323-440b-41ba-bad4-ebc71ad46747",
        "cursor": {
          "ref": "5d4c3023-be00-419f-bfc1-76ec1f1abdfb",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "24787421-0c9d-4c9c-a7a0-7624777b8061"
        },
        "item": {
          "id": "973f7323-440b-41ba-bad4-ebc71ad46747",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ee29a261-aacb-4f68-b81b-efbde48d8012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec29b55-a11b-40cb-adcf-d1eea998839f",
        "cursor": {
          "ref": "be9d8d04-d261-410e-b167-e654f3d1c06a",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1b5ba794-0ffa-4149-b559-91cc5a63c58d"
        },
        "item": {
          "id": "aec29b55-a11b-40cb-adcf-d1eea998839f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e1587589-73bf-49bc-b533-57a9d389f921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9d3312-7d69-4f84-afde-4545140cbb4c",
        "cursor": {
          "ref": "9b615865-e59c-4f0d-b435-bb1da5172fc4",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c510ed4d-bb27-4161-a91c-92e2900aa55b"
        },
        "item": {
          "id": "3b9d3312-7d69-4f84-afde-4545140cbb4c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2419cda0-456c-4c3f-8b32-674bbe9c851d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b72e4b6-c8db-4ed9-a735-7c3fceb8662d",
        "cursor": {
          "ref": "b0205790-553f-4dc7-a08a-3aeb84ddea0b",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d7a4ae71-4a47-4de9-b746-6d558a686bb4"
        },
        "item": {
          "id": "3b72e4b6-c8db-4ed9-a735-7c3fceb8662d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5042b0f6-59c9-4a96-90bc-2e4c9cd5301f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d156f5-1c54-4909-a55b-d52e80d797cf",
        "cursor": {
          "ref": "ddff7158-5500-4d9a-b0d8-2011d5aa2d0f",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "77401d48-d9e1-441a-806e-af65577ee79a"
        },
        "item": {
          "id": "67d156f5-1c54-4909-a55b-d52e80d797cf",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "583d2642-bcf2-4f29-949f-007c34df24e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47ed7b7-f231-4f23-b2ab-ee04f7ed5dcc",
        "cursor": {
          "ref": "886c21db-7667-4137-a963-57280b9e8571",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8b38e6aa-b4cf-434e-b8cf-806fdd7463a8"
        },
        "item": {
          "id": "a47ed7b7-f231-4f23-b2ab-ee04f7ed5dcc",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "aa2e9a4f-1123-41cc-a210-f5da85c6f479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7bbe6d-16c7-4fd2-8d07-a0f1e74e6004",
        "cursor": {
          "ref": "8b549405-b674-494e-8b76-bfd2892a6b13",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a0a417e2-666b-4028-89f6-04637380672b"
        },
        "item": {
          "id": "ff7bbe6d-16c7-4fd2-8d07-a0f1e74e6004",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fbb51972-7ef7-4b69-8d5f-3eac403738e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c168e6-f700-4b1b-8c59-18dada5b0152",
        "cursor": {
          "ref": "a5b9ea57-8adc-4314-8292-6eca78507dc7",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6148d235-ddba-4a7a-896f-0207bff5c8c3"
        },
        "item": {
          "id": "d1c168e6-f700-4b1b-8c59-18dada5b0152",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "11f9123b-a056-430e-b03b-dd0ea47849f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7198b4d9-8a99-4f40-8edc-85a976693b28",
        "cursor": {
          "ref": "bfdd840b-5464-4626-b321-e22ca4bd1971",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6fc18994-be09-4b5e-91ad-cf60f8971beb"
        },
        "item": {
          "id": "7198b4d9-8a99-4f40-8edc-85a976693b28",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f83c7909-e99e-4dd9-be71-c8863964bb4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbf8ad4-9f6f-4c14-831c-671210553211",
        "cursor": {
          "ref": "d71409b9-48e0-4700-b985-8815ad5c6b22",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "53648d8b-b603-43c9-ad2d-344031d320a2"
        },
        "item": {
          "id": "ebbf8ad4-9f6f-4c14-831c-671210553211",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7de52d10-da68-4798-84e8-4ec0373f8d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a638b8e-52d2-453f-b564-d5ca6361f758",
        "cursor": {
          "ref": "77343e20-a454-40c2-9d78-618d1e38f440",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "33121f23-5465-46bc-a177-a750782a70d5"
        },
        "item": {
          "id": "1a638b8e-52d2-453f-b564-d5ca6361f758",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e06b415d-7364-4032-9801-c8452cdd7b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fb77fd-11b9-4ff7-9f9f-f6ad5deec054",
        "cursor": {
          "ref": "45d60185-d675-4863-81c7-05ddb7bce360",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f4b16ad0-8091-4bb7-a527-661be686e8e5"
        },
        "item": {
          "id": "a5fb77fd-11b9-4ff7-9f9f-f6ad5deec054",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b72f9d6e-d56e-4b13-acd2-69186c7b5cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52597a6-60f9-4d6d-a686-0b70ca6fc093",
        "cursor": {
          "ref": "0e3a2bdb-7567-46a7-bc2c-6b7b131b6176",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b205fa37-d65b-460e-ab7a-5ae66c42ce83"
        },
        "item": {
          "id": "c52597a6-60f9-4d6d-a686-0b70ca6fc093",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "98a0f8d4-dbdc-4d48-9e64-a68e9493fe5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf345c43-606a-4359-8ba0-4c4858249500",
        "cursor": {
          "ref": "430591bc-b0f4-4435-a895-816e94539ce6",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "592feb6a-d2ce-4de3-b0ec-5eded97e24f5"
        },
        "item": {
          "id": "bf345c43-606a-4359-8ba0-4c4858249500",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1b9a3c49-1681-42e0-ba7e-ce3db04cfdb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58200fa2-7b46-432f-9cc0-fd6fa68a1557",
        "cursor": {
          "ref": "455e92e3-73f6-43b7-b38a-9ee0b747e5b3",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "88cbbc48-a686-42b8-ac01-e4cea2817130"
        },
        "item": {
          "id": "58200fa2-7b46-432f-9cc0-fd6fa68a1557",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8989a350-43ba-4226-a726-e46f4bbb5193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd7252e-2880-403f-9dff-e1a0768681b0",
        "cursor": {
          "ref": "ad69ea0d-4233-4476-be0b-a95f5ff15d8a",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "eb6f3250-d262-4297-81e0-59da9c80f37c"
        },
        "item": {
          "id": "3dd7252e-2880-403f-9dff-e1a0768681b0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "caa141a4-afcd-47d6-8d60-7bb8a9740633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be93d9d-6fe1-4cb6-ae6c-36b658861614",
        "cursor": {
          "ref": "6e5cda4f-a887-4e31-9ede-a925365d8ab0",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1a1bcdb0-8b19-40ea-8b3b-7684ceccf7a8"
        },
        "item": {
          "id": "0be93d9d-6fe1-4cb6-ae6c-36b658861614",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d6bbbb3a-91a2-4bc8-9440-56c7e3810f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4acb5f6-caaa-485d-af95-65c6f3f50f57",
        "cursor": {
          "ref": "c8e773a9-b870-4290-8ef6-ed30e13162a7",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3fdd381b-31dc-4acf-b081-76c62687b4cd"
        },
        "item": {
          "id": "d4acb5f6-caaa-485d-af95-65c6f3f50f57",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c416c78b-05ad-498e-8b50-beed34f7aef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e7a98e-3513-494c-8a79-e5e0e69d0d80",
        "cursor": {
          "ref": "7a40ca36-c09e-48e8-b058-154f19979ec3",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7ec84438-07fe-4c61-9454-d06700a9a766"
        },
        "item": {
          "id": "a9e7a98e-3513-494c-8a79-e5e0e69d0d80",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3747366e-4522-4a60-9be4-b5eece1ecbd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d65c044-eeca-47ec-baa2-878f213b9eb3",
        "cursor": {
          "ref": "4721470b-3c34-4421-bf6d-6dc9cb9fa878",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1f1e122a-4da5-4973-8095-c6d22317fe1c"
        },
        "item": {
          "id": "1d65c044-eeca-47ec-baa2-878f213b9eb3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "10eae93f-b6e0-4cbe-bf84-cb380c967e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd265e24-72bb-47bd-9fb7-a68dc8ef106c",
        "cursor": {
          "ref": "a0a18fa3-f3e9-45c3-824a-c186c7f6a352",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "302cb15c-8ac3-45d8-af16-1808ee9b2667"
        },
        "item": {
          "id": "bd265e24-72bb-47bd-9fb7-a68dc8ef106c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "918a4cc5-0ee4-4943-a5cb-691fca02ac9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c5f47a-7b99-4928-8782-6ce2cb58275c",
        "cursor": {
          "ref": "06f45490-a94e-4bfc-9589-a4fe9b35846e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e61a4a51-60a8-49d6-9bc8-e56658a7f5a6"
        },
        "item": {
          "id": "b5c5f47a-7b99-4928-8782-6ce2cb58275c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "36227888-bd32-494d-b20b-b2e13dd03df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb629e8-00b9-4a3b-9b4c-75a4dee3e5a3",
        "cursor": {
          "ref": "21e5c30c-8dc4-429e-b63e-64e4347911b3",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2d4e9499-6ace-4e98-ba7f-b34d6cc3e77d"
        },
        "item": {
          "id": "7bb629e8-00b9-4a3b-9b4c-75a4dee3e5a3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "69afafff-1631-4c83-b7a1-f0215e9ea591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b53c55-ea8f-4148-912a-4d2182d46eae",
        "cursor": {
          "ref": "02b56361-f8e0-4368-9bf3-f075e9a408a8",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "024b68d7-250f-4a05-a2eb-b8d11ce4f9c2"
        },
        "item": {
          "id": "f5b53c55-ea8f-4148-912a-4d2182d46eae",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ffc1e0f8-7db6-410c-9b22-24eb365e7946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c54d66-4e87-4f94-b6dc-b7b97b5d000e",
        "cursor": {
          "ref": "32b4df1b-e999-4661-87ad-2c7614639cd7",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8bf661ad-edce-4904-97fc-b8275e9c1f4f"
        },
        "item": {
          "id": "52c54d66-4e87-4f94-b6dc-b7b97b5d000e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "cb5e5918-baaa-4ee7-b4ef-e15ee6e3cec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638c273c-cc26-4f1a-90a2-81dff7e63252",
        "cursor": {
          "ref": "abd543f8-1f02-4aea-b33b-48d3f65ec90d",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6b83159a-b2fe-431f-be3d-ef95a15fadd7"
        },
        "item": {
          "id": "638c273c-cc26-4f1a-90a2-81dff7e63252",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5e306a12-95e7-4393-9958-c1add5088d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a772e2-f7a8-4cc6-9a64-f0bb83964e51",
        "cursor": {
          "ref": "24fdcac7-24b7-49bc-b0f6-e25fcbdca406",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7faa5a43-379d-4706-a88f-8dc772352f22"
        },
        "item": {
          "id": "c0a772e2-f7a8-4cc6-9a64-f0bb83964e51",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "908713c4-883a-4bdc-9ed3-5ab00daf495c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb92cf46-04f7-47f5-93a9-c3c1cb27d6e6",
        "cursor": {
          "ref": "eb530164-cbfc-4ca0-b784-20556a33d6f1",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c4276bdf-f8da-4990-9f0b-623765d16dd3"
        },
        "item": {
          "id": "fb92cf46-04f7-47f5-93a9-c3c1cb27d6e6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5d772c36-a261-4fd1-81c8-0060e8dfcf61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2c9e2e-3065-4c44-ae14-423995439d95",
        "cursor": {
          "ref": "2f29cff3-b98b-44cf-a054-424ee8cd0768",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e266d1f1-e55c-4480-a699-33093544627a"
        },
        "item": {
          "id": "ec2c9e2e-3065-4c44-ae14-423995439d95",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "07e2101c-14b3-49d9-a053-37b21557058f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca98282d-323c-42c8-aa5e-7493113d60bd",
        "cursor": {
          "ref": "18e109fd-949c-4c22-bbc9-bb9b698bc8be",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a12b09b3-3714-403a-992f-150ec53315f1"
        },
        "item": {
          "id": "ca98282d-323c-42c8-aa5e-7493113d60bd",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9b3db51b-6974-415f-b397-22aabae3df0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e416536-f8e0-434b-8c34-d0e17e845be6",
        "cursor": {
          "ref": "e2cbd497-e26c-4639-8cce-91228f86603b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "61932ac3-0c88-415a-aa51-dfdbe9d1dbd1"
        },
        "item": {
          "id": "1e416536-f8e0-434b-8c34-d0e17e845be6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d6472654-a51c-4aef-acf2-44d010c99bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "23cf5ae6-5ea2-476d-a1fb-2c12100904b8",
        "cursor": {
          "ref": "6411f1bb-e112-4c58-aaf1-4a422c521218",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "93961a06-5695-479c-9535-7233c33f3148"
        },
        "item": {
          "id": "23cf5ae6-5ea2-476d-a1fb-2c12100904b8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "69ee9533-1d11-4b4e-8360-804d78a4fbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "80ee5a35-c9ff-4641-8828-8ac461be86c0",
        "cursor": {
          "ref": "29a5530e-0e41-4a33-ad42-f7ec61f7635e",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a56f2e0c-56dc-4252-abef-446233919389"
        },
        "item": {
          "id": "80ee5a35-c9ff-4641-8828-8ac461be86c0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b56dce1b-ca81-4f98-8b9b-2a9b5e329051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "4ab61fcf-add1-48dc-a822-70ddc6b76b18",
        "cursor": {
          "ref": "7b9bac81-fd43-4bae-b23f-fd518e5572e9",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7e7a10ad-1b35-4294-a6de-59ff93f8fe6d"
        },
        "item": {
          "id": "4ab61fcf-add1-48dc-a822-70ddc6b76b18",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cf5a5077-3003-49f2-bbfc-1c0cc9e005d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab61fcf-add1-48dc-a822-70ddc6b76b18",
        "cursor": {
          "ref": "7b9bac81-fd43-4bae-b23f-fd518e5572e9",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7e7a10ad-1b35-4294-a6de-59ff93f8fe6d"
        },
        "item": {
          "id": "4ab61fcf-add1-48dc-a822-70ddc6b76b18",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cf5a5077-3003-49f2-bbfc-1c0cc9e005d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68839180-699f-47c4-863b-1adc1805c103",
        "cursor": {
          "ref": "8e9c6e22-c62c-42e4-93fd-2a56520dc5ec",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "28c1015b-14e5-40eb-9bed-e1d78c94b0df"
        },
        "item": {
          "id": "68839180-699f-47c4-863b-1adc1805c103",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6edab5a2-1544-4ca0-98b0-7d67b660d80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2704f311-11ca-410c-ba1d-95056af2730a",
        "cursor": {
          "ref": "18250ace-6f47-4883-bf93-c7e297f3e983",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "241c5300-a072-468d-b586-ec31b5930caf"
        },
        "item": {
          "id": "2704f311-11ca-410c-ba1d-95056af2730a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "38b893f5-ed7b-4e07-9098-2e42ef61ef70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}