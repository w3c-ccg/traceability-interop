{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "72f455f3-0a7c-4af7-bba3-7619401de714",
        "name": "Clear Cache",
        "item": [
          {
            "id": "32bb8117-999d-4235-ae7d-69d68c5ed7d9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c7a38664-ade8-4051-b56d-2a4c812c95f2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "496ffc44-5b7f-445a-ad93-4a284eaabaab"
                }
              }
            ]
          },
          {
            "id": "889088ef-795e-446f-8ca0-958484f6e5a1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8fcdbc36-0bde-4310-b962-16af8b6dd041",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8c773f7a-e554-4c8e-a544-e6c5c5bf8b80"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6c173164-e1ec-406f-adb8-f157331230c5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4e922477-8369-4a3f-a5b1-6702af5b96b8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "49c18502-fff7-4c89-b991-2332c7cbe1dc",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db91fd36-e376-4e1e-9271-ce37ebf1fca8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "579d1d63-d675-49b4-93f1-1edb453e7388"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b26778d2-77a7-43bd-a47b-16e83e9d7299",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e6c5d30-6aaa-4f60-a5e3-4191249bb0ef"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4e788728-09cf-4fa6-b941-3e77ae24688e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "31a2df01-f217-47da-a013-38716928c7a3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a2f1494-97c3-4ec3-8253-0bd082117814",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "37f19779-029b-41f6-8951-de9aa1bd5ab6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "61d49ebb-590a-4811-82ce-38c8c60a6ad5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9474ddfc-64da-446a-b2f0-b347e2c5d779"
            }
          }
        ]
      },
      {
        "id": "f846ea1a-7bf8-45ec-bcb9-c661ffa520db",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ca87ce56-f95b-49cd-9c33-f4b34bea4737",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e0c8b6a6-aedf-4c75-8d92-d25b246d952e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ab88f702-d547-46ee-a367-17360d723f83",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2124e500-c3cd-46fa-8f24-d32d6beb7ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d83c0af2-8531-4267-a4f1-c22f01d29bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7afd862-486e-4610-ad90-4845bdc57245",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c222a9d-3691-4eb0-b5a5-9a8398943492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c35ad55-7b3e-45c8-b4bb-545a6669a798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a62efd-a3e9-468e-adb5-782019a12609",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4fbe2e9-027e-4e0b-9db6-dcae5d1ae5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9aa740ea-2d09-478e-ae90-e5476bcdd234"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1274d02f-8b64-4e46-bad8-32ff23d89e49",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2733b39-2061-493d-b050-5b12615dd904",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbb25f5-e2b2-40f3-a42e-1fd60975d13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe68bba6-4e90-434c-9652-1cc37fd4c99a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9875a6-6d02-4e7e-b770-c7b24144eebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e73f3e58-6cf1-4ce8-b84b-7de5f8af22f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cca2c76-e0b1-4a72-9dc6-569770baf68e",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db539fa-9fc2-4d03-8315-2180781e0723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b807bd7c-7ece-44a9-aa69-61eef114468a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b4900d-ba58-44b3-873a-56ed2afad209",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "65497bb3-a160-43e7-91dd-d7d2842bd5a9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6f496526-bcd8-4189-b77a-0efbd81d9398",
            "name": "Positive Testing",
            "item": [
              {
                "id": "909af1ea-30e5-4e0c-9fe1-96809c3f28ff",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0aa76b58-b265-4a2a-87d1-990d2c44f06b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d4f55fe4-2b38-463e-ae99-5edb3b099903"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a5bfd5d-12a3-4ee0-bc73-3fe9b57dc6e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "c42dff7a-fd1a-4c40-af9b-246f783a64be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d37fa962-6ba3-4dee-a51b-eba69e37420f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79e082d1-8e02-441a-abd8-7bb2e3a2b808"
            }
          }
        ]
      },
      {
        "id": "3939b73f-60b0-4c8c-97dc-31f5d8ca1031",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "38150173-958f-49fc-9ccc-83e2a89af135",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec1e7235-ff9b-4abf-85c2-dd54521477f3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2327dbc5-4639-4ff7-9214-43709795998f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b910d57-7a50-4ad9-9efe-ac45dbec49b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19af01e-4759-4929-a287-3becf2245796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7c083f-5e41-4df5-aad3-39df81c4efef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76c4acfd-563d-408d-b209-e750fbdb6977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe1dd8a-91d3-4745-815d-a3969da2cc78",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d63dfa-fadf-4dff-92ac-9c3a59106167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba1b6b8-707b-45a0-a7e3-22cc3deece2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff12e0c7-896e-4c4f-9b88-d3bf6654ac51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18f9dcaf-9134-4f65-a70b-c4b48775f5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75da175-5f0e-4f8e-bf41-f40782e7f937",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "786e9781-ff45-414e-986d-d66eb60a6bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "489c85a7-294c-4108-97bd-8d83ffa19f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e4a010-bd65-4040-bdf2-186bacc11003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d277f91d-8a4c-490d-a57d-0e7e3a4ceb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8eff96b-9456-4d6c-97db-e3c4d022fa94",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4c742b-0ec5-40f3-aab5-168d51c06be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3976e6bc-5f82-4e66-b03b-35dd256b83c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354df46e-bd97-4207-901a-f23538d26e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17e8402d-a59b-418e-b4c3-a7ccb5d844fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9db126d-3fe1-4c7d-86de-71eb73eb8356",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02263608-af69-411b-ae6c-1f74c7daddfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac3c500-defa-4203-986c-427a04f8bd86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5706dee1-4b5a-4c5e-86ee-a2bdb8a77de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86d70a2e-76fa-4d1f-84b5-1764bbcbf3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6da795-34f9-4c7f-a73b-1773a56ef527",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f0ae22-1632-45fe-8dfb-31612cbe23ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0deb850-0346-41fc-bf96-37bf028144a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01eb499d-ec83-4910-9150-3a7eca95da33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e16eca2-ba23-4d3a-89a5-d201f69ab780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34250215-2598-4832-b74d-6395fe31a1e1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a147d04f-1c8c-40b0-b39b-be132b68896f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d5fdff-ea0f-47d3-b210-ac82042d9cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf41d33-69bb-47bb-8832-462baa5d5ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7b184ad-9118-47fd-8f5f-a04786b4ee08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d68e11-7f47-4488-bbaa-76fc317d33db",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ea41e4-b812-4c3f-8e70-effefff09904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69badffa-8628-4318-9284-a0cc2687b2f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39615ca-5efa-488a-8b44-67e0501398f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05af8670-fc18-4edf-8859-59aba593bcde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2dc305-e12c-43a7-8fda-5f4620189aa5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f84d91-e489-497e-8560-69577b529687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a7e22ac-9af8-4ce7-b5e7-844bd4ff2adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4b813b-911b-42bc-bd67-38b69d637b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f83d144-7f14-4ddf-9d3f-336148acf86a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8952a98-c2ff-449f-832d-57b1566d9561",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b738c6b1-d11b-4f86-89c0-813ca9e83b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a37eadd-1acf-4c2e-8f2f-d1341979f1ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7267e6be-32ac-4b20-a876-b83fce370d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebdc075d-ff51-47bf-9877-b7724b4240c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed62acdb-5b76-4f4c-a006-a45f2f982816",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "770f69f5-cd11-42da-8c6a-ccc696a86d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c031f53d-f757-48a9-9b52-43133ebf2862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d19e2e-59cc-4a21-9f83-29b53ba9e81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55725d23-e3bd-426d-8a0a-17f3b8b85980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567c1cd5-bc15-4554-83a5-127c19a3c648",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c987a0f-5a92-48af-874b-4ebf4b2d8fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc16830-63a0-4917-9fc2-9bc7774c6175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfc6283-d4e0-47fb-919a-41413072cd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "145a8109-0518-4ef4-9180-df1c2ab95c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe3e864-8bd5-4235-9401-088ca881d071",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910eae7b-6fd9-4d8e-ae05-3b7df00e7118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e0db163-dcfe-4d9b-a754-10fbe317dc30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86847fe9-1a5c-4509-9a92-a980ad42ce6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4383474-f75e-420c-affe-3abb2a5b8117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db89f77-6230-4026-b025-b43c4ab61982",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76671b73-50b4-463e-97e1-3a5ff5fc7cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f075171f-1cd7-4f42-8d6d-f70efedac84d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71fd49a-cd3c-429c-a5d5-679f3ef16f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "929b861b-c209-4538-95a3-a44ed8eb9cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3452ae3c-a0f8-4407-8695-2c81b90ee7d6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "882e6f80-2cb2-4ed9-8db6-bf85428228b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "319fb3d3-18f5-432e-9176-90a6e50d7462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386fe868-f5ff-4d7d-8560-d13541ef31ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f94d386e-bf74-4f7a-befd-47e342e7fe30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b81ce7-23f7-43a0-a98e-305cf780fb93",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e21fc6c-0ac8-4c0b-96d6-653c416cc752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c78999a2-84e5-45b9-af12-4624f0830483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa03ab7-85a3-4ea0-9a4b-a132e34bdc98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f7f594e-af2e-457f-aebe-038c640a9db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb432f45-a652-47af-bc32-45ab956d1d1d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f50182d-5850-48b9-a463-edf086cca3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5818d177-7b39-4751-b6f0-66d831ac5eca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4403e0a4-bcf9-4342-b483-d5c35fce0587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29a96df0-7a4c-4c7f-bfe4-70931cd603e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1dcd08-c6b2-4829-8546-11897e47c775",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8459fca1-7683-461f-a0a3-1a4c60499849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cbf7187-9949-4acb-916f-e73a52375b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc794d5-af2c-457c-8b40-4b79a89484f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "454709f1-10c3-4347-bacf-296a2dd64e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6ab08b-d055-4e5b-8825-bd4ac05a18c5",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9e338c-b96c-4cf7-8e1d-8cf0668743e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d7a4c7-2f0d-4db6-bfd3-9d069925f300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31bfb65f-59ed-493b-9ca8-4f606460507e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35969125-f5aa-485e-b4c4-1ab2e6c98a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739d3fdb-73a3-4829-963b-3627e99ed690",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2920b1-bff0-4188-994e-f7116c96285f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28843276-c4ea-403b-8dff-dc7c7b3d6835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153b120a-0ebc-452e-ab40-0a26f132f619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fc3e161-34a4-44ca-b751-c975e79f4abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cda1126-99d0-4320-abf4-3362a1e5bf5b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5398f17-3959-4c8c-93fb-f89848d980d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31fc260-225f-4d9c-8ae2-6a55f798022d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df463b9-4c89-404e-9d36-23ec419431c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "546282fb-9316-4104-b020-2222f2042684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ee2f66-c377-4af0-bf51-024c40c2a6d3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee662edc-ae86-4b94-9725-6a45962bc1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc0751db-b037-4ecd-aef7-ea438a1d7838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d67d3a-4e14-4008-902b-52a4133b9d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5485c27c-b786-4119-b3db-6fcb1df4863a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d49ea6-6a23-47c3-a9ef-b268c75920af",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e37b0e2-7b25-4d86-8da6-e13b4a45380f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54fa2939-d1e0-4bc7-aac9-e2c9af551928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2388d5-9dab-44a3-92de-0e5089d235b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "64d98dcc-aaff-4fbc-b5e1-ede377c578d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34bd3c66-0042-41da-8dfd-5dad97fcc802",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ea35f5-fcc8-4954-a191-91d4c05224d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6699233d-3659-46b9-9402-67d63d772cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a15b01b-6898-4597-8c85-a58005354211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "97f69da4-deb0-40f9-86e0-9522b5f01906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14007f86-3c5a-4f08-a430-34a6b261e9ba",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c75acbc-defe-4ebf-b3dc-a2112170e6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c2cb4d-d943-4be7-8316-1cd4227fc1e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9689c9bc-4949-4a72-9c80-cc488a1dcb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f702d191-3dae-4a58-a648-25ac5548f994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27406b34-47a2-4e4f-9acf-c3f6d4f6500f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7753a6e7-bb7e-4ae6-b0e7-a8616cf45227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9e7cba4-54ed-411c-8dfb-94f432ad8186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f764877d-15a8-48bf-a7f3-625a2710426f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac53e3ff-e328-48f9-919d-c7d62c1b3300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097edd50-b312-4e5b-9ecc-674e9104c280",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cb1ac2-2d9e-4d41-83bd-8e3f4e16a5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3daf0599-395a-4e24-bf30-a9354720882c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb41550-e130-4f5e-9f62-a9d5b50619f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5d3b80-995d-4044-b1b6-fb1c1719e8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a106e1c8-f3fe-4525-9586-18af95ce9749",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c486e1d6-b890-474b-ae94-e2d7ae7b021e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb0990b-43f5-40f0-a8f5-6918566a36ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f7be3d-f46c-47c8-9068-e91a957dc056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d47ae5cc-f463-483b-b0ac-daab3980a7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5ee7fe-f291-4b91-a364-89ee7cea817f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256d0f14-9d1b-4148-bb29-b9d57b55b56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e70ac7c-1ec9-40fa-87df-24ae023c3b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813d3418-bec3-4378-91db-426d65f5d2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbfe401f-7760-4c93-8641-4565182107e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d25558-ee1f-4718-8471-cbb1ede99445",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04988257-cfa8-4ba1-855f-a087bf5ea1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9a0957-0c24-4eea-8629-ddae7184aebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050697d5-7527-4812-9bea-e141102ddf07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "89897463-000a-41ea-8667-4b7f335c4460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39da959-e545-48c5-9548-a1ef8fcfc720",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc51f90-fdc9-4915-80ea-2319b3f65eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1455d158-68ca-4d99-8587-d02a2c737c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d9b22c-b62a-4fa9-b3c5-4c69e6b7284e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a32fe854-6224-4d30-8f0d-bbbe5d22b930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946c52d5-e24f-4634-a953-95487e004a6e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da27e9f5-611d-4754-9aad-888cdaeadc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e498473-a836-4c72-b650-2c70109ef596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231be996-2fe1-4064-8b98-4d207b0e0d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b233151-ac7b-4805-aebc-d960ce19c9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172c5b4b-cb08-48ae-9b51-1cde2883356a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4289fbf-9748-4f00-9951-7db2a39cc745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57605f58-7c18-45cf-95f8-3d60169cad7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d78038-18d0-4689-9ca7-f5bd85e6b58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "919705f0-49d1-43e6-9a78-02640bddac69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4749d2e9-b490-4f91-98af-7c848aabbc49",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c3a6ce-e1b8-45d0-80a0-e1b41b09c744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "296fff4b-8c54-4abd-8a38-19d46eba9aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de7f524-d8cd-4c0d-af12-c5dc8dc21f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b89ee37-4b6d-496c-b32f-1e26c2632781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d410df-01bf-4d49-a6fe-6763a130464e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c4383d-75e2-4db8-9310-1e2ee4ad8ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e619ae71-2416-4074-a529-73a83c1085ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef94c5ec-3679-499b-a815-b05d8e636515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "20b26c98-f46b-4636-88bb-675c18d4eea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92daa58d-e615-4e47-a9ea-7b0a5b30c513",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "008640d5-a57d-443f-a877-6b6b92daebcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "354d4a6d-2d83-4294-9918-76f6d67d6a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69161802-83f1-4ca8-a27c-3e2ba996dff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd749db-3934-4d8c-9ffe-d71799b25ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819d6be6-5d96-4d55-9827-611a4b11770b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69723429-1362-4734-a2a6-d98316933bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca2b2e4-de63-4024-992a-8addf92e66d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba40e1c-d81d-4e17-85ac-095db81edb77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a053b943-6912-405e-8340-8278eb63a7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c1e955-eaca-4455-a9ad-5a505c0da743",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de37687-4a9f-46a0-a8ce-140e96f93a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "472b2648-f6b9-4150-b00f-f3b9efba51a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37949063-2bea-4c3b-a471-264395415540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "06bcfc88-aab1-4688-a69c-f6ebdec4c8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793af3b6-e8b6-4a3b-895c-dd51f6afaa34",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf40b67-3f23-4de0-b4ae-56e2a01472fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15c2c23d-7bc7-4302-810b-9f13fea41f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0d4419-8c21-4525-9f36-3133f04b31bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e710842-ff95-4895-b8af-032366481fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a70a81-25dc-4e0d-a684-67be5cf4f187",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4de41ee-1c57-447e-a7a8-69d25186ebeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f8beaaf-d6db-4e09-a512-32166ac65188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4d6c99-7866-421c-9bb8-8e9b2bb74baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbb3f95e-b453-4dfd-bd5f-427f4dd79b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7671866d-2600-47c9-a322-39a796e8a1e1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4a7fae-8dae-4f49-a979-523a81268ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d8e1f8-8c9b-4ece-9ae7-e097a0e24efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c91690-b914-4685-9a44-162cb51170c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2827a2f4-479e-4755-9f35-a1a04542a2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21953d49-0719-4cd2-9ba3-c95c68684df1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb89464-dc95-49fe-8bbd-825edc8d73b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a20014f-022f-4728-aabf-759d388a3fe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac06ccd-9be9-4df6-a7e4-fe4621da3194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1cb75961-c371-4d7b-b706-1e67989f194a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d1de19-abdc-4041-970f-4fced2fdb693",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e55a801-3b63-4766-8b96-666e286841bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529e97ed-dd43-4cea-bc79-e0ce495ffb61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561d197f-b27d-4660-903d-6db9590b6757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "82974e32-0481-4b93-a905-b90e017f79dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec4cd42-1efa-4d64-9f6f-3726cd14d4d1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63d878e-6075-40e2-8bf1-c3c7c8272d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d482506f-5f98-4460-abbc-8cf40ae822a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997f2deb-eba2-4618-a3ea-bb0f5e2e988a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e05f315b-e828-4a84-9cc7-7d30b7f0f588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b36620f-e56b-4921-bade-a3aa2f98f1e6",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f144f7ee-3b30-4a59-8fd4-6529a03898a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8583ee7d-c360-442a-8451-6000cc8448a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dad9079-7fc2-4080-b0c3-df9606dfadfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5416df29-8356-475e-ba36-3b33035b42f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37c313b-ec38-416f-9d44-eca2a01d6957",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440f49aa-5bc5-4bb5-8e24-461158e7d355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba612b31-56c5-4981-82fd-e36324182bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f932250-0ae5-4415-b994-000a381f51d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd01ab9-e927-4e97-acc4-9f0ec5d62ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1954795-2e95-4aaf-8764-a7e9e38376af",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7870b04c-d11e-4fb9-97dc-25a792241875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce5c2ea-4f0d-4599-bb77-7ad89bae5473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ae4edd-d92a-40ee-a781-9cd4d5ec968a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5133889b-2bee-4cff-b20b-d1e6453a3446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cee7517-06a8-412e-9679-43cebad3d1d4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99083a35-1ff7-40d0-a875-6eb0f74f4302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17619148-0a11-43cd-9239-d2810cc67ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca379dfd-0fc7-422f-8744-c7155e486769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e757f2d-5abb-4486-ad23-e4d47ea136e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51aa91d-e656-48f9-9af1-ea05c2c9cad8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52f06cb-ffe9-4b67-9a02-90ac30e49112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47d48be-83f1-40fc-8099-3aeb309cc411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c557d7-1aae-4d1c-bfbd-e03a45e83621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "623c57f3-512c-423c-b95a-2199c419f345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566da2f0-274e-4943-8969-e660c9ed2bf7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df92dc4a-892f-4258-9be5-04c6cea5781f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c6d5577-2fe5-47ee-863e-c1e1a30be297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d1a479-9e21-4ecd-866c-53a2c0c54ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dbf08b00-4f3a-4a57-8232-7b5d66165d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b79990-5445-481d-986c-0bc5488b78d4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e1d497-43c1-47dd-bd45-716297472d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da3e3e0a-04e1-4fbf-83be-030b748d7a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6a2d80-f402-48ab-8704-964fd1fe23e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe8a2c73-a7ff-41b0-a188-377f0779ca6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f74046a-98eb-487e-8b23-4020b77884d5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e019ed3-7553-45d7-986b-eda8b8cc79c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b0ee30-b0e5-4f17-9509-024f6a124f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f058e2-dfa4-468a-b813-072ed8961d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "09185479-ea5d-4790-8549-e14afee7a606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198fccbe-a959-41aa-a9d3-63cf0824ace8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b11503-4b26-46e5-a840-7acf02dbc65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "691efc57-b9dc-4789-99bc-5686f288c30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d0b8b6-bbf9-4329-af7e-bb1319bc289b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd91f21-d8ed-4b11-8eca-5a50b042e90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e51332-62a2-45d7-96da-b8f02b5c6015",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0136b1a-edb2-4897-a421-da0f6509bb00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af760f17-072b-42f8-a9ea-af2edc3eb486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be2eeb6-d39e-4af1-a2d6-beeb946ebb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8116bdb-5759-481d-a161-8bb10ad95ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023e053a-9ac7-45af-85cf-224c7893fe75",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0cfb330-ef2d-4953-afb3-ca16b1104b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "432f1ce5-3662-49d3-8a0e-11e05e708994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aea1bc4-5d94-46c4-8146-1357c154698c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "600faea4-04a8-4857-995f-6a79e19fe87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc319c5-242a-4697-be2a-a03a3a8e8de6",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa15d9a-611c-4463-b38c-5aca38e42fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d6748e-d815-4205-9fcf-09812f0faea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa0a024-7267-418a-850a-251065cc359a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "487d2b4e-8932-4ac1-a9be-53dc698b7740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0a61be-3790-4231-ac7b-afe441a40f0c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "337a8c52-852f-4d11-9667-dc480d87a375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b62e8f0-8dac-4eb3-a0b7-43d62cdc84a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5f061b-8a70-484a-a733-85ef2915a2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "eeddc49f-de7c-4a09-8595-c2ddd8b5d3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e54c8c-a82c-4ee2-ba3f-7ac87c8ba991",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30bbed5-1f7a-4087-873d-bade4cd04d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d74824-4b1d-4d12-84fd-19c2ad4f4173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80aec67c-3dbb-49b9-91ed-10858a1cf06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b0dcc90-5277-441c-936d-dcdf37d7e02e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f749313d-db1c-4512-8bbe-948ea1170589",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bba163-4824-456f-8aad-3f95d0e31b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c147b4-043c-4acc-8ebf-f38f2da48b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ca72a9-c153-489c-a6ec-1ca675df65fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c565df54-8ce4-4b22-bfa2-299a29777988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0556351-8608-4ae9-b6ae-d0ad1b66d88a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9b69c3-6386-48c5-963c-525548de3106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "743b47c1-7975-4f37-ac17-9a88f5d770d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d223f0d1-e2b6-4c24-b9fa-9c2184376928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "011744b7-3603-48dc-b30f-df6b28c85b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0f247f-694b-4b72-8ba2-114e31e342ab",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17a4f82-db2e-47b3-8996-c880564b038d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff8caeb-d9f0-4d1b-bcc8-297d6f51f9f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe8e5ad-6d80-42cd-90a8-1355baf836b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa51462c-0562-4a51-8e2a-832590dce4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cecda2-8e28-40f7-bd51-e47702207be8",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0dc75a1-edf1-48b6-9759-550e88107dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b42d7ff-de96-4b8a-a518-025685b92a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e20125a-9afe-41f9-a842-d0d11fc74f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3174d5b-b6b5-46a1-adf0-6d891ec0b566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120f8ff0-1eab-4c54-8342-07b8601cc9fa",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b944296a-3115-4978-b37e-054803e1ea3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b3f64b-5608-4fd9-b08f-c59aa7492fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7da340-475f-48d4-a95b-23b4a59d96fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "56dfe8fa-36d3-4909-b929-ce4df696b60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a465824-ec18-45d2-abe3-376aee5320e9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834f62cb-ef72-4d58-b36d-2d23be4287cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ca79c7-7b50-49d4-b52e-6fd6a70e8ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e76f7a7-e36a-417a-8c1c-800ad97b27ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea0c10c7-cbc5-4078-8646-9774e0fd2a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c133d98-fbaa-4763-bf39-106192013257",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9e716b-d1f4-4d95-92fe-aa998c9ee050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e4d9cfb-dfce-4a17-bbb0-ebf08f6b846f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a93609b-275c-4e10-854f-1710a62d05e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d331aede-bb83-46b4-91f9-048443b4a726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db012715-f00a-47a3-b261-6134b3747b82",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0ffc88-8390-4b6c-84aa-6d33f0a84f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84694bc7-6964-4175-b329-9ea0a60c09ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f7ca8d-6050-48b1-a8bd-5ec2b374686c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "580893a7-d5b0-44fe-91c7-de713a0460e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc436878-6ed2-4e04-afb5-d1c8e14de1ef",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa55fadf-06f2-4f7c-80a1-d29557ceb2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176e6231-d848-4405-b7c2-089bdf161697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515ffdc6-ba64-4814-ab57-1035a91adc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d4aa74-45ce-4323-9b68-a14593a2ea42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042e8194-c474-4f46-a8c6-2b0e673725ff",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56002602-06ca-4cba-a6dc-a160963fc1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f27cb06-072a-455b-a49d-e69c54264cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6834d914-72e4-43ec-97a6-9e1c798d99c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e48e263-3b01-467c-a623-3506a555d6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223e4629-b894-4520-a047-73737e2910b4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbc5221-dd6d-4252-916e-26f76ca3b977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e2bb75-07e0-4532-938b-327a5960b4fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce10ad7-0244-43b2-af3e-aeb2cc7a55b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "46bfb811-e6b3-4285-ba8e-9446a6f48a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7f7354-de07-4cdf-9837-fc18b7e4b363",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27527a62-c3b6-4d75-abe0-c973e2cfade5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f22101de-8ae2-4a3c-8973-961e55de90c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f65e3fc-6205-4e52-ba19-22cc5345dc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35975bd3-dcd4-49b8-9ffb-795ae8ffc2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc03b40-c5e7-4552-beb8-81137425b23d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa5ea7f-9205-4d2f-aa36-35484295e2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "558f7e08-113a-46a8-a88c-b83b5618cb87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd51d2b7-984c-439d-b6e9-1f666fe8fa7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73f125e7-7d1e-4854-acbb-dee343e61d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00187598-883d-4acc-b4fe-ec3d0f0c2859",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea83902e-514d-4376-b782-fd2ac5756575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6740951e-9e5a-4a08-ba94-8a457bfd47bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7aec0b-30d4-44fd-8f2f-b1421822d15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af5f642b-b360-49a5-b814-c7cd228085af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae487007-b40a-45ef-82f0-7627619765c8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7a649a-7af1-4efa-ac54-94ee2d0373fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611f7221-073a-4f37-9918-953d7b08447f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9043e4cd-a190-4d73-954d-b628e4fb0bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bbf52a9-9d55-4a26-8c07-435eea4fa4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9786a003-5a77-4879-9c48-81c26f831199",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f55d2e3-558c-4196-94fe-df4477903c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5efdd81b-deb1-4f0d-809b-3dacdac32d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad7829d-63e0-4460-90a6-b5bbdc3b430e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "65c6010c-60cb-412f-a40e-40cfe7f57837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d159d088-d7f7-464c-bcd2-dd9f2ab7014b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "998e5710-567a-4ea0-92f4-a5fda8cc0712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f61ceba-d130-4d86-94be-79e5572aa7b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f02c218-ae62-4828-9389-b20eb2762302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "48fb308e-fc33-4835-bdce-9e03bfdb3526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019f233d-747b-4bff-a5c7-d2cc60676874",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a464d99-c905-4961-9984-a3f7ea9af7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5582cd42-c8f1-4018-8048-c5e78c675c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a63be9b-fd68-4efb-96c7-3323537f9245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b6e2dd-0d17-48cc-8904-12b54f1c6506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab97f6a-c315-4682-ac45-44b5a448f789",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8cdbbb-b5cc-49bb-b94a-e0687f07e789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d209edc-956f-4ee8-9300-23184df48078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad98e429-efe5-4370-a770-4546b5782b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d5a5826-bc3c-4c75-9055-1bfbfc171ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc36cac2-1db5-4b4d-b197-1d94d3f1db17",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39228806-b7cc-4bc7-9101-e0a6b3350fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e754bff6-a28f-416a-b310-8e5748d3bc3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67dc4ccc-4961-4172-9681-806cda8a415b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb0dd82-46d7-401d-81a6-c7fb95a5146a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5507fb71-f09d-43f3-b8b1-a31f10d37d24",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f19d964-c305-445f-a888-b1eeb37e422e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b9ac3b6-44c7-4c35-8e84-cb382a93abc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78164c8d-c203-423a-bdc1-b86339960928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff0de26-38c5-45d5-b131-a5777f4b7b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6035f6a-ffc9-4326-93ce-458bd4ea6ef5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c740b46-ee3f-431b-9f1f-ec8596600497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de36c7f-1013-464d-a181-c3b1e9045de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88153b35-5d02-456f-bda5-cd40f01a211b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "89babd16-79cd-4e75-bfd2-6e74d09c4865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28e2015-d5a0-4746-bd7a-92971a42d5d7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684c7b63-9b67-4252-9880-5fd64bf7d3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080a5419-1424-41e5-b85e-09dbc80fd97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e71a21b-f55e-4959-b2cd-07f7f90b0a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd924a17-f13f-49e6-9b16-c5ebbd15d9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85cb337a-4b41-49e8-8d2e-024ff588b068",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526ac406-80fd-4945-b69a-04f651fa985e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc3da9bc-e5f5-45b6-8d84-ffd23ad1e027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63063c8f-10e0-40ae-97c2-d34a97551593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01152001-ca4f-43ab-8bb9-154bcad23f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fcab3f-f18c-4f49-a6d9-eac0af533d2c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6453322d-dff1-46d2-9e37-80fef195e01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be697dbd-d93d-4fe7-b5ad-1f86260e44fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ffaa57-9d0d-4549-96a0-66b0fcba8c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7165d838-d838-494b-a810-5e90ddfab686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23675254-b74d-462b-9535-edbda245692a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4386a6-4efe-4fa9-b5b0-03020d1aeb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be7faad-f7bd-4033-8339-ab4c30648f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131b6cba-4017-4e9c-9178-eb3f940e4109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a8d7b55-adea-4150-adb1-e07a502b4df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5a20f7-e7c2-4736-aacc-492486824e28",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ba2f64-52d8-4f7a-b2c4-85c1b9924f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f4a171-e4e9-493e-996a-19619f99bf25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525200a2-c563-42b4-941b-d3ce004a9978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a80151c-96df-4857-b9be-65bd727a2934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf5f36d-70ef-4abe-91f8-5f8a6340480e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f952bc34-3781-4deb-976c-6e86d14b65b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d677a86-3819-4fc2-beed-a06d4ffe6665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58d77f9-8525-44e0-af6c-4fbc8969e63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e5ddf1c-b212-469a-81d9-a1d0e1cda618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ae9b0a-f6ec-4916-936d-4251f22fff42",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b57683d-277e-4c60-b50b-c1cd50cc0e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b57159-c51a-4dc2-854b-840c3b63fc53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2505342f-5217-4b2b-859b-64c35189ab8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b14a6c7-f90c-4b91-a6a9-fb81375c536d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed9f8e4-543c-48da-87dd-d6fdf5925ec6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1dc4db-28e7-469a-a25e-983e3d025604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b9833d-cf15-4967-bda7-acf1ea3d4817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7e475c-54eb-494c-9522-37d5a437f2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b99271a-da7a-48f5-978b-4afc4f8936df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ad8c1a-61f6-45cf-abd5-5a63d7c52168",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb174639-fb14-46a7-b47a-c63746b19666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a50cd24f-d7a7-4b93-8324-a995bf5c2f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65eb02e8-6025-4486-8f11-f4732a190dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7548fcfe-30aa-4179-9990-850b650bac67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231aeac6-f428-48ad-9359-2d683a18409a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7dadfe-57b3-4956-8c50-3012890df616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b518a4f-16d5-4a5b-8ebc-112916825212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae844854-0664-412a-990e-ab4f05534ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "93a13d28-1b51-43aa-91bf-0e5904d795a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1720337-a463-4db2-9b26-694cc29d273c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d000d28-a379-4823-9dc2-1762abea1245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d3ba34-d0fc-4f17-a1f7-a4c32b203aec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6f0364-030b-429c-a48c-906d5e2c77d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddef703d-11a6-43c5-9136-43177ce209aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b69a8d-df9a-45e8-9e6f-7472759f9c17",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d95165-8e79-432c-9fda-8bb6c4b5bfe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9f9c5f9f-4d5a-478f-b3d4-1a962920e747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6c143c-adda-4377-b5c5-79840404218e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e93ee211-e76c-4d78-923e-5dedb5e19f60"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f64d4344-81bf-400c-846f-3f009d5ca259",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "24c6da3d-0a91-4381-980f-0ceb17fa8eac",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a194544e-9cc6-4f35-93e9-b3b8bf9e8e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba548f7e-04e1-44a7-861d-ce14c868da73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15463c67-ef10-4038-b4ab-8cb5812c7615",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2035c4f7-a73f-40ba-964a-b6c0bd2eced0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f25b3dd-75a0-4bb2-ad08-718437c92820",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a8dc69-1165-4020-94e4-e32ce070c640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd26383c-d955-4fe6-a5ff-d4c958ea647d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1e0dd0-6877-466c-b53d-fa17d2e9575b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d26eedec-7508-49a3-b5e8-e8f3574d328e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "759fbb55-c7bf-4f97-8191-8d47733743a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "679883ee-5369-47df-b4cb-aa906c91856b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3933ff2d-6d27-4971-b300-3811c7869fa3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "652ae465-6321-4f27-8449-ebb01d05f2fa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "831d831a-0450-498e-8be9-ed326a933e08",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6b32c42a-92a8-4fd0-a3d2-f1a81fff746e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3f843597-2f0d-4c46-8d88-69018192c2b1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "15ca476d-a015-4291-a6e4-be5578238ede"
                }
              }
            ]
          },
          {
            "id": "b3d63611-b4f7-45b0-98da-e06c63909f6e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ea3f97f6-18af-4df1-badf-ee67fe8b7b63",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "065a5524-adcf-4e16-860d-d887b663a5b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aa043d72-f71b-43f8-bf25-93caf2d6fb66"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0868820f-4d6d-4678-b1c8-cd3646954a23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4dea9e5b-27a3-4b61-8222-a61cb95d0c28"
                    }
                  }
                ]
              },
              {
                "id": "1862332b-5ee0-4990-8059-35f828abbbbc",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce6ce45d-3b75-46f3-9f47-bd342ef699c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "337719ad-8fa6-4345-a8bc-c3e93623c6aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13f5e12b-37bc-43f8-a6c3-dbe0cbf74b8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ed6fd6fa-e78f-41e6-82a6-00f2f6a7a95c"
                    }
                  }
                ]
              },
              {
                "id": "6797e793-3b0c-442a-88f1-c8c4b4f8b375",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea591a8b-c37d-436b-8c5d-e061f44fbcd4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b8508148-6651-4ac3-95b1-5e01f1dcd70f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ed27f22-32e5-4090-ac2f-244a56fcc45a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0aeaa59c-55a1-4c3d-a281-d27221cb7e01"
                    }
                  }
                ]
              },
              {
                "id": "1a22878a-d991-4455-b439-af0b128c0b28",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9b47bbb-2ea1-4657-b79a-6d4c290e24c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1058ebe2-671b-4d46-913a-16083701b77b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "243946b0-cee8-4855-b1e6-80e0cc7acb81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6db51fbe-4ee2-4824-bda2-2b1dc6714e30"
                    }
                  }
                ]
              },
              {
                "id": "5995eb35-1328-4570-a222-49b0ab83a9be",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "705ac94d-6b71-4a8c-ad93-468e40b56298",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3d5238d-f554-442a-bea6-6fc77c0aa909"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "038bec33-1914-4cba-8841-0893ed265416",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9f06544d-5915-46f6-95ad-adbd51adb663"
                    }
                  }
                ]
              },
              {
                "id": "9c718178-d817-45fb-8b71-75db705b7d9c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c566ad84-ac88-4573-8d23-ab099b208d28",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d06cf289-63a8-41f5-b4f7-da729d1fa731"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff1d695f-76cb-40a5-8502-fc330c5b4d56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8f3bc04d-712f-47ed-8ad4-06a2b5a4c962"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a47e7170-70a0-4a3a-882f-99766749efad",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8d9a3016-ada1-403c-b8be-84ef51ddbe14"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1f1c7d41-6ca7-4d87-a39c-8a065474544d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8dabb7d1-b10a-42b0-a5aa-f7dac8c1016d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5bfc3be1-9287-4584-b0fc-84c3578e217c",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2b0db3e6-0fec-4860-9fba-da0132144cae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ea6544f-24b8-4502-a5b8-2d19c00b1b3b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0037f9a6-0c16-4b47-8143-7329e3e6ba54"
            }
          }
        ]
      },
      {
        "id": "cc40369a-b775-4cea-bb3a-a5225f542549",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d6c56c13-9a92-42a5-a3b9-4973a091885c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7b8853d0-1354-49d4-b028-07c52601bb69",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "90892c91-1022-4de7-8d38-4120c680aa07",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5599470-92a8-4775-a4d0-729c9639b4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "938fe41c-9093-474e-9287-0d28ae9abbdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad11fc9-d890-4875-808a-a08e506eca43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec44561-e4f8-4421-b07b-aab2b857d2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e840e13a-eaab-4cf6-8f4a-30ebe00aea89",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15646ac8-6234-4356-a1d9-dc939b0ca4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e36009-5b1b-4605-8eb7-a8e2a054de4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1789c2a7-7508-44e1-b194-7409d1c56d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0da2f653-57ed-42bc-88dd-9fd563b5cb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5991fd59-8359-4fd6-bbbc-b6c8ac4a40af",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0de25a-d3b3-4232-8336-8a822e22a00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d363f4e-5c65-4396-b152-2d2bc3593807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5b74bc-b31d-41d8-b8d1-03869064affc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70256379-6631-4c2b-bc2f-3b3f3a504ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac0bf76-4dbd-4360-9381-71d2b863181c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c162046c-f0f4-4e8e-b447-1cab8a19e623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec1ae4e5-80c8-40ca-aaa6-fec305cbf565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac5a85b-47fc-40d8-a968-a0e48e75726f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad287b3-68cc-4b86-b99d-a430deb60c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98447540-6155-47b5-bb4a-9f02e716b0f3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837830b8-24d7-4ba2-b7b6-411f0cb4cc3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5fa3343-e4ce-4e45-b4d5-05b401511b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f63883-28e0-4c05-90a7-020276ac298e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d958a6ee-0682-4ff2-a796-f36bab1cbe02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb3ce00-7927-4fe5-bd28-e9be1db1c1bc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8838d59a-38a8-415a-8089-0c65884e2d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c427723-4c87-43bc-bfa2-b6d263fa6295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ce7b96-8034-43c7-b660-42a1108ce9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "28fefcd0-7713-4ccc-8e2e-345be22bb1a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2fd4b95-1a35-4833-a750-106bb57d0f6d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea822c4-ab0f-4d58-a1ff-ea7bd4309fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a63159-6e5f-4b17-b0b0-44ba254aae7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473b4088-7d2a-4b60-acc4-66b8cd1d5159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd0e6d9e-06f0-43b3-b4a7-f6557dc6b861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401a7506-82f3-47ea-ab06-01311ac37d13",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e1dc32-fe41-44fd-80b1-9e74d5d29d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd715a8-5765-49e6-81bb-f564e0a8e06e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e876f60-1f6d-4d3c-8552-9641559f814d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7de258d-3c3f-4413-bea9-03ac676aea25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf92d5d-4e3d-4d89-a452-9d352c5a59b7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6512e4cb-ad36-4634-928d-2e1a2a897ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96a3564-ab8c-4c5f-92e7-25ad4629f18c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3368fbd9-3ca7-4122-a1fe-0822b26f241b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "641fa6ec-d755-42b4-8b6c-eed35fd6d762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656c0850-02e6-4e6c-b9e6-106a968cdeac",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f515fa04-047c-4d66-b527-c18488207284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44524f58-1367-4aff-a8dc-2787b28f9920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4ed77f-e689-4bda-a52b-0a66857d3ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e8c61bb-f1cb-4d75-9069-3bbcdb4badaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98669b07-9a47-402c-930d-bd60bcaf3c8b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8093c77-e6fd-48b9-ae0e-41449abe7694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c1ef00a-ca89-4f49-a782-e0ae99136898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b5bfee-0e5e-4e95-90a6-13b4a87b87ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "92e2c92c-a5fd-4ac4-b576-269b040f3056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7bdaed6-0ae3-4868-b0b5-67440c7917e2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377996c4-ae8d-49c9-87fc-41163fd2fa81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe1b9178-ed3b-4b07-9a7a-a0dae3fd4146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb44eef-1bb7-4be3-94bf-9430d0fb5f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d938952e-5448-43c9-b78b-f9452b871bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692ec918-d71e-4ce0-8027-f0607b73a70e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e09239-e8fb-4bf1-af7f-da8440cecde3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ad383f-0a2c-485b-9f86-ce27f74a03f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2cc0d32-fcdb-465f-bb38-48c50b86edf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8ada2b-0a1b-4460-8d81-c55f0d714ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f751be2-f3e4-475c-9505-2ad8b9c62e11",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ccc30f-d532-49e8-b520-6680c5a57d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e4654b-830b-477a-9c3b-0407630ffab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74013e99-7809-40c6-9850-905b28d076d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aca9d5f-dcef-4ec3-b509-99d54ead8f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9adddfe6-6844-4d60-a8af-b6d5aabc4f82",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407fbf56-6a83-4371-acb5-ab0fb1116da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf38d8b-bf8d-4bd4-b183-283352cc7fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718c3fb8-ed1d-41a5-b381-074bd4e76d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d626740-2f7b-4b7d-b449-b493a6423156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b62506-c872-488c-8fb7-c192d95dcf50",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8d047a-89b8-49ee-b096-132c76e48951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dddfd450-21d5-4455-85cd-085d52236049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e27d4e-dfd5-4a1f-9c44-81643140c9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6574c4f1-3fba-4f8b-8981-321f1f8bf5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3cd2815-ae41-4e5d-933d-765e36115668",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bc01b1-0089-4bc5-bf3f-374e9e904253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529ee8b0-dfaa-4c64-bb91-a70cf5d4de20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28055df-5b10-413e-9c95-03a3abf5e160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea873bba-75c3-4f32-be6d-84bc9d2908a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f13739f-b9e8-4892-a6ea-61870b3473e8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0bd319-fbb0-4e3f-96aa-dc485c3e8909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5edb5543-f448-4f1b-b2e4-2b02499c59b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6782e86c-8377-4f39-b4d2-66818055878a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9732bcb1-348b-4821-972e-24bf26a61b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455a0ab8-81df-4f1a-b2b6-86577832c99d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb590a7-873b-44d4-abb6-5e1190bc7604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2b383e-9442-40f9-802d-5fdf67261c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7b0758-687c-4363-94eb-31c12c059ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "684b56d5-107c-4d42-bd12-2a43980d99b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46143bf-05f6-4492-9f82-f08b34b33271",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb60021-e504-4774-8013-0cb4298189ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d96ccc-d062-48fa-825b-498214c5217a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3459ed32-84b4-47fa-b15e-8961f28a2afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f2e72db-dd97-4b49-8d6a-41247ca28582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56dd93a-1bff-4442-aba7-2b65cb4dd100",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3933c6d-82ea-4bfd-921b-7052f9ac284f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7338d78-2798-444e-a7ca-6372dc8b67da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4881763e-91f9-4ae6-a004-58b8c4543d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1cfdd34-44f0-49c3-9717-d25e4cbedd2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cb0bb4-e38a-4112-84d2-232e105bc60d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39425fe0-c741-48d0-9c1f-c65f7c268fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa3a3baa-2f66-4b6d-ada8-20dd21be4aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79eb1fc-555e-47de-a37e-8f02f398b333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48c5fa9c-8895-4e2c-a67a-6b6beca9872f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e5609c-dcf4-48f4-b59e-78501e08cd7c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baebd4d6-b51e-4367-a84c-4f65726af234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a91b5598-cb8c-4e74-9d92-43d88249b528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b157db8-26cd-46a8-8a33-91afd1d25dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc5f1d1-0092-4c65-9801-c8b26bdd31e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ca2aac-3ad1-478f-8a97-4823034cfb08",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b26563-c444-4308-85bd-a537ea4bf466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca212dbd-e232-4eb9-85a9-99c92698bcf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c961e2-d746-4d53-94a5-733e7c470f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a2e157e-d569-48fd-8363-177cb3372c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac78c09b-99e1-443d-82cf-2bc76f93bffd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07c4d4f-c9b0-42bd-949a-233799fd3cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a896ab9-7da9-45ab-96f0-64b95636cb80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5937c0-eff0-44fe-8854-19a31ebf6239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4ce95e-0988-494a-b3ec-55feaf4de785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6121b394-53f8-4864-83b9-ef965744fcb2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8532bb-89c4-41ae-af76-2ae34000af4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b56f46f-809a-4814-a9b6-4f45f815e455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985c62cb-1b48-4e6f-8bbf-f08b3be5e577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79573fe3-2704-4fc0-a4c3-35089f884463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e8ce9c-7522-4dfd-8a39-e2980a08a3f2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb1d480-8fa1-4ef0-a0be-a51b8e50c44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc5583e-e897-4e87-aa21-39e930c49120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac387e87-2d7b-4843-a777-c00117dd7216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "052efb5e-d6f0-479a-99c7-4baf1d188695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37b6c2c-daa2-480e-a80c-8392ee8940e4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777cd70b-896e-4e80-96c8-e00ef43df4f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee595dfa-ee46-40d3-9810-a48604a60713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde95063-283f-4a31-af04-5aa5b097eaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee7149a-d335-4d8b-93a4-7125ecfdf097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84686ee8-868f-4426-961e-5ae50035e05b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0414a02d-b2a2-46e7-86ec-43b39e783936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e08934-6642-4e26-b317-9bfe9ff9e3db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4993110b-57c7-4678-a231-8c199421f515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17b32dc2-5f76-4534-a524-4a1bed1e0d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457f58fb-e9bf-4457-b89d-01b1e9af2743",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fdc741-6ba4-499a-8a25-2fac1defe823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef346f7-e524-4644-a1e3-205ff4f6e4ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b9622d-2c45-4c05-9907-2a1444c01fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b19572a7-8c06-4b09-aad3-236fe5278469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fd0502-b45c-4c5a-9169-f45281af29cd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20505d0c-5075-48ce-a099-8b56ad9f81b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d21fd5ed-f913-43d7-960c-cfd2ccbd72b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78f3e87-a2eb-4592-b53a-f586ea53099c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3997b0b-b1b3-4f25-afd0-76a9cda3b727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311e7956-75ff-4e71-9763-bd73a07aabc0",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcb482d-b64c-45a1-9b01-d62966ec3304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b798d34d-0cb2-4bce-bc9c-f0c5c820cd7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4480cf8-58e2-4eb2-82f9-8b986bda0d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf82aa8-7d6b-4601-83ea-8129e537a113"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3fc611d7-d969-4d40-905d-ee9e397f3dd2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "72bfc330-06d4-4731-a22f-0f1ca9b687cc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800af98c-57bf-4870-b3a7-93e2ad58965c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "19f7d864-1931-4070-b77b-f0ab45426a0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02eb6424-dcc4-4fdc-99dd-25fe6a02c075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd25a566-d94d-4eaa-ab16-eb9951b14851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2affafd4-76dd-4a0d-b313-4c0c57f7bfda",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08ea2fc-503c-42bf-ba28-f3fbf81fc2bb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6cfef4dd-7196-4dd1-bb9e-3b2b1c361672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac88792-3dbb-4fff-ac46-a3c7e93db8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5fda582-60d3-4800-8fd5-94f4351d1e5c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "537569bc-d53d-443b-8676-28d82aafb35d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9040dfc5-a1fe-4b4d-bb71-71e49e263c52"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9009a261-199b-41d5-8c84-dfad8e5a7398",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a79e58b-aaa3-41c4-96ec-068edf58873d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc77f813-794b-4185-b5e1-4f18154ae208",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9a062b50-0961-4636-b7a9-d5298b0c434f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d6627de-b8af-4ac9-9d94-3159679c36e8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "135edf69-85a4-4784-b78e-dc4f6f0eec2f"
            }
          }
        ]
      },
      {
        "id": "ad9bd449-7fe0-4bd3-b795-def8f2e58420",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5cecc2d8-5bbf-46dc-a3ce-d2dbe6d8e17f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "458348f0-043d-4356-b790-d69728376ba2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "db06d084-f904-4a8f-a4c7-2e8246ce8d46",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504b3947-c068-4965-bf53-170c37d82bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b465539c-8cea-4d33-b38d-6cfd1bda5a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760a5876-15ec-4a15-90f1-120b7bea65a8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35235ae-e178-4267-a680-bc7ab06a6392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b9728a-f70f-4e2d-b7b3-3ea3d9da3534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e5f829-8436-45f7-a7db-a9b961f51687",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e59052-7075-4675-a1d9-bf75c0e2f608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12e0871-1759-48c6-88e3-68777fefa0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22790a27-fe09-4c87-8159-b6c405c4a99f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a84168-a86c-4aa4-8cb9-1cc573d71d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e6d4ce-9577-4dfa-80f7-beed5e1c035b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f4f56a-66d8-41c0-bd15-902fc3af5c2b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a0747a-319b-4379-a934-e6aacac92009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc183ea7-80e8-4a3f-aa24-83fb2706b8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4768959-b58e-4b04-84dd-012b33e671f5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd68bde-47b7-4ab4-9dce-e233f258d8e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74970e6e-1f96-4d50-ae89-29ceff85aa22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca0ed84-5835-4bb2-89ce-1f06490fc08d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7188e31-a70c-45ce-87af-150f3d93a7a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c559f357-6dfc-471d-a899-d7b267a68764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5761d3-2d2a-414e-a41c-726ebc2d349c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45bfbb8b-5c62-4df9-8256-4caf6e8bd21e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff3678a-a5ee-4fb6-baa7-ea56d67c9ba3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1f4ea1-f353-4d21-a6f1-50768185c6f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f2a981d-990d-41dd-9596-275d35a0f2fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf5f2d9-6734-471c-b8a8-172316039590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e55e82-36ea-4d30-800a-8a43c283dce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eabc7df3-d0bb-48a5-a56a-f15790c948fb",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcef81ec-ad3a-4949-84e9-af16e4528713",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "726e2e33-43af-42a1-a60a-f46d681a5e01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ec5477-4cf5-407b-be8c-4779e0c0aa4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff674b38-cc70-4350-8d92-7d4b19e673de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5f478b-8416-4f24-8eaf-ed18e108f7e2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887a0d1a-171a-401b-ab6b-c2efb218cd53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbb88de5-fa4d-4f7b-bb56-6995e585ed36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56de4287-946b-4355-9342-6cfcf96905a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cabc337-160a-41d9-a02c-ebfdd77e58ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be8964a-eba5-4634-8c63-c991aaea43c4",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b08088-e671-4754-8d64-4270494395bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a142d9-278b-47ad-a7d4-edda180f90e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a818137-7549-4cad-b901-29bb5e1794a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c5bb7e7-6179-4b37-823f-e26144c2a823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42915e7-7dcb-4dac-b4f9-41e81b0b0e09",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0122dde-0ade-43d9-b580-29fa9977cf84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5404cd36-06e2-4cf7-b865-de4df7e95364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4220e60-49c8-4c2d-b4e9-12166eb729d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a02bd700-c7e8-42cd-aece-f43b1c8d6593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b87c7db-28cb-4be5-84ce-02231f181993",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f3f0bb-842a-4a3d-ac9a-514435dcd7bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97317410-85e5-42aa-bf80-9a63a54bf2e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5dc18a-43c8-4261-8a40-cd16da4ec0b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6305e875-db02-46c2-a1f6-64e1b9c78461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4c7dc2-670a-4d80-8c8a-d18ed0cf4175",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c180f780-cd75-4106-8757-0abdb83b64cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02a43df8-e244-4bc8-a2f5-c05a90aea83c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "597e2b86-0435-4a86-9b17-05e51d8a110f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b18e44-79a1-45d7-9078-af9572738dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba93ee9-796e-483c-8edf-81d04b3cb83e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639dcfd5-9451-4363-910c-af70bb9351e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d7f989b-bc38-4c1c-9aef-bd320a8191e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8d0872-ef16-4316-b81e-750bb252425a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f48c8a-8fc7-4bf9-86a6-b878f50e8e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7269768d-738f-4e44-9052-a6cb916c265d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448e4d85-b7ef-4505-8990-b6555d5c3634",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e952606e-53aa-44a5-9170-02e615a82049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b686d30-1de7-4bf0-b92c-eb05c95ee10e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "897e7016-daed-4f72-9f14-272d0e029e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37132b67-9824-4efa-9bfa-dd56ca71ed9b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec00cfa-7f46-496a-be08-8ad947b86c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b67356-d7cc-472f-980d-bee6489ad196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ddcafb3-f8ac-4ad1-a94f-c3839cbae37c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb632f01-72e3-4940-853c-c61346412a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59b96a0-0431-4441-b71b-a65d9f15becb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800f9285-e0be-4aff-9c33-d1107b4a2f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b79ce511-fa05-4188-b5fa-46f2f5e8e4ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01e0914-211f-4b34-aebc-1e0d0ff09bea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b9a11e0-dedd-4873-a55a-bd5f7f3a3a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa16e9f0-ef50-4318-a023-dbc076949774",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb897ca-9ffb-4c02-b25c-f94c533e04f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f834ad01-8925-4f1b-a1c7-8012e5f6fb4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbdbe00d-a845-46bd-99a8-4346ef86212c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f33979f-a3e8-463e-8918-7903d0fdda0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4efef7ed-9647-4c7b-a919-d7cb84419907",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9681b6-d121-47d5-bbb4-4d19f42bc593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba503c86-b7dc-4903-bbb1-b537ddc41e08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aeda73d-a8d7-43fc-9ca4-0081ee6d1917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b745cbf-c17f-4ceb-8d6f-91dc8ce592cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda0baf7-f604-4f28-b408-0779d9111571",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e51b568-287b-487d-b56b-5efdef00179f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9408ea18-96d3-49d1-b3b9-2a8470824622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9875d4-71d0-40e7-a163-df3eb3ceaf79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5cb6c2-4a4a-4b7f-be7d-ef2ffc09c039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b56836-3610-496d-8257-4060c12a4cde",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040a8153-e358-47b8-9e58-a89399850ad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b0c30d-0ee1-4369-aad0-cc63f1617c65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e40a43-c362-436c-a294-44f735f64d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc248fda-fded-415b-816b-479647bcbf53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f2436a-2579-4d9f-9ba1-27b4ec66ddc8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180a2013-897a-49ec-b930-02e9d5135e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64261623-fca3-4c4d-91fb-c9ea30f29bda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2da852-7fb2-4207-b137-c7de2b174a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c1efa5-cd2b-406f-9b8d-9726a95a9b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4fecd9-3514-4c71-9fa6-c7e0c321798d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05295623-ad18-481c-8645-2675c80187d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea7eca50-59ed-4215-9498-03ac0dabf81f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78bd8bf-3684-4395-8461-6cf084c46bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f35afb6-d8dd-4ccc-a4d2-c30ff355ebaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61bc405d-9593-495f-a23f-825df86538a4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf2653d-55e6-4edc-9ab6-d016e776ba82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc7bdfb4-1d22-438c-90e6-95244fd9483e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe38c95-1e33-461d-b569-14e8a48bcee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc4b4ad-f368-401d-99ab-68c2b4746bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891f09ce-f397-47e4-a8a9-81c4d9e41a81",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064df589-3a2f-4f4c-8fbd-ebed8e60ac1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ff4767a-5e6b-4381-b1a2-e45d3ee1a475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8a09dd-8040-4b2b-9f11-c951636db56b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf4c8ca-07b5-4ef7-9f9e-50235fda5076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb4584d-9db6-4381-8963-70238c0618d4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9523dd9f-5db6-4cfe-84d1-5c2ecfe3f7d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b770bfa8-f9a2-46e6-996a-349c732fa2f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbbdab5-6c49-4be7-adcf-72b25b4b10a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba2bb356-e9dc-4260-83d2-3f4bb839ebf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0541d0e-1e66-4dd7-bca4-bf55ab224a6c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4716e1a7-e94c-4b48-9802-02cd24bb8dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f08de9c-d59d-48ca-9781-a9b489204897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b3cbc6-db0a-4a36-8759-b172a7dbb943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb336fce-cf7d-4ed7-b933-b932b32ea4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0b042b-3965-463d-b680-d7279145826b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf06235-f0b2-4147-b059-7a9306f23958",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40a5c010-8685-4d34-9001-7036fdc36524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff6049b-dda5-4da5-9605-56a2f9c14e3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d354aa3-eafc-481b-a2c6-f7613827a334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55252955-8c52-4b3b-b103-c104704423fb",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53864bf-d4aa-467f-a76e-565c6067102e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e458efbd-a8fc-42b8-a0a6-a659339b3457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02de6309-f0f9-4053-bc30-ee83d942a5ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66a9614e-a345-4c99-a90e-95c4a95105d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b84a2a5-54f5-47ca-b76d-d2500580dfc3",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85be2ca9-220b-4041-a230-e6bee60c3694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8effeae3-3e8f-444f-a606-7d24d504cd63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef01978-4399-410d-95a9-9eb112af6a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a489808-aafa-4048-96c8-ca902395dbaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3532ae0-3ea2-4254-adcd-b5ae0c6cbb47",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26200791-47ae-47a9-8dd0-ef2ad9f63a72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd7d2f1b-53a3-4a37-89e4-a552f67c5807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e771d9-918e-4759-9797-79d9338b6032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb701a80-5a2a-4774-abc3-47f022665edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e38926-571f-43f6-8a5d-8b578456fc70",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3602360-d842-457b-a9cd-e2b77536d1e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33c087fc-e39d-4bcb-b062-467afc68ad22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3575abef-8a6e-4c40-901f-a4608bf20666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41a4cbd3-34e4-41c4-acda-29c31e586382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14bbfbe-a40a-4b0a-ad1f-723e9c5a2e54",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56505fdb-4850-4219-b676-900d949f4f07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e7440c8-0e22-4b5a-812c-f295ab1c60d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d41d73-2978-4e33-970c-1860548a1844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22cefdb-be70-4c04-b749-e64f1179a0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf6fefe-6a5b-403f-b362-c625e0e187e5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee272063-a998-4aaa-880f-2803ee0212c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f8023c9-0d8f-44ed-b663-b8c8d8904550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3580be99-2232-499f-978d-1b0a1447132f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dcbeded-8d91-4f29-b516-6c87d272fc53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fe413a-d0b6-4f62-8cad-652ccbffc666",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efd9c55-99c4-40cf-9295-59246ff1c48a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8dbe8c5-3f09-465d-ab13-0ca73fb59716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea6619f-e209-44a2-b079-c9fddad3d357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe931c9-daf5-4fbf-8a87-f14008af87f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6273e068-b120-44d4-abb0-e1b4cc3d5262",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890544bf-42b6-499e-b788-0b7ac497d452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac3729e-9828-4d67-9e56-5ebc9afae412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ea6c0d-d258-4183-a261-3dfcbd0248f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af4ade5c-6dfc-4e0d-ad07-a91efc9bbf8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190e1170-3a6b-46ac-9004-1e807c2eef62",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0c9e31-df4b-4dbb-a6bf-4dc6cab10dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56d1e3d-8d69-4106-9ff5-57aaf5f138af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e43d4d-1b49-4e05-9e0a-122ff5d1e912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c137bfb9-8a58-4164-93b5-ec0839272f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90968873-a777-4794-91da-3fcdad02a342",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbe91e6-e661-4279-ba2d-4446eaa9d46f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c01b36-043d-442a-b4a0-456705a612e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f62c690-f357-4af0-9c42-98c2083c48c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b7c6914-df25-43cf-aeb4-394d157e2bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3365340-575a-4306-a0a2-3aae92213e40",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49eb4e0-f94f-4d57-8a17-7acf878e1e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1430188f-d331-4743-9eae-218620f9eacf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ba6a93-1d5a-499c-870a-e14545ab3abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4349aa-1e4c-44fa-a49e-2175f8888151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b656fa-7d73-4b5f-af94-04756d75607b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60558bf0-e229-4fd1-98eb-5ba6e89cfd2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1456b2f-77aa-446f-8f3c-b413863381ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b0af96-58ce-4ad5-99cd-177484c551e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e0f9e1-e0c1-4b53-8f38-3e0d39faf206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f71353c-4173-4538-ba51-8317d456c42a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f353cb-9d13-4cea-8a26-1dde30bce89d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f096a50b-0857-45d5-ac2a-20c760eef151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9a643c-5bae-41cf-b773-94210b457609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c8cf321-5e9f-4c5d-a660-6233b950a745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6321fe26-f549-48d4-b97f-bf2b64ca83ed",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33dcf92c-58ec-40fd-a020-e6d2d6cf01bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "705492ae-05de-4d01-8d8e-5ad0b30f93db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d19995-2ab8-4edf-987b-aa81a33fb330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "489d9edb-bd09-48e8-8f56-a8f043673886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756c68d3-8721-42aa-9e24-00d05c45a4c3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2779c5ae-caae-4a2f-b8ab-f5dd75b27be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4699eb-fb1e-4cd8-95b8-28096b0f718c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95607428-3e28-43b6-a78d-de732ca5a31a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee9190c0-4e2c-4be9-9cc5-b91622b4b617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8e3ab7-d718-4e3f-adba-24bcafdef516",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a81f8c-b87a-4b69-b5a1-528a89f11204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "704a5334-c2ed-4da5-a83a-b99eb57d5695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "481ae002-2e26-4b66-9e2b-d5d77dfcb8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89279ade-3359-4155-b33b-eee7d5d3bd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c556b270-6056-4bf9-b932-1e7850d02e38",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6028bc71-30e9-4ff8-8010-fe9661388c64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9821e3a8-0d68-4fb4-bc45-f6621f2e70bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb09d1b-5325-4ebb-8b15-021157fb2c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22589237-75f9-4898-9fd7-6aabf1f8fbb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9129d1b9-4557-4be9-908e-858cb939360f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b01ec12-7c11-454e-b711-8039d55efaab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c4aa5d8-2b4e-499f-9aa0-e4aa584213e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4259bc-e92d-4444-b58e-0820dddfa6f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4663072-6708-4a5f-8f06-be041a93ee13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85851fba-ac00-46c9-9b98-49b477d29c97",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6aa3975-55c4-4b30-bad6-9bce426505be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16dc80bd-a223-46cc-99cc-9f175c64da41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "161983bb-666a-4e3b-af40-dd74f2c74816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d9d0fad-8ace-47e4-8f90-36ad6f88ddca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9e6e6b-ecd7-4a72-a7ab-622147c2e0dd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb9da4e-907c-4c84-9079-f1a7c6d2dd15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf08963-14cb-4e62-9d3a-71dc92ec91d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8068ced-ed48-4536-bbb6-f1552a147ac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a136c2ca-ab07-4eb5-8344-2340f9ef1967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59db721a-5bd0-41d4-8997-0b315b5be541",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4b0597-55a1-44d7-93b9-906e71d6c1a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec724cb-11b3-44f6-b10b-14f5067569a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c19072-6a4a-4f0c-a51c-49bf04a5ec76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9433c72-3ee7-4860-8e01-e19f51a22a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6fc3a5-67bf-4fdb-ae02-a0943537d8b8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee278e5e-13ee-4a13-bf38-1347641a15ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc3d183-9950-4f81-a526-5c4889d2c6f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb280ab2-37b6-408a-8671-62a5012ed5e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "791e1071-e3f7-4f08-8982-1a9890cf307f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632b843d-b3f5-47f2-8e4b-371b353e139d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00c927b-4b0b-4d61-b68d-0c8978a93af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3559726e-7484-47fe-96e1-f3d8f1814acd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e0f33f-378d-48e5-91f7-b17ba7adef7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c28c184-0945-41be-95fd-852664a77387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce62882-7bc8-4622-9aef-bc77771ff1bc",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0cc51c-a7a3-43ef-a5c1-dd24378a3187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a313ac0a-9e48-46ef-893a-78b25f4ee7e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e11e1f-41fa-48b8-b5d4-4d4f88698804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b19add5-c57b-4e0b-a32e-0c2523b3a813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8d4ffb-c487-4df5-b22d-1e08c8359280",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2332ee6a-36fe-41e5-b359-39e93ede7ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69c90dfd-411d-47d0-9919-51885f56bca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "223ff746-c74e-4eef-9ed2-0a5b1f05f92e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90accb4-84b8-4478-bbf2-f9236e4edb97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26a55d3-182e-44ba-98ee-d4fed289a028",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96562f3-fba5-479a-bd7d-5ae5481df677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ab1843-9ed3-4f53-9343-b964458a572a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bfc3220-df4a-4e42-85aa-dd49c021434d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289f154a-2080-4cd9-9c03-e41138c45338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52dc785-9f1f-4231-8c55-c0649116760b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6087dfa2-358c-4c57-8903-d7122f518805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bde9439-6a81-43f6-b61c-f1db5bb8e5aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9255df-c2b1-4136-995a-47c07b539434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76910d21-33ad-4eba-83b4-7b3e75e4e0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0177e85c-ea28-4f1f-ad5c-d635109c5e67",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122fcadb-543d-49ed-b5c8-b2297ca68776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5ab0c4-c107-4913-a03e-aec87dd38b12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85f3a7b-4c31-4ebd-98e3-32f779ad1db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9713533-b494-4e75-a711-b49623afbb70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a57813-50a9-4814-b422-864362489fc4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edfe415-88e9-4758-9cd2-6c95bbe79e61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b62724e4-e923-4388-adcc-2ad44d413c8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "736844b3-f63b-47da-a38d-0a2132949989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9cbbd9-af3c-4750-816a-45c6297858dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4bf4a5-4b3f-4a44-89cf-8ed2c9453c4e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac08476-3501-426e-9359-96fac9a6e8c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f7d789b-c653-4d6a-b68c-8960c7cb3e08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8121054b-1a5b-4484-9745-706717402724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66815eae-ace8-447e-9f8d-ddb4a5c9479b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf609f13-770c-4e80-958f-42690327e2b2",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47baf47-f5e3-4ada-a67f-428e5a60fc7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ed574d-695b-4fd3-af1e-d2c01a3d7514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffb307f-e3b6-4b89-a74a-542d8b2fe630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e468ca-0957-4a13-9e9e-6771fa43adae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2006cdd-5c0a-4d35-997e-81e28e42e0db",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25daa503-bf62-4a31-9f4b-13c422f35fed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba0d1e1-9504-4919-aa6b-094dd759c830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "468b7d7e-dee8-46e6-a740-df8d9f50dd5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0746906-d13c-4a7a-8987-e5294a51e5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9e5094-01c1-482c-bd3f-ef76c706cb57",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2168fa2e-dae8-4dee-8f3c-9ecc5755404b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97eb5db-c29f-4bf8-88be-b7699de57d09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc753ba3-3d02-4fc1-aa84-67666f56ae6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50496b5b-60eb-4586-9119-e203184880af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77ee3a2-41fc-454c-8f93-5932c5a626c8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99a7a31-477d-45af-9c1d-1e0ccd8ced54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a6b9086-b77e-4bf9-94c8-56d7117aab77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d5d550-8eb8-4665-b59b-ec38eb27a2df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654ae039-8df6-4a59-a4fd-dac028478b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c74fd4-4c84-485c-85f4-62caa50b7d9a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b8d320-6c4b-4a67-b5e2-b071a92dd89c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "896d1f32-ee0e-4ae3-91b4-59afc50c03dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89fd9bb-d04b-437a-ac9f-2167891cd5bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb06edb4-e1f2-41ee-85aa-7a1f1d558257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe81b31-02bf-43bd-892e-0d6037b02d49",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a835a1-9cd9-458a-953a-97a1b2da4f19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6780c585-2d54-466c-81cb-71608209d974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd28552-5cad-4a62-b69b-a1249d1ed906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d43edee-d898-4105-997f-10c38df6ec50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7008658b-486b-4f0b-ae92-1ab12ae0a5f6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6628e023-86be-46f9-927c-380a751d1e32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c971c27d-dc25-4ae6-9f02-ef4bc6032900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5bfbc5-c0a3-4bd1-87db-0731075b69b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8cb3c13-a904-472a-ad47-3a59c7c973f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dafec137-68bb-4077-829e-6f2943530805",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c125837b-3d82-4ba8-9007-0bc24f8a53f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4aed01c2-435a-44b3-b2e2-1fd2d61cc8f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c299073b-f2b3-409f-bbfd-fd926b9b0531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753afd3f-8033-4aab-8348-890784108ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d642add7-cdfa-4bd6-878e-1071604cc110",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1020f8bc-9f7d-4ad8-b015-75cb7a787ccb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c20554f-bd1a-44e1-aff2-48f7f5bacbe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f589640-f79a-4d8f-9f2b-07b17023643a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b92f8180-cf0c-46ef-a025-b4d2b2342298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d14aa86-833b-47b8-b1fa-3738bf34a745",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce5936b-c51d-4ac5-8dd1-256579e9af61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7922a0da-7a86-4bcd-9fcb-8b39ae76632b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb35790-de53-41e5-b1cd-d71f5d215565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82957cf8-7338-46bc-9f4b-df3d0cf8db7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78542bd-b151-44a0-b2a4-fa8606af5a57",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bdfea05-9793-476f-930e-070ceae47f15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4acb8a06-7594-405f-be48-e4f6e669af8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68cb5702-6e95-47aa-abbe-e482e76078cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a38f06ae-7740-4665-91aa-191551a30111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f33faa-b875-41e8-a260-7191a2c306f1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b87afa6-63f9-45e0-ad20-93c0730e0fe4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50ad95b0-0640-4b20-b4cc-33417034fcee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d213670f-9464-4597-aa84-7e933ec6dad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f4eb0b-edc5-42f7-a14e-1f0e469ccdee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9cea8a3-f88c-4839-8e93-8098bec101c0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45691c68-be7b-4243-876c-4067bf5fe008",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3155507-a3e3-4229-95e5-dc78cbf47f6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "608db1d1-a3b2-45a6-96bc-c237f893e770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef23d7f2-feda-4b5f-acd1-2879a6cef6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7902d38b-5fcd-47dd-88e3-3a8b7a7f4df3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9970a7e2-2c9c-40c7-b090-8cc239ee207c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b115a8da-30ee-4cc5-848a-fe1840ad6cab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d9fcfe-1d5d-4f0d-ba15-cd5259eca470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b8b75f-ffdf-45d9-86e1-600b802d470d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9aa37e1-595a-4a63-8925-b48b46d4f6cd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef45e9d3-2c08-4771-b369-d4c88e1fa5e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8011b36-443e-4ca4-883b-cc6f97b9a48e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a5f8ef-568e-47f1-83a8-b7e7283cdc9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef8b59c-54f9-400f-9f7c-d74e0cb7f3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39b6ec2-72f5-4fbf-9a1a-f6a67b1a0940",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a4e88b-42af-4744-801c-b00fdf051ff1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c00c70d-4573-424a-8ef9-b124c74311b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09299908-220a-428a-a4bf-5cba38fd44d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0be0138-f835-4abf-8cdb-1d00cb862594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78ecd37-a2bf-40a9-9bb1-31c44cdd9576",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc9d5f4-6c06-4835-babd-a3fca51a3577",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c7e4ee5-f15d-43e0-bde5-839e0f01bfdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9456b29b-c16d-49e1-a8c7-c70f6c91118c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351a1ef6-b894-4dc5-a9f3-3d3f418b1fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41bd42bc-f6b7-43c1-ab0c-552a14b87941",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c22f6dc-2e03-4866-964a-d2ffac296785",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbd38568-97a1-429c-a45c-d42013c3c494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a8678a-d880-4c55-864c-0e5c4798ed00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef4db685-1362-40ef-aad0-53829f214c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631de61b-2d10-4b36-be19-dd2cf38ca553",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ebc87c-1110-4823-a6d7-493dc137d321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91d9a7ae-944e-4553-8056-9f1f94a96797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6923c05-06d9-4868-83c7-90531f0baa5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e57097c-ef3b-421f-8267-c453c70ba8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd41551-e1e3-467a-98ae-22f912d8d55e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887fe6ed-906b-4eaa-ad89-436d77c481ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24285449-0642-4a5a-b5fa-623b084aa4d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cbfec35-5fab-4c21-b583-375119a993dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e9b7874-963d-4d93-92be-2754f8bb9c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aceea036-c152-4e5c-8aec-38c9e7e39be9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1e22d9-42d9-4b99-abcd-d07dc90f1ea2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef443c2c-ae7b-46c2-b2c9-24eb77ea160b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6debafc-3a82-4988-8ae0-f7598799224b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5142ca3-b043-4c51-8e96-2744ba95979f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54277f3-8cc2-4ee5-9f41-ea072f5d81fa",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad14a623-fe3f-418b-9b19-f2463ad25bd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac5b789f-8f90-466b-882d-1d79ac60c62e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcaaa022-9e17-4510-b0ea-9a75381fb550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e39cce69-8ed9-4dfd-94ab-7b1be39845c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544975a0-13c4-43a4-86bd-fbcec324cca5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a475638-6c75-4ee8-9341-a6735b9695fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47dfd337-70c9-411e-8cd5-2d7ed8e7b1e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c2ca78-daf8-421a-bcda-2ae56861212b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ca9283-9c1f-4e27-a31d-c25ba53f986b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d27cd53-4cdd-4655-967e-1df989c6a17b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ecb475f-9416-4186-8354-9f6348e253ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9176aeee-9a66-4cd2-8903-cb79e7305c40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b25f785-d3d3-47af-b2d5-90a0093e2c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c329f6-9c11-4969-a8f6-2aa713f1306b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051926ac-7d74-4b02-96a5-94c107ffd887",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98f1b45-1e18-4f43-9d9b-061cf3bdf9c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de2caae9-2f16-4198-abea-f7fa7832bdf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5acf133-a3ec-4cca-9efd-7546fb383d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34835c69-540a-4b64-8a5b-1ad182e41029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61573f3d-5d12-459f-8334-a93a1fb21caa",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635cae7f-135a-4b75-9b0a-2622b8f82e6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b888be5-f962-4e93-b422-b886e8e8340d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c65143-5ef5-47ec-80ed-b114a62366df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f93ebb6-d80e-4bad-ab30-474fd8b03098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc140801-f1c9-4e97-9577-ba48f87bc755",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10881df-464a-492b-a60e-27d186d6eefa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa1db1a4-45dc-4845-8342-99ba246c44fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c109cf91-ce6e-48f7-85e0-fe32118c4ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5984455d-1334-4da1-bc68-43404c7c3951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59db4c5d-2bf0-4af1-a08d-7eb7d3941e1e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377afc1d-591c-4ce2-b088-bb809de46598",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58cb9f18-74f6-4826-a095-53c5cd7f03a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa36d168-e2e2-4d32-923b-2ef29149ea85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076a1ec1-8f4d-4672-99ee-48e61a605998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfa19ce-4323-4fb6-b211-eb5e726034b9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf4d93b-4874-4dc6-8573-3809b3749718",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93667040-f64a-4cca-b819-2dd0547d270c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1960eb-d616-451a-bd79-e8d505ea2101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79cdfc9-02fe-44fc-a6ec-83ae3c93542d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b1e1aa-1771-48d8-bf89-bec2702e4a99",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac0443a-e288-4c1e-a163-8e36a2f1ba0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0ec4373-6e43-4b98-a086-291aa1c03843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6522b2c-c06c-4969-b523-75e925777ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06723816-e265-4ae1-9abd-b7e028d7d3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14481a5a-ecae-4d43-9d3e-ff17533c14e5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeaa4af3-7085-40e3-a963-6c9805bd9df8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e498191-63dd-4381-bb70-24a52ee0f731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd47d82d-9edc-435c-a756-532d62f75f87",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94370146-0b1b-40e9-bab6-560fcc728964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3f3488-b3aa-498a-bc8f-d48c240e16c6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce550de6-6901-4cff-859f-d6b1f336da60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec6769db-3afe-40cc-9cd3-56bdfeb7b57b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dffd256d-787a-4914-9b5b-9ebbb3d76314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dcf6f2b-7dfa-439f-b40b-3772065a7706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc2c009-31e0-4c6a-99cd-8cffdd974e8a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2fbfc6-022e-4d43-9534-9c4a43ea388b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17383938-92b7-4d11-90c9-db2f5aadd9fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d15ba3-5b3e-49e1-af28-336e2fb828de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f566f534-0ee3-41f9-b8be-e6a9999ebdad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea43b3a7-0259-455f-9a17-af38244e7cd7",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2005b65-c209-4859-bad7-29489df6ceae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3039ee5-2967-4c33-b0fd-1042cbd191f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cbcc54-a351-406f-83ca-976fe070a8a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c59fd10-c135-4a43-862b-fdc7a894fc2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779e259d-abe6-412c-83d0-b65f8f1aa06e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76cefdd9-20bb-4694-98dd-37e6664c81c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e7c2d8a-cadb-4abb-8dd6-45fcb6efb726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "391b45ab-12b5-4800-822a-e84a69c35b58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc240cb-b366-46ec-a265-6ef854fecac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f430402-d4fb-429e-bf63-0a71fe78ae0d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb238210-09bd-45b2-96ef-955c029d3067",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8915c9c3-65b9-44c5-9f25-7fded3bdf6ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db08271-a78b-4b3b-b1a0-30797ed848e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad507278-6ee7-4089-9d18-b76fdbce5714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5737833-c1b2-447e-9059-7b29b8c3f801",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c791582-8f10-48df-83a3-b6181c5f1583",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb3f9ab2-64ed-4a1e-b172-f363b7ef10b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7425ae86-a258-41c5-8148-b69e975556d3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94dbb3d1-e76e-4141-b8bc-bbee3d12d8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89f1ec3-5e7d-4edf-9e4e-89da7788915d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555a175e-ba12-470d-9787-b2a858b65a2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41a7c0c9-036c-48a6-84f8-1d37feae0535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6eff7b-75b5-48cc-8fd1-e7a53f26f62a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d41d7e9-2018-4cbe-876b-854cef77e705"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c0b890d-d821-4848-96eb-58fc2eba4669",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48b0495e-ae3d-483d-8ddd-e61409a7aaad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd626031-8ff6-4b13-8d37-e733fcd698cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69c59288-40b5-4ea9-8419-bf4ab6b4df6b"
                    }
                  }
                ]
              },
              {
                "id": "f3329539-287d-4950-ab2c-89131307fdeb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c7d221f3-8a42-4242-ada2-e7b5e9d9dfd9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31d8842-0922-4096-8bf4-287c205c1f52",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ea06b7bf-3c0e-45d1-8237-2498c56f867a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2687e2e7-d46a-4aac-a3ac-68d742b114cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36d3898b-7227-4a29-9220-76c883b40402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e3fd1e-8daa-40da-9c92-f627f8a9b8aa",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f682ccf0-569f-40ff-900b-ece41da766f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e7dfc68a-9ab3-40c3-a628-ac11e0da8012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf4c210-cc3f-457e-a311-b2ce2b9a53cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82c83def-662b-41ef-ab17-dcadf9344b8f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bda52cf2-4160-49a0-97be-c0c3645f54bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3619f0e-ed87-45ad-b3d9-8caa32ecc6e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df3e67da-11ea-4fbe-89c2-118009bcf3d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "124fd307-3510-42df-9016-d08f29b19f1d"
                    }
                  }
                ]
              },
              {
                "id": "e63c271f-50b1-46bf-be31-f3b733aba70e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9850f964-2b2d-4698-a13d-12dc49fa2925",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89f0c1b-cf60-42ca-bb39-efb7337c40c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9d7fb86e-8ce0-45e4-88c0-0643c7780b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17d9052-70cd-41fc-9ede-f77f0ccffcd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4203b19d-b0bf-460a-bb76-1d9e26726122"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "84a9fe98-cb8c-451e-bd3e-289acd4cd609",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fa60b2e8-7f60-4b34-b761-aaab344bcca6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55c0ee87-7544-4450-b347-c365e2eab141",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ec39cb1e-0b9d-4892-81ee-2f10d3f4a4c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9adfc01-2f38-4d6e-9cd4-efc1a177e65b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "891b6ef5-f530-415c-85f1-36f6ea025d3d"
                    }
                  }
                ]
              },
              {
                "id": "83385e89-9279-4c7f-adfe-131251be01e4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0563cd57-3481-4c1f-84c2-334d579c22ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ee76fc9f-62ad-4ebd-911f-13c490eb6d56"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8491ba4-ea32-4290-bf76-311a36a13856",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92e52a85-c318-4e55-8ba3-63f1581e6b9f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee2e8eee-f097-4017-bd1d-dcd81813e9ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0abb40c2-b9cf-4ad5-9bcf-baa1c09b82f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08533ad0-a120-4d47-99d6-0f837ab27789",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cfb1d721-846f-4424-986f-e20a73267566"
            }
          }
        ]
      },
      {
        "id": "6d686e2b-20ca-4740-987c-5fc55198113e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0fe9d9f8-79fc-4121-97d3-ccb6178a6e56",
            "name": "Negative Testing",
            "item": [
              {
                "id": "84ce8aa0-ddb9-4f14-a4a5-084e13095c0b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "85fbc40e-7a68-4739-9515-973d4399d177",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111a4557-923f-4f9e-88b7-f242eb52b7be",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "816edd3e-c293-4a0a-9aa9-35b1a74490a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb60957-3f80-40dd-b625-895015c9a431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b459ede7-518e-46ba-8ff5-f2d2cf973eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702ad856-9049-4cab-999c-df0da36d914e",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41eb071f-a20d-4493-a9fb-9ad7fb34fe6c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cedb896f-7a55-4509-8484-a98a2bf14934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d60de39-2603-46ab-b8fc-929977928015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3a35ee7-2064-422d-889d-aa79c09daa7f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49c0383c-7b4b-45c8-9a2f-265539f9ca00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65c3ad1b-c80d-495d-93f1-7dd621fba6d1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8e84150-fd2d-48fc-83a1-5ff74a44b241",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f79423e6-6269-4667-a03b-7ca5e32e3792"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74323416-ca70-42e6-a073-1666ffab6325",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2a2edb09-21cc-4a62-9205-9d3bedfaefb5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "129943b2-7995-424a-8822-358b1835fd02",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e33ae55-4377-484b-8913-5598c2fdc11d"
            }
          }
        ]
      },
      {
        "id": "e78b8a13-80be-4bdf-8d33-7923291993ec",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4517a95a-9a9e-43e3-94d0-5372a299cc58",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d2b7518-01fa-4fed-888e-61872a6df720",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cdbaf5ca-ce16-43db-8bfa-ccfa110919d2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6189c617-d4d3-41cf-9fb4-33b695ccf0f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c5cebce-1ac1-4703-94f1-a105be89c1c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de557ba5-119d-4a51-9a3f-94ca07466e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b11b76e-70b8-4d7f-ad68-ad4a8e2e3de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ac1345-5f2e-4336-aa8b-49054cc88ba0",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7e7f69-4aed-4e72-b087-9c1863f9451e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "18732d1c-fcdb-4e29-9e78-63ab120ebb49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf30e4bf-a488-42f6-9e6b-272cc82c5e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "301ad77c-277a-47f5-92d5-fd212f6bfbd5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b46187e-fca1-4ba7-b691-9a429b917ea1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38340af2-5a18-4749-9d74-27a9603db5f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f7a1109-883a-4347-8ec2-3dda8e9dd0e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe70b24e-5377-4496-bc77-b7c921421f0c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad0c736b-76c0-443e-b131-494ba44b98f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "365c6d95-aca8-4f7f-91e0-f7089f1d7344"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dcd1aa5b-85ed-4615-98ec-d20a392d94d6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d53787da-ad52-4ebf-abb7-ed025b23bb1c"
            }
          }
        ]
      },
      {
        "id": "07a23342-65cf-43ad-8b83-d25400ac4e65",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f807a53c-d1c1-457b-bf56-362fa4dcce8a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14e9dcbd-e659-4df6-b920-9962d2c9579a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3e6769ff-7930-4696-aa0f-20bcf4eaefa6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951cb50a-0c1e-4aac-8592-8c4bf1709aea",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f57f9bc8-5dd0-4818-922e-24a3a7e6bd32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d1f638-f2a9-41af-aa68-75e2a3731741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4cf553f4-1876-4872-9af3-932eb4e99ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cc5b23-454b-4bb2-a114-16b340dccfc9",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec33cd6-5d7f-4a2b-8d26-30ec75c022a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "60786387-e4db-46db-bac9-fe51901139a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3adb8922-6d10-4771-9880-8ac956a5e142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a3245f8-ff51-46b0-8b5b-a5d338b501fd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d1695d2-689a-404f-941c-07447f7bf2d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c742be54-2fa8-4626-9ffa-67ec31667855"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "04b0a3a0-e45a-4393-9681-617ef28ae6a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eec09125-0e1d-4824-a12a-dd17a98a79c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9378f1c3-b979-4bce-be9f-947d48ec8cfe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "95a21d2b-45b2-417f-85d4-5cb239c0f480"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bdd7f80e-10bd-4df9-9444-0dae6766a5d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d878b671-4326-4579-9212-ffcba2f96fdb"
            }
          }
        ]
      },
      {
        "id": "350e66df-2ad5-47e6-b4b1-78b88c5ef5ea",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9485fae1-0580-465f-b170-228a94acc672",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "290e35c2-8307-4176-b94d-95a0cba5b3dd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "370582d0-eaa7-4580-afe0-c225150260df",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9997c04b-41b7-447f-a861-2b1d79c62f02",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d42e375-cff0-4590-9c67-1b9c255d30a0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 40.73076923076923,
      "responseMin": 17,
      "responseMax": 291,
      "responseSd": 35.16669938396452,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1684888676644,
      "completed": 1684888701591
    },
    "executions": [
      {
        "id": "32bb8117-999d-4235-ae7d-69d68c5ed7d9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2b893fe4-3912-408f-aeb2-881a8dbbb556",
          "httpRequestId": "4651e319-663a-43d7-9d68-43834d81501a"
        },
        "item": {
          "id": "32bb8117-999d-4235-ae7d-69d68c5ed7d9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "be555fa4-2498-47b6-a4bb-90c2eb409f58",
          "status": "OK",
          "code": 200,
          "responseTime": 107,
          "responseSize": 0
        }
      },
      {
        "id": "889088ef-795e-446f-8ca0-958484f6e5a1",
        "cursor": {
          "ref": "84c772c5-ee13-499f-8755-364b8a486565",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "59350e83-246b-4ce5-a486-19b1e930a26e"
        },
        "item": {
          "id": "889088ef-795e-446f-8ca0-958484f6e5a1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "536d17cb-1235-4a1b-8773-e08ca72c6d71",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 0
        }
      },
      {
        "id": "49c18502-fff7-4c89-b991-2332c7cbe1dc",
        "cursor": {
          "ref": "3f63aa32-8e82-4032-8114-65ae11dd59ed",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a0187a15-d4ff-480d-90e4-7f92f60ef8aa"
        },
        "item": {
          "id": "49c18502-fff7-4c89-b991-2332c7cbe1dc",
          "name": "did_json"
        },
        "response": {
          "id": "92f1f387-da73-4f7f-b3dd-07c6868f72e1",
          "status": "OK",
          "code": 200,
          "responseTime": 155,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab88f702-d547-46ee-a367-17360d723f83",
        "cursor": {
          "ref": "599319c7-7cb2-4bdb-9355-3f1926797ef9",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "488a7b0e-c35b-44e3-97e1-39de167ecf4c"
        },
        "item": {
          "id": "ab88f702-d547-46ee-a367-17360d723f83",
          "name": "did:invalid"
        },
        "response": {
          "id": "048a3f59-7019-414c-974d-56f364767664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab88f702-d547-46ee-a367-17360d723f83",
        "cursor": {
          "ref": "599319c7-7cb2-4bdb-9355-3f1926797ef9",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "488a7b0e-c35b-44e3-97e1-39de167ecf4c"
        },
        "item": {
          "id": "ab88f702-d547-46ee-a367-17360d723f83",
          "name": "did:invalid"
        },
        "response": {
          "id": "048a3f59-7019-414c-974d-56f364767664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7afd862-486e-4610-ad90-4845bdc57245",
        "cursor": {
          "ref": "e8276e7b-a297-412d-a23c-3710824fab5c",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f34fa3a3-b13a-4447-9bc9-3c9fe764d38a"
        },
        "item": {
          "id": "f7afd862-486e-4610-ad90-4845bdc57245",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "318faeb1-e244-46d4-b275-83dcb285b3f1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 74,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a62efd-a3e9-468e-adb5-782019a12609",
        "cursor": {
          "ref": "8267ce7b-98bc-4a4e-9fd6-970a565a008d",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d7395a86-46cc-4446-9ad9-46537c0ae522"
        },
        "item": {
          "id": "89a62efd-a3e9-468e-adb5-782019a12609",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5b720003-aae7-4116-b1aa-48206baf4c1f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2733b39-2061-493d-b050-5b12615dd904",
        "cursor": {
          "ref": "7c2b2d10-69bb-4e05-925a-bfe0e2295d92",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f7a13550-ae58-4cbc-902c-2478809eb491"
        },
        "item": {
          "id": "a2733b39-2061-493d-b050-5b12615dd904",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8bd46831-7ed0-4f0d-822f-c5680f1d8aee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cca2c76-e0b1-4a72-9dc6-569770baf68e",
        "cursor": {
          "ref": "a6313bfb-7a63-4507-a13f-a97ebb833d6e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "edcc85e1-d36b-4b5a-be05-cf647e4b88ff"
        },
        "item": {
          "id": "6cca2c76-e0b1-4a72-9dc6-569770baf68e",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "970bb2ed-0eea-45cd-bff0-f52283364318",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cca2c76-e0b1-4a72-9dc6-569770baf68e",
        "cursor": {
          "ref": "a6313bfb-7a63-4507-a13f-a97ebb833d6e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "edcc85e1-d36b-4b5a-be05-cf647e4b88ff"
        },
        "item": {
          "id": "6cca2c76-e0b1-4a72-9dc6-569770baf68e",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "970bb2ed-0eea-45cd-bff0-f52283364318",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909af1ea-30e5-4e0c-9fe1-96809c3f28ff",
        "cursor": {
          "ref": "d56590ae-c193-41b1-9801-5c3dee84f42a",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1386f54b-bea4-4a9f-ae2e-6508d77931c0"
        },
        "item": {
          "id": "909af1ea-30e5-4e0c-9fe1-96809c3f28ff",
          "name": "identifiers"
        },
        "response": {
          "id": "7191918e-ed22-413a-91ff-d0fdaaf78b9b",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2327dbc5-4639-4ff7-9214-43709795998f",
        "cursor": {
          "ref": "f59534e9-c468-40db-bee0-dec848f3d417",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "25d97bf5-9e5e-4ec5-89b2-2451b8a7a9e8"
        },
        "item": {
          "id": "2327dbc5-4639-4ff7-9214-43709795998f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b7bd959c-2a17-4ea2-b200-bfdb866d6ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2327dbc5-4639-4ff7-9214-43709795998f",
        "cursor": {
          "ref": "f59534e9-c468-40db-bee0-dec848f3d417",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "25d97bf5-9e5e-4ec5-89b2-2451b8a7a9e8"
        },
        "item": {
          "id": "2327dbc5-4639-4ff7-9214-43709795998f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b7bd959c-2a17-4ea2-b200-bfdb866d6ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe1dd8a-91d3-4745-815d-a3969da2cc78",
        "cursor": {
          "ref": "8a7c2fe3-6944-4ff6-ba8b-61f2ccf18935",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "92ece41d-4182-4365-a128-f4af5e897fb5"
        },
        "item": {
          "id": "6fe1dd8a-91d3-4745-815d-a3969da2cc78",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0383debe-63e3-47d2-addd-c9c5f961645e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75da175-5f0e-4f8e-bf41-f40782e7f937",
        "cursor": {
          "ref": "f87879f1-6b84-47be-85c4-2b2160d5381b",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e5e45ac4-83ea-444a-b945-b220fab25b6a"
        },
        "item": {
          "id": "e75da175-5f0e-4f8e-bf41-f40782e7f937",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d3aef31a-ffb8-4359-a747-593325434c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8eff96b-9456-4d6c-97db-e3c4d022fa94",
        "cursor": {
          "ref": "e4242ba8-4aec-4a26-a1ec-8ba4c49bea26",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "de70c4b4-cd1c-4831-b7cd-5cb978dc25c1"
        },
        "item": {
          "id": "d8eff96b-9456-4d6c-97db-e3c4d022fa94",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "32250c0a-9570-4aaa-b44e-58745c752cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9db126d-3fe1-4c7d-86de-71eb73eb8356",
        "cursor": {
          "ref": "f39d2971-dabc-4310-93b5-405de96d8d8e",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "58fe0c33-ed86-4c72-b51d-a2c9da86f48b"
        },
        "item": {
          "id": "c9db126d-3fe1-4c7d-86de-71eb73eb8356",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1b695f77-2791-4b02-bb35-2e96a9f2dae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6da795-34f9-4c7f-a73b-1773a56ef527",
        "cursor": {
          "ref": "8976c5c9-bdbf-48a0-af73-1591e890cf4c",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b2f861e3-9974-45bc-ac4c-ff15bd1b8d68"
        },
        "item": {
          "id": "bb6da795-34f9-4c7f-a73b-1773a56ef527",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b7f2ec72-37e9-41f1-99ae-a44e0d20b73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34250215-2598-4832-b74d-6395fe31a1e1",
        "cursor": {
          "ref": "1c77182f-fd67-4c20-ad6e-3c3fc0369560",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "880bfa5b-b192-446f-a071-525b47962a50"
        },
        "item": {
          "id": "34250215-2598-4832-b74d-6395fe31a1e1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "fdeae44b-d888-4af0-8b1c-a73f80ce92dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d68e11-7f47-4488-bbaa-76fc317d33db",
        "cursor": {
          "ref": "0ef1cbc0-2f12-4578-99ba-ad149ff7b3ba",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d90141b2-1e79-48a9-8fe3-321496fb615c"
        },
        "item": {
          "id": "17d68e11-7f47-4488-bbaa-76fc317d33db",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ca5d571c-e0e3-41ba-b37a-1ce44b00c3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2dc305-e12c-43a7-8fda-5f4620189aa5",
        "cursor": {
          "ref": "dd7b9857-bb97-4628-8e34-89a88372a277",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1fc7da13-f5c3-4349-bcab-f59648d75e0d"
        },
        "item": {
          "id": "ac2dc305-e12c-43a7-8fda-5f4620189aa5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "354bcab0-aca4-41b4-82db-6365e21fc4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8952a98-c2ff-449f-832d-57b1566d9561",
        "cursor": {
          "ref": "7d4b556b-706e-4441-bf17-2ab6e42dd12f",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0364ee9e-cbb7-4fd4-a634-a4528cf04887"
        },
        "item": {
          "id": "f8952a98-c2ff-449f-832d-57b1566d9561",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "52a9f7dc-3669-40d9-9855-9e65224618a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed62acdb-5b76-4f4c-a006-a45f2f982816",
        "cursor": {
          "ref": "4364e463-fe48-456b-9f56-b831ec8cd631",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "37831d84-060b-454c-b8a9-189c4b64acff"
        },
        "item": {
          "id": "ed62acdb-5b76-4f4c-a006-a45f2f982816",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f9511667-0259-4f58-8ade-58b8031d11c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567c1cd5-bc15-4554-83a5-127c19a3c648",
        "cursor": {
          "ref": "51dd1355-2fa6-4399-8e49-04922d0bc9a4",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "66b4e106-3cf1-4a9d-b95b-750dbfc49b00"
        },
        "item": {
          "id": "567c1cd5-bc15-4554-83a5-127c19a3c648",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d3b3868a-5a7c-46de-9ff4-6d7f59638206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe3e864-8bd5-4235-9401-088ca881d071",
        "cursor": {
          "ref": "d4a822b0-1df1-492f-8c59-90fb975d36fd",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "47575e54-c815-4682-b832-2a71d83bec91"
        },
        "item": {
          "id": "1fe3e864-8bd5-4235-9401-088ca881d071",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7e691470-56e8-4e51-bf3d-af26a70989b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db89f77-6230-4026-b025-b43c4ab61982",
        "cursor": {
          "ref": "d74b8edb-4389-447e-9764-1b8b6de24113",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e13f237c-4fba-4edc-98db-34aa7215b4c7"
        },
        "item": {
          "id": "9db89f77-6230-4026-b025-b43c4ab61982",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c531e2b3-0c85-416e-b21d-dbef9cf13539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3452ae3c-a0f8-4407-8695-2c81b90ee7d6",
        "cursor": {
          "ref": "e364bf1b-1d9a-4c48-8fa8-7de69f21b93f",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5d266701-7866-42f0-8972-4311784c9852"
        },
        "item": {
          "id": "3452ae3c-a0f8-4407-8695-2c81b90ee7d6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "61f5001a-8323-42bc-874a-b422d5378e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b81ce7-23f7-43a0-a98e-305cf780fb93",
        "cursor": {
          "ref": "11743f3c-5f3c-42fd-81c9-b8bc481d7686",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3226183c-2bf0-476c-8e04-db1499008f45"
        },
        "item": {
          "id": "60b81ce7-23f7-43a0-a98e-305cf780fb93",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1d11dd5b-436f-4c8c-b4e5-da6037962180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb432f45-a652-47af-bc32-45ab956d1d1d",
        "cursor": {
          "ref": "4302e479-2927-4a88-b6d2-a09250cf8179",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c2ec5497-3044-449d-80f0-4d5216881fd3"
        },
        "item": {
          "id": "bb432f45-a652-47af-bc32-45ab956d1d1d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3d39f6c5-42db-4343-8b73-bcc786b7e91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1dcd08-c6b2-4829-8546-11897e47c775",
        "cursor": {
          "ref": "b5823324-43e9-4c56-a6ae-bccd516f47ed",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "25aa4c73-bb8c-466b-a105-2c8e0455f53c"
        },
        "item": {
          "id": "9c1dcd08-c6b2-4829-8546-11897e47c775",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "aa33f4d8-d731-44d6-b541-49ceaa32ed87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6ab08b-d055-4e5b-8825-bd4ac05a18c5",
        "cursor": {
          "ref": "613cd4b8-56c2-4971-a5b3-aecaf45b0b1d",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3ca6798c-d61e-4f5f-962e-353565cb696c"
        },
        "item": {
          "id": "7d6ab08b-d055-4e5b-8825-bd4ac05a18c5",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8a6fe5cd-c65b-462f-ae22-dcf121e0c17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739d3fdb-73a3-4829-963b-3627e99ed690",
        "cursor": {
          "ref": "4bf2d5ef-53f8-4736-9851-1b3af8b06625",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c2af582e-b401-46e1-807a-c2f3e81feecc"
        },
        "item": {
          "id": "739d3fdb-73a3-4829-963b-3627e99ed690",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ad8b2b85-0e1e-47fc-af49-ea1d3ed65045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cda1126-99d0-4320-abf4-3362a1e5bf5b",
        "cursor": {
          "ref": "3b368743-ec67-4c60-a4f3-ee0956d6579b",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a2d7c689-3d06-4055-8a19-12d276f04a97"
        },
        "item": {
          "id": "9cda1126-99d0-4320-abf4-3362a1e5bf5b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "49424955-97b2-4c56-82f7-65f0a8851c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ee2f66-c377-4af0-bf51-024c40c2a6d3",
        "cursor": {
          "ref": "f5bdc992-366b-430e-a907-96f8a8d30b90",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f8a9565f-6015-4932-8020-6c579ef734eb"
        },
        "item": {
          "id": "16ee2f66-c377-4af0-bf51-024c40c2a6d3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "eb122867-3dc2-480a-ada8-9fed562b3a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d49ea6-6a23-47c3-a9ef-b268c75920af",
        "cursor": {
          "ref": "d1059529-a446-497e-9fc6-226b0f49796e",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4aed0e46-fef4-464d-a656-d58d603871f9"
        },
        "item": {
          "id": "07d49ea6-6a23-47c3-a9ef-b268c75920af",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "20a49580-6e4d-46eb-8ab0-c2d9e5ef9eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bd3c66-0042-41da-8dfd-5dad97fcc802",
        "cursor": {
          "ref": "10c1504c-7858-4da2-bb8b-3ec768c0dd21",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "87d44a0d-6ea0-48a8-b4c6-44ef25739493"
        },
        "item": {
          "id": "34bd3c66-0042-41da-8dfd-5dad97fcc802",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0f038260-19b2-4130-ab66-ffbac76a004f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14007f86-3c5a-4f08-a430-34a6b261e9ba",
        "cursor": {
          "ref": "9265eb60-06c1-44da-8776-98bfbae1633b",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e1ac9802-a25b-4e89-942b-8679b6ee660a"
        },
        "item": {
          "id": "14007f86-3c5a-4f08-a430-34a6b261e9ba",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "844b34c9-9e7e-41eb-b200-042370adc5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27406b34-47a2-4e4f-9acf-c3f6d4f6500f",
        "cursor": {
          "ref": "6a5142a4-cb9b-418d-a24d-5ea52455610e",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "15c7da3b-b023-478f-ac8c-e388f3aee811"
        },
        "item": {
          "id": "27406b34-47a2-4e4f-9acf-c3f6d4f6500f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "361963bf-9d38-4c3e-8af5-f4e48d40ac7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097edd50-b312-4e5b-9ecc-674e9104c280",
        "cursor": {
          "ref": "e07a6739-6945-4a70-ba25-6dd28cb888c4",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4fb77399-1ebf-4706-947c-84e00780b086"
        },
        "item": {
          "id": "097edd50-b312-4e5b-9ecc-674e9104c280",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d0915405-e6b8-4e10-82d0-5c5c4e3fdbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a106e1c8-f3fe-4525-9586-18af95ce9749",
        "cursor": {
          "ref": "d89ab407-c27d-4f72-9e91-214c9b241a34",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7775071a-cb32-492f-8667-fd0e39e6564a"
        },
        "item": {
          "id": "a106e1c8-f3fe-4525-9586-18af95ce9749",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "38bd0ab0-a1de-4f37-8f5f-c729a18396e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5ee7fe-f291-4b91-a364-89ee7cea817f",
        "cursor": {
          "ref": "e92cc86b-969b-4038-8c08-8e0dd6455f97",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4ec53dde-3105-4b65-9ffe-facfb6c27c7a"
        },
        "item": {
          "id": "5d5ee7fe-f291-4b91-a364-89ee7cea817f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "aebacc13-9b17-4377-bd44-aedf762849a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d25558-ee1f-4718-8471-cbb1ede99445",
        "cursor": {
          "ref": "2efe6331-8e33-43f8-b313-0fb41b9bb8e9",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "85a595e8-f03d-448c-adaf-1534e2b8386e"
        },
        "item": {
          "id": "84d25558-ee1f-4718-8471-cbb1ede99445",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "cdb65607-5310-40af-9b41-576c67f5c04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39da959-e545-48c5-9548-a1ef8fcfc720",
        "cursor": {
          "ref": "2a34008e-91a1-4c0a-8d4d-b859a8967cbd",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9f41f10d-f7b1-4049-8dad-1f56f4b23006"
        },
        "item": {
          "id": "b39da959-e545-48c5-9548-a1ef8fcfc720",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "955571ea-a5c9-4ff6-be46-9a25e738b7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946c52d5-e24f-4634-a953-95487e004a6e",
        "cursor": {
          "ref": "d42edc37-74b1-44ec-babc-7bd0e15452ea",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7a7992c1-9714-4e9c-8850-be2db712fcc2"
        },
        "item": {
          "id": "946c52d5-e24f-4634-a953-95487e004a6e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ce37bad7-6cbd-413a-a6b2-2253bd0be609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172c5b4b-cb08-48ae-9b51-1cde2883356a",
        "cursor": {
          "ref": "fa3470e5-645d-402b-843c-e4b945779b2e",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b3dd2f91-ec93-430e-8219-c2a0fa6fa264"
        },
        "item": {
          "id": "172c5b4b-cb08-48ae-9b51-1cde2883356a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e57a33a5-0ce9-4c1f-ba21-dc6bb91f9539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4749d2e9-b490-4f91-98af-7c848aabbc49",
        "cursor": {
          "ref": "cf2bfba1-930b-4087-9c4f-3510629076bd",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ba838480-30a4-499a-841d-0876e697465c"
        },
        "item": {
          "id": "4749d2e9-b490-4f91-98af-7c848aabbc49",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "77065336-c842-4700-ad2b-4763a318346f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d410df-01bf-4d49-a6fe-6763a130464e",
        "cursor": {
          "ref": "e25c9312-37d0-4eec-8727-7bfe060a3cf7",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "bc74481c-b064-497c-b86d-d4a09ccb8ab8"
        },
        "item": {
          "id": "94d410df-01bf-4d49-a6fe-6763a130464e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "76be075d-21ea-402e-b098-556f8ebb04aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92daa58d-e615-4e47-a9ea-7b0a5b30c513",
        "cursor": {
          "ref": "d495dea2-7311-41a6-9984-4a04fa3cf456",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "50c8dc06-d1de-4d0d-aa57-721de48fb499"
        },
        "item": {
          "id": "92daa58d-e615-4e47-a9ea-7b0a5b30c513",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "edf360a7-48b7-447b-b929-4a4b83de3f52",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819d6be6-5d96-4d55-9827-611a4b11770b",
        "cursor": {
          "ref": "ece58533-aedb-4c4a-9a8c-63af9adcc7dd",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c7851afe-6e86-4c7b-a781-abe0678911ef"
        },
        "item": {
          "id": "819d6be6-5d96-4d55-9827-611a4b11770b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e7e95dc3-e1e9-4af3-9196-a3a0e9b90a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c1e955-eaca-4455-a9ad-5a505c0da743",
        "cursor": {
          "ref": "98c534b6-5303-4a55-92fc-9a67ca03a17e",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3eec98de-2aee-44ca-a5c1-3ebb1a95ba1d"
        },
        "item": {
          "id": "b7c1e955-eaca-4455-a9ad-5a505c0da743",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9392bd2f-2215-430c-86fd-26643c04ad7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793af3b6-e8b6-4a3b-895c-dd51f6afaa34",
        "cursor": {
          "ref": "8850f35f-50cb-4295-b619-5625436913c9",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b7d3bc08-07a0-4172-a599-48b3dd2dff2a"
        },
        "item": {
          "id": "793af3b6-e8b6-4a3b-895c-dd51f6afaa34",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "75ac3ead-739a-4057-bda7-46d5d39017bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a70a81-25dc-4e0d-a684-67be5cf4f187",
        "cursor": {
          "ref": "532eb851-9a61-433a-bf6b-11ee11b9c9e4",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0348c314-7cbf-4c68-a295-f6bc5599e2b9"
        },
        "item": {
          "id": "44a70a81-25dc-4e0d-a684-67be5cf4f187",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "52aaccd6-7673-4671-8f7e-75986151fc02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7671866d-2600-47c9-a322-39a796e8a1e1",
        "cursor": {
          "ref": "447847e9-c043-463c-9eeb-b3f557fdb692",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1e9987d1-e320-48ef-96f7-9d993d32aefe"
        },
        "item": {
          "id": "7671866d-2600-47c9-a322-39a796e8a1e1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fb592461-0637-4061-989d-841563637fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21953d49-0719-4cd2-9ba3-c95c68684df1",
        "cursor": {
          "ref": "32dc2416-c13e-42c2-bd56-ad7f7cf00be6",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9c08fbe8-af44-400e-a5db-2520a7a01a9d"
        },
        "item": {
          "id": "21953d49-0719-4cd2-9ba3-c95c68684df1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c4252c0a-0cd0-4ab3-9e72-3c907d37f819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d1de19-abdc-4041-970f-4fced2fdb693",
        "cursor": {
          "ref": "051718b9-4767-4267-bd57-f0c1b9d78750",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "73eade67-c1d1-4efc-a05b-fe405cd458af"
        },
        "item": {
          "id": "e8d1de19-abdc-4041-970f-4fced2fdb693",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0556209b-c001-4e66-882d-30db0cc4a97a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec4cd42-1efa-4d64-9f6f-3726cd14d4d1",
        "cursor": {
          "ref": "f93bfd95-3a51-47d6-ba42-7ae86103567b",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f90215de-40e2-4a9b-9601-6a62c7d3158d"
        },
        "item": {
          "id": "dec4cd42-1efa-4d64-9f6f-3726cd14d4d1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f0248d1b-63d2-4a0d-9350-f153c7865e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b36620f-e56b-4921-bade-a3aa2f98f1e6",
        "cursor": {
          "ref": "7f2d6f1f-7762-4e11-a63d-c24e494b1fb2",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "db72b0ff-1e15-451a-b2ad-12667eeab550"
        },
        "item": {
          "id": "0b36620f-e56b-4921-bade-a3aa2f98f1e6",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f39e6a65-4b27-4c61-adc1-ebfd8e53e4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37c313b-ec38-416f-9d44-eca2a01d6957",
        "cursor": {
          "ref": "f19dc967-7506-4a4d-8f18-08fabdb3b8cf",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3839e504-5692-496b-9db7-60981a864bef"
        },
        "item": {
          "id": "b37c313b-ec38-416f-9d44-eca2a01d6957",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e68bacd9-bee2-44e8-bf5b-c8723b40de41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1954795-2e95-4aaf-8764-a7e9e38376af",
        "cursor": {
          "ref": "99c789c2-fb73-460b-a755-54ca41bf30f5",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5c01b46a-75ed-4997-aab4-ee4b652e5493"
        },
        "item": {
          "id": "c1954795-2e95-4aaf-8764-a7e9e38376af",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4fe97172-a0f5-4711-ad08-217398553631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cee7517-06a8-412e-9679-43cebad3d1d4",
        "cursor": {
          "ref": "858fd99d-4e33-4688-bf94-1708d55fc46d",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9ccc0e27-bbb6-422c-a23f-0c3195bbb7c0"
        },
        "item": {
          "id": "5cee7517-06a8-412e-9679-43cebad3d1d4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7db0277b-870d-4471-8f4c-cc981a591ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51aa91d-e656-48f9-9af1-ea05c2c9cad8",
        "cursor": {
          "ref": "80125680-4ae0-4e91-9c14-e514e083554b",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "aaf46e79-0361-417f-80e3-5e42f7638190"
        },
        "item": {
          "id": "f51aa91d-e656-48f9-9af1-ea05c2c9cad8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9ccd5e02-0efc-4231-9872-7b4999074a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566da2f0-274e-4943-8969-e660c9ed2bf7",
        "cursor": {
          "ref": "6641ba37-cd21-46cf-8989-383203891994",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "99e71448-b94a-481e-888f-c2d5a31ec3bd"
        },
        "item": {
          "id": "566da2f0-274e-4943-8969-e660c9ed2bf7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "50abc793-613b-4df8-9b11-a2d8a28ec9e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b79990-5445-481d-986c-0bc5488b78d4",
        "cursor": {
          "ref": "ab1c0db0-7510-4499-b1be-2acd541707a3",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "27d4f753-5eb2-40d3-bd2d-524359db8373"
        },
        "item": {
          "id": "b3b79990-5445-481d-986c-0bc5488b78d4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9df1802d-6831-43ba-9653-60729394ed4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f74046a-98eb-487e-8b23-4020b77884d5",
        "cursor": {
          "ref": "aafb1677-5136-4d9c-9c83-71ba14a4fd98",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "564486fb-f386-472a-9af2-cbda465ad937"
        },
        "item": {
          "id": "7f74046a-98eb-487e-8b23-4020b77884d5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "abf29762-4fe3-4fe9-b995-1faea82a6040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198fccbe-a959-41aa-a9d3-63cf0824ace8",
        "cursor": {
          "ref": "53fc84a4-9aae-4513-99f3-4b9ff04b06ff",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e9e1acaf-d3d6-4796-a40a-cbd66ce8130f"
        },
        "item": {
          "id": "198fccbe-a959-41aa-a9d3-63cf0824ace8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "74afdec6-cdc8-40e8-adc9-7988c257f040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e51332-62a2-45d7-96da-b8f02b5c6015",
        "cursor": {
          "ref": "794a31cc-ebca-45cc-984f-a8be1f62ffcb",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "dc17768b-27e3-4e4b-8fc5-d80355ce7eaa"
        },
        "item": {
          "id": "50e51332-62a2-45d7-96da-b8f02b5c6015",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2c62f5d3-3de2-4d0f-8007-223e3cc9d7c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023e053a-9ac7-45af-85cf-224c7893fe75",
        "cursor": {
          "ref": "80b8e392-05b8-46ba-9508-6f593ef99514",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "17a70d91-8794-4571-b74e-9250b09fca26"
        },
        "item": {
          "id": "023e053a-9ac7-45af-85cf-224c7893fe75",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "294cb651-6a12-4915-9595-ef9044c1b692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc319c5-242a-4697-be2a-a03a3a8e8de6",
        "cursor": {
          "ref": "8268dfb9-b789-4cf2-bdfe-49e1efee3cc7",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2ab0f733-85f5-460f-b8bc-e20f4e7afdf5"
        },
        "item": {
          "id": "5cc319c5-242a-4697-be2a-a03a3a8e8de6",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ba91c77f-65cd-491d-a039-d4675b93326c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0a61be-3790-4231-ac7b-afe441a40f0c",
        "cursor": {
          "ref": "3463117d-cd2f-4fd7-8f83-7579a518166d",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fa8d00e9-fd99-4fe7-9c2b-10bbc00e0aa1"
        },
        "item": {
          "id": "5c0a61be-3790-4231-ac7b-afe441a40f0c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "39db0247-829c-4d22-b4a1-4654146796ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e54c8c-a82c-4ee2-ba3f-7ac87c8ba991",
        "cursor": {
          "ref": "198b17e5-3191-495e-baf7-c96c6f20eea0",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ecf248d3-49ac-4978-8e18-184ee073087c"
        },
        "item": {
          "id": "c3e54c8c-a82c-4ee2-ba3f-7ac87c8ba991",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cb19f06f-6540-4b9b-b904-3d3c24775673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f749313d-db1c-4512-8bbe-948ea1170589",
        "cursor": {
          "ref": "a89a1116-9877-4f18-925c-24eb2594325a",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3f176f40-d6c2-49e1-8760-4aae831943da"
        },
        "item": {
          "id": "f749313d-db1c-4512-8bbe-948ea1170589",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "05076c35-982f-4563-b1ec-81fd620f5907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0556351-8608-4ae9-b6ae-d0ad1b66d88a",
        "cursor": {
          "ref": "89c0d0b9-925d-4d9c-a429-9a3f41b981fc",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0c23a5dd-77bb-4ea0-b1c5-709bdefb97cd"
        },
        "item": {
          "id": "c0556351-8608-4ae9-b6ae-d0ad1b66d88a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ed253cc5-3436-4ff6-9c61-ad6e17628ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0f247f-694b-4b72-8ba2-114e31e342ab",
        "cursor": {
          "ref": "85eae2b0-f7d5-492e-a771-b46d76d0031b",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "14905a99-e19f-4a6b-ab85-64492bc986cd"
        },
        "item": {
          "id": "8e0f247f-694b-4b72-8ba2-114e31e342ab",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c7305173-f2e1-49bb-bbf2-93b93d26cd07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cecda2-8e28-40f7-bd51-e47702207be8",
        "cursor": {
          "ref": "b5d0589d-08e6-481e-8dc8-5e8afa7705b1",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ea5a2225-12ca-411c-92f2-fe511721a998"
        },
        "item": {
          "id": "b9cecda2-8e28-40f7-bd51-e47702207be8",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "712e0eec-bc57-4dc8-963a-c949f66c32c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120f8ff0-1eab-4c54-8342-07b8601cc9fa",
        "cursor": {
          "ref": "bfcb7a35-ee3e-418a-8ae0-e6298c7d625a",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2919f68e-97a3-43e7-8e0e-665444160ff2"
        },
        "item": {
          "id": "120f8ff0-1eab-4c54-8342-07b8601cc9fa",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c28de8f5-a636-45d2-8ab1-66e06f2b8a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a465824-ec18-45d2-abe3-376aee5320e9",
        "cursor": {
          "ref": "4a3429b8-eb6a-4aec-a055-c68f54596276",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "746c730f-05ba-456c-aa2f-3dee7cec0677"
        },
        "item": {
          "id": "0a465824-ec18-45d2-abe3-376aee5320e9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "629d012a-6710-42df-8ba1-76a85500f977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c133d98-fbaa-4763-bf39-106192013257",
        "cursor": {
          "ref": "4eff79c2-540f-4ac0-a4e1-6c031313a713",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d3906160-3321-4705-861b-7aaa189e09dc"
        },
        "item": {
          "id": "1c133d98-fbaa-4763-bf39-106192013257",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "557df6b6-e9f7-47b2-88dd-8e542abc20ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db012715-f00a-47a3-b261-6134b3747b82",
        "cursor": {
          "ref": "9767e524-8673-4c18-b19d-e08a921500d9",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "02078799-8d4c-41d1-b540-e18005cf287f"
        },
        "item": {
          "id": "db012715-f00a-47a3-b261-6134b3747b82",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "83476a78-0da7-4e0a-9514-7b2f1c48aac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc436878-6ed2-4e04-afb5-d1c8e14de1ef",
        "cursor": {
          "ref": "9017731b-f094-4042-b67e-981c761b1d0d",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9296ed3d-109d-4692-b580-5e786c0d4195"
        },
        "item": {
          "id": "bc436878-6ed2-4e04-afb5-d1c8e14de1ef",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "882d6cd7-812a-44ea-a4a1-170445090a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042e8194-c474-4f46-a8c6-2b0e673725ff",
        "cursor": {
          "ref": "9b263172-a894-4120-9c77-df4185ae5c53",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "489dc37f-beef-4271-a085-7eb9e88fa422"
        },
        "item": {
          "id": "042e8194-c474-4f46-a8c6-2b0e673725ff",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "541d9adb-c3a4-4d8a-a551-66bead84e4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223e4629-b894-4520-a047-73737e2910b4",
        "cursor": {
          "ref": "bff7c5bc-8137-4486-96a6-be32eb4f611d",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d2bccfaa-7fe1-44ad-8cd6-bdda82a0867f"
        },
        "item": {
          "id": "223e4629-b894-4520-a047-73737e2910b4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "78a21046-c242-4211-9281-e0bf682bca2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7f7354-de07-4cdf-9837-fc18b7e4b363",
        "cursor": {
          "ref": "229f6b94-2f84-462b-a4f3-98526de1e9d0",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e5a45894-4419-4776-bc58-87b2cf936518"
        },
        "item": {
          "id": "4a7f7354-de07-4cdf-9837-fc18b7e4b363",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "99648d38-28d9-4579-bb7e-3cf7f3d5fc0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc03b40-c5e7-4552-beb8-81137425b23d",
        "cursor": {
          "ref": "a7b8e622-c05e-42fe-8e53-7b331671a07f",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "67fdf32c-301f-4e5b-ac47-e19df49e1040"
        },
        "item": {
          "id": "6dc03b40-c5e7-4552-beb8-81137425b23d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e534a7bd-2482-4fe2-b8c5-0eb9313e4d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00187598-883d-4acc-b4fe-ec3d0f0c2859",
        "cursor": {
          "ref": "366c4ecc-e28f-45d8-b500-50041e65dfdb",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "30a4f4ac-c2f2-4fb3-acdd-7e58f5843e24"
        },
        "item": {
          "id": "00187598-883d-4acc-b4fe-ec3d0f0c2859",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e0aa4ef0-a44f-414b-9460-67eebcf856b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae487007-b40a-45ef-82f0-7627619765c8",
        "cursor": {
          "ref": "91284cba-559d-4b39-9727-a74c854c7fee",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bb0b3f65-4644-4af7-af9a-e3462864b28b"
        },
        "item": {
          "id": "ae487007-b40a-45ef-82f0-7627619765c8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fe7694f1-bd27-4895-abb0-f0688231728d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9786a003-5a77-4879-9c48-81c26f831199",
        "cursor": {
          "ref": "9e26e503-5415-41c9-addd-44535848c553",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2c872dd2-aa8a-4ce1-b931-8431e7a16971"
        },
        "item": {
          "id": "9786a003-5a77-4879-9c48-81c26f831199",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6d3e0fb8-5782-4c3d-9bf7-71e6c17bca83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d159d088-d7f7-464c-bcd2-dd9f2ab7014b",
        "cursor": {
          "ref": "54e8f364-25a5-47a5-9564-d6477b9d8faa",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "757d9e3f-1abf-482c-8be3-8c57430c089d"
        },
        "item": {
          "id": "d159d088-d7f7-464c-bcd2-dd9f2ab7014b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4d66aa63-9cda-4a2e-82e5-94c1e5134a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019f233d-747b-4bff-a5c7-d2cc60676874",
        "cursor": {
          "ref": "f7042e90-84c6-4018-a12e-224e57d5ba81",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d8f0b889-a5f4-4a2a-a7c3-462cb26004aa"
        },
        "item": {
          "id": "019f233d-747b-4bff-a5c7-d2cc60676874",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1504bbf3-3ccb-4344-aacb-ed4eac8d83a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab97f6a-c315-4682-ac45-44b5a448f789",
        "cursor": {
          "ref": "87476937-7be2-43cf-ba69-db45ba9bd517",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8dc69798-ce46-4eb9-a43a-04b57ba555e3"
        },
        "item": {
          "id": "fab97f6a-c315-4682-ac45-44b5a448f789",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "665265ef-a538-4707-8a7d-e83a9e089541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc36cac2-1db5-4b4d-b197-1d94d3f1db17",
        "cursor": {
          "ref": "9d11ba73-dd15-46fe-a460-68f2d7377390",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7064f51f-c543-4584-9a45-29d7ed74ed7f"
        },
        "item": {
          "id": "fc36cac2-1db5-4b4d-b197-1d94d3f1db17",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0ac5b765-f832-4301-b232-f7ce90664bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5507fb71-f09d-43f3-b8b1-a31f10d37d24",
        "cursor": {
          "ref": "f7671c7d-5d0a-4de6-9886-1aa35769bdc5",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "343ad06c-8126-40e5-b947-90009b6c507a"
        },
        "item": {
          "id": "5507fb71-f09d-43f3-b8b1-a31f10d37d24",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6cf43471-ef29-42a3-91a2-a82617dd9ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6035f6a-ffc9-4326-93ce-458bd4ea6ef5",
        "cursor": {
          "ref": "77c8ff84-0907-4402-82b3-d22eb19d6b4b",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5890207a-5965-4dea-926f-1ba503b1c465"
        },
        "item": {
          "id": "b6035f6a-ffc9-4326-93ce-458bd4ea6ef5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b134a165-754e-445d-aa61-c2798150fbf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28e2015-d5a0-4746-bd7a-92971a42d5d7",
        "cursor": {
          "ref": "33bc3357-e16b-4a57-b0c5-b798f7e8aa25",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "65f21ca1-87b0-444f-ae16-e3efbeb4b1be"
        },
        "item": {
          "id": "e28e2015-d5a0-4746-bd7a-92971a42d5d7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7e703b5e-2c61-48b1-a747-68964eff45e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85cb337a-4b41-49e8-8d2e-024ff588b068",
        "cursor": {
          "ref": "d7f7d6d3-c245-461c-a3f3-d81efc971e7c",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b160d09a-41ba-4b6b-8dba-e9f0a1224e60"
        },
        "item": {
          "id": "85cb337a-4b41-49e8-8d2e-024ff588b068",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8f680a82-4f14-43cb-8505-de258e6eef4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fcab3f-f18c-4f49-a6d9-eac0af533d2c",
        "cursor": {
          "ref": "b7b3a9fa-4297-47b0-bedd-83c36ed46178",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "582b18c2-dbf7-427a-a0df-02206ee733c0"
        },
        "item": {
          "id": "59fcab3f-f18c-4f49-a6d9-eac0af533d2c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "54cc72ce-0cd8-42b6-9865-cbf06138c76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23675254-b74d-462b-9535-edbda245692a",
        "cursor": {
          "ref": "a3c9c778-c616-423c-a160-70bd9db3a5d2",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3bdddd5c-becb-49f4-bd34-0a76899a284d"
        },
        "item": {
          "id": "23675254-b74d-462b-9535-edbda245692a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d97bebe7-3671-4142-95ad-fa740a4f7620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5a20f7-e7c2-4736-aacc-492486824e28",
        "cursor": {
          "ref": "90751e86-9c0e-4385-aaa0-74ab8be4d236",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9e7afb7a-c225-460b-a455-4c805120217f"
        },
        "item": {
          "id": "7f5a20f7-e7c2-4736-aacc-492486824e28",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c18ddbfa-d631-4dfa-ba58-f3a573897595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf5f36d-70ef-4abe-91f8-5f8a6340480e",
        "cursor": {
          "ref": "8510e079-01d3-42e6-80a1-6fcb52152ae7",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c142c370-4591-4abf-986e-f1d8fbc25c75"
        },
        "item": {
          "id": "ccf5f36d-70ef-4abe-91f8-5f8a6340480e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4e3b15ac-8df6-4f0f-9cf0-7e4e50451524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ae9b0a-f6ec-4916-936d-4251f22fff42",
        "cursor": {
          "ref": "5c6feda6-a050-49b3-bc75-b830e2033259",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "29e60799-c320-497c-8645-c829367e2860"
        },
        "item": {
          "id": "f0ae9b0a-f6ec-4916-936d-4251f22fff42",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "12f3b821-7a6f-4ce9-9ce4-f97b18068b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed9f8e4-543c-48da-87dd-d6fdf5925ec6",
        "cursor": {
          "ref": "9c82857d-87b5-4b25-a745-d45d1869810e",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e4126bc6-b95c-4a07-8779-ff67abda1a32"
        },
        "item": {
          "id": "aed9f8e4-543c-48da-87dd-d6fdf5925ec6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5acf8a84-cefc-4f38-af07-3a877ffdb31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ad8c1a-61f6-45cf-abd5-5a63d7c52168",
        "cursor": {
          "ref": "3a5d3f2a-8db4-422d-ad24-980ca584226b",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b51bb4b0-b76f-4db7-8a0d-5f2a511c8443"
        },
        "item": {
          "id": "21ad8c1a-61f6-45cf-abd5-5a63d7c52168",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1d383a56-248b-4a98-bd7d-6f1a3de51beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231aeac6-f428-48ad-9359-2d683a18409a",
        "cursor": {
          "ref": "da0b93af-facf-437f-883c-55de4a3cf087",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "99d9cc2c-543b-4ce1-99c6-674e99ee8452"
        },
        "item": {
          "id": "231aeac6-f428-48ad-9359-2d683a18409a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ef16c342-ddaf-4c92-a6b3-d27ed6ff28ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1720337-a463-4db2-9b26-694cc29d273c",
        "cursor": {
          "ref": "b0b08039-a4a1-4ca3-86ee-23fe54e2d50a",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "76cade3b-1f28-4996-a30d-c7b58491b1da"
        },
        "item": {
          "id": "f1720337-a463-4db2-9b26-694cc29d273c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9811787a-2987-4808-9b3e-cfdeae0bb89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b69a8d-df9a-45e8-9e6f-7472759f9c17",
        "cursor": {
          "ref": "9bb41d01-3df0-4d81-9820-acb9f5ea60cc",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "20c409a5-bd3d-4dba-9f1a-94f5c0c55808"
        },
        "item": {
          "id": "b2b69a8d-df9a-45e8-9e6f-7472759f9c17",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a6ba0c5d-60df-4911-8a5f-3f705d2ec30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c6da3d-0a91-4381-980f-0ceb17fa8eac",
        "cursor": {
          "ref": "7f8f7417-a94f-48de-8ec8-652d262809d0",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4b3dea27-de29-4abb-947a-8d5df4d4cd17"
        },
        "item": {
          "id": "24c6da3d-0a91-4381-980f-0ceb17fa8eac",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7db21f7f-63e1-43b9-8640-32d7eb9f4bb0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f25b3dd-75a0-4bb2-ad08-718437c92820",
        "cursor": {
          "ref": "022760be-fba4-4cad-8fcc-01696ad9191a",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7a14184b-8149-47f5-847a-d59e637cef99"
        },
        "item": {
          "id": "3f25b3dd-75a0-4bb2-ad08-718437c92820",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "f61ae6a6-1a77-4174-bde2-54d7e4470f8b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 100,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3f97f6-18af-4df1-badf-ee67fe8b7b63",
        "cursor": {
          "ref": "a4a071ce-c1f2-4fd3-a282-b4e8e6f519cf",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "fbb96687-aab4-49dd-ba1f-9712e489d36d"
        },
        "item": {
          "id": "ea3f97f6-18af-4df1-badf-ee67fe8b7b63",
          "name": "credentials_issue"
        },
        "response": {
          "id": "42023f86-a075-432e-a2e3-d93178efe94b",
          "status": "Created",
          "code": 201,
          "responseTime": 97,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1862332b-5ee0-4990-8059-35f828abbbbc",
        "cursor": {
          "ref": "7bca2da7-69c0-45ac-99c6-7485a28a9ed9",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f4b509a7-6939-4421-b280-a5e0e44ab7c5"
        },
        "item": {
          "id": "1862332b-5ee0-4990-8059-35f828abbbbc",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a3a06e41-1d7f-4336-84cd-a0362e396ddd",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6797e793-3b0c-442a-88f1-c8c4b4f8b375",
        "cursor": {
          "ref": "57b285de-7569-4a78-8465-711bc81a5c23",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "db5670cb-af2f-4b2b-9da0-7136d5fbb60b"
        },
        "item": {
          "id": "6797e793-3b0c-442a-88f1-c8c4b4f8b375",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "889f8762-23bf-4948-80d8-eea359c05d27",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a22878a-d991-4455-b439-af0b128c0b28",
        "cursor": {
          "ref": "193cc6d9-e529-4e54-b98d-846a8e2e9b77",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "330a2730-9769-4140-aab8-624e133def60"
        },
        "item": {
          "id": "1a22878a-d991-4455-b439-af0b128c0b28",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0def3320-11f1-4ad4-86d5-cc0419422387",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5995eb35-1328-4570-a222-49b0ab83a9be",
        "cursor": {
          "ref": "2bacb809-965f-4591-935a-5cd06f47a601",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3e0a5120-ea2d-4f3f-8a19-75db94b4f5bb"
        },
        "item": {
          "id": "5995eb35-1328-4570-a222-49b0ab83a9be",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "716daec4-83c3-49b0-b5bc-8648a2b1950e",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c718178-d817-45fb-8b71-75db705b7d9c",
        "cursor": {
          "ref": "c7535c7a-06c2-4c46-af57-7327935dc2f2",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6581efbf-06a4-44db-8ff4-c1c0e7657ca3"
        },
        "item": {
          "id": "9c718178-d817-45fb-8b71-75db705b7d9c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7f475220-237d-41c4-94b0-9b8cb9768e62",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90892c91-1022-4de7-8d38-4120c680aa07",
        "cursor": {
          "ref": "9a0bfe27-a85e-45f4-b5c3-7cee69cb5bbe",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c42ba703-31e0-4974-b1ce-b254db8343e7"
        },
        "item": {
          "id": "90892c91-1022-4de7-8d38-4120c680aa07",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3ea2cfcd-698a-43a3-8bca-4356aa4a619c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90892c91-1022-4de7-8d38-4120c680aa07",
        "cursor": {
          "ref": "9a0bfe27-a85e-45f4-b5c3-7cee69cb5bbe",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c42ba703-31e0-4974-b1ce-b254db8343e7"
        },
        "item": {
          "id": "90892c91-1022-4de7-8d38-4120c680aa07",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3ea2cfcd-698a-43a3-8bca-4356aa4a619c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e840e13a-eaab-4cf6-8f4a-30ebe00aea89",
        "cursor": {
          "ref": "8018bbed-7083-4f15-b91a-eff53f2f7c57",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "888b514b-0f42-487e-b7c8-18f14ede6994"
        },
        "item": {
          "id": "e840e13a-eaab-4cf6-8f4a-30ebe00aea89",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ba9b6ebe-9602-4295-bdc1-7fc1b918d44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5991fd59-8359-4fd6-bbbc-b6c8ac4a40af",
        "cursor": {
          "ref": "ded1d5ad-43a5-4378-92c2-13a71df87c36",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7cdde96c-6473-44b4-b5ef-a60a23df7082"
        },
        "item": {
          "id": "5991fd59-8359-4fd6-bbbc-b6c8ac4a40af",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8a28d6cf-b934-42fc-9c40-fccadf867746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac0bf76-4dbd-4360-9381-71d2b863181c",
        "cursor": {
          "ref": "42b378ee-c9f8-4e9e-b756-11280dffb631",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8d07aad6-40c7-4794-a46b-49449c1d5069"
        },
        "item": {
          "id": "0ac0bf76-4dbd-4360-9381-71d2b863181c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8362c686-7fd6-48be-8973-bbcfc4fbbf16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98447540-6155-47b5-bb4a-9f02e716b0f3",
        "cursor": {
          "ref": "91f28d9c-3b3d-42dd-828c-4c867776914d",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8e698de3-157f-4ade-af9c-59376735586d"
        },
        "item": {
          "id": "98447540-6155-47b5-bb4a-9f02e716b0f3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f2754c93-6239-4bc2-9cec-c81e1ce0b7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb3ce00-7927-4fe5-bd28-e9be1db1c1bc",
        "cursor": {
          "ref": "97d0f9ed-384a-4dd5-8b96-4c277aac4de9",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0e986f35-7428-4793-bed8-b7321d614be1"
        },
        "item": {
          "id": "abb3ce00-7927-4fe5-bd28-e9be1db1c1bc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "832e4994-3a4f-443a-a511-3e6ef48e475c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2fd4b95-1a35-4833-a750-106bb57d0f6d",
        "cursor": {
          "ref": "ded62823-1ead-427b-ae0e-06f73c8a3c9e",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a74d80a3-e4bd-4219-8697-a9540a06aa7b"
        },
        "item": {
          "id": "c2fd4b95-1a35-4833-a750-106bb57d0f6d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c6ea991a-5927-4f0f-a487-631820551800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401a7506-82f3-47ea-ab06-01311ac37d13",
        "cursor": {
          "ref": "df9c24cf-6a3d-4f91-b10e-e689f2bfd3f2",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ca7d3dc3-843f-430c-93bb-f5c0b552f7fc"
        },
        "item": {
          "id": "401a7506-82f3-47ea-ab06-01311ac37d13",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3c15cf0b-fe03-4186-8507-a2d435f28617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf92d5d-4e3d-4d89-a452-9d352c5a59b7",
        "cursor": {
          "ref": "f85eead5-4fd6-4b58-9057-c4aaf0220504",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "88d6204e-06ea-432b-8896-a9b1baa98633"
        },
        "item": {
          "id": "3bf92d5d-4e3d-4d89-a452-9d352c5a59b7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a793ad2e-0be6-41a1-89af-15081a42dccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656c0850-02e6-4e6c-b9e6-106a968cdeac",
        "cursor": {
          "ref": "82c87a91-ae78-44bb-a84e-2da529c6831f",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3b3a9b04-1bc6-4fa4-b859-99d0b8d7d309"
        },
        "item": {
          "id": "656c0850-02e6-4e6c-b9e6-106a968cdeac",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0928f5fa-5d1a-4c54-a4b8-2f1aa2924b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98669b07-9a47-402c-930d-bd60bcaf3c8b",
        "cursor": {
          "ref": "14a16a65-f3fd-4db1-9ff0-c4ca0ec53de7",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "bb92fa7f-a187-4c06-9fde-62ad69f338b5"
        },
        "item": {
          "id": "98669b07-9a47-402c-930d-bd60bcaf3c8b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8d24cd30-3d0c-4960-aa2f-07e96290916d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bdaed6-0ae3-4868-b0b5-67440c7917e2",
        "cursor": {
          "ref": "0740604a-95bb-4a69-ae17-82d29f5b9214",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "582ca39e-781f-46c0-81d0-d2fc9a231020"
        },
        "item": {
          "id": "e7bdaed6-0ae3-4868-b0b5-67440c7917e2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "22f66fef-e91b-442f-b5c8-1623c25c0610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692ec918-d71e-4ce0-8027-f0607b73a70e",
        "cursor": {
          "ref": "78e70334-9764-4b5e-a1b0-1adfdf3cdc1f",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d8de0550-c663-4bd9-a7b6-21d5bc240a90"
        },
        "item": {
          "id": "692ec918-d71e-4ce0-8027-f0607b73a70e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2088cf1d-b05c-4f49-a1fd-5fbb9f6d57f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f751be2-f3e4-475c-9505-2ad8b9c62e11",
        "cursor": {
          "ref": "5fe7259a-af53-491a-b984-c2a5e54b8311",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4a2a0341-f682-4ebe-8611-881d689c2854"
        },
        "item": {
          "id": "3f751be2-f3e4-475c-9505-2ad8b9c62e11",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "70d50fd2-05a1-4d52-b794-3ca3517e188a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9adddfe6-6844-4d60-a8af-b6d5aabc4f82",
        "cursor": {
          "ref": "9ec2e54b-7f66-43ff-a7c4-5d86c203b10f",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f8bc07fb-565d-45d6-be94-98e8813486d0"
        },
        "item": {
          "id": "9adddfe6-6844-4d60-a8af-b6d5aabc4f82",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4623210a-17ab-49e1-bad0-f7c4fdbd948a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b62506-c872-488c-8fb7-c192d95dcf50",
        "cursor": {
          "ref": "75254561-d727-4c03-bddc-9b62dd88dbbf",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b5df69a1-a7af-4413-8e23-2ba3f34c6890"
        },
        "item": {
          "id": "a6b62506-c872-488c-8fb7-c192d95dcf50",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e256863d-1734-40d4-a49f-e1e7b85c91d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3cd2815-ae41-4e5d-933d-765e36115668",
        "cursor": {
          "ref": "9a91d018-c771-4e16-85e3-d11ca34c8f03",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c2f666f2-07b9-465c-b0da-dd0bae0d0f7e"
        },
        "item": {
          "id": "f3cd2815-ae41-4e5d-933d-765e36115668",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4b21e25e-dc9c-45fc-ac4f-b208eac053fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f13739f-b9e8-4892-a6ea-61870b3473e8",
        "cursor": {
          "ref": "44529935-ef42-4f11-9bda-c6d4ba244a1a",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3897bee9-9d26-4653-8a5c-834ff4e4ae9d"
        },
        "item": {
          "id": "9f13739f-b9e8-4892-a6ea-61870b3473e8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "472953f8-c00f-4e00-977c-7364ba7f4ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455a0ab8-81df-4f1a-b2b6-86577832c99d",
        "cursor": {
          "ref": "db0e58da-d8ee-4f62-8a2c-5b9d3bdd989f",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "28de7fbe-eaf2-4259-9d3a-2f431abfd98b"
        },
        "item": {
          "id": "455a0ab8-81df-4f1a-b2b6-86577832c99d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5bdaad0d-0150-432b-9123-9b012f06c170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46143bf-05f6-4492-9f82-f08b34b33271",
        "cursor": {
          "ref": "1cf88c7f-3196-412b-a0a1-6ed719f44719",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8ee502fd-8492-49b1-94ec-ed8306ab9159"
        },
        "item": {
          "id": "a46143bf-05f6-4492-9f82-f08b34b33271",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3777e7ea-d880-480d-8665-194e1b2e0f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56dd93a-1bff-4442-aba7-2b65cb4dd100",
        "cursor": {
          "ref": "5bc8a586-5cbc-46f1-9814-387d2f41c410",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "866ed1dd-b6d4-437c-8c4a-146fdbd915a1"
        },
        "item": {
          "id": "f56dd93a-1bff-4442-aba7-2b65cb4dd100",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8b792cf6-2356-4623-9e2d-d59d600f04ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cb0bb4-e38a-4112-84d2-232e105bc60d",
        "cursor": {
          "ref": "eb9f901b-97fc-431c-a46c-23c590781233",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c9509170-aa00-493b-8cf0-9e1d48704f73"
        },
        "item": {
          "id": "d9cb0bb4-e38a-4112-84d2-232e105bc60d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "aeeccebf-6be6-4a6b-9775-ce65c7288835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e5609c-dcf4-48f4-b59e-78501e08cd7c",
        "cursor": {
          "ref": "cce3be33-08f6-42b2-b87d-fc6df64777ed",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4fc793c1-b7b6-4dc9-8e9f-6fb97c41c54e"
        },
        "item": {
          "id": "96e5609c-dcf4-48f4-b59e-78501e08cd7c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ed0e31d5-1431-446f-ade8-b826acd40538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ca2aac-3ad1-478f-8a97-4823034cfb08",
        "cursor": {
          "ref": "dafa93a5-76c1-4f5c-9335-87fb64188f4b",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "67f7e140-b2c1-4a6b-8313-4620da562113"
        },
        "item": {
          "id": "18ca2aac-3ad1-478f-8a97-4823034cfb08",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0a10b5f0-5968-4dd1-9a37-4aedce56be52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac78c09b-99e1-443d-82cf-2bc76f93bffd",
        "cursor": {
          "ref": "6f00e2fc-f487-4d71-90fc-a43c3e8fe7c1",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d2c767a8-2431-4f4e-90da-503aa88c94a6"
        },
        "item": {
          "id": "ac78c09b-99e1-443d-82cf-2bc76f93bffd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f0658dad-6467-41ab-a720-ae64398961ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6121b394-53f8-4864-83b9-ef965744fcb2",
        "cursor": {
          "ref": "29039316-6c2f-47a8-8a75-952f4d2dc41d",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5a22ba55-db50-45eb-81a6-f16c2c87e6e6"
        },
        "item": {
          "id": "6121b394-53f8-4864-83b9-ef965744fcb2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "154e4ee7-166b-4140-ba93-8c465fb0407d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e8ce9c-7522-4dfd-8a39-e2980a08a3f2",
        "cursor": {
          "ref": "ba5ef13c-1e1c-44b7-9c84-710d7905d109",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "dafa26fc-7576-4136-8fce-60237624f0d1"
        },
        "item": {
          "id": "61e8ce9c-7522-4dfd-8a39-e2980a08a3f2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "be848775-7d49-4a03-95c8-8e1ba7220817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37b6c2c-daa2-480e-a80c-8392ee8940e4",
        "cursor": {
          "ref": "7fe2f511-991e-45e0-8ef7-8446d3c9c1af",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e43607be-9db6-49dd-9285-32c64b9277fe"
        },
        "item": {
          "id": "f37b6c2c-daa2-480e-a80c-8392ee8940e4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ccc85e10-c4a4-47c8-83fd-98bb8cb190ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84686ee8-868f-4426-961e-5ae50035e05b",
        "cursor": {
          "ref": "be5361f6-b924-489b-b7e0-4ff91b7b6f0f",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7c13adcb-a4ea-4d00-adfb-f283cfe00e38"
        },
        "item": {
          "id": "84686ee8-868f-4426-961e-5ae50035e05b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "be9d8b41-dce1-4430-a9fb-9af4a752c9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457f58fb-e9bf-4457-b89d-01b1e9af2743",
        "cursor": {
          "ref": "e4e0a102-0004-49a8-9908-f89cb220899d",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "109ef881-594c-40af-a80e-3735fa7fe9b7"
        },
        "item": {
          "id": "457f58fb-e9bf-4457-b89d-01b1e9af2743",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "91e2ad26-805d-406b-a7bd-03c741637ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fd0502-b45c-4c5a-9169-f45281af29cd",
        "cursor": {
          "ref": "af7dfa99-d881-4c73-87c4-5f6e973a973d",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fc84ef7c-31b9-4eb1-a5fd-a71580aa4aa8"
        },
        "item": {
          "id": "75fd0502-b45c-4c5a-9169-f45281af29cd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "db29996e-fe01-48ea-b8b0-7f2c662dd312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311e7956-75ff-4e71-9763-bd73a07aabc0",
        "cursor": {
          "ref": "29eed1ba-1ed7-400e-9ce3-681e04f0970a",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c47f1845-aade-4aad-9a47-6235d5801402"
        },
        "item": {
          "id": "311e7956-75ff-4e71-9763-bd73a07aabc0",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1fd89680-7c8e-4c6a-b03e-434524f109e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bfc330-06d4-4731-a22f-0f1ca9b687cc",
        "cursor": {
          "ref": "288b02d2-ceb2-4bfe-9f84-d1e8cad25e6a",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ae1b2f72-7104-47c5-a7ee-f4c5c09e2b9e"
        },
        "item": {
          "id": "72bfc330-06d4-4731-a22f-0f1ca9b687cc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "43e3189f-1e03-482a-9d8e-173da757c816",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2affafd4-76dd-4a0d-b313-4c0c57f7bfda",
        "cursor": {
          "ref": "b9bfbc87-d210-4cee-8d67-25278d998f85",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ed8d1c2d-3bf8-452e-85ba-5d32396a0552"
        },
        "item": {
          "id": "2affafd4-76dd-4a0d-b313-4c0c57f7bfda",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "e1f0e0fc-6a0d-4ecb-9e5e-e372584bc7a5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db06d084-f904-4a8f-a4c7-2e8246ce8d46",
        "cursor": {
          "ref": "80b7b286-ea69-4588-aa88-76bec8127365",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "24b237d8-1ce0-4da6-97e1-3269a664a966"
        },
        "item": {
          "id": "db06d084-f904-4a8f-a4c7-2e8246ce8d46",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "228e2d9c-be31-4e6c-a202-0be20d311004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db06d084-f904-4a8f-a4c7-2e8246ce8d46",
        "cursor": {
          "ref": "80b7b286-ea69-4588-aa88-76bec8127365",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "24b237d8-1ce0-4da6-97e1-3269a664a966"
        },
        "item": {
          "id": "db06d084-f904-4a8f-a4c7-2e8246ce8d46",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "228e2d9c-be31-4e6c-a202-0be20d311004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760a5876-15ec-4a15-90f1-120b7bea65a8",
        "cursor": {
          "ref": "8f15f35b-e5a1-43ff-bd78-8934ae57c8a1",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "688a4db8-666c-4ba0-bdb8-a56dd77afdf1"
        },
        "item": {
          "id": "760a5876-15ec-4a15-90f1-120b7bea65a8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "93fb85ef-a947-4c11-a6e8-130e061b88fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e5f829-8436-45f7-a7db-a9b961f51687",
        "cursor": {
          "ref": "a29be887-0122-4e36-9469-1c7675971339",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e7a06c13-dd65-4d43-866c-b9b05583fdc4"
        },
        "item": {
          "id": "65e5f829-8436-45f7-a7db-a9b961f51687",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "25b06830-9d22-4d9a-8d78-0303ad3a7ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22790a27-fe09-4c87-8159-b6c405c4a99f",
        "cursor": {
          "ref": "4684c8a0-a078-4d5d-b3be-be3c923c7a5f",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c689f236-c308-42b9-848a-2f17d408add7"
        },
        "item": {
          "id": "22790a27-fe09-4c87-8159-b6c405c4a99f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fbd30ee3-7d6c-48e2-8844-6068a91271bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f4f56a-66d8-41c0-bd15-902fc3af5c2b",
        "cursor": {
          "ref": "537e4456-b942-4346-90f4-724875256614",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b27a14e3-9e40-4d23-b364-221d020eb0fa"
        },
        "item": {
          "id": "14f4f56a-66d8-41c0-bd15-902fc3af5c2b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "aed535c2-b584-41d5-be63-827fac4f5351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4768959-b58e-4b04-84dd-012b33e671f5",
        "cursor": {
          "ref": "bfa380d1-a234-4eab-82f2-83e55775df86",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4bf4dd09-d48c-48f0-a5cb-dd6beda5af2b"
        },
        "item": {
          "id": "e4768959-b58e-4b04-84dd-012b33e671f5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9965983a-0bad-4061-8e0c-5abafec4d0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca0ed84-5835-4bb2-89ce-1f06490fc08d",
        "cursor": {
          "ref": "83dd18a1-35e7-4803-907e-ff47718fff0b",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "eb98f25f-26ad-43f6-bb30-3033d09a0680"
        },
        "item": {
          "id": "aca0ed84-5835-4bb2-89ce-1f06490fc08d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1adc1846-2395-4edc-afed-d5d3fa54079e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff3678a-a5ee-4fb6-baa7-ea56d67c9ba3",
        "cursor": {
          "ref": "b7f413d8-506e-432d-a954-d9ca98429faa",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3a7a6b73-a824-4cde-abfe-ce0720419a63"
        },
        "item": {
          "id": "aff3678a-a5ee-4fb6-baa7-ea56d67c9ba3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1851ed2b-a088-43dd-9f2a-e6a3d37954db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eabc7df3-d0bb-48a5-a56a-f15790c948fb",
        "cursor": {
          "ref": "002c4921-d352-4025-b8bd-320bc6ae6b9b",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "dbc6e78d-dfc0-42a4-aaee-476e67dca75a"
        },
        "item": {
          "id": "eabc7df3-d0bb-48a5-a56a-f15790c948fb",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "21ae272e-8326-4898-9b87-599247a2e1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5f478b-8416-4f24-8eaf-ed18e108f7e2",
        "cursor": {
          "ref": "3159f62d-c71c-48e2-b8e5-58afd3a5df02",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "069b91de-eb89-4a46-9542-315efc64d21c"
        },
        "item": {
          "id": "5b5f478b-8416-4f24-8eaf-ed18e108f7e2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ed09d56c-1f18-4d1d-adc7-912ff0ace74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be8964a-eba5-4634-8c63-c991aaea43c4",
        "cursor": {
          "ref": "d39cf0dc-9b84-4d8e-9add-220da64dd3d2",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "007ec138-c099-42bf-8ad2-6204ba1ebf75"
        },
        "item": {
          "id": "2be8964a-eba5-4634-8c63-c991aaea43c4",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d763ad7b-c6d3-4098-b373-b981da3e5a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42915e7-7dcb-4dac-b4f9-41e81b0b0e09",
        "cursor": {
          "ref": "24213bfd-fd74-4aa5-891d-9c17140b3bdb",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ab699fd5-2eb8-497d-96a5-3b2506d5d59f"
        },
        "item": {
          "id": "f42915e7-7dcb-4dac-b4f9-41e81b0b0e09",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5b28a58e-7786-40bf-b625-fe60df0556c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b87c7db-28cb-4be5-84ce-02231f181993",
        "cursor": {
          "ref": "5412fd0e-0a32-4f57-98d7-cf0e81403320",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0e3fe70e-4723-4948-aa4a-3e15d37b9ecc"
        },
        "item": {
          "id": "7b87c7db-28cb-4be5-84ce-02231f181993",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "65bd8bb5-e69b-4a4b-a746-70438b889817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4c7dc2-670a-4d80-8c8a-d18ed0cf4175",
        "cursor": {
          "ref": "f209aedf-a6aa-416a-bc99-6b37a1d75ec6",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "09bd3a2a-35db-446a-a80e-7d4720f3d871"
        },
        "item": {
          "id": "ec4c7dc2-670a-4d80-8c8a-d18ed0cf4175",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4f170d5e-bd50-4cad-ba94-ef9371aaabd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba93ee9-796e-483c-8edf-81d04b3cb83e",
        "cursor": {
          "ref": "a3a07d17-a36e-4315-a6e2-822c49a9cd2e",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c7f3426c-8baa-4d50-9246-99538bbf501a"
        },
        "item": {
          "id": "9ba93ee9-796e-483c-8edf-81d04b3cb83e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "cc733bb3-ae3d-47a2-a316-d07cb87de9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7269768d-738f-4e44-9052-a6cb916c265d",
        "cursor": {
          "ref": "1ab96880-ee8a-4983-aaab-e18d5f694302",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ead53586-1f0a-4eb1-897b-11eaa56cd76a"
        },
        "item": {
          "id": "7269768d-738f-4e44-9052-a6cb916c265d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "eb5c2ad7-610e-4ea1-82b3-cff923e58155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37132b67-9824-4efa-9bfa-dd56ca71ed9b",
        "cursor": {
          "ref": "3eff3eb8-ae55-46cd-b5ad-2886c0b50fab",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5f02e08e-6028-4550-aa49-15a9c77fb956"
        },
        "item": {
          "id": "37132b67-9824-4efa-9bfa-dd56ca71ed9b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9ab72509-ad96-4f96-be04-8f5eac6cced1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59b96a0-0431-4441-b71b-a65d9f15becb",
        "cursor": {
          "ref": "85f24dfb-39e4-4e22-b288-20491aa84c3e",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2f1d7885-c596-43ac-99f3-82749d8828ae"
        },
        "item": {
          "id": "d59b96a0-0431-4441-b71b-a65d9f15becb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1356f2d2-c5df-4f89-aa34-689cc2ebb77f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa16e9f0-ef50-4318-a023-dbc076949774",
        "cursor": {
          "ref": "1238b1c9-fe14-456a-add3-d940a8c81910",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "830a06c9-a36c-4f9b-9579-db259fae7170"
        },
        "item": {
          "id": "aa16e9f0-ef50-4318-a023-dbc076949774",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "209cffa9-e2be-4950-bb5e-5fc6267f3c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4efef7ed-9647-4c7b-a919-d7cb84419907",
        "cursor": {
          "ref": "78f2de7f-ebf6-4064-b5e5-37c6ee762b78",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2b2a3d49-61ba-4a2e-b03a-f3c7619c8e45"
        },
        "item": {
          "id": "4efef7ed-9647-4c7b-a919-d7cb84419907",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5d43e554-e2d6-48e4-9dc0-648895249cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda0baf7-f604-4f28-b408-0779d9111571",
        "cursor": {
          "ref": "b129a7fe-7801-45ce-a452-039478a98b12",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8c910024-1247-4276-9025-5dde40df6a72"
        },
        "item": {
          "id": "fda0baf7-f604-4f28-b408-0779d9111571",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9f9980d5-2f2d-47ae-aa77-3ed61eafeae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b56836-3610-496d-8257-4060c12a4cde",
        "cursor": {
          "ref": "8cf37572-4bc8-4fad-af9f-5f0433bb14fb",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5ae19207-977f-4dd7-8052-d4639eb794c9"
        },
        "item": {
          "id": "d5b56836-3610-496d-8257-4060c12a4cde",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "56f4e976-1a7e-4ac5-8204-2bee8c23af0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f2436a-2579-4d9f-9ba1-27b4ec66ddc8",
        "cursor": {
          "ref": "cda6df6c-c5c1-4345-ac0a-665d2b8b098b",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "11755116-9679-4d07-a18d-96a53d746363"
        },
        "item": {
          "id": "e7f2436a-2579-4d9f-9ba1-27b4ec66ddc8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "97c2a5fe-f22c-4823-8788-6dc2248ca282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4fecd9-3514-4c71-9fa6-c7e0c321798d",
        "cursor": {
          "ref": "b1c5dcf3-6a54-4367-9d9f-c7832834e8a7",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d24bdc8c-edd1-4af1-9242-2bb251ae02c1"
        },
        "item": {
          "id": "0c4fecd9-3514-4c71-9fa6-c7e0c321798d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "293992b8-0898-46ed-9e84-9ae1e4225acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61bc405d-9593-495f-a23f-825df86538a4",
        "cursor": {
          "ref": "326c3145-4c69-4170-933c-0df7c26d35a1",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "89ae794e-b3b5-48b7-9afd-0936fc31bd6d"
        },
        "item": {
          "id": "61bc405d-9593-495f-a23f-825df86538a4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "139526e4-7bf6-4984-9048-2996231986c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891f09ce-f397-47e4-a8a9-81c4d9e41a81",
        "cursor": {
          "ref": "79f91e5a-1028-4ba4-8e6a-3d797ae0191d",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "10311b5f-4433-4e4f-abab-b70cebfe2b08"
        },
        "item": {
          "id": "891f09ce-f397-47e4-a8a9-81c4d9e41a81",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "82201a9c-97cf-47de-b625-295a69765910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb4584d-9db6-4381-8963-70238c0618d4",
        "cursor": {
          "ref": "543e516f-05a7-4e85-93cd-a4d5fe5cf930",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "67464363-5047-4ed3-a579-c0d55f4a5637"
        },
        "item": {
          "id": "0cb4584d-9db6-4381-8963-70238c0618d4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "83dc09db-84b9-42c8-8804-b409f3d8cd10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0541d0e-1e66-4dd7-bca4-bf55ab224a6c",
        "cursor": {
          "ref": "a51e5ca5-f45e-4bd5-a65e-76a41a780cdd",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "56e620cf-8f19-4060-9f9c-7c6aff95943c"
        },
        "item": {
          "id": "e0541d0e-1e66-4dd7-bca4-bf55ab224a6c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8c6efc75-13aa-4854-81fa-9426cb312548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0b042b-3965-463d-b680-d7279145826b",
        "cursor": {
          "ref": "56d7c35c-9ac6-44d9-8c5a-aaccdc86f55d",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f5e07205-4be2-44c3-b30d-35b974e5dc65"
        },
        "item": {
          "id": "bf0b042b-3965-463d-b680-d7279145826b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "68d20385-74ec-4245-a73e-191b06898a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55252955-8c52-4b3b-b103-c104704423fb",
        "cursor": {
          "ref": "4f2bdfd5-9a15-4eb2-bb56-9392ef36cbe0",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "875f2bbf-c583-40f3-b6b4-eb7490c90b0d"
        },
        "item": {
          "id": "55252955-8c52-4b3b-b103-c104704423fb",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bc786ef6-106f-4d7e-895f-355fd4153877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b84a2a5-54f5-47ca-b76d-d2500580dfc3",
        "cursor": {
          "ref": "e7e09294-8b5c-4b58-abc1-5cad7018c337",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a349ea21-318a-4842-abef-63a48e70d54e"
        },
        "item": {
          "id": "3b84a2a5-54f5-47ca-b76d-d2500580dfc3",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9f62304e-8f2e-409f-8e0b-c4eea42daa23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3532ae0-3ea2-4254-adcd-b5ae0c6cbb47",
        "cursor": {
          "ref": "ce1edfc3-015a-4de8-8960-fc745de808e7",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7a835bac-038b-4532-8493-bd3338119d19"
        },
        "item": {
          "id": "f3532ae0-3ea2-4254-adcd-b5ae0c6cbb47",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "38e38b77-562b-4d80-97bf-e34d9a0bfbc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e38926-571f-43f6-8a5d-8b578456fc70",
        "cursor": {
          "ref": "90879284-7425-4d98-aa89-820f23a8e1b4",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "bf3175eb-7a2d-4828-ae97-486673d97d8f"
        },
        "item": {
          "id": "70e38926-571f-43f6-8a5d-8b578456fc70",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "994e685d-4689-4ead-bfca-7e0f731ae8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14bbfbe-a40a-4b0a-ad1f-723e9c5a2e54",
        "cursor": {
          "ref": "a4d70838-786a-4906-a6eb-23fc74a8b203",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a8e07b99-2f80-452e-96d5-e233f603ded5"
        },
        "item": {
          "id": "b14bbfbe-a40a-4b0a-ad1f-723e9c5a2e54",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d1a606b3-68b1-4ec3-8bca-27b86d6d63c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf6fefe-6a5b-403f-b362-c625e0e187e5",
        "cursor": {
          "ref": "157dc6d2-0a75-464b-b66c-d72c6c3955d0",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9cc59b82-cd40-45b4-9b5a-5249dfb48cb8"
        },
        "item": {
          "id": "9bf6fefe-6a5b-403f-b362-c625e0e187e5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "da3e942d-8cf3-49b4-85d0-a02405674992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fe413a-d0b6-4f62-8cad-652ccbffc666",
        "cursor": {
          "ref": "435f77b5-8408-4e41-ad79-09a24338bcc5",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7b4b17d4-f0af-4a39-acac-7373587a7638"
        },
        "item": {
          "id": "c3fe413a-d0b6-4f62-8cad-652ccbffc666",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "44330927-a3ad-4017-9c7e-368918c7a7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6273e068-b120-44d4-abb0-e1b4cc3d5262",
        "cursor": {
          "ref": "a4753618-6fc3-4061-abca-1a33f949f17d",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4f77c656-2d4d-45c3-9f86-8a3e6d6d66ea"
        },
        "item": {
          "id": "6273e068-b120-44d4-abb0-e1b4cc3d5262",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ee8e5478-9005-458f-b745-d87f8dc76f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190e1170-3a6b-46ac-9004-1e807c2eef62",
        "cursor": {
          "ref": "7f6c6658-35b2-4183-b556-1913d86b3811",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ca27ee37-752a-4989-9b14-6247e476351c"
        },
        "item": {
          "id": "190e1170-3a6b-46ac-9004-1e807c2eef62",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8d7da78d-1612-463e-b359-c51645f97858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90968873-a777-4794-91da-3fcdad02a342",
        "cursor": {
          "ref": "8a25974e-526c-4ca1-9443-12c4720f2dde",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7e05a641-204f-445e-a511-8b67cae95d3b"
        },
        "item": {
          "id": "90968873-a777-4794-91da-3fcdad02a342",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e7b69b6c-5bea-4837-bfb9-08a14a51761c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3365340-575a-4306-a0a2-3aae92213e40",
        "cursor": {
          "ref": "5c33aee5-7a5d-40bc-a7fc-c800aae0e7ac",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "33bf385b-f0fd-4c40-b287-f25dd0dbab4f"
        },
        "item": {
          "id": "c3365340-575a-4306-a0a2-3aae92213e40",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6717089e-32cf-43e2-a58d-0b2f1638c08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b656fa-7d73-4b5f-af94-04756d75607b",
        "cursor": {
          "ref": "3e62e03d-0d1f-467d-83a9-748e69e52552",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ddb32f4d-a7fe-4733-9635-73ab3216d1cc"
        },
        "item": {
          "id": "f3b656fa-7d73-4b5f-af94-04756d75607b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "20d1027e-270d-43c1-9f00-d5070cc82020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f71353c-4173-4538-ba51-8317d456c42a",
        "cursor": {
          "ref": "1cf0f16c-ee6b-4f18-a91e-84de10405ae0",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fc23dd34-fa18-46fa-8248-aab22a2f50d9"
        },
        "item": {
          "id": "6f71353c-4173-4538-ba51-8317d456c42a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d39169cf-0a23-440d-a920-e47d8d4d7a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6321fe26-f549-48d4-b97f-bf2b64ca83ed",
        "cursor": {
          "ref": "6189651d-c3b6-498c-8041-1ccc3aa927e3",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "685d5610-d912-409a-bf7f-8339f345f2d2"
        },
        "item": {
          "id": "6321fe26-f549-48d4-b97f-bf2b64ca83ed",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c14033df-37b5-425c-81fc-040fa55e3d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756c68d3-8721-42aa-9e24-00d05c45a4c3",
        "cursor": {
          "ref": "fcdb0b8d-2041-410e-8c1c-8dfe62b45533",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "acdf8eeb-e477-41ba-9e72-bba23869067d"
        },
        "item": {
          "id": "756c68d3-8721-42aa-9e24-00d05c45a4c3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "90c85b97-3451-465f-bca4-27721a08fda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8e3ab7-d718-4e3f-adba-24bcafdef516",
        "cursor": {
          "ref": "6dcba44f-aa15-478b-b107-dd055b9d8cb8",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "015d7529-d05d-40fc-8fd3-3b2022274347"
        },
        "item": {
          "id": "4e8e3ab7-d718-4e3f-adba-24bcafdef516",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d45d609a-faf5-41ac-990c-872b7e003ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c556b270-6056-4bf9-b932-1e7850d02e38",
        "cursor": {
          "ref": "5304eb4e-3fbe-4319-82ee-710b6b0a4279",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5892c702-6a32-4e8c-8375-ad4bf17c1dc2"
        },
        "item": {
          "id": "c556b270-6056-4bf9-b932-1e7850d02e38",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0161bf5d-781b-46de-bc10-add7d518dd66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9129d1b9-4557-4be9-908e-858cb939360f",
        "cursor": {
          "ref": "9fdc0d2d-1fdc-4b6c-b8ba-f8a3162083e5",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ee077ff5-499c-45c6-a876-cbda2a73a5f6"
        },
        "item": {
          "id": "9129d1b9-4557-4be9-908e-858cb939360f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "54fab4bc-2cb2-4bf5-b212-d84f65211288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85851fba-ac00-46c9-9b98-49b477d29c97",
        "cursor": {
          "ref": "76102fb4-8ddc-4e08-a889-43f65240e35d",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "66b6fb4f-bc64-4851-b3e6-d255831046ee"
        },
        "item": {
          "id": "85851fba-ac00-46c9-9b98-49b477d29c97",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3458a03a-1c14-4b6a-8a89-6aa560dd3476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9e6e6b-ecd7-4a72-a7ab-622147c2e0dd",
        "cursor": {
          "ref": "9a56cc56-b596-4bcf-9aa5-71ab9cddb324",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9fe24a54-d4ee-4ca9-a9f6-882541cef82f"
        },
        "item": {
          "id": "ac9e6e6b-ecd7-4a72-a7ab-622147c2e0dd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1d55c512-5f30-4b24-bc69-736ae589521e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59db721a-5bd0-41d4-8997-0b315b5be541",
        "cursor": {
          "ref": "2be56e4d-86a5-4782-a8dd-33e35a63a438",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "27e8ff73-c8bb-4ddd-ab20-e55e34139664"
        },
        "item": {
          "id": "59db721a-5bd0-41d4-8997-0b315b5be541",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cf1d964b-6858-44c0-85a6-386dc42b7a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6fc3a5-67bf-4fdb-ae02-a0943537d8b8",
        "cursor": {
          "ref": "9eb42f98-d8dc-4d5a-a072-6d00dcce68c1",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3a3c5d74-9495-4584-8195-8e83fec8d871"
        },
        "item": {
          "id": "9f6fc3a5-67bf-4fdb-ae02-a0943537d8b8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c5451a88-24a0-4f9b-9230-8b152e36b8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632b843d-b3f5-47f2-8e4b-371b353e139d",
        "cursor": {
          "ref": "c20725a0-479f-448b-84ee-4dba218b7d88",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5eb8c161-cd0d-4419-8c37-df95a6700394"
        },
        "item": {
          "id": "632b843d-b3f5-47f2-8e4b-371b353e139d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "468933a0-f532-4e37-8de0-fb268ca5ec44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce62882-7bc8-4622-9aef-bc77771ff1bc",
        "cursor": {
          "ref": "82658962-a7ac-4a22-aabb-b5809b74e7de",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "40db2adb-6dfb-4b86-9f39-2e8a33bf90d1"
        },
        "item": {
          "id": "8ce62882-7bc8-4622-9aef-bc77771ff1bc",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e7848d31-a1c2-4598-8f58-72b2fd362041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8d4ffb-c487-4df5-b22d-1e08c8359280",
        "cursor": {
          "ref": "f08edd0d-366d-4a18-a004-92c5f67f613f",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "26736b41-f7ed-42da-880a-c0e4bceb86dd"
        },
        "item": {
          "id": "6e8d4ffb-c487-4df5-b22d-1e08c8359280",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f567f9b1-cbac-4959-b885-6dd9a48afccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26a55d3-182e-44ba-98ee-d4fed289a028",
        "cursor": {
          "ref": "125d3c15-db19-47d3-b388-ac9936832a68",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3fbf0ff2-1eef-4ad2-a6d8-9a2ed8f3ca5c"
        },
        "item": {
          "id": "d26a55d3-182e-44ba-98ee-d4fed289a028",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "25dbf8c2-28b9-4f3d-bd2c-f33d42b99b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52dc785-9f1f-4231-8c55-c0649116760b",
        "cursor": {
          "ref": "482a5042-f966-434f-90f7-a8019082fe6a",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1fe507e0-7a23-4cb9-8930-8c75b0aad2d0"
        },
        "item": {
          "id": "d52dc785-9f1f-4231-8c55-c0649116760b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "91d77069-7bfa-4d42-8244-326b6a3bc460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0177e85c-ea28-4f1f-ad5c-d635109c5e67",
        "cursor": {
          "ref": "2b35ca0d-302f-4291-9fc6-d1b477888b13",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ba55e334-163b-4ef3-b11f-ed0ea31b0282"
        },
        "item": {
          "id": "0177e85c-ea28-4f1f-ad5c-d635109c5e67",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e2bd4c35-b30c-4146-8cf5-940701aa78d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a57813-50a9-4814-b422-864362489fc4",
        "cursor": {
          "ref": "671ab740-b5a2-44d9-aa51-7faf2212aea5",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "42dd1f82-b471-4a30-bea7-e4467c7295bc"
        },
        "item": {
          "id": "d6a57813-50a9-4814-b422-864362489fc4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7556759e-2048-4849-8fe9-6bb3f6bde7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4bf4a5-4b3f-4a44-89cf-8ed2c9453c4e",
        "cursor": {
          "ref": "cef7753b-2f0b-4523-93b2-f2cf1087585c",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "447559f5-1d1a-43d5-8cd7-5f47718b55e3"
        },
        "item": {
          "id": "8d4bf4a5-4b3f-4a44-89cf-8ed2c9453c4e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6ba364ea-f5a8-4d84-ba5e-bae565c8bf0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf609f13-770c-4e80-958f-42690327e2b2",
        "cursor": {
          "ref": "ed1751f9-491f-4d60-8d0b-91553ce6a5ce",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "408feba7-17dd-43d3-9c7b-cedd9f6d1091"
        },
        "item": {
          "id": "cf609f13-770c-4e80-958f-42690327e2b2",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b84b9c0e-90ec-4c71-8aad-af76fca8aec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2006cdd-5c0a-4d35-997e-81e28e42e0db",
        "cursor": {
          "ref": "42cbe0cb-0193-47a1-bc2c-d4ecd57ffa21",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a462019c-3cea-4527-a090-5d19a14b75b9"
        },
        "item": {
          "id": "d2006cdd-5c0a-4d35-997e-81e28e42e0db",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "95713e53-a94f-42d6-b811-29c03e49e457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9e5094-01c1-482c-bd3f-ef76c706cb57",
        "cursor": {
          "ref": "32bb94f9-4f9c-4d95-a8a3-013539a2979d",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a95282c9-b079-4b8c-a92f-1dbb598e3bae"
        },
        "item": {
          "id": "bc9e5094-01c1-482c-bd3f-ef76c706cb57",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4dfe1a5d-0291-49c6-ac9f-16998437cad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77ee3a2-41fc-454c-8f93-5932c5a626c8",
        "cursor": {
          "ref": "659242bf-8ba5-4c02-b7d8-d676633d3616",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3aa3f98e-7b8a-4276-818e-0f2c77cccc62"
        },
        "item": {
          "id": "f77ee3a2-41fc-454c-8f93-5932c5a626c8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a6b9ed33-1cfd-4969-89f5-7400111e8474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c74fd4-4c84-485c-85f4-62caa50b7d9a",
        "cursor": {
          "ref": "df9d0394-fa88-450b-8cff-46164b7b8037",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d02587fa-86d7-450d-9860-1a77de14612d"
        },
        "item": {
          "id": "53c74fd4-4c84-485c-85f4-62caa50b7d9a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ca75ebe8-d733-4de4-8140-57447ed091bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe81b31-02bf-43bd-892e-0d6037b02d49",
        "cursor": {
          "ref": "b09a6561-62c2-4ae1-91c1-8cd3e3bfdf47",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "64636cc8-addc-4d72-ac1f-f0296b9ffaea"
        },
        "item": {
          "id": "ebe81b31-02bf-43bd-892e-0d6037b02d49",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "eda1af8a-b03e-4836-a387-1af9ec42a521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7008658b-486b-4f0b-ae92-1ab12ae0a5f6",
        "cursor": {
          "ref": "2bc04d61-ec62-49a1-8a54-c1d4cf0d2dad",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e3354e48-426a-447e-99e9-da9045559123"
        },
        "item": {
          "id": "7008658b-486b-4f0b-ae92-1ab12ae0a5f6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1ecd206d-d0a1-4924-8a3c-c238b9a27fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dafec137-68bb-4077-829e-6f2943530805",
        "cursor": {
          "ref": "b736d4fe-0012-4dab-8cf7-1071550949f7",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e8c1e4a2-29b1-4e83-b6ed-20cda3b0b659"
        },
        "item": {
          "id": "dafec137-68bb-4077-829e-6f2943530805",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8ffb70c0-b8c2-44f6-bc2f-d9f14c8255d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d642add7-cdfa-4bd6-878e-1071604cc110",
        "cursor": {
          "ref": "80d03438-496a-485e-a5de-94b3bbd24347",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e8964646-49db-4979-93f9-14ca84aac3b9"
        },
        "item": {
          "id": "d642add7-cdfa-4bd6-878e-1071604cc110",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fbc2f5a3-5e93-46e4-9eec-01384f0ea3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d14aa86-833b-47b8-b1fa-3738bf34a745",
        "cursor": {
          "ref": "b9c5cd66-38f9-4d87-94eb-1d8cb65b1a5c",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "fac01040-6c4a-41b2-b8d3-ed0da80415d5"
        },
        "item": {
          "id": "3d14aa86-833b-47b8-b1fa-3738bf34a745",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b3f5d3e2-a839-4b8f-8fda-b674f6bfc841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78542bd-b151-44a0-b2a4-fa8606af5a57",
        "cursor": {
          "ref": "32802c11-8d1c-40fb-97fe-f8b23dbce689",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "68fe4793-e505-4ea9-a80c-e46ff6511fa8"
        },
        "item": {
          "id": "a78542bd-b151-44a0-b2a4-fa8606af5a57",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4f17d74a-97f2-4f4d-8277-b4d447c767a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f33faa-b875-41e8-a260-7191a2c306f1",
        "cursor": {
          "ref": "0c9aeb95-18ee-4a52-bd21-f94205d4abcf",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f517d53c-5aa5-46de-86b4-f5165b99c0fa"
        },
        "item": {
          "id": "c3f33faa-b875-41e8-a260-7191a2c306f1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d9d39f9b-0de8-4ed7-8f46-d847190a81e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9cea8a3-f88c-4839-8e93-8098bec101c0",
        "cursor": {
          "ref": "f03f1a20-f516-44ce-a9e2-7b594b4aa9bc",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0f90487d-b6a7-4dc7-a29d-f5fc92370b17"
        },
        "item": {
          "id": "f9cea8a3-f88c-4839-8e93-8098bec101c0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "85b825cd-4c6b-458e-8397-b24e8a64070e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7902d38b-5fcd-47dd-88e3-3a8b7a7f4df3",
        "cursor": {
          "ref": "4728308f-f4a6-4383-9308-031ca285434d",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "36ff75c5-54ab-426c-b6ba-bfa465506c71"
        },
        "item": {
          "id": "7902d38b-5fcd-47dd-88e3-3a8b7a7f4df3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c6467487-f926-40e9-865b-26e9719d012c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9aa37e1-595a-4a63-8925-b48b46d4f6cd",
        "cursor": {
          "ref": "04f38283-3890-4280-b7e5-90fef1106b6e",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c728d05f-6735-4909-b11d-ba819b675b13"
        },
        "item": {
          "id": "e9aa37e1-595a-4a63-8925-b48b46d4f6cd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "99702049-d39c-49c9-b03b-efa26464b301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39b6ec2-72f5-4fbf-9a1a-f6a67b1a0940",
        "cursor": {
          "ref": "96ba5fff-7c3a-4877-95d2-9e04138e958d",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4076b15c-d6cf-4934-9f92-2d0291823dfa"
        },
        "item": {
          "id": "e39b6ec2-72f5-4fbf-9a1a-f6a67b1a0940",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4577a01b-9939-4f86-9a2a-3bcb0b88dd0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78ecd37-a2bf-40a9-9bb1-31c44cdd9576",
        "cursor": {
          "ref": "f16656dc-e20f-46cf-b843-80410fb11d7c",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "04a004ff-9525-4cac-83d4-d76589dc361c"
        },
        "item": {
          "id": "f78ecd37-a2bf-40a9-9bb1-31c44cdd9576",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0c6f6aae-87ec-400f-8e4a-fbb1e6d92ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41bd42bc-f6b7-43c1-ab0c-552a14b87941",
        "cursor": {
          "ref": "8a5088da-cea5-4cc1-835d-ee37a7f16209",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c8d48ca6-585a-4fc2-859e-36c4d5228fcc"
        },
        "item": {
          "id": "41bd42bc-f6b7-43c1-ab0c-552a14b87941",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "09a3430d-fc0d-4d43-b03f-865167ffa7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631de61b-2d10-4b36-be19-dd2cf38ca553",
        "cursor": {
          "ref": "e7913baa-bdc6-4ca8-b855-2590c6afa0ba",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cf8c830e-0096-451a-bc68-acc0798ff73c"
        },
        "item": {
          "id": "631de61b-2d10-4b36-be19-dd2cf38ca553",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9a46ecd8-3a92-4bc9-b30b-2c89cbd1d3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd41551-e1e3-467a-98ae-22f912d8d55e",
        "cursor": {
          "ref": "1d86d2b6-134e-439d-96bb-163dd7b1a853",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "baa004b9-42e6-42f3-8ad0-0acbdf24f142"
        },
        "item": {
          "id": "4dd41551-e1e3-467a-98ae-22f912d8d55e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "001fae53-4286-40d8-ae7d-6082a6792f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aceea036-c152-4e5c-8aec-38c9e7e39be9",
        "cursor": {
          "ref": "e20a53ed-c930-4016-a689-526b85f87355",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "93f27673-9746-4f01-81c5-39b7092e71b8"
        },
        "item": {
          "id": "aceea036-c152-4e5c-8aec-38c9e7e39be9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "929bf2dc-b02c-4e8b-a83c-5ef216649d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54277f3-8cc2-4ee5-9f41-ea072f5d81fa",
        "cursor": {
          "ref": "9481a79f-f1c0-494f-b604-404484d70294",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "46f8cfb4-88e8-4779-9015-1c7df09b6210"
        },
        "item": {
          "id": "d54277f3-8cc2-4ee5-9f41-ea072f5d81fa",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7d286dfd-3b46-4881-935a-20273f41d2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544975a0-13c4-43a4-86bd-fbcec324cca5",
        "cursor": {
          "ref": "da6901d6-608b-4756-a8b7-b9d11e849f0f",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "38a944bc-f5f7-492e-9189-c87ceeed945c"
        },
        "item": {
          "id": "544975a0-13c4-43a4-86bd-fbcec324cca5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b64ca126-854d-4c24-b37d-0b09a41418ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d27cd53-4cdd-4655-967e-1df989c6a17b",
        "cursor": {
          "ref": "9dd709e5-f045-4768-b876-263d6864fa48",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3d8d22f7-8f75-4aac-8272-174541ae3893"
        },
        "item": {
          "id": "5d27cd53-4cdd-4655-967e-1df989c6a17b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cbdc3d89-b4aa-458d-a967-295968d36c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051926ac-7d74-4b02-96a5-94c107ffd887",
        "cursor": {
          "ref": "a6d3815a-1130-4047-b557-a8991db9819f",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fb728c2b-b2ae-4a79-a022-b6ae22f4e50a"
        },
        "item": {
          "id": "051926ac-7d74-4b02-96a5-94c107ffd887",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "73db621e-1781-425e-91a9-fcac5f79f2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61573f3d-5d12-459f-8334-a93a1fb21caa",
        "cursor": {
          "ref": "8e0c70a0-872e-427b-8860-52e9a0ee1ff1",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a91b968b-e6a1-4c2f-8d24-d3a602bf7e26"
        },
        "item": {
          "id": "61573f3d-5d12-459f-8334-a93a1fb21caa",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5776a0d2-d8d4-4804-9a1c-b9f7c3099d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc140801-f1c9-4e97-9577-ba48f87bc755",
        "cursor": {
          "ref": "0bef99ee-8b35-42b3-ac7f-13d3ff6ca495",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5d164c57-8fc9-47b6-afa6-422285c3c26c"
        },
        "item": {
          "id": "bc140801-f1c9-4e97-9577-ba48f87bc755",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "990bc75c-db68-4285-a283-84cc126e9a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59db4c5d-2bf0-4af1-a08d-7eb7d3941e1e",
        "cursor": {
          "ref": "86374f5f-e093-4d05-9747-37a33c97f0f2",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e95d9559-d590-4e2f-9b7c-252fc6b76b13"
        },
        "item": {
          "id": "59db4c5d-2bf0-4af1-a08d-7eb7d3941e1e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "00e8cf51-f738-4398-9403-e55c0089f694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfa19ce-4323-4fb6-b211-eb5e726034b9",
        "cursor": {
          "ref": "ee099d93-18fa-4673-ae8c-3dbecd40746b",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "eb99c6ad-2fbe-4fe4-945a-b10588a9e81d"
        },
        "item": {
          "id": "1cfa19ce-4323-4fb6-b211-eb5e726034b9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f51f40f3-a200-4a5c-92d9-b08020c85ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b1e1aa-1771-48d8-bf89-bec2702e4a99",
        "cursor": {
          "ref": "20463c40-9ac4-4e4e-b469-fb106074531a",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a4bd3271-291e-4e2a-b997-2d58f3efd524"
        },
        "item": {
          "id": "10b1e1aa-1771-48d8-bf89-bec2702e4a99",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "499b34ef-9331-4570-98c9-2b7f811f239e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14481a5a-ecae-4d43-9d3e-ff17533c14e5",
        "cursor": {
          "ref": "2351b98d-a48d-418f-b0e1-ff97be835cf6",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3ba73eeb-22d3-4b2e-bb9e-89a9440b0090"
        },
        "item": {
          "id": "14481a5a-ecae-4d43-9d3e-ff17533c14e5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "567a5142-aad1-42b7-876d-032de094284c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3f3488-b3aa-498a-bc8f-d48c240e16c6",
        "cursor": {
          "ref": "5968af77-e30c-4ebf-b121-6a96b3bb15d8",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "edc5344b-deb4-4712-bc20-a8d8b69a1b44"
        },
        "item": {
          "id": "4f3f3488-b3aa-498a-bc8f-d48c240e16c6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "de648ffe-0404-49ca-9573-ea2f5634be8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc2c009-31e0-4c6a-99cd-8cffdd974e8a",
        "cursor": {
          "ref": "4749fd2e-b418-4630-9fa5-d62a43ed2328",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "65caaa91-af99-4f45-94a2-865af8fe590d"
        },
        "item": {
          "id": "7bc2c009-31e0-4c6a-99cd-8cffdd974e8a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "22408f96-b8c0-43fd-aad9-dc3d6667f06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea43b3a7-0259-455f-9a17-af38244e7cd7",
        "cursor": {
          "ref": "0c1f8565-efc8-42de-9c79-3bf6fd76d385",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bb857ff4-6561-4e37-ba0a-5950219cd06e"
        },
        "item": {
          "id": "ea43b3a7-0259-455f-9a17-af38244e7cd7",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a0d01485-d331-424a-9b76-a30301bf7c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779e259d-abe6-412c-83d0-b65f8f1aa06e",
        "cursor": {
          "ref": "5112ca58-167f-48ec-b62f-344ba080e050",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9d8133b0-dc52-4f3e-9b36-2bcbcfd589f4"
        },
        "item": {
          "id": "779e259d-abe6-412c-83d0-b65f8f1aa06e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "aac3d894-0648-4220-a998-ac6aaab9e321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f430402-d4fb-429e-bf63-0a71fe78ae0d",
        "cursor": {
          "ref": "4fb27a26-c450-4006-b713-8b9266b7f6ae",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1417da02-173c-4005-926f-e109ea962dc9"
        },
        "item": {
          "id": "8f430402-d4fb-429e-bf63-0a71fe78ae0d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5d42698f-16a6-4b27-8ff0-1fc434fcb011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5737833-c1b2-447e-9059-7b29b8c3f801",
        "cursor": {
          "ref": "28c57e2a-def6-4afb-b0c6-27aae603d3cb",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c2ddc56f-543e-4bb0-a244-649ecdf24967"
        },
        "item": {
          "id": "c5737833-c1b2-447e-9059-7b29b8c3f801",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2ee6fd75-9437-4a4f-a23e-8e2332e19c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89f1ec3-5e7d-4edf-9e4e-89da7788915d",
        "cursor": {
          "ref": "891e552c-bcd1-4319-b682-a943db528b7d",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d1f5b4e1-b267-4027-9838-a882ad30988d"
        },
        "item": {
          "id": "e89f1ec3-5e7d-4edf-9e4e-89da7788915d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8a1b2611-3a83-490b-9078-1b024853d772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d221f3-8a42-4242-ada2-e7b5e9d9dfd9",
        "cursor": {
          "ref": "a652651e-fe26-45e9-b1e2-47f5601f1f8f",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2f314be0-5a11-493e-94fa-4d74297288f1"
        },
        "item": {
          "id": "c7d221f3-8a42-4242-ada2-e7b5e9d9dfd9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "98374abf-31aa-4dc0-aa06-d470221fc097",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e3fd1e-8daa-40da-9c92-f627f8a9b8aa",
        "cursor": {
          "ref": "dab8bcd3-d664-4772-a641-b3722c8f2609",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "429de989-a5ff-4824-aef5-c69a0a3c1e2f"
        },
        "item": {
          "id": "48e3fd1e-8daa-40da-9c92-f627f8a9b8aa",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "5c7b9229-3e87-47e6-ad0a-f3c370378e56",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9850f964-2b2d-4698-a13d-12dc49fa2925",
        "cursor": {
          "ref": "33bd7054-dbf1-49d7-bb49-ab45c8c4a73f",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d68e37c2-677e-48f1-a007-d39d7a57f50b"
        },
        "item": {
          "id": "9850f964-2b2d-4698-a13d-12dc49fa2925",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8f27626a-291d-4631-a6a5-f9a2ce2e0ecd",
          "status": "OK",
          "code": 200,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa60b2e8-7f60-4b34-b761-aaab344bcca6",
        "cursor": {
          "ref": "93e6fef0-6467-429c-a381-75dde0238033",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f4751eff-2958-40fd-85b1-1e0a1d21bce4"
        },
        "item": {
          "id": "fa60b2e8-7f60-4b34-b761-aaab344bcca6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "35765cad-efec-4a33-a062-70e63123073f",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "83385e89-9279-4c7f-adfe-131251be01e4",
        "cursor": {
          "ref": "1a957011-d932-4935-bea7-1a3f5b5bb410",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c4d40af5-af64-4a11-a014-c0f2d691d1ff"
        },
        "item": {
          "id": "83385e89-9279-4c7f-adfe-131251be01e4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "85f9ca26-6bff-498e-b907-2b352f83997f",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fbc40e-7a68-4739-9515-973d4399d177",
        "cursor": {
          "ref": "e6a5592a-4e50-40e0-8fcd-6ebe516fabf1",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d78ef842-7464-4163-b746-3c5740336d44"
        },
        "item": {
          "id": "85fbc40e-7a68-4739-9515-973d4399d177",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a1371307-4b7d-4f8d-944e-432c562309c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fbc40e-7a68-4739-9515-973d4399d177",
        "cursor": {
          "ref": "e6a5592a-4e50-40e0-8fcd-6ebe516fabf1",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d78ef842-7464-4163-b746-3c5740336d44"
        },
        "item": {
          "id": "85fbc40e-7a68-4739-9515-973d4399d177",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a1371307-4b7d-4f8d-944e-432c562309c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fbc40e-7a68-4739-9515-973d4399d177",
        "cursor": {
          "ref": "e6a5592a-4e50-40e0-8fcd-6ebe516fabf1",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d78ef842-7464-4163-b746-3c5740336d44"
        },
        "item": {
          "id": "85fbc40e-7a68-4739-9515-973d4399d177",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a1371307-4b7d-4f8d-944e-432c562309c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702ad856-9049-4cab-999c-df0da36d914e",
        "cursor": {
          "ref": "e302f705-3bd4-4bd5-9ce6-1a4ef3bacaa1",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2757ed48-a810-4c3d-a01f-bb5491856c4c"
        },
        "item": {
          "id": "702ad856-9049-4cab-999c-df0da36d914e",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "826ad68e-860d-4eab-ac34-d22ed1323c56",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdbaf5ca-ce16-43db-8bfa-ccfa110919d2",
        "cursor": {
          "ref": "b3f15b62-f754-41c3-9b91-d8ade0d621f9",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e01b7eec-a1b3-4a62-a8bd-6d541ca6c8ba"
        },
        "item": {
          "id": "cdbaf5ca-ce16-43db-8bfa-ccfa110919d2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "45e9865b-94be-4d8a-bfe5-a6405d16c95b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdbaf5ca-ce16-43db-8bfa-ccfa110919d2",
        "cursor": {
          "ref": "b3f15b62-f754-41c3-9b91-d8ade0d621f9",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e01b7eec-a1b3-4a62-a8bd-6d541ca6c8ba"
        },
        "item": {
          "id": "cdbaf5ca-ce16-43db-8bfa-ccfa110919d2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "45e9865b-94be-4d8a-bfe5-a6405d16c95b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ac1345-5f2e-4336-aa8b-49054cc88ba0",
        "cursor": {
          "ref": "c79ce5af-33df-4b5e-8347-e9d9419b79aa",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8d46ba7c-2bb0-4261-91b7-2104e1e88178"
        },
        "item": {
          "id": "a5ac1345-5f2e-4336-aa8b-49054cc88ba0",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "8b858331-6881-4f22-b716-f5684ff0ba4f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6769ff-7930-4696-aa0f-20bcf4eaefa6",
        "cursor": {
          "ref": "d566de36-77d8-4527-a27b-b8b9eb068854",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0a9f62b6-495b-4a23-aead-676431e885df"
        },
        "item": {
          "id": "3e6769ff-7930-4696-aa0f-20bcf4eaefa6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "dec245a3-16ee-4f39-b665-fe070a2baea0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6769ff-7930-4696-aa0f-20bcf4eaefa6",
        "cursor": {
          "ref": "d566de36-77d8-4527-a27b-b8b9eb068854",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0a9f62b6-495b-4a23-aead-676431e885df"
        },
        "item": {
          "id": "3e6769ff-7930-4696-aa0f-20bcf4eaefa6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "dec245a3-16ee-4f39-b665-fe070a2baea0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cc5b23-454b-4bb2-a114-16b340dccfc9",
        "cursor": {
          "ref": "aaf8c1ce-89cb-4466-bacf-1280b0ae5761",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "36c40d71-c110-418d-8911-7341a3a86146"
        },
        "item": {
          "id": "06cc5b23-454b-4bb2-a114-16b340dccfc9",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "f9ef8a9f-5b9e-42df-a05b-cb52515b923e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}