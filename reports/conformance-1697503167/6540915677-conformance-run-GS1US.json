{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "24c1da8d-2f74-4f8d-b141-ba7f2da7ea18",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a22f740b-bbd4-4c5a-8a4c-c9d8457f0718",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7b75b651-cd6d-47ea-bb9e-51348f529ad2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "70f958c8-309a-4b0c-9c03-57bdf955feb5"
                }
              }
            ]
          },
          {
            "id": "80bfc0d5-24f5-4dd5-be88-20564c0d4114",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "af0aff17-52df-4d21-b0ad-01327e535fe9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9aeb041f-fd87-455b-8e29-9a35ecd021ef"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ac825889-2ef2-4feb-bc85-d79936905f93",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "aadadb3d-1398-4b10-a7a0-a4ab98ca2ea0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8a01e860-9f10-4306-8d30-f0fcd4231f68",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "996f23cd-1962-40d3-9ce1-c3f74cb76d99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "77579b31-f2f1-4e70-a0b7-d66f3b3a6c95"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "160e57db-ea4a-4ffd-9f48-be2f1be6c1a4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bba54bae-d61f-4c00-a0b7-d32f4359b2e2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "34d8c16e-6bcd-4ee1-b89e-2e7a6ccbbfbb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "36ca1302-3938-4549-b02e-9dab79be5ecb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bbe74506-4403-4784-b0f8-b5a632e3393a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6dad9617-354b-4474-92e1-780511edc0b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa30e469-0956-4234-9f89-1b385223b240",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42b8e652-d8c5-4fea-8b5c-8ec24c2df999"
            }
          }
        ]
      },
      {
        "id": "e704b339-2af0-48e9-9a1b-b235c9ebc53a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a86a7bf2-48b0-4ebb-8ed5-08774914ffa2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bcaa66d8-17f9-43f2-9529-25834cede04c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c8e5e616-72b0-430c-9a55-1be2199aa791",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6abacbee-65ba-47af-8ebc-298c915578b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a04b4fa9-e5cc-4f9c-b1b6-213369755e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cdf2ba6-ec79-4888-a15a-6ea190795694",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0866c4f-335c-4e34-b4c5-2890e5139a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07f55fac-7da1-4cb6-8748-f14e0bc73212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445a6b12-3711-48b3-b060-4e5d13dcf20d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bbbb18d-db46-45b1-a83b-72decb202f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e090d08-84d6-452f-b783-2f42eb89021e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "70888f7e-fcee-41c4-b1c8-16e26337611a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d61c6bad-9a29-4c3d-9036-67d4418b808a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "680e6b22-aff4-478b-b234-9c372e78367b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b0d2e2b-2c9e-470e-94dd-e167e8fe5c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854fc5a1-c6f0-49ff-bd30-bf7923515be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d5ac6a-1fdc-486c-8887-37566839b711"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "38e70739-4e7d-4e66-a218-a090708d0e9b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cc712011-884d-41aa-9f23-7f1c23748f65",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c94597be-e599-4f8e-aad1-e70dfd34aca7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bc95ee1f-7755-4ef0-9fe4-a872fddcd431"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "421c472f-54c9-424d-b4fa-d8cd30d86e04",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2763a737-c11c-4189-bc20-6249e12402a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d0a1eff-afb9-401f-9f69-169d4670876c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24b552f2-86ed-4524-bccf-5792855e750e"
            }
          }
        ]
      },
      {
        "id": "5ddb97f5-cbc1-4f35-a8d8-fd641b7998ff",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "cc8917b4-9e1f-483b-818a-7a5d99d97d73",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9a279498-834c-445d-b323-770266232791",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "092ddf9d-1533-4467-9942-1e109b972b15",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9808e7-6e08-410f-8467-7217132a65a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9fef988-bd09-465b-915e-7b8b761e0791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c660722-0296-4add-b37c-088785164234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ad400e5-f935-40f0-9b32-754362e578f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fce864-30b5-4046-a2fc-d8218b1d5966",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d22dc0-0ad5-4c21-a142-c3a5818a8bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92232139-654a-41fd-874b-7b8370990ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ecf4fef-cab3-4b56-b8cd-5e3465564aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65950ead-9c0a-4b6a-b347-8fb525fe8bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e70431-75e6-40d9-af84-67eecce20556",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfcd6026-c2d4-4a68-8e7f-12926ab17afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d80732-8f5e-46c2-9fa9-d482b599c497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ee07b7-3afd-4c8e-b7e3-61ca45ef5d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a4f0b2b-955c-4440-9a74-7215eacdab41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e415c4-00fb-4466-bf24-60b47a42da75",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aaf04f5-7abc-4ab2-bd02-72d882f1c46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4316e265-e31d-4f0c-8939-0fca86233f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7ac405-faae-463e-866d-dc25261eb0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d85a454-97fd-43d3-82ac-90d01c6f55a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d5c814-404d-45ba-a59b-66a35111730c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1089a3-d36e-4318-9dfb-737ba709fc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78bd4481-905b-4930-8f7a-77e05cd3c2e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782ef1ad-1455-4730-8a52-2958e8d736f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fe8f68b-74a6-4fca-a1a8-48865e8a1048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82737e95-2b4c-4d04-999d-fb3348e126ee",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70208494-2617-4dc7-9e30-b1a6fd8d46e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34fc5d83-a00d-4dd4-8621-7d79d2c7288e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eec44e8-6352-4bc6-9fb9-6190b37d0929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e315ffa-d6dd-4627-b944-a791a35b2dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45599692-e60e-4065-8bfc-3bcdb4beb24e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beabc621-2064-4e33-a586-42f357dea36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb7f2cba-b043-45d2-b1a2-2e87ac8b2a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a980855-8e35-4c0f-9399-a5bd5c501ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6f0ca38-167c-490b-9d96-8d36d68169be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662d5d26-1e40-45aa-a677-414d7655c960",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05989dfb-015a-4647-94a0-474bebca7842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53339dd6-6553-412a-aa87-e4666cfebafb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75fa504-087f-49d8-a85e-41332ab769dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9a8cffd-0861-4364-bb82-c79533f28330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2db54e-a59b-448f-ad28-841b6873852f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4662d4a6-361e-40c9-8ef7-7df76f2fcf6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d7082e-153f-4c85-9eba-4d84451f9091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa8e8f5-b8a1-4cdb-965b-d93a5aa8f61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac3dc186-4eb6-4da5-8b3f-bd51ebc03e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd2ec3d-bb67-43e4-a094-91e02c8ad859",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57d3afb-f489-4b82-99c9-133e180cb0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec4f459b-5c0d-4b85-976f-e38c0ffe43d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f767fe0a-a669-4ae1-9756-382c9d2776c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d2e4983-2bf5-44e5-8bec-ef9d4d1a977d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5174caee-2813-472b-b236-8e6fa4666b12",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72edd70e-f006-4c67-9d4b-5f82be851b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9174603b-7302-457b-9c43-7cecc074cf5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f2af94-7752-49a8-a516-924829bf40a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1929d8e-dfa1-45bc-9558-8d29a09f9db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627627bc-1ba2-4a15-9e15-f630f399050d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5782a0f-0aca-4d33-84de-5d3cc1a6cbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc4442e6-c6cb-420f-bc67-6429cc37d93f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbaeb1a8-e876-4c64-bc53-310fcd17512b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "877b5197-b314-46c1-90db-53619aa70695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c6299e-2b23-4d00-b1c9-2c6237494901",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf06d05-b072-40fa-ab71-22cd6e8e0dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4e9012-5134-4fe1-9ef3-6d525817160b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6ad4bf-ab22-43ee-aa9a-60e5b2043752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8223207c-f2ca-4920-885d-dcf60ccc4165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009c5c53-a804-4928-8ede-019b32515c4b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728aa991-b409-4789-86d3-1dda05c121ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c3fd00-6bdc-47ff-ac2b-abed9763b500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8dfe951-7bb9-4e08-985a-f80dcd200ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2aa1f3e-eba9-48ce-bc07-bcaa9d130082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076c6532-0f16-4db1-bcbd-730ba15a85ab",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c946bf-6b8e-4832-bb9a-fe212c532760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "181ade5b-aafc-4a93-b090-44802ea8c99f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0935bf62-b827-45d8-b8d9-3d7e81300ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f75b15ba-9bac-4a33-9261-5f3f31a97b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac24a1a1-d9b4-402c-a0e0-4813986a1968",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb82f14-341a-4082-a2f1-b36a30efe9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecc6857a-a38f-4518-8289-bc6de9358377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0faf6307-0774-43fd-9d3e-7bea61473b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ab93dac-a2e4-4b4b-aa3b-76f9fb79977d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b63162-5414-4b7a-bd23-d9f7111a5835",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c89d9f-8498-4050-9600-499a603bab22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ad55c06-fb0a-4501-97fc-950591095293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241ffae9-0486-4ddb-a66d-75ed38e2857f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6189e4d9-984f-47ae-9dc4-fce8df19d79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff7bcbd-2a1f-4f21-9c1f-a98762e194a8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0d0c75-8992-4318-aba9-3299760f4498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf2386f-7ffb-4fc4-9516-88e869faa0ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df02d9d6-6de3-4106-9311-be94c665ef5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "819ae31f-8bb2-4fa9-95ea-ddaa9c62ffb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3480f632-246b-422b-a83f-fe22b2091fa1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abce176e-9520-4068-9ad5-fb9993876b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec848c3-6835-43c8-916a-3ea9b6e18481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05dca1a4-f42f-4f9b-aafc-95db7876c83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42a7ecd2-80a9-43ee-9cfa-1feb86f4a8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ecd9fd0-697c-4fd3-868a-a736a67ca4d5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4555e0-4cb5-4ee0-8517-c278fc9c6f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e48ce576-bf08-4765-aba3-acd9e50b10f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65dfe02a-9fba-4430-b70e-ba38a49f8a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd2fa9ce-67b8-4de3-9c1f-b8ab753346db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9740c66d-5d14-4e33-a91f-f3fc02614a81",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6bdbc8-97b4-4b57-8799-02922297146b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c3dd22-3337-4834-b900-f338c8c2dd6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a323ce3e-bc8e-46ba-982a-5a474e34e9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "974643ec-69b4-4172-aebd-2c3d6c5ecb44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9bc3169-a5db-4b24-a910-7c2419c0dcdf",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da223c1-88e2-4477-a0e2-5c82c201cae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d57293-85ab-4042-b18b-42a924c8f3c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b32ba49-4aef-4d34-9bee-dd4a225c225a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3840c887-2936-4489-bf98-da247ae1266c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980f908b-47ca-402c-8a31-bbe2b2a0a58d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3513c2a1-d156-40a0-a7a7-49bb0905bad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deee9d4d-2fdd-4796-b9ba-4e2ea83c497d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f809bdc7-6f4c-467b-aabf-ae05068a2bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7be8e9-ea80-4f31-907a-d5d32c7aafdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef95563a-8065-4a1d-b9d8-d90be477fd0e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dac8b1e-6180-4123-91b2-8fc310a21284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39424461-d149-4a30-9891-a8a5d61ee2c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d5cfc8-4218-4b76-a3c1-5a658d92f90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "21947fee-983b-4d07-8284-17b72a021ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445d335a-db29-4c03-934d-10ea641f3eed",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b365a114-9855-4115-9fcc-4c247eb0a8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a092c75-2852-4538-9e3a-05c27f9054f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9150b6c-a1cf-4979-8961-ef3c2c9711a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "44ccfe1a-bbe7-44e6-afaf-56095e050e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116fd01f-07a5-4580-b7bd-ceae60852dde",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307ba851-fd99-4c61-95fe-22ba142f8545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16699b52-dbd9-4217-91f3-e6dcc5486f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936bcb36-e710-4ae8-9067-9081cd00f919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd8be679-5b37-40cb-a88f-a71f24bc52b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c4a88d-2427-494c-9071-73f3690b9a4c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9eb5cdc-15a1-42d4-9c84-daf1925a1bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff1c2c2-238f-4eb2-ac5c-f20f19ad08e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add39e28-db29-4f9f-baf5-059c7422e5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc4e60c-2d8f-420f-b18b-4f97b206703e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13fa834e-029d-44c5-8f08-63f4c3e9b9cd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb86dbc7-c73c-40ba-a8ef-fe73f3684b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0582172-08c3-4e4d-bebb-c191185370af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51815010-4b52-4920-9233-d4113b6d8e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc5f5ba2-1c46-4676-8c3a-cb7903f29df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f93c0e-3921-45a5-8ed7-07c7d3a90b20",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9460041f-a436-47fc-94dd-0b310e6d9622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a9b67e-5db1-4eae-b453-98ef6b4df872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a326a93d-03c5-4345-9ba9-134cb912f33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "71c9a514-9bfa-4881-8db5-95ede5bb4d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f15c4d9-0c3a-47bd-b2e6-a772538fd13f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf93e856-99be-4681-b504-1ca9954b0767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6e106b-aea5-4daf-9564-e8e6207c674c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94c66c2-65a2-44d3-8600-21380ee0ce86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3626eb07-a561-49d6-83a6-66546c5ab775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c6706f-e275-4afd-b89d-46cc98ba7538",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03640e43-e3ba-4a26-b103-51268c3d4a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb192304-153d-496f-9958-813dbadc18b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f424e1-3672-41f9-a9de-705cd8b3f62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "91e3bc6d-421e-4313-b151-0b8ba3fae64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce74914-454c-43da-91db-a99efef09fc5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04afa2b6-de63-40a1-a216-5d7aba7bf3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e4bc28-04ef-438a-bb6b-1346d9ff7bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22995151-cd7a-4b3c-b136-2dc18875bec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06d219a7-8d40-47be-ac81-ff4a484c8d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57b4b46-3e7f-40bb-b73c-f218ca974b07",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa29761-7e22-400d-8027-95ee996e4bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b93ddcd7-108b-4fca-a73a-5c87c6d293de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0f22e8-d80b-466e-84d1-b9401723c3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "071ccf10-c579-4640-82bb-5f31b06fab23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713cc8d4-0414-45aa-beaf-7d476fe3549e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b0fe96-d3fb-4d72-bd91-973637fa1507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b644da-5f94-4f04-949b-fc8a97a4ecae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc35ab94-15e3-4b29-9e5b-e24872d44da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "802afca3-5d8c-4f22-8d51-9137182b5dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3789c8dc-660b-4196-848e-4f08dbdd2b7b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705bbc5a-e8ce-45f1-88d3-4955b57ec89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e79e722c-4d2a-49e3-bdda-67bb2f8efe08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4032021a-e3d2-4cda-8fe3-6c20321e1742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b21f6635-3b55-4b8e-8954-4e019255ac9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5994b6f6-3b73-4d3f-9a8d-5ee0047ffbc0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6365eb68-7339-4ca7-8b6f-24507fbb1cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed834b02-56a8-4158-a408-a448d662cd62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8cd5f6a-b4ba-43be-9853-26f22317d378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5228b8d-84c7-4bad-a2a0-a27be7132fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82dc53b8-e149-410c-8471-590a1792d35e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c0ea49-7fd0-405a-a2c0-0e23440bb0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc684acd-066c-4e51-8580-5aa9710c418a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8237837a-fe4d-423c-b749-70b0a0064faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aef54df9-5d95-47ad-a043-9940f7a2d2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2038c83-05ae-403a-895c-aebc8c2f490b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0574302-f795-46b4-b102-33331d61baed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9b5bae-b37a-4c90-a6b1-96f031a64566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47434129-8466-48db-9436-ee938b846b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f97f52-2412-4867-adbd-795651987307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9538e6-72ee-4367-9fa6-015ad73474da",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77254a9f-9ca0-45f9-a250-7c3454cf6670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39628769-7c6b-4e4d-a9b3-70470a83772a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7493de-e08c-4077-b122-08ad8b67769d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3128f8c3-b413-43c0-bec2-45aeb01bcc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfa14b9-4de8-425f-b1e5-b18e1e95ec94",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f42628f-f8a9-41e1-9737-5889168b061a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f5684e-3e18-4f31-9234-577b415af7e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f236085-7db6-4212-810a-2c965f79b3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4b7e7c-5b4c-48b5-9618-c28a2285847b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3c556c-28c9-4cda-af4c-bfa0ccc66422",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0244ce-d770-47dd-b76b-5d5c14721509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d04bbec4-c7d1-439c-9033-653911619673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d20ea33-b609-4d69-b9cd-d5113a1a7b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "86701698-cbfe-45ce-8ee8-3c6a16911f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe3505a-ee44-4533-a701-359f6c444db5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c527676-5b9f-4612-b599-d0f0a088d7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470fce03-6978-49a7-8647-2c9f50d8fc18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a64d50d-2dbf-42b9-9776-341270e64654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f3eb4c-d0fe-405b-8483-a7c265a7dcb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1546de5-78c6-4902-98e3-a5a4629e2470",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a57371f-0387-4709-a64d-532679e9573b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7b32ac1-1403-4787-a9ac-170945d99f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7cb9ed5-760e-47c9-a54f-171024d61146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b2a6aeb-4817-40f3-a51c-fe818362c21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab16c67-ec3b-461a-b8ae-8ddc34b21de7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18bc1a36-4e2d-4138-be39-be83a15d457d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb14b52-a778-4219-af57-b1278549701d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44436ad-89e0-4049-9d97-e40c416ba64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "629e6e1e-bebf-4126-a23a-c5ba4a0a57b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d0999e-b17f-477a-bd22-b62d6fccf496",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d6f14b-ea0d-43c2-9d2c-ef10281d6706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991c6cf3-7876-4a52-af16-019472a58d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58825267-8e84-4cc7-aea7-5ba3a099d261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c22e5ed-3183-48d0-b52d-9e69785dbc1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f24d17c-aee8-4553-a54f-5bd83077db65",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f284e752-f342-469a-b433-14428e54259c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "828a5158-7b7b-44ce-800c-4c602002eb6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c03db1-4d0f-4ffb-b25c-9f2102486fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9395a209-9a21-4017-93fc-d9a9a2d6b726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f6f236-38e9-468d-8061-4fc581a40187",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2f4b71-3186-4c7c-891a-495ccf0f234a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56fc0539-b998-4418-8ab3-68d4233c8fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51baedb-eb03-4eb4-a129-7c6e18cff92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75c74dd5-f3ab-46e8-95dc-8d7b74cda16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb13d99-d1c3-4bfa-8e67-1c49bb0c0b48",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1a9a4b-3b23-48ed-ab9c-82c2bd259b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ca2f60-60b8-4836-8951-eba801d7fa29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ab33f2-94fb-4134-ad11-6b45fe71b086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "127ac32b-5206-4a0a-ba79-d5eca2c997ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1109a385-0e74-456c-a029-40c7ce4b1426",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c42a5c1-bec6-4da0-8ce9-f411eb2d3b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e07799b-6a6c-4e33-9ae1-4ecf911d3bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673d67a8-3220-43ed-8ed6-d225d7a6b108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4471de33-1dcc-4aa9-9e10-9258bd5d0dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fa3032-626d-4d2f-a974-77bcaae905c1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "829f7b8e-444f-420b-b333-bf39fa858a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb3b0488-2a64-4c33-af81-2aec78db3c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e094f6-7739-43f6-a0c6-92de5eb9cc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "769e99ab-db2a-4d44-883b-2462b90ada11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44201514-5f0e-47e8-a8a0-b6c027426cae",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a635fbcd-96bf-4bbb-a61e-98b016ec55f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "436c6978-f07a-4d75-9b8c-0b3cc68dadbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b848ee91-7360-4723-9f57-c69fc9c6189f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "503e62dd-ace4-4d34-9ff3-d88e15b7c929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68be29f-df0f-4e41-afcc-5faf33743f19",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd08635-e83a-4da1-9528-ed54893c2dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c8f3fe-ea1a-4526-8efe-a50481f5c88f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e778ce7-f200-4b06-97e6-60a89133ef37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9a62284-a102-4850-b547-03260c6209a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca2ba70-2e43-480d-baff-4b688eb09b54",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5798fa-1894-42a5-ad4d-4ca610c15ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d24394-063d-45fd-b0eb-32f562234dd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b40d0ca-eb81-417c-afad-3a127104b5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0d54da-c1fa-4062-8db1-89ad671b16b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcbd30c-124d-42ab-ae54-bb0eb83ca2f7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2f4534-69df-49f5-b725-d86908ff5bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a4476ba-d315-4f79-832e-71b7a4597394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda1c9e0-45e9-40d5-8ab6-0fd61a665bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a228f03f-b65b-4f8b-a4cf-d5050f1834eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b21eb4-d7c3-439a-9cec-1ed4123a5a5a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4aaa17e-2ec6-4f82-b837-071991b4a1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f928439-3299-4c61-8432-c283ed741409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b3887f-6ff3-4b11-b302-3819adb6b0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90b86438-fa4a-4ecd-9792-46c585769d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff2ac12-0258-4753-8a3e-d36628602d99",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2976058-9e12-46bb-bf5d-6d1904ca2817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19556d71-c802-4234-aef2-3731b0edb0b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e520c6e8-5a46-4d50-8208-436410e3fc27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "787a0afb-4731-4b14-990c-18b32ae75341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e41d69-33a5-448b-adaf-335f5e5d85dd",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3046737-022e-48f5-a644-2ea21169610f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5dcc26-f00a-464d-9aef-802d2e8865f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07633013-d9cd-4c50-b61b-6711e9fc7aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d494dbbb-7bb1-4922-9fd9-4c4061bf6a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a06f09-ec03-4533-83ee-fcc593730588",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b116602-a912-489d-9ff3-638b0cce81b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc19304b-3152-421a-a222-9c3ff503098a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064fe464-755f-4f1f-9796-48850728e498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "aaf2a11d-fc19-4295-b647-4fbed8a50880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49ba087-a2ef-41ae-a236-d74e88412285",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db96c52b-f31e-47ae-a31a-ed39ed42c275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc0d8266-e0b0-4589-a12d-c5e07f03b46c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbcd9a9b-ad3d-46d3-aba1-78a0a1f342c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9929fc58-7863-4a96-b32c-2239452e763b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540f44ca-1f79-4f4d-b7a9-85a038068705",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d929a61-5144-4f1b-a98a-65c958fc6f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "854475b3-5736-45e8-8e7b-85bde9c045f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2c5177-81f4-4751-bfc9-52d64e92c58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "51907305-9d10-4277-9c41-d327680cfef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7264422c-a9f9-485e-9367-cdf753538aee",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9acdf045-3feb-41ef-9cae-d0a950f9801f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5dc21e7-6598-4e8a-af74-3770b73b4032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5ae8fc-95b6-40b4-b5bd-34cfe78bbf26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c7c53bf-93fc-4e8d-baec-c6bac8fc5bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab511da-16f3-42e5-b743-1396c131fc39",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4fd4b1-5ad9-4c1f-8470-1a4190fc64c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3327f780-a86a-4cf7-93f6-8223d5c9d937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101ca1c1-ea2e-409e-90e6-f1c3c22ab3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a8bf703-2070-42be-9fe4-f682629621fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fe2c10-476a-4934-9ffc-e551a54a34e8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "552f3c62-94f7-4dfd-b35a-5218b3dac9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61e6222-ae80-44c0-a5f1-09309e1691ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1dc26f-8e1c-4bab-8a16-bcd288eae5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b310a2-dad1-4106-9c66-be7176cab49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb18fbb8-aded-48cd-8c67-74b49185b59f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c05c2c-4025-43b7-a8a8-407a2d718166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba1ae8b-135a-4681-bfde-37b0f201816a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455ea4c0-e622-4674-9e26-6f44e87b7ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f14be9c-1fbb-4787-bb66-bee8d0ff38f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc10319-6e49-4e4a-9c39-8c1ca2028322",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ed94e3-3182-4d67-9bb0-bfd0eaf4ad21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc3bbd4-6244-42f0-8cf5-3c633757d297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55419c5f-658f-4bc1-8afb-e82725a7a312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92385cb8-b11a-4c56-904b-6dee36587165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e904e0-e7d5-4431-b3de-3d5f713cb651",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7077798f-0805-4bf9-ab8d-f57b7dac4263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e54a570-8c62-429f-9067-c1babc7fae2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b246626-c06a-443e-9235-42de6cc1800f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09af847c-8ead-45ba-b671-637b4a05c028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6deb631-8446-467a-9509-f25dd54055ee",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97de1fbe-f7b7-4614-babd-c8ced7bd45ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d17c306-88cf-4e87-bb8b-0c8aa53239ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb22894-e53b-43d4-90ce-93f81daeab09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c888248-ce9d-445c-aa85-7a35720dd804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf8692c-ec45-489a-9a89-48e0b14277d4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf2e92a-8c55-4461-b107-588f6622db3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f493f0b-b516-46e2-a283-f064f123dd1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aab25c6-d520-4b6d-a26d-a0eb6d214ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "126a3e83-4be8-4fd2-832b-a4077e95ab2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb1ef41-a5cb-4106-af59-3b2c14a58f77",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1cecc6-aff4-4808-a269-62ea9824380e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd0d1723-291b-43f2-9d30-d208ec1235af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c74a77-1d2d-4401-bc98-9cc23011b82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e861da39-aca9-4bb1-b224-abf4d90763f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc548f66-bbd5-41ec-9c8f-835b72b2f0fd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "919ebf28-4f22-4d5d-88e5-414ad4b2755c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079b3b13-ff69-4e44-b6e3-bdcbf07037cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c83f059-4cdf-4a36-ad6b-49b6d3ce2473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f5f3b86-4cee-4adc-9352-8de47661c504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fdd286b-1785-49f2-be97-088aab4d323c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831d5b5b-f9ab-4843-89ec-fa85acbc5c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdcf3339-b129-42e5-958a-d8b8783e6956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a10cbf-d0bf-4a27-9ce3-c12e3be53f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70a2ec53-0eca-43a4-baed-40d30af74da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d204e7-6c2c-44c6-8543-47b6cf6cd0cd",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a75227-0218-4ca7-9944-7bff4231b98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c182fb6-6d6f-47ff-9754-73d50a926b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8a2b3b-7224-4767-b1d1-ffb8830c5746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e96feb85-5334-4ca5-b8dd-e2f30b1e7c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebae6a20-5a38-4491-8d8d-94cd952ec1ed",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7337cb84-6064-440e-b242-be8051420984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81dd648a-047f-44d9-a5b4-0b6a9adadf85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6148d337-5de0-4c3e-bd92-1ebaf7fd908e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7978587a-b7c6-4910-9404-ec871526457d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef55ad7-ff82-4250-b6f8-aa9fc39ec31f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3883924-00a5-4f8d-8a04-f418c16bc06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3428dadf-1220-4fbd-adc9-c619532ea744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edee6dea-9d0c-4a8f-8c34-a605efa0589a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8696d95e-f7a6-4215-934f-2dac8dd274c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86cb6d09-2d16-493a-820e-108784f7317e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8b59c5-a5c2-4e59-b36a-ac359f5eeeab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f8ea237-af03-43c1-963f-0fc8e0687413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb0643f-9562-41e2-9692-fe0bb09b889c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3e6305a-4814-4d2a-a2b0-5fd4343acf92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a166ff5-66b9-4e05-a6f2-7c5edef3c6b9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5dfd875-0bc8-4689-b11b-dda798b04b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb2a9db-a2b6-4104-933d-43f2442d3810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5da9180-f65c-4c29-8002-bf8afae7eda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dd7c204-251f-4668-9e13-c33f794a2f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48683593-4085-4829-b17d-00520c3c9f28",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7273c3ba-89e2-45f0-8e60-39c8a97e487c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a87f6c-b905-4ea3-8179-57a3824d1f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e9bdac-946d-4b67-9788-12ba5c5fee48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fbce932-2769-4d17-8fde-40cb829f1484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465f09e1-4cfe-4a7d-8efb-18e2b46e841b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7496a8-5256-4773-a156-680797e21f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd598b25-3a6a-4deb-ae3c-4e8e6f9d7ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f2e4f7-e66d-4393-bf27-da461c9d8d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21e2a5ad-048c-4c50-935b-47595cf58f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fbc789-edba-41c1-bbcc-f9f21a822ba0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54d40ed-ef76-4189-9b2d-ec192ca7e10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc9dbef-82d1-4f24-bbaf-e7f7636113e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce01040-3446-4a43-a7ff-7a279f366a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "be00ad7c-62bb-411a-9048-e04718af89f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58d2a36-3f33-4f90-8a28-4c11d02036dd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b69e33b-3908-46c9-8cdd-2af9944a9878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df506b0d-7960-4db3-8a6b-f66530f1886d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b1ff00-2c76-478b-ad06-057557c42935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fb091a46-17ef-49ea-9d8e-01c4efe68832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8044d1c-7693-4063-8892-327adc0c5aae",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2befe4e9-c928-4e93-928e-5006b8c348b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce788129-2206-41f7-8db2-17862624f00e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d061746e-65ba-46de-9a94-b1a796f14bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc777f4-04f7-42e3-848a-e57686bf4ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee98d8f-be00-4ca8-870b-b2a76ca36b5a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abedbaf-262f-484e-b59e-7d6e9f406965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dc5d75b-5bfa-4068-83ec-fb09060d7265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54883978-9c3c-4848-8305-dd738cb772e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "200cc0d1-5450-4d82-bfe2-ee9d3203c596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1becac0-08fa-495c-8dc6-bf8f1337b5f3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9e57ca-c826-4b24-a811-7821e29ea10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255bfafe-2cfe-45b4-ae85-d2ad809d5c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440f6d2f-e1f8-4054-bd49-37417f23f184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71b4958d-027e-43cd-b80b-39b5de57c70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412625ca-9c21-4cec-82a6-9b11e4818c26",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66f1d3c-d4bf-4545-9e6a-451de8ad8399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d1b5b5-8fb0-482c-8460-55075c85e52e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b172c517-7da3-4192-b9a1-967f1062baff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd53782f-fd94-472d-8a0b-394f774afdfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cda8fed-b231-4af8-b841-9211ecc497e7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b842e35-e58d-42c6-a1a9-cb1e14680326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dbe67c7-734c-47df-a954-496e8a79f2da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a690f64-9156-4d47-9037-3a9645be55db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88f1394f-9a64-4c71-807c-bf4fbdcbafb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f68302-69d7-4cae-a278-0dd4be60ed2b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d942e05-0b1f-4850-99a0-ed104033eb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e551822-74e0-4c5f-a8da-4ae66b7c297c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5170c37-747d-41ff-a8dd-d7fe36e858fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "14e8d063-153b-44cc-b4a8-90d30c84744d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4080f5d0-b807-4a0e-94a0-0e51233dbe45",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db21648-136a-498b-953e-b94b810ca48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c06462-f643-47ca-b504-e9b4167a5776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f9f813-376c-442b-995a-2923c4ba920f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "596920a4-a27c-439a-a230-2dcbf9faba12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711141e2-f694-4b1f-a740-947936b44cea",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7322a3-a053-4403-ba9d-bf0733d35ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11f5cd0-851e-4fda-8075-280d7667408b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e229db-f4e0-452f-b5de-4e8a97c0e4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe00e096-cd4c-4654-a9d6-6f6a4f273ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66bc8f74-116e-49f2-bf9a-525110984b02",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "088fddab-f170-4873-a172-e9c702b38f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8aa115c-7f46-4a6a-b4bf-e9c53a73477e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73273c6-454b-42bd-804a-eac049a51bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "07db9641-d612-4a67-9f01-5576dfbd700b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8469bb-4787-4b8f-a548-272fb5176cdb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45aa038d-2e93-44ed-9b38-e812715af6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6830808f-9dfd-48c3-8166-9a55baa154f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44aa7d50-dee1-47f1-a430-e1667052611a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ce11854-16a6-4db2-ab3d-a63c6b32e1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e654759-78c2-4fb9-a155-906a2cb871e2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd342a5-21ef-414f-a0f3-a93d7fa9a096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a60224a-f2ba-474f-aee1-c9ad263bcec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b171a18b-03c3-48c4-bf7f-eb9a5b707d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "867d1d65-00c6-48e2-9213-2cc3c41d5bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af62f49-757e-4c10-9224-e424bddbf071",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1288e4-13a4-4810-9ec0-651a80e4629c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c7c29b97-866b-4632-8e6a-d65413a0efb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ae6ccf-73b3-4bcf-b4a2-230a01755d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "684d14a9-3cfc-4a41-8f38-112de9911217"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "df0e9e0b-4e2d-467c-b27a-74bee378331a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a113d09-14be-42f6-a25e-0faffd62779f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e099cec4-ef38-40fc-ad7a-cb03675c4cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "861a5937-acb3-4413-98a6-2df4c6e96dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0787dd-b687-486a-b90a-f3cb947e07a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5777f53d-5fb7-49b0-b06f-ebf660c12db4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "313f837f-756b-42a4-826d-4cb893c86eb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc6a6e0e-83c2-46bf-a724-91dadf4ebe56"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f072fc83-74c9-4658-ab88-d640dc4f80ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f18632d-23d4-4152-8fba-c1434d3f3e0e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "873cc7a4-8577-4e22-8a6e-c2d3f3b0cbe9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "012717af-0536-4065-95f1-b5fec325b395"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aae1a24e-8f6f-49e9-9d5a-af50cd335238",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9a0156b9-d52c-4045-b709-444a62b8b2dd"
                }
              }
            ]
          },
          {
            "id": "0401efe6-72aa-46dd-91ee-b5f655ae427d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d50d91b4-e1e6-4511-b334-3c54a638dd0e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7532d49-6284-41d1-8319-0146d29dd69f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30e26cdb-f183-486a-9d3c-86fc77b7dd42"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ddd0f900-0d38-452b-977f-947358e75aff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c5597b50-aabe-49fe-8e79-8a5ad45ad650"
                    }
                  }
                ]
              },
              {
                "id": "d7def810-a13e-4dc3-a759-99fb644dd3c1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d6c4b78-2f94-47e3-82bd-d84a727c06e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f47fbf76-85ca-4801-a993-501fd6288743"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "054ee617-1220-4319-90fb-bb917d14c527",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "eb5fa61a-a43b-4c35-a318-b48b647644d7"
                    }
                  }
                ]
              },
              {
                "id": "4a8831ff-29f8-4c81-b2c5-339c4723889b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bf414c0-4e08-4136-a737-0e455d4f04f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cbc266aa-940e-4cb3-97cb-95180903a4e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe2a31db-df31-48e5-91f5-2239c40d5535",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "04d92115-81b4-40d3-82f4-88fbdf6298d6"
                    }
                  }
                ]
              },
              {
                "id": "fc8b9ef1-fd53-415f-b7bc-fe204ecd0864",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28eb81b3-476a-4eca-ab06-c2b489314de1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "833d0823-7efc-44df-810d-9cf65bb81187"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5556b31c-6326-4536-9cec-1aa0a5f4e092",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0662698e-00b1-4422-8ea7-6ba1449263c5"
                    }
                  }
                ]
              },
              {
                "id": "0faacfbd-2bb7-4b5b-bb3f-28fd0c3c8721",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3be33f22-5c8e-4fd5-84a8-fc4e1923d48f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "95781cd9-6742-45ec-b14a-9f1e38cf6b77"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51b0e336-9a67-452e-a683-4ea83fba781a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0a737fb1-f051-4c73-b291-d7b36693c0f9"
                    }
                  }
                ]
              },
              {
                "id": "fb024c03-212e-4d74-b194-10c7e3fdcdaa",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "546e03ba-b4c4-43c8-914f-9b5b9ba0639e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d69c0e8b-6f86-4830-b3e8-4353f967acea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f566c3de-4426-4e75-b151-0bad62314248",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "27e06121-534e-49d4-bdde-06a11fd410c4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eb1a41f2-9ecf-479f-b6e3-40d5174fb8f1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "30df14d6-38fd-4cd8-9dc3-8de1444dcdfb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "205a736f-37b7-4393-a797-bb212fb144f5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4f54b0cc-a5fa-40a4-b19b-227369444f84"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60815495-6e90-4fbb-83cd-ee7a3120f5b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "bbfa989f-2546-4134-9035-778070a90066"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d088223d-d891-486d-ad13-dc10e6d52af6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa696ce9-af37-4c99-abb3-2f3254a68552"
            }
          }
        ]
      },
      {
        "id": "419b6e9e-dc20-4c64-bc35-ca8b81b7586b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f290790a-9980-43c1-9f40-d41dadf4030d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1c1c45b-2f83-4104-82ff-62eadde4c60b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "294af420-a5b4-40f9-8050-89f973bd5394",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10771ad-5cbd-4c04-8514-6123bcca968c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f5a9988-cbcd-45fe-9871-26d32d781eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f11f32-1048-43f7-801e-91696007ad5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d88bfa3-610a-4dc5-aa4a-f1715348de2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ddb892-6056-4157-a409-c05227ae69a8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad34f48-e603-49fc-9322-576c2c2b2d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c69f4065-e228-45af-83d0-3c449f38325d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4619fa58-6f1b-4fa7-8aba-743e6d7060da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3eb467c8-db4b-4335-8a0a-bf72f27597e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e67b5ec-7ab6-48d0-9c86-c8644088b462",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f6e7a4-20ef-43a9-bba9-cbcf6a57411d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c9b009-157a-4acb-91ac-74a0cc6b2a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52c307c-fbca-4270-9f89-5d6f81f52dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "807147c6-6f81-4dde-8cd0-1e9497b6b8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1388dac0-7a94-4a5b-aa10-302a2c11210b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6269204d-fb00-4f08-8290-833fe8436d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "365e4f5e-0437-4cbc-8deb-7cdc1f788b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c275be8-95c8-4cda-9f99-5392af819530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "109d97df-65dd-4d8e-9000-ac64354b29a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d72763-ca66-476e-b4bd-5c0ffdf8c10d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa010c9-b4e2-467e-9806-05bb5aa0badf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a76ca10-c036-475d-93d7-c5a5c70b2f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d82a814-aed6-4f4e-b980-be8ef8a8391c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35d02bfa-8aa3-4265-a02d-42a7b9317f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d53f7da-4d0a-4098-a589-1d9812cc7b45",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357689ce-b040-44d4-a0d6-8d578d864877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "311496ea-2eac-4e2f-97ea-7a7b0544d317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa2e477-3cf1-49aa-9ac1-ef533598b41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5737cb8f-0310-49b2-975c-d7cd67efe235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9087786d-b395-4849-83d9-037cb32dca4c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d3e04c-f6d2-49c3-aed1-d4cd423a9918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c23dde-59af-45cc-bab2-990f29012681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f7b4aa-a48f-4731-9dd8-e8605f2d9793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "48d45858-c076-4e54-a89a-ef9d2c320b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4c6aef-8063-4939-bd34-abf3108b19d9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7bd8960-d1db-404a-919f-9768a08801e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6473d19-6eb0-4272-9419-cd8f0aa6e0bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c18b04-9703-432a-9167-c242cb06cc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d611b0a7-3d3c-4f98-bc5b-5fd817779912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6ac27c-5cb7-47a0-95a4-a50363567ba4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b1beab-8814-4c04-adb0-ac668f9898c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e03c7972-f5d4-4ece-804c-9664ee614b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45239596-4978-4a97-ac3b-08e1174034b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e281553-b358-41f7-bf96-42d387854b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e378858-0c1d-423c-8715-f3ee42eebd65",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ddfbcb-4f0d-4a5f-89fc-ace0b8a95123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b84ccb43-57f3-4764-8498-94dbb5de87ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d02aa2-507f-40d9-957e-378c87718ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e6f9ec8-50e3-4dd5-bbac-a0901d62a642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ff3029-0fdb-4b97-a6ce-d8e733c09e71",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48969716-8ddf-46f3-9a8f-d841b7b7cb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e6534f-bff0-418a-8d20-bbe241e671d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493a148b-7ea5-4cdb-833c-35ce7b142478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9f8a2cf6-de3b-4399-a568-64f32507efa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb52d27-aa7f-4ed5-85c0-7feca5d2bf10",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3550aad9-47ea-4e2c-a0e2-1e9ca2232f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75bc2858-03b2-47f0-b6a7-b4e98a08b7e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b2b727-0c0a-4263-9b67-5456befd98df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02fe8521-39a0-403b-acfd-760dfd9f9a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1567a51-9a69-423c-950e-d70c6c120efb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0951646-30e6-43e5-ae16-7e76522a560d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55007477-c345-416a-b2a2-df04d217d458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00ab324-e3cd-4ca8-9e20-878495dd6bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0a3407d-f2de-4a3c-90c7-a18b5aa2441f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97161b97-8608-43e0-9fb2-15e0c6f162f5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0a91cf-0561-4139-95c4-3ae516ea042b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7c5d64-d407-44f6-be4e-7fc1b436979e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377f4fa0-8da6-49c4-9224-6e8d0e12e24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "723b99b9-1dfc-4f12-bba5-7c997231d886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742fdda4-e1d3-46b3-bbec-f3ec099e8e7c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abd1634-cfc9-44ae-b155-e17dc619a048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b3ebbf2-d803-4d3b-8efb-6c43ddf80024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a405d42-fbf6-478d-9169-dbc6dce44d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "555cc1a9-16f2-46be-9e15-5928b905275a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d3d7e0-f684-4440-b410-ee69902dcffb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985b9b77-a799-4bb1-8e24-4c4476646e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90bb7184-db66-4808-84d2-7af859a8677c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a460d89c-0b1e-400e-98bb-1d2f6f5c024e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "df8cbd7e-f203-42ec-82b9-f54c4e053c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1223b17b-7f09-4016-a163-1f81546a407d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a06c2cb-8ac7-4ac5-932a-58b36aa88695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf125c2-f349-4aab-a4d3-06b19cbea2ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661381f9-54c2-4864-80e2-98595ffbc38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7eff8c3e-b499-4e7a-83c0-f791c1e4ac4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9757b58d-eeb9-47ad-8858-f6ce0f065090",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef45e8c-3820-44e7-8d59-49a81b1d2027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0744d6-ed5d-4209-a635-c7428898eba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062c47cc-89c8-445c-a2d5-236ab732e5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "407b731e-e838-423f-8f1e-853b570bd107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cadf0711-be53-4f41-80a4-2c5daa06d9d7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33fc4fa-0f91-4a60-8162-f70bef724d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "948358fc-a3d8-4737-9ca0-b245ded39d93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931a4ede-abfc-44f9-9be2-38f1e6cd929a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbdcab9c-5cd2-486d-8d86-f853ba4b6402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcdeef50-6c93-40e9-ad5e-1bf2f7fd8af6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20171d9f-9528-470c-a6ec-9d1fbc9d58b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "219853ea-db19-43ce-9c2f-63646ca7388e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d94016b-456c-47c3-b758-c14602907ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b39cf4e-a93a-4d38-bd08-90af5f0bdd99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0159f2da-1968-4b53-bb8f-aec71c6780f1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44730058-ee5a-472a-bd67-06a18b9972fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ffe6b5-ef4b-4de2-adc2-6b3f4b190836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4fc3ba-8330-4f11-ad10-a9f9f07a922e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba3817ba-4c8f-46f4-a9ce-0feb5e933119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f433b589-c904-4bc3-ae9f-3a15c5b95d29",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66ccc0d-284a-4e27-8d3a-0a3cdc86504b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c6f1a9f-889b-484e-bccc-e0c9229fcd46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b124bc1c-1485-4544-bce8-0a7f6da4a817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a27a5766-340e-4a8a-b08c-2fb98aecdbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0959d5c-6d95-4d8a-8b55-44dfe81f01f1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf996467-243e-4d20-a72d-1551a5426001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2186bde7-5fb5-43a5-bbf5-78171276eff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c717ad-4041-47fc-880e-ca1dec6ba078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4a0fbce-8391-4ee5-a803-dcd616a33d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54bccb7f-3247-44f5-bc2d-d31aabc2782d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df98b4d-e857-423a-a08b-57e2ae489e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7433f928-49a1-4622-bafe-8a15bcbe6e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b159a9-dc39-4d2f-b196-617cdc6a3d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce7673f7-e473-430a-acef-f4cf27b260ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e586564-ea58-46ea-9528-b53f9f2fdcbf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1a0a4f-e444-4efd-bb61-5ee4df39f4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db8db46-0445-496f-9c57-6d721d83afec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7989bfc-ee90-49e7-9993-437aee683757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "feacc3ed-0b81-4606-9587-a2f00845eb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d74b4c-2cb4-4dc0-900a-0fd07ad634ea",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29f47af-d9db-4ffe-8aa4-7438b37015b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed449a1d-7e68-4a38-94f9-8805f45a7dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0ddedf-98cf-4c56-8a25-49fbffaacae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0cc8993-9ab8-4aa1-a573-1f681132d3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607b992f-9074-428f-9092-8371c05dc770",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb681e85-23e0-4ced-8f1e-e108ac5f131f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "538e3bf7-5e85-43d9-bc91-5edff3cad92f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d373540b-e03b-417d-8043-3ca6eac086d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b769213-2fc1-40ff-ad91-ae994b018b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e301a8f-4d6b-4f8b-9370-bfda0b52b52b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b650034-3d60-47ea-9e6d-8ee4a8f7032f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b00cfe9-d5c4-4953-ad79-9f6f25a909ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48fba3d-903e-4e43-b210-f6b49626262e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1164d075-7e20-4081-953e-08a2d0919014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48133cf0-deba-46d3-926c-72f5b6ac9260",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20bddf7-202c-4e02-a4b6-864cda91bb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fe70213-a825-4c5e-880b-964b10e0fec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cb953d-71b2-4483-8c57-d396ba04990c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f288fe-a2f7-4b62-8a64-d27d04b6a8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1335254b-2e93-4f7e-83f3-f37d2d97dcf7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83c88b7-a4d7-4320-aee8-fd85aa7de1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb90df5c-2d10-45b1-a727-f23a7443cb84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88dd729a-ca57-44b8-b313-51ca0c53a2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f6e054c-cf7b-4ce0-83d0-6e1ea5f347cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72088ec-a1fe-4e09-90ac-32cd2dd45cce",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3621b01d-90e3-4a68-b1f6-eaeeddfa99cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28368c1d-f193-426f-b973-1cf0bd6a72ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be0cf16-8839-427a-88c3-9a391aacf3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c0fc443-77f0-4083-9d2d-5ec9817ef35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdce8b1f-768f-4276-b88e-293aaf02861e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3dcb4f-5d14-403b-91b7-2a2ab848ebf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45340baf-556f-4387-b9d8-845b4a6669e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700fb550-04eb-423e-8964-643cdca49788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca1ef5f8-a8f1-4392-9440-19cd97e917f2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9842c03c-b819-4cac-b900-2fb6f750e06c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db96b162-4dff-478a-86fd-f88ccb59f7cf",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3425f13a-2a71-4614-ad00-22575396f65a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f820dc39-a2a6-4b7a-81d1-a9ff650749c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "066d63b9-feff-482d-af0f-361bd2c78bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "267184ee-8944-4e0e-8736-da4c1323d993"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "492e9f1c-7214-465d-bdcb-31594cfe4a74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "734b473d-8e2c-4496-ab87-cc100054c774"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8345103-e9bf-4034-b691-a6b1e775c33c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06230fe8-8221-4478-9188-5e13d6941ffc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe842afb-5dc5-4b5a-9553-27be20d739e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fac3c22c-cbd0-4cbe-bba4-db6797f8b08f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9406455a-a69e-4551-8605-3a48816840b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "324220df-6130-4a8b-abfd-8f881d8320cb"
            }
          }
        ]
      },
      {
        "id": "4d741298-d918-4151-9dba-08643c96d035",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "3f507348-55f0-4890-8d8d-f4ced618ab6c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf2389b9-ca01-47bf-b6f8-52fe4eb128f9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "370c022b-812f-456b-b58f-c2cdde1f2463",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fd31ae-4c50-4c92-ba43-6d930abf89fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc0e2aa-6d9b-489c-adb8-b5cb03a9c9ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78c4d3f-e158-49ab-8555-0911092ffc98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4102cb-dcc8-4e81-a0c6-cd77eaf4a09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f61a3e-5a1c-4f97-9e0c-6d57c958ffd8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e736c6e8-77f6-4f23-af3b-378a4fe34424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdf69d8a-c779-45d2-a485-9f3cab5d2505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94891006-b13b-42b7-88af-07bea35a101d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b05d31b9-cec0-4278-9b4e-f00007b1b01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24fa44b-17c8-4e68-87ba-9696a07c8932",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6a3c81-da84-4fb6-9de2-6c54563106dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2192d90-0b86-4277-9b41-45ea6a494c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eafbeebc-a270-4d66-9d6c-50b10e90c225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b702cdd-a9ea-4625-964f-c4d1ae2e0e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6189bb28-f992-42af-821a-a6dbe7ac5b5c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31ccb85-f495-4dfd-b309-e6a5412296cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9676b505-ed6d-4528-9a80-05c57c46ace5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d3fa4f-8590-466d-bc3c-f68d33750199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccaf1928-544d-4ceb-baf5-d9deb0e2fd08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc26f5d8-35c5-4aa9-9c1f-13f9d5577442",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40d035c-9f39-4fb7-b1ea-69b4e1c0380a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7190b7-c4e1-4d70-ada3-7b094dde7078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e06f50-d516-4b0a-b15a-d07ea2cb21aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "776fceaf-428a-415b-9e88-4f831980f250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50a28ff-af94-4579-a488-0ac3c2e55f2d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae1cbda-d051-4d29-b38d-7d6392006b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45a6b9ea-00db-4689-8323-df0f2a5fdaaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fd3640-c423-442b-a373-a6e13891a94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc6e80a9-bea7-42ac-be0d-daeb6d5e3bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70cab1d8-b3a6-4b7b-8c83-1bd5381bc707",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2ada9a-63fd-45d3-9d6c-ce86c4b4e35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca14607-0c9b-48a3-a1fc-1469ee7b68e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0021c51-0fd6-4e8b-9e6d-50819ff85fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b091094-aaef-4994-bd7c-c06206a6abd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e928276-a6d0-4f86-a6be-f6eef9d10895",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124dc209-5d13-46b4-a5a1-10d6fb35703b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd0cacf-7022-461a-bac0-8da75278a61a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754513f8-d414-4c88-928b-c953338cc1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3786b08-95ac-477b-a3e7-2642cfcf1409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46ea91a-52f4-48ee-8a37-69f804a2c3b0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23828cd5-1824-4984-8b90-eb8a09988040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "228ef34d-d9ce-417c-bbf7-15b6ae298dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e04c078-41b6-4941-9c31-976f56058abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14bda182-2ce4-4021-b692-1a4499be7238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90752e42-3f7c-42fa-aa26-ac815768dd63",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5440fc3-eb45-4f36-89e2-5e28c566bf39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b5eea5-2ebe-4be6-824e-7f1ab25bbe5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f20ae0-7fee-429b-aa21-508d8ed72ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa6b88fb-ad00-492c-8384-e3454d4ddf2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273ece09-dbea-44cb-95ae-2e50f025553a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e180eb73-383f-4ee9-b8cc-571550068195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1adc13e-6d6b-413d-a59d-26b10a5d5a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40b0082-94a3-4c32-ba88-d596d7b462aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b0757b0f-361f-42c1-a5bf-8d7e0999d393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917f202d-67ee-4477-b8ed-3768d37a1a22",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "078a8d93-4e1c-4b6e-8059-26e610ea0196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de3346bd-e411-4369-ae02-d2e84a56a98f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3a311e-9bec-4f3b-bfc7-0bb0cde8d90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76f81d87-e522-41a0-8dba-154aef4981fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260b35c7-4a6f-4474-a8b6-76a1cc8c9977",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94761005-d18a-47ef-b593-b531c4b5e32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba86c86b-e6ba-471e-b974-69e78cac4427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b052ad9-78d0-453a-bf5e-5cf5b928e35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6355e28-e1d9-43f4-981f-eb79d75276fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deba07d3-0250-49a3-8c0d-7ffd8f746377",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85be064f-a4a3-408f-bd2a-ca3eae9615fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc61a83-ac4d-44ca-bc4a-7f0ed1546218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75109c6b-90f1-473f-9827-0b60ec16630e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a92dba2-5cc2-47c2-8fba-0adb81965006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00bf1a1d-bf40-4c8c-afa1-6ab69f075306",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32ece50-12f0-4bd7-86df-12faf9b7f5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0572605b-41bd-455c-8b17-889f17170f59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf8305c-f659-45f0-9ba3-5c3638fefb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "278b04e5-4ed4-4931-8ba3-e6b7f4fc0ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f9cbc8-f5d9-4c14-86b9-1578b5362088",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3f2f71-614e-49c8-8104-105208bda74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54610b6f-d52c-486a-8253-bfdd8e0d92dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7a4a1f-91d0-409d-8f5c-aed0671343ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d565d777-39f6-4c73-875d-1e94d61b1c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b0860a-1d3d-4710-94fa-0a7c97d17016",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29980269-b64b-4c68-b9a7-35353059fb2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bfc3c65-5518-4dc1-81ad-7886f46b9d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74e75dc-f79b-43b3-afa1-43e61bf65859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b26502-b08d-45b4-a2ab-b25c6bbef66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900ebc1c-ab99-4716-841f-e4a73cfb5549",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7d75ed-e3aa-4518-ab42-2c43583998b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e869ab78-d7d2-47f0-b6f9-506e6bcec318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a975683e-7451-480f-b3a2-c71905826d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea4d680-8372-40f7-a44e-765df071fb1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a345e4da-2c10-45d9-a16e-bd06f92a347e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f67395-ab18-4891-91cd-0c15b7fd7cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ecebaf5-682b-46e0-b2d0-4b2210537327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7925710-f010-4984-a209-dfbc1f7db5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba07bfec-fd8c-4d77-89c4-0870db664359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa597213-cee7-4604-a719-7a9058a3c7c6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2567b1f3-9598-4c04-83dc-7b8595244b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e8a3d21-652d-4859-b353-849b0b6e7e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770ce5e9-0abe-4b66-912c-bb46f10fb1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd8ccc16-2e36-45e7-a7df-345af2eacea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ea1eb6-6ee3-4909-9284-7f2de47379ee",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f394772f-7fd0-4771-86fb-608a74beb47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "119bfed6-3b44-477a-be70-485e859c53c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549a5eb5-2377-467e-b74f-ca986293a8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b05fa05c-aad6-49e5-917e-7833858addda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e355767-7d72-462d-8db1-1649e66e327d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb52153-bd8d-4afd-adea-ebede31f5aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9873163c-66ff-4580-b1f3-4b810cb0a393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4c10c3-16c5-4f06-b812-8c3afa64f0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea629c74-f1a2-483f-8b08-a1d56f9d7a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a275a9-b9c9-4c97-967e-339ef39fe95b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e6e74f-53ac-4460-9873-eab8a2406a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40446e9d-7e6f-4072-aee5-3f6d158490ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbcff975-759e-4cf8-8bad-e97992f46cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "201f6438-d2e2-46d2-a953-f1660e9e8999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da48e92-920c-4802-ac16-1d7053210ea8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee2eef1-bb24-4423-8a20-d6b15260a695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9253b663-7cb1-47dc-877c-d78755ef57bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2caa2ac3-21b1-493e-8bce-2c77b7255165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d70ec706-2819-4c27-bf73-df56c41e4ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cfc447-16a9-4176-b704-6f1f604bdfdd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4793ff-f84a-4025-ae07-ad363070e7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "701f17bc-28bc-4228-b756-ec5589c792cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f89dfe-8c2f-4ddf-89f4-1a7d882a851f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "178ea884-0357-4955-b8e7-ac884ea9f3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1533b225-7570-4e09-b86e-c092381d0267",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1418608-264f-46f1-b023-81c09b5f2582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edcda7b5-a638-43c2-b194-a4a652d8da24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97441b0a-6d60-4d75-957b-39b7449e15c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fca55f35-dec0-4a8c-ba7f-eef4a1a464d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af4c09d-d032-40f1-9670-1a2e7b529398",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0aa884-94d8-4c8c-931a-f82f0b382bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e791d8-42b9-49e6-9543-10cba3cfa3f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6607a13e-1abd-4a28-ae13-87f200ee4201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "793f0700-36ea-46f8-87c2-cdbca03508e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af981084-2cc2-4e3d-a9db-f855e90bb9c3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3da390e-615b-4271-9da6-25e9aa9db5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "643da56f-c3c0-47ad-b83c-972ca1b493ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855afe78-69e4-4f83-a6fd-019ea3395a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "160c9c95-48c5-4182-b465-8cfc045599d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f437852-0d00-48eb-8a15-04b2d187c47a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad4e84f-bda3-47d9-8129-c7ddea893e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46cead10-2b26-4691-b22d-cf6e106b5e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c74664-21cf-4c62-9d81-0c18012309ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f61991a-87d5-4d28-8c75-a4c7d28283ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f4eb3a-51e5-4c97-bbb6-96164953f2a3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2687e5-cf95-47c6-8c37-7ce0a75bb8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33da11f2-6bfd-439d-aa99-b5deb7cbe8c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246ad15d-24fe-4df5-8177-ad76c9ef1a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7828d3b-9c6d-4452-859b-b8819d940c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70322584-efc3-4c8a-98a7-a2ab24bb7a9a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2207ad5c-0a24-45ff-903a-e41c4b6d6418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f348d02-89db-4d5c-bda8-8ec0d2ad2a4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9780b5-eaf4-4f15-a84e-f3c2b292b22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10c5f1e8-b11a-4d86-9ff5-e58973de3eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d955498d-2925-4743-9bf6-c248c74aa234",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbc8ff0-7df0-4126-a84f-d963469de5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "381f3077-d629-4588-bb40-2f609ba79ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423d602f-b571-46c1-919c-443419e2d3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78291630-dbcb-44df-b60a-54e9783ba15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c44940-62e1-44a9-b901-3bc0685d7d04",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce21bf9-7bee-4c27-9a8b-07203c6eef80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7237c3-3c76-4e7c-944a-892ed1572f59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555e6955-4e34-4cff-8604-ee1863f621d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "834ece9c-de0c-4fa4-bc5e-072a26789708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f82e6b4-372f-41f6-bb1a-e177fe2ea57d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1731ebc2-6c32-421f-84c8-43463c9e6d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a403d7b6-bd3e-4eef-9fef-5b4ca5d7b33a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a8103c-283d-4de6-b895-ecff227c1219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2737790c-5cc5-4b0e-8e38-de8a08cf37ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3af368-44c7-4d0e-9594-afdaec730c83",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e395d4-3415-4cf3-889a-41c9cf0f67c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1de3d9-9d00-4152-855a-a1169cdf31c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1327b0ba-cf6b-4a08-8d66-f1f53251df43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59bef965-eede-49e9-8fdc-db84579b53c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7799cc76-2afd-4c8b-b1e6-a91ef3ad0714",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338ff0e9-1335-4296-ba14-bd57f94ae44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aabe93a-2991-47e0-85c8-d33bf5a2a70f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8e589f-6651-45d8-ae0a-0e603ee80f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed0960c-b6f6-49dc-8b66-e287fa278387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79016eba-039d-4950-8d3c-66b650c993b2",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173fb573-9016-4258-92d9-dc5ec28f4b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1234eceb-b0e9-47d3-ac36-087a8ec54369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6d7600-24c5-4ac7-953e-263bf9df16cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dde95846-5d23-4fb4-b695-e9e7f55817cb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "27f96893-b80c-41dc-a5ef-df642faaa307",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "551bff4d-dc87-4717-a7ed-ae4136199ff7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb3b94c-b1f8-4e88-853c-fdd6408f4d95",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "59e8f493-2e10-4e1f-becb-719322ca5f73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b201f058-1a61-4a31-8987-d7d2bdc74813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c7f1c72-14bb-424d-b2c8-79a1e8d57f75"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e727daf7-c2db-4cc1-bf6e-f1baeaae6e26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc930331-18b1-4c4f-a55f-a913c8ec885a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "09cacb2b-2193-4f94-90d0-76030ddfc2a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a2978e1-85c8-4289-88bf-ed09ded08829"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6dbaa4f-95bd-4263-813c-ca3c51ebdf39",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "965c56f0-0399-45e7-b453-51aac86cb12f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0dc588b7-e0db-409e-bdd2-791a51a0c9df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b00627e-7c88-421a-9913-c759821d32dd"
            }
          }
        ]
      },
      {
        "id": "2486e654-1eb5-4d07-9544-9f46f48bfd12",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "aad39e3b-3632-4510-8cf0-cb5e8dfced17",
            "name": "Negative Testing",
            "item": [
              {
                "id": "560b8e2a-ce9e-4a82-abe2-13bb509bba28",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a1900c55-0711-456f-a49b-4ca21f0862ef",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae871e1e-b6ca-4911-b57f-4b67493b5403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "248cf1a3-6e0e-4a11-b6de-afd8fb02837d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc27768a-d4eb-49e9-81e4-edf6ce381f2a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c52c6a1-ca36-46fc-98be-1d5add40b194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad49499-fa91-4c62-bbe4-0572c1d9ba75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e805c858-d681-4562-b5fd-6c24b63fba55",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9589d1a7-dd6a-4d12-b1de-bec00c1b0f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca7cf89c-cb67-4bf7-8bc2-e917f7015e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150535f1-d642-4d80-ab06-973f5a985a56",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "216314a5-d81c-4e19-b00d-f04d5e7ed3f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48787fc4-a983-416d-a02b-5726b2436e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9b1ec9-2c9d-4e7c-b264-6f09d660227d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6741e03c-1958-4b8b-ae70-3938c6832891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bca4490-b7af-4d56-a353-64cf62670914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f861de4f-0179-4aaf-b58c-b42353a03784",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b948d6c-b506-43a3-900a-7961bd54eb21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09273d55-1421-482d-b2f1-22ac2dff5ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918dc360-048b-4bfb-976c-1f54258ee35c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077fc21c-58cd-4c1f-a6d5-85de46ebbeb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48851910-48ff-44c0-8c43-9c8854ae6440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3dd2369-ddbd-4b4c-b084-b10bcd09198c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ab04e6-a05e-42a7-87f0-7fd0bc2b76ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd01aa1c-999a-4a54-9ff7-310dc58ebb49",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef9f8b7-5267-48a4-adc3-83f7044619e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85e5fba8-fab0-4f74-9fb1-a384da7d9c52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba817ad5-431f-449d-914f-3adc48ef938a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7193edc6-4667-4f45-ac7f-016bdd6d7422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9852d487-e8ea-4b6c-8291-cafbc19648bc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38fbdcb9-76d6-4c1d-8aeb-93fb1a9d4073",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6732fa67-9bad-441b-a804-f145119fa037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc987af-153d-4646-8e7a-e480e20d57dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e58f69-ea98-4cdb-ab32-27d057410a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032ddaf4-1ddb-4949-b730-122604ce17ce",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa5d578-66ea-418f-af1c-dcb2969e6ee0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cca5060-2397-45b2-b7da-16183ecb8305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab9dd8d-c1cd-4fdb-b659-2fee2a8721bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "546e8e4f-b274-409d-b0bd-c078ce685c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3e3d68-c446-4495-b124-9ea8fc9a90d1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04181d65-f51b-47ab-853f-ec1ee4265456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "145b9f40-2578-482c-b878-c167107a0c81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da0399c-be69-40e7-9103-2a024f971fd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86027444-6668-401e-8738-936491b36d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5b56e1-c9d3-4c96-8d1a-61c38db3ed37",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a917b6c3-48fd-4913-bae1-3f192bed76ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c7ff087-2054-43de-bcfb-e0d68a0d8d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4f74af-3fda-4ce8-aced-2e08a37056cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05689f41-7095-4040-8182-f34e22f6a4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11119d08-17cb-47db-860d-ade66c97502a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300fc5e5-c975-4032-8fd9-ddaa0afeec6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "996a7602-6c90-4d19-aeb5-8f5bf29dae4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4999d9fc-20cb-4876-8217-8782c01084be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce7d468a-087a-4388-af55-714b1f8bbf4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6f0e84-de97-4ad1-9d30-e669db0fe578",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1761ced2-bd9c-4c7e-bfe0-593543529e46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f754bbd-6a6b-4d05-8415-b908591b3908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5787262d-d1c3-4dcc-95f2-16e82abcc54e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbeb94ff-fd55-4ed9-825a-a23bd8ce4dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806dfc09-1da4-4093-b9a0-58a69ef0be6d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64d6280-8830-49e7-b6c6-11fd870c8bd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c7627ed-de26-4906-9adc-4f02eb87ecb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96283b0-6f2c-4ae0-a635-688efe902154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd54c80-a82d-4f6b-af18-4c2818507598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6da587-b719-4cda-8857-102ea5de5bd2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0108cf-4002-4494-9f12-606de41debec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09f821ec-4e60-4801-960c-44e4955231ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5336c23-b126-4fb3-b693-117782de31af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0919eeae-ea61-43b1-aac3-fc20d58d20b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae952d9-882e-4877-abf9-9f1118ca1cfe",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad17e9a7-08bf-4e39-aa2a-c0ff77e7906b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41129f68-7677-400a-9695-23319f47d5d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef03939-b173-4f99-8893-576565c8cc4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f119cc-9a48-452f-9221-667765b70d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4a3e11-5041-44af-88fb-a7573d785952",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e02bc7-80b0-4020-9906-5d263cf257a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4696952-791b-4a3b-aec6-9d4c788a8dc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0891b38-85cc-43d2-9c56-8db66dbbc2d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d2fe3fe-1bd0-4630-bc1d-9669566e016e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6dbd5c-c20b-4504-a491-3834177fad1e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a6684f-8c05-40a6-a823-7d0e86a5d7a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ed7105-a3a3-4240-9786-b069a8851c64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf69d224-455a-4aa5-9218-b61720a16d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc31ed5d-2ef1-4c6b-b075-9f285299213a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a3a9a1-e331-41ba-9ca8-0e2607eb7cb1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c016b7-d83d-4d8d-95c7-b41762e82411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a796fb6d-d292-4ab1-8ec2-e41cbab02f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "981b69f9-bd72-4614-bc84-259b734f0b38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "053802b9-6ddd-4def-b41e-013ea851e35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212ed51e-f32e-4069-868b-5ce88adf7f69",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07adf29-f25d-4c03-89a2-eaae88e88777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7667ffbe-ab05-4c37-8a21-ef6102a2cd5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114f1a96-7542-4b5d-8ca9-a15de9a6ec95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da7f240-7cc5-443b-96a4-1f3c395538aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b94267-f2a4-45d1-8fd7-0391bcf5adcc",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081edfbe-db98-4733-9897-e4b107d2134d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85e03e78-13ee-4094-8404-6f37030bf1c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e372d29-6428-4149-a849-28d222ac0971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df6c9c02-d890-4151-b179-d2e68787a8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ecf9f1-ddbb-43a3-a4bf-38458e32e5aa",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1044d4c5-d7cc-4531-8319-32284b70a4f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef1cf84-5ff6-450a-8a5f-78b4df1f0f07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ba3647-90ea-4704-ad38-5bf2411ad3e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "893bf3c8-27ad-4d9d-9aba-5d10d21c12b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbfb79c-37d9-41f7-98c1-49592fbf8384",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1301fe7c-cd17-4862-a6c3-b312787b91c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "240b7547-d1ca-4515-a680-a13d5bb7b60b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b612a30b-a57b-4ccc-96b6-2adb7080b303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f3afcf-afc5-4e19-83d7-893ba4e359d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb93a9fe-65d3-4f97-b444-c389867da34b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76335fb-46a9-41ca-94b2-30515f4ad3b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "862f92dc-7017-4b54-b609-8ddaeec02437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfb892b-de8e-4cde-8f43-6b772e291ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9398c20-ddc5-4eeb-8807-337de47f5d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afbe7676-2204-4dac-af2b-22ded8d99aaf",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf703981-adcd-4c63-8838-377a6cf2a4ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbef5f3f-b89e-4a62-b21d-05f8956f2571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "558e6b85-0374-4838-8aed-e264f03c333a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5af96d6-47b7-47a1-9e0b-3de7bbe9eff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dadef5d-5e87-417e-81d9-2a1c950a85e1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb478745-3e7c-4f05-9a28-3a6948a63cc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52177ef0-b74f-4e92-b267-992333b90e63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a888822d-bc5b-4b23-a26c-d1263c6ea290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a94674-95c5-427e-88ec-e0b1dfbe1e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f2cf5f-a17c-4eeb-baee-a03e87784550",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c2f8f0-d987-4b26-b00c-b9851c792af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b46a2d8-d36b-4fdc-8555-c69ddd8820e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b4e62f-0b27-41d3-93ce-93b0ca0bd590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b6de33-b8fe-42fb-ae5a-04c90dda9357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793439d3-985f-4469-b6ee-fe3e08c7db11",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3426393-131f-46b0-a0b4-bef3ee691035",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf011696-2ea2-4247-bd8a-e79f8fd28e42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5645d389-e9cb-45bf-9482-d70184721649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc50c75-6b2c-488b-925c-281f6ed539a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f69875-b112-47f8-9306-84661147b722",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa83a3a-7353-4694-ab67-e574ca796a4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9ac1e41-fbc2-4903-a969-1ff4b819fae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc9b522-bb64-44f2-8ba2-3d934a6b0f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d90b5a66-67d1-4383-b9d5-0ada108b06fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad87d28d-9a06-498c-b3cb-899415a77e02",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780049d6-5dd5-4a42-804f-3f0348595baf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a6da673-9066-4d4a-bdfc-fcb6f73fc5d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a81b6e0-71b6-4ce8-b203-9b13db918296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c9ec6b2-c4c4-4705-9c07-b7804dbeba1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c91562b-f180-4b41-ba7c-1628c93d788d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62cb62cb-4b51-4162-804d-2ea4b74a1397",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "591ad87e-8d43-4fbb-8713-9c3b0855ba58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "039e0d22-d8fc-455c-a746-9a6184ca6abc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "226ea2e5-0d13-4255-889c-2c1c6d45d747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d825d6-2a86-4d3d-b8d7-8dac017b71e0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b27553-e1ec-4549-87fa-84694e97af48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "254c3361-dd20-4ac2-81c6-b40d1e0adac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d079b8df-eeca-47c5-9659-a4883b2db954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b65e67-b386-4c4f-b20f-1743f029b8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457787e9-8e60-4b60-b76a-1a8b8f7ca1e9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901be23c-cbbe-496e-9b60-7f10483f47cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e91a92f1-09fc-4f47-8e81-6ab3b3453848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca3fc79-1320-4724-8a0b-d46380625784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75922aca-dbb0-4ca1-8708-686d193e6642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83446a78-ac25-48a6-a153-7e7c609a397a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f33a65-751c-4117-810c-16ae084cde02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e5bc07-c767-49f6-bcfe-a96e8ead957e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f5e77f-91f2-4266-b34e-0b1dfc455e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a210533-b20a-4db0-8e22-ef943ee84f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82cf3bf-6b97-4f5d-8254-e110feb0a508",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d74841-533a-43ee-921b-c5092e7198da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f5eefb-8884-41eb-9121-e62c05a7c25d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f276d423-a14d-4e96-a420-33889bc87767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae3a1a9c-9686-4a54-833f-5a72466ee2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6cf892c-7e1a-4298-9e83-da46d2a91073",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118a14be-e0ad-4df5-bc6a-6529f4eae023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec2dcd9-d96f-49e0-b05c-75d47cafae01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d20a25d-e4df-4d42-965a-82e98b3aa228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79fbc1c-fc2b-432c-866c-e145bfcef860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c771d4-2ed4-47bd-8b15-ccb576858d1b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f5cd92-8eab-43a8-b597-64466eb11db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae23ea06-9fa8-49ef-af87-b93c48d55539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2668bb8-12ca-4f79-a270-33690d3b58ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42a1956c-d521-4382-a87f-7d8c9a6f16c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1409d81e-f702-46db-a6c6-d95536c57d40",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba7e9b2-5489-4038-b6ab-c2049af5379c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e3ffcf-28e2-4057-ad5f-5ea40efc254a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "becbb0ff-b0f0-4f4f-bbbe-1c00c34b53d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb60235b-399f-4dc7-82e8-ba9a356a3576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c6b9da-6d56-4446-b706-abb3a661520a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c011d8-b8e0-4ce7-bd3d-f1bce69571fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ce5460-2ec4-4eb9-af35-7a6641a6b4fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e96177f-1e93-42bd-a5e0-c86e0ba19d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c6b2b5d-b15f-48b2-b50a-a4b5f54d444d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90237ca4-c704-457a-84d0-8b35e6dc5c9c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a105bb-52d7-4f48-b45d-ad52b18bcb88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b67a81-b2e4-45ed-96e1-f5188607a997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82793767-4861-4578-b2aa-65bc4aedbfc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5e5c162-374d-43a0-a288-bd89bd2a6c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ad74dd-0ff9-4227-9357-9b91608f2264",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e6d05c-ea87-4ecf-8181-998a18b8fa9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22211e6-d632-412c-9ac1-bac9463f4466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98559a7f-e240-4e29-860c-4cc144cb35ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da74a73b-359a-443d-984d-35da63112ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ffa91e-9161-493b-b2a7-531c833a08a7",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3b2a5e-7315-44b4-ae70-939bb5626d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18eeca25-d41d-4893-aa26-c85073e03e68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4712bc5-0efc-42db-9cb6-aab49646b38e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af70705-c08d-4dbc-ab7d-9d73e69b07ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f4aebe-27b9-4f7a-b4b5-ef196ca8a0ad",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c8a82f-dd0e-46cb-a043-0403966001cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ab0008-a7a1-4de0-aa5b-41805cf2174f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ab9293-b7b2-4a7a-bc91-998b64bf0e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71e3bfae-6b94-4717-bbeb-fc1efccb2c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8474d37e-bb09-4059-916b-eac537bd3c0f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d689168f-d458-42cf-96fb-220af1550b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d7fcbf-3779-473f-8819-c8e1d7b9ddf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14016a09-dd28-4e7a-9aef-d6b1d7f91e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9eccdf-f987-4ee3-9703-4012b4b6e15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ce10ce-c3ee-43a1-8956-08738bdc4ebc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393157f5-6a89-4a4c-99bb-7ae20432cea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050eb15d-973f-42d9-a9a2-37fc3baed75f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afa26c7-98df-4319-a294-09e496ac3d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc958eeb-5943-4835-9b74-c9dad705facc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4418b228-d9ec-49f6-9c83-2e4513537931",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e9e5ce-9ac4-4055-9095-94e11e5f8bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549634f0-1ec6-49ca-a557-1e8f9ee0d774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b17469-b452-4135-8fe2-4fe50830bfcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d484e78-30b0-4811-bb5b-677739189f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31c0196-bce6-4cc3-9b40-31fa6bf547ac",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d89368-7790-4908-aeb9-83f4e3ab8db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6635592-59e4-4b73-9f6e-bff7b64597f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab8d4c7-2685-4d29-aedb-36457b54f190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec05d88-26dc-45a9-8f3d-b00c3ee3e9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a1b7c6-d6ab-460a-ba08-450d2e6e6a3c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72545cac-bed6-4e6d-a188-57977570c868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97400358-9c06-4d3f-9a37-7faa7bd0cb5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88eb9c87-d9a5-4bb4-9f8f-cfc3d1dcb3b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e81a4d74-3ba6-4c5e-b070-4e060977a800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce97e0f1-78e8-4405-b827-9fbfecba6965",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae614cc8-afef-4e77-b0fc-7f8c3e7654da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c59972-faea-451b-9f58-1077b4dccf1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ac6a4f-a7a2-4199-8807-8d2d268e9ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "933b5609-bd08-418d-8cb3-9911f0ad2c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bc1fde-a8dd-47cf-8cdc-23535acd6356",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ddabb8-0726-4c4e-b064-e81ea9a5e339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a0587bd-605a-4ddc-96b0-aef785ecd211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75012ff-31ea-4aa0-a98e-d34db8275a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "248ab56d-f2d6-45b5-844d-11500f2fa540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e0ce5e-b8ed-4a5d-a275-114e22452c82",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d78fd1-8cb2-4033-86a4-d81edfaa9de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cadf15d2-cf1b-41a3-b236-80e9f9e83afe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96d3e38-553e-45a6-b62b-6d7619cb7957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b0b089-4453-4376-9867-a50fa236685d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6892f92c-f9e6-476b-a0bc-5b7025474a10",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b71f93-8907-4270-8fbc-3358e03bf958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f246fe2-bf03-439e-ac88-39f43f1acb60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c0800c-5958-4a64-af0c-3fe1bf5e329a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "accf7fb2-83f0-4703-afcb-150b75017f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3d517b-f8b4-4c06-8f0d-32889a223616",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39dbab73-a64b-40ae-b34f-e9c74fec8856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbdab2e7-5763-4631-abd0-0c78c6ea1eb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a02ac33-e051-4513-bfe8-3e9d0ef40eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e21400-3131-40f7-81bd-1d1dead80a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e7d57e-7436-43db-bbb3-b3652786b514",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc14e460-d394-4273-a62f-ef724cbe1501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7804a79f-8922-428f-bf4b-0438b87e81f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2421b422-589f-4bd2-95c1-813c75010fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5918f347-6f76-4ab5-86d5-6ced660b12d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4898f87d-a117-4820-a489-20502c7ee8ca",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ec3dd4-7b36-4c76-bf68-40d10ab57844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61aec8a5-a5c4-4c99-895e-d82e13ae06ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39037a63-21cd-48a4-9092-b8788f8f1b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d3749c-8b1d-4f12-a154-2d456d12e82b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349efbfd-883d-49a5-a407-af5ec8c7c6d2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e8b915-441c-4a0e-9514-219d7c7700f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e416503-467b-4445-8176-85f76c851551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2074e8-7b87-49f1-81c0-c6ccd9e8699d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d259f208-890d-43dd-a23b-a7b7446842c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5777cbe7-37fc-4787-b91b-f07405b34cf7",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9980956c-97ec-4fb5-88e5-a4b8880e65dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b6c13d2-1d05-46f0-a48f-c7e13531427b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afeae726-ee04-42d5-a571-7fbb69212275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea28b03-4652-40c5-9546-7967cc380b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d74f312-c1d7-4d2f-a6c8-9142db2c6970",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25105373-401b-4fc0-b9e4-79b0d881c9c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c54cfa9-795d-41e4-a2c7-f2808c927853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3332efff-9908-4d9c-b59f-b47f82270ba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23814ded-818e-421f-8fee-5860d12df88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4a6f88-18e7-4624-b906-b11642de2f34",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db0ae28-87dd-4b5f-a852-625575714a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8650a5db-5568-4de9-802b-05e83280fc10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a65444-bb9a-4aee-ae8a-da72a1b94c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca66a7fe-62b2-415d-8ce8-5247bd020f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3744f2b0-75fd-4ba1-acf3-f7af539aa04c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271e532d-131b-4407-b9ab-d1d32182bbce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0991eaf0-3ca5-4d19-bca6-b22579837bd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ae644e-6461-4e82-8e0c-39752afe41d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a50ef09-9f56-494e-b60a-34aa6b212f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3f75b0-9e7e-4a9f-afaf-7ff5da71af05",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c91af13-2ea7-4f9a-a98f-28a0bbbf454d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c9e86a-7c0b-4e3b-a3bf-201fa578d461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86b60db-35ed-459d-a854-185475bef158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9167c65-7d2e-48b9-9775-7eb56ee83401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ec813c-0106-465e-8aa4-8624a4d6de5a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f3eb2f-2dbc-4df0-82ee-fdcd674b67f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca124296-88fd-4dc5-8eb3-228334d3a1b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36ede36-9f53-417e-871b-dfb263c4aa04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cfafc66-2e18-4474-8298-d8479469e5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ee06ee-d851-4fe6-a840-c7fafaa3e0af",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ac2c1f-dd0b-4b25-b1cf-6b1a54c7f705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48cab5b5-1ac5-4388-bd17-a4043d77a47a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff65016-fd44-4ba9-a6c9-d0f92f94db34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b80fe774-b053-4c66-9c29-c5672923076b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85960f57-f94a-4a3e-88b8-e9cf9085d57d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f04213e-1198-442b-8fb7-799341e81f09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d7abcb1-9687-4779-9e20-cdc6820eb71e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa8c3ba-946d-447a-9a52-cfe1983a5c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86bae20d-6cf5-427e-a7bd-69443965f6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debc8e35-cf56-46a0-8c72-296cf7abe43e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e8a9fb-e183-45fc-b08c-d51da486c99d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60511955-fd23-4b4b-9694-f798f4d2769b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d38ca9d-35e8-42db-833f-d196e823ec0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d79f652-335b-4747-9444-f729b7d3b004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4846603-683c-44af-a773-8dbf483f0835",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421487d5-ad7b-4a62-b8a0-d264035cd081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e0d423c-1d48-4abb-b54b-8ad9a72558f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8a67b5-1735-44df-aa78-7cbcb904109b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1df2809-4ff6-4757-877f-e10fee5337f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1118923-4a01-4fc6-93a7-79e0d5c4f031",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772cea7e-7474-47c9-99a1-569193937f35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "603152b3-96db-4fb7-b48e-e717916e0af0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d7bf2d-5e9a-4b57-9c2b-5cd71682a6c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71916081-7e33-418e-b11a-52d7b8a71ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8d3c9e-0561-4905-b311-71f442df58a3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f061e2be-0ffe-4c23-b2e3-284956c0ef57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87196acd-6eac-48a1-a7bd-817e8a553716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94883856-e2a0-4a1e-9a6f-8946eb99c01a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f92dcf-2fb3-45a7-b941-76b83c2393af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ee9533-8e42-4138-a85e-425eff49c136",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38958227-cd34-4fd3-a2f6-1fa3f8e2e14c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4aa8292a-ecec-4256-8a34-8694fa7ad104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e79d226-a7ff-48e9-b106-76f11ef2373e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff1a8e1c-fb62-4c7a-a911-18868c99788a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44361b82-7749-40c2-ac81-6e413b2dbc40",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008726f4-4bb3-4377-8219-d929cf5f1ba2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa461446-6177-438c-842f-9d63874e4e72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79416f33-ac09-4bbe-8bed-780760b259fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8334089d-019a-4cf1-985c-df8d26bf35b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42b84e1-fe6f-4cf6-9dff-083242f52433",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a8309a-e73a-4e2c-aeb2-12517f97d64e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb467df6-56ad-4034-84a2-2df62370ae11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3418e54b-0bb0-4bf4-a978-3930bf4c149c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a751e9e6-0133-4f04-81d6-d4ef3c63cd09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7be2d6-1bf7-4810-bc64-41a39e5b22d3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341c2816-00da-47cd-99ec-934c09fff762",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "836c145f-ff45-4409-8db0-f48c53f56953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a06d10-d7b2-42fe-86d6-5087cbe1662b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6711a9d3-aa2c-4e22-9842-61faf4510518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fbb5bc0-eae6-4408-b618-12124dbac3ee",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23dbcf3-b38d-4541-bc30-55b4de733054",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "564b07f9-2e56-4f15-ad10-0982db2b46d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8375019-5fd2-4ad4-8049-389d03f86c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0074f92-edcf-4bc1-af47-d5c0d6f8d477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54ed428-f0a2-48b1-a50f-ffb87ab9397c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aacaf698-2db5-4ae8-b59b-7344fe466791",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25b8661b-b8c4-4e17-b98f-a3ecd54f41f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75739f5-241a-4eec-9136-d5301b588da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e92b497-8c95-4717-9744-afa0566d2048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f95d70d-db96-475f-ae57-92973aff121a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364799b5-02ca-44de-9ca4-19592102e36b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "366cc5e7-3122-4920-bda2-793131cbbeef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2879fc02-56e8-40e3-9581-df29fa4c7911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241b48c1-73f7-469c-8c12-6adce74941c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9d7fe2-1be2-4666-b178-8d0b578a2e5d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c134cb84-9daa-4b11-b8a1-c1629c1b500d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55f22a7c-5315-44ae-a42e-198486c41eb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52af0f9-720f-4324-8bb2-2d36ec45f8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0990979d-7732-4ac9-93b5-512b3c006a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9857541a-a69c-47a2-84e1-92526bc2553c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59aba23-45cc-4e67-be24-ca97c540fdd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f182b0c6-413b-4356-845b-570928c1b932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb10fbc2-6ca6-4927-b5e3-1dc16b39d5c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d328597-3352-4ce4-b242-c7aca24dc0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa3a10f-1706-4f14-bde0-805676b2abbe",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550dd07d-572e-4c1b-9583-8064672dd6ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6c92b8d-7902-4a20-8ec3-479bedc0cc66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4767d736-2147-45bb-a8e1-2100d94b11d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba789282-ac26-4994-9165-41890ca87b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0800d70e-5e32-4c5d-ad9c-e2ea40180a88",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274a1804-fe86-4caf-87e7-dec91291f0fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b3dc9bd-6854-4439-ab43-0bf945c27340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19988b82-15f0-4e3c-9827-f0b0398822ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53eda4c7-a543-4249-877a-98eef253a2a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fe8813-de5e-4bdb-94c3-fd0fef2a91af",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6252602a-ce7f-4383-8105-e47e4bfa6095",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5e7966e-df93-483d-8ee5-ee29cf9abb3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9799b29b-42ae-4056-981f-6e620df9d7ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd1963e-67b1-4cb7-93ed-6fd7eb9ada92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f504c183-b5e1-41a2-91e7-6e190ece1054",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eed5662-5b41-43b4-9d19-2cae0710c4c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39f689ec-dfa7-4404-b9f6-856b548d115a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f5efdf-2e09-4a83-8064-62af627923b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73dd8b97-8823-4057-9314-0ca86086fa05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a503bf91-bbf5-4fa3-8e9a-b0615ffddc32",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ccd47b-a3c9-4e40-8cd8-3fd6aae1a417",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4f4dcf9-d968-40b8-bc9c-4aa1f7c6b17d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "478001d0-3d13-48f4-9f97-b33e4f4706c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f4ae1f-21e4-4d0c-9c3c-12cff657815f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ea0818-319d-4169-b79e-ea8fc0707d52",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b794054e-9e3a-4be8-b61a-36328c5bde60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3547631-1473-4f9f-abfd-e4789abdd63a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c776b7df-a7fb-4e01-ac72-e8180d30d774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a74909a6-a0c6-4135-a091-c162b94128e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa765c6-6047-49e6-bd51-badce15f17d9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc47d356-61e5-47da-b127-0eb88e43f951",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b69113a-b273-4abe-bfaf-4c45bb1d5659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf0af2e-9995-4d86-ac47-85fd870b2531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f46a97-f082-4e68-add5-4ac6490a1439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52f8e35-0939-47b2-b7ac-94ba916708d0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7439fa8-75eb-40fd-8fe5-0bd88a1f2bc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "812a9be6-55f3-45a1-993f-bbb97121632f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4058befc-b867-4416-ba55-76f63ec85e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab25b3b2-029d-49ae-9fe2-49ca699fa8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ffcc20-ebb0-4771-b9b4-e576091a455b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf90ea0d-5207-41db-81ab-f9bfb018359f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ac75542-8a8d-4872-8a11-9dec1d92eeab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe28478c-655d-4596-9f0e-ea718f390a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d023d6-d2f1-4262-983e-bd8bf157228a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0191f8-63da-4820-ac35-b4dfd7659ecc",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d70b83f-003a-457d-a1dc-8d4417bcfbf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86cfab15-1f1a-4462-8510-6e9e9e4d94c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed06fef1-93bb-4bde-8640-c9597503dbae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc70024-9960-4447-a95f-2b2bd8d92cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03bec50f-dacf-4adc-a03c-a33533e8ffaf",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10364a18-eb71-44cd-9252-07076625b6ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18e49c70-a368-4cee-8eb1-6c9c6bfaac75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86b9f5a-bca2-4f24-8d11-d80ffc81765a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a4b333-6d8d-4f75-895f-83a32903e28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8b0daa-a97d-4343-a12b-3d1e7ad6dd4a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7539a08b-1ce2-42c8-b7fb-8347b6443b6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48e75bae-1c5a-4c1f-b396-077b17912715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "468aad8e-a553-425f-b863-65c257742352",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d858525f-dcfe-4d5c-89a1-a3bf6b0a305f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c4d878-0dec-4468-a022-2e1985c9f550",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb565c9-5e1e-4974-87fd-e2953f0d3001",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31ac1157-aae3-4e44-a6ca-b2d7577267dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "031ce0e4-ebc8-4bf9-a94c-c314535a3f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92015ffc-5300-4627-941f-ca3a39bba913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32804a42-83fb-45d5-ac8b-f375311929e0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105d4378-b3b9-4426-a284-b258e25f1aba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7872163-0ac1-40a6-8d6a-3ac1ea4685af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aad5994-309c-4a0b-b8b3-d053182b7f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2086646-9ddd-40d5-8b89-6a6710dfac03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c84b2f-730f-420e-869e-cd726ca5acc3",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7481a2ef-8a58-470f-b9e8-a68fee69431a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "503b87eb-c264-4765-acd4-c07d1872a4dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "590adafc-d0a3-4ba0-b2cc-d882a4d9fc0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b352bcb-fc48-42e6-ab91-a68c0731f95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2368ceb-69ba-4857-b08d-eab98c9ef0d7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf875cc-ee75-4f45-bac1-8439ba11f90c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ab9dec0-a1c4-4720-ba10-bc06ebc8b14a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6577726-214f-445d-9666-f587636b81c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822f7909-f386-4e70-8d7a-e811193ba4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbd05da-a1e4-43b3-803f-197baad4bf04",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a51372-84ef-4da9-8108-6c78f24c46f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a73076a4-6ebb-46fc-b390-e50ce2dc920b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82084e7c-4a8b-470f-a35b-ebf23051768a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d893e01-6cf5-43c0-b63b-bf4ac492998f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99aaeb4d-2c84-43b6-99ea-f4c905f4fc1d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ebd5001-7061-448b-8ab8-86a7d37e1553",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c711300-9f29-4b45-98a1-47e7865142e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9986768d-31d3-4425-9bcd-25fcb9e27fca",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e06cee3d-2170-42de-a8f7-57549019a032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6d1328-1b1b-41be-8a9c-7b3a90d0e4ec",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ab2842-b9c2-4186-ae6c-bec69c330199",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7af17796-353b-476a-8e00-15ce063c789a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f336edba-fd8d-4c61-a3b9-9053408ab42b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b9b7709-43f1-45ed-a434-8480d975d4a6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "efcd97ee-d332-4160-a2e6-1be3bcc77b0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99d6636a-c9cf-4534-9dce-6d10cbaee9b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e209528-9e32-43c8-8fd4-d7e5b43e7919",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "798997fb-daa5-4127-8698-31ff387f6718"
                    }
                  }
                ]
              },
              {
                "id": "7fff4aa1-a3a3-4cdf-a464-5978c77a5854",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "825b3594-a20a-4c42-a419-54f6af6dec9d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb53b93-b998-45b5-8e8d-2fd57fd0ea73",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d5dda341-489f-4c11-a54a-9a3d120f5fb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d48646c-24c9-434e-8b8a-a4bfd4dcc324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0779866f-f11a-4eb6-ae77-b50d0a67ba5d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "542f1d9e-4880-47aa-8787-f58cb63ce824",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "185a49bf-a0a9-4b16-a5fb-81de84bdda1e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78260397-3286-4e48-ac1e-13c97cf22b74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f9da79b-2ba6-41c1-bb84-b477fa0807fc"
                    }
                  }
                ]
              },
              {
                "id": "aeb37458-6db0-4df8-99ed-b37e0662f068",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "350a2c16-d028-40d6-8666-19022e1f1f9f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b3dd27-46a4-4ec0-b0d1-c0b87acaffad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "85fc4a06-3117-417a-b68a-4a1f26a45c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f0432c-1db6-4962-a047-6f03a764fa54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d97c3b-151c-471c-a491-7eccdf9a2332"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "74097b14-fd0c-4493-9a29-8cdf6a7c9777",
            "name": "Positive Testing",
            "item": [
              {
                "id": "22050fdb-89fa-49d2-bb6a-2eaaa50a92a7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d095cc5b-db32-4a86-900f-cda0ab3ca1c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5eac3ff5-e1e2-4d5a-93b0-23d2e1141896"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aea2f19f-5bcb-4e40-9482-53138500aa4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1293944-abbc-4bcf-9cf2-fc2b96cdfd28"
                    }
                  }
                ]
              },
              {
                "id": "2bfea19d-73c8-42c6-94c0-5639463d742f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b95c5809-09ae-4216-b690-1239d3109650",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3138366e-0edd-4cb9-b5af-38afe8e9fc91"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e3df838-af87-44ab-bb02-81836c85a62b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70e58bea-84f5-46a5-bcb8-51f2a52099a5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54564c78-7409-48ff-bc89-144484d8d636",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8f8e9e4b-88b6-405d-8f38-6477eddd2123"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5d9bcfd-2480-4476-afc3-83ffd954ff31",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b569b34-0877-44f2-9ab6-1eef6c233c11"
            }
          }
        ]
      },
      {
        "id": "3061b5ba-c50a-4a20-a6eb-d0094d794cbc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7a728e68-5db4-4c1a-a41f-3860136fabc0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a0fdea4-4ab4-44f1-a5e9-e7f19dc27f14",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1e0a07f-12a4-4654-b16d-83a0dce675a1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e0247d-7248-4660-b543-f0e8e6c9518f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "998a46ac-1b84-4c80-884f-f89a06fda136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e68ada-553b-43b4-b029-2f811dacdb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e49c67d-f607-4edc-b5a9-bef0ab607ef8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "600979c8-0212-4da9-be6f-11cfad8d87c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dda1369d-9319-46b4-a53b-c8c3088f5863"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aecd7f53-9f40-4778-b21b-1b613041ea79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "724c320f-a4b6-44a5-871e-439ecde10047"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b3095c0-9a59-41bd-923c-7dc73b9add2e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d9bbe19e-f64b-4541-bcf2-55087340bc5c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c02f7250-0111-478c-981e-64d0f062579c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62b87ace-cf07-403a-9149-a557cf16bbbc"
            }
          }
        ]
      },
      {
        "id": "2db6c750-ed70-4efa-ac2c-3fcc10df2d08",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f33a9f0f-3fb0-4e53-8323-2bfa80ea3c75",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e207d5d-8f46-4a1c-8611-322c16538408",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8034dff-297c-4c9b-b2de-370ada01ea25",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17e9102-0028-486f-ba61-7eb223d3a7ad",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9218955f-283d-4f94-af00-ac2167377b2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28932bbc-ded0-4d77-99f3-7d4d7d242bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09cfefd2-f573-410b-9c79-b7ce33741256"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc3ac58d-a0e9-4cbe-89ae-db35c539661a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98e8ed81-60d3-4314-a047-cdf0ee547d5a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "81c15488-1a8c-46a0-af0a-54b6f58fc27a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ab95941-f84f-45b4-9937-36417f00d454"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4b99a8c-42ee-4239-a714-c3603c501f48",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "47dade5b-e400-4ae0-89d9-e20c896ea4f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16d2bbd5-451d-4ffe-a82c-10e40433e3a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9145870e-e462-42bc-ab2e-f47366892fd1"
            }
          }
        ]
      },
      {
        "id": "b440a5b7-8541-4530-bc31-3fb878a0cfcc",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7a838145-21f2-49f1-962a-b43fcf45425f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "28ecc409-a687-4193-81d5-89ee0f802c77",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6e2cdcf-c94f-4417-91c4-bcf9e432f99d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87952078-852f-489d-8e73-05dc6a58c89d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1172821b-e1a3-4ba8-ba3f-deda8e07be2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7dcb8e4-e265-4670-a27a-44dc01b0b868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "633b624b-ee41-435e-b050-f5a1ba952892"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ca2bdb5-34bf-467a-a8c0-e9a524320006",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7df10e5-5434-4ecd-b0a2-f59f45ed6c1a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "16ac6510-2d19-4e29-b0ad-423e957f2b0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "757c5b0e-bb58-4c7a-a03b-8875f8c24857"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa204dfd-8ed7-471b-93a8-ca1ac7b1174c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "64b9c8ef-31fd-4e60-8223-2968a2132f2c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00ba900b-9d58-418e-ab59-77cd31868718",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c227d71-0fdf-4ea5-b063-f7880b3da2e3"
            }
          }
        ]
      },
      {
        "id": "d44b69fe-c913-49dc-81e2-85c35a359f2f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07868e83-cd4a-49f8-9c6e-b9421eeaf8e4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bbdabf48-168b-4040-9526-9d9059e2ec08",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b84345f9-e966-4f86-90aa-8894bf77e135",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a87d44ec-d979-42a4-9984-c52489f00835",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "348d60d4-905b-4f86-8487-02d42c1e8e8a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 84.25352112676062,
      "responseMin": 7,
      "responseMax": 5221,
      "responseSd": 397.53314037809366,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697502840459,
      "completed": 1697502876476
    },
    "executions": [
      {
        "id": "a22f740b-bbd4-4c5a-8a4c-c9d8457f0718",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "854ea05d-1e38-4e8d-93d0-c5dc63988199",
          "httpRequestId": "265f87b8-9fd4-4311-8f3c-24edbf132f8f"
        },
        "item": {
          "id": "a22f740b-bbd4-4c5a-8a4c-c9d8457f0718",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "dfe43f33-73d1-41a1-8b4e-10d47c56922f",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "80bfc0d5-24f5-4dd5-be88-20564c0d4114",
        "cursor": {
          "ref": "b0c81dc7-cc31-4176-92ba-e28777863fba",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "07b69933-e5a7-425d-9692-f21e14083d48"
        },
        "item": {
          "id": "80bfc0d5-24f5-4dd5-be88-20564c0d4114",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "88b09ab6-b1a9-4fab-8375-74e6ee89e420",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "8a01e860-9f10-4306-8d30-f0fcd4231f68",
        "cursor": {
          "ref": "dacf6005-ea56-4dfc-8566-5a5cbeeaffa0",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "301b5e7d-dd62-4118-8cbf-bb72722ca1db"
        },
        "item": {
          "id": "8a01e860-9f10-4306-8d30-f0fcd4231f68",
          "name": "did_json"
        },
        "response": {
          "id": "9ab004f1-a787-47c8-b736-78c8662e7fb9",
          "status": "OK",
          "code": 200,
          "responseTime": 324,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e5e616-72b0-430c-9a55-1be2199aa791",
        "cursor": {
          "ref": "852c1e63-a100-4a51-ba2d-7b8e5c574294",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6bc3be66-fc52-46e3-a9b7-f23b8e8d4d00"
        },
        "item": {
          "id": "c8e5e616-72b0-430c-9a55-1be2199aa791",
          "name": "did:invalid"
        },
        "response": {
          "id": "4d90c559-4f65-47f9-9d83-9d9cea248269",
          "status": "Not Found",
          "code": 404,
          "responseTime": 707,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e5e616-72b0-430c-9a55-1be2199aa791",
        "cursor": {
          "ref": "852c1e63-a100-4a51-ba2d-7b8e5c574294",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6bc3be66-fc52-46e3-a9b7-f23b8e8d4d00"
        },
        "item": {
          "id": "c8e5e616-72b0-430c-9a55-1be2199aa791",
          "name": "did:invalid"
        },
        "response": {
          "id": "4d90c559-4f65-47f9-9d83-9d9cea248269",
          "status": "Not Found",
          "code": 404,
          "responseTime": 707,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cdf2ba6-ec79-4888-a15a-6ea190795694",
        "cursor": {
          "ref": "4201b4fb-4b1d-4a35-8e69-172e191e0ad5",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fcac1feb-cedf-4536-a2c4-b207ca671949"
        },
        "item": {
          "id": "5cdf2ba6-ec79-4888-a15a-6ea190795694",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1e4fae58-16a7-44c0-8e58-34a4798d1409",
          "status": "Not Found",
          "code": 404,
          "responseTime": 113,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445a6b12-3711-48b3-b060-4e5d13dcf20d",
        "cursor": {
          "ref": "ae532b5c-694c-4813-8585-89680c83ed82",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f2a3a80c-b67a-4b59-90fd-38d6a6dc2316"
        },
        "item": {
          "id": "445a6b12-3711-48b3-b060-4e5d13dcf20d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "434f895c-e5c0-4ed7-8789-33bfbe319d95",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61c6bad-9a29-4c3d-9036-67d4418b808a",
        "cursor": {
          "ref": "2c1f84c2-6551-4a3b-8893-8c459faebd20",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3659288b-0122-45f2-9e32-3df7ba6e11b2"
        },
        "item": {
          "id": "d61c6bad-9a29-4c3d-9036-67d4418b808a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4d4e3136-18c5-4c0d-a202-48c6f6012a09",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc712011-884d-41aa-9f23-7f1c23748f65",
        "cursor": {
          "ref": "69e6f9d5-13d3-4080-8d2e-c90dcac8bd5c",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "65e402f5-6e8f-462f-9695-4891fcff7306"
        },
        "item": {
          "id": "cc712011-884d-41aa-9f23-7f1c23748f65",
          "name": "identifiers"
        },
        "response": {
          "id": "f2cc2647-9909-4c7e-8244-acc2bfdc0bf6",
          "status": "OK",
          "code": 200,
          "responseTime": 38,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092ddf9d-1533-4467-9942-1e109b972b15",
        "cursor": {
          "ref": "c732d156-2762-456e-86b3-5508662c40c1",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "144e5713-f8ed-4132-8a2c-a6a8b73e006b"
        },
        "item": {
          "id": "092ddf9d-1533-4467-9942-1e109b972b15",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b4079a74-1cb2-4aa9-840f-0800da0f6377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fce864-30b5-4046-a2fc-d8218b1d5966",
        "cursor": {
          "ref": "f87bc90f-49be-43d5-b0a3-9b903e2d1760",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f14c6fbb-ecfd-4cfd-8e30-0cc197e07ce9"
        },
        "item": {
          "id": "25fce864-30b5-4046-a2fc-d8218b1d5966",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b307b51e-451b-4869-ab32-a3596acc1c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e70431-75e6-40d9-af84-67eecce20556",
        "cursor": {
          "ref": "18b89647-545f-409d-8392-410c7e2e15f8",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8fa750ec-b7b1-499b-80fb-99ba07e3b24f"
        },
        "item": {
          "id": "a3e70431-75e6-40d9-af84-67eecce20556",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9181ef69-4d96-43cb-9d13-76fd3f70a4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e415c4-00fb-4466-bf24-60b47a42da75",
        "cursor": {
          "ref": "bc463395-beee-41e1-8e4d-22dd7a9a9385",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "12fbc334-8c2e-480c-beae-cde4ed2f2cf2"
        },
        "item": {
          "id": "86e415c4-00fb-4466-bf24-60b47a42da75",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "89e58ddd-73ae-4bd8-88de-e6dda9fa5cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d5c814-404d-45ba-a59b-66a35111730c",
        "cursor": {
          "ref": "541364dc-b8e9-4468-820b-3c6e29757561",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c71f08d8-19a8-4be4-b5e7-4d81903f63e9"
        },
        "item": {
          "id": "b6d5c814-404d-45ba-a59b-66a35111730c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "47ab3f33-779d-4411-84e2-47626164f146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82737e95-2b4c-4d04-999d-fb3348e126ee",
        "cursor": {
          "ref": "2e8975a4-d018-4163-b71b-e7a3820dd285",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e137cc94-3207-4177-8204-e717772da2f4"
        },
        "item": {
          "id": "82737e95-2b4c-4d04-999d-fb3348e126ee",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3e5cc76f-922a-45e9-9233-783bc87a6e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45599692-e60e-4065-8bfc-3bcdb4beb24e",
        "cursor": {
          "ref": "44249984-053c-4519-9878-df16a2d82579",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8591f745-1d8d-4a14-8672-3ed845623704"
        },
        "item": {
          "id": "45599692-e60e-4065-8bfc-3bcdb4beb24e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b375c5d6-e502-4792-b074-e07a229b5d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662d5d26-1e40-45aa-a677-414d7655c960",
        "cursor": {
          "ref": "648ec299-06d6-45ca-acb6-f49968e4ce85",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2cf3f331-2fa3-45fa-b572-cba3f28683ff"
        },
        "item": {
          "id": "662d5d26-1e40-45aa-a677-414d7655c960",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "90c78a7b-4f40-4c9f-aeee-be64f4f2c8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2db54e-a59b-448f-ad28-841b6873852f",
        "cursor": {
          "ref": "d27c167a-25a0-4402-8143-4635d4a7a2ba",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a20be401-aeec-4589-b10d-c13922584cf4"
        },
        "item": {
          "id": "5e2db54e-a59b-448f-ad28-841b6873852f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "798916b4-0208-49e5-bf92-f20dbd23e1c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd2ec3d-bb67-43e4-a094-91e02c8ad859",
        "cursor": {
          "ref": "be20fbe0-5236-4338-9696-a37cb6d95b44",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "20fc5862-0674-4252-947f-80b138255b79"
        },
        "item": {
          "id": "edd2ec3d-bb67-43e4-a094-91e02c8ad859",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8f6651cb-3828-4dd3-8a7e-9818b9b3feea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5174caee-2813-472b-b236-8e6fa4666b12",
        "cursor": {
          "ref": "2572d503-0f71-4479-a84e-1f13c774952a",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6faf0a21-8cda-46fc-8edc-5edceda919ff"
        },
        "item": {
          "id": "5174caee-2813-472b-b236-8e6fa4666b12",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "87221e50-f259-426f-b276-def9f43f1dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627627bc-1ba2-4a15-9e15-f630f399050d",
        "cursor": {
          "ref": "34cc7f11-5cc3-4f71-aabe-06bf410fa535",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d956077d-f59e-48f3-8c32-aef584e323ee"
        },
        "item": {
          "id": "627627bc-1ba2-4a15-9e15-f630f399050d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c3ef88dd-d621-4fea-84b6-b756075d12c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c6299e-2b23-4d00-b1c9-2c6237494901",
        "cursor": {
          "ref": "c8e53887-1ffc-466d-8064-c61255f76a4a",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "28b26991-da43-48f6-aa81-dadf3da80146"
        },
        "item": {
          "id": "07c6299e-2b23-4d00-b1c9-2c6237494901",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8f0bfb5a-0a7a-4ada-ab11-649b69fb70f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009c5c53-a804-4928-8ede-019b32515c4b",
        "cursor": {
          "ref": "ed87cf81-5f81-45f7-a272-5d6fa7f12839",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e26ec7a9-81c7-4540-9f72-b441c8eadb0e"
        },
        "item": {
          "id": "009c5c53-a804-4928-8ede-019b32515c4b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4c14dce8-dbb0-45c1-acde-fce78123f843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076c6532-0f16-4db1-bcbd-730ba15a85ab",
        "cursor": {
          "ref": "dcfe153c-791a-42b6-ac92-37c937bf5e9d",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ffa6d5a8-27b5-48ef-82f0-caa5ac32aa9c"
        },
        "item": {
          "id": "076c6532-0f16-4db1-bcbd-730ba15a85ab",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "95611270-eba0-424f-a2ea-f086d3a330ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac24a1a1-d9b4-402c-a0e0-4813986a1968",
        "cursor": {
          "ref": "8ac32ca3-86fc-4020-a14b-d414a8983d31",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "bc3e3e9b-ecec-481c-8163-dc578106a6c4"
        },
        "item": {
          "id": "ac24a1a1-d9b4-402c-a0e0-4813986a1968",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3c12447d-f8ef-4dd2-97f8-f77f119bee54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b63162-5414-4b7a-bd23-d9f7111a5835",
        "cursor": {
          "ref": "5987d9af-f2dc-40fd-81b4-41dc438c7c7d",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2cdb4fda-1df2-4712-ad09-71fb56c3e4a2"
        },
        "item": {
          "id": "a0b63162-5414-4b7a-bd23-d9f7111a5835",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "46c11b14-04af-4aee-b22c-8c8b625aece8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff7bcbd-2a1f-4f21-9c1f-a98762e194a8",
        "cursor": {
          "ref": "dc1bcb91-2acc-4680-9192-21330576237c",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5835782e-1a73-47f6-aaea-d5067e9622ed"
        },
        "item": {
          "id": "4ff7bcbd-2a1f-4f21-9c1f-a98762e194a8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "330e7bf5-0531-45a2-b6c2-003435788804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3480f632-246b-422b-a83f-fe22b2091fa1",
        "cursor": {
          "ref": "8691076d-903a-4743-9976-fecd7cbe08df",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "14961368-8a78-4ada-81c5-b7e9579b838f"
        },
        "item": {
          "id": "3480f632-246b-422b-a83f-fe22b2091fa1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "eff54776-fe23-486a-8f71-ccdb7afe8e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecd9fd0-697c-4fd3-868a-a736a67ca4d5",
        "cursor": {
          "ref": "fa8a5d15-7117-405d-91ef-56f62b6276f5",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b8998776-f442-4dbb-ac57-9b0c1201c02a"
        },
        "item": {
          "id": "3ecd9fd0-697c-4fd3-868a-a736a67ca4d5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d9ed8b0f-45a0-4780-b15c-44ea59d578f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9740c66d-5d14-4e33-a91f-f3fc02614a81",
        "cursor": {
          "ref": "f1e7d40c-3ef9-4fa8-b538-0fd1277ab8e2",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0d3b3e80-ea5f-4802-94cb-c76ed8cea0e2"
        },
        "item": {
          "id": "9740c66d-5d14-4e33-a91f-f3fc02614a81",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ebfb729c-bc39-4f76-b4a5-cc6a8eaa91b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9bc3169-a5db-4b24-a910-7c2419c0dcdf",
        "cursor": {
          "ref": "c63439f1-a68f-46b7-8618-3d93a987a7c4",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6479cb4c-eff9-463b-bb3f-386e4b7b82b6"
        },
        "item": {
          "id": "f9bc3169-a5db-4b24-a910-7c2419c0dcdf",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "229fe7a9-0922-40cd-9920-1137558dee36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980f908b-47ca-402c-8a31-bbe2b2a0a58d",
        "cursor": {
          "ref": "19a02d1c-37bd-4ec5-aa10-df93db6dd853",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "82725578-b7f5-4af1-ada8-bed509601e09"
        },
        "item": {
          "id": "980f908b-47ca-402c-8a31-bbe2b2a0a58d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3db9c046-05d1-40ee-afa2-c7d7fa978934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef95563a-8065-4a1d-b9d8-d90be477fd0e",
        "cursor": {
          "ref": "b4a4cc4b-c171-4016-9ba6-802ce20085e2",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a2dc1199-d3c9-411e-bf4d-336065d28f51"
        },
        "item": {
          "id": "ef95563a-8065-4a1d-b9d8-d90be477fd0e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a53b8eb1-6a27-4f54-9a9d-e410ac21fadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445d335a-db29-4c03-934d-10ea641f3eed",
        "cursor": {
          "ref": "cd14ee7a-13e7-4b3e-8d4f-298b8c83c450",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "cc7e4811-93ed-4d0c-8732-e501891e2d90"
        },
        "item": {
          "id": "445d335a-db29-4c03-934d-10ea641f3eed",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "228dc6a7-0a61-40db-8bc3-280c8a69624b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116fd01f-07a5-4580-b7bd-ceae60852dde",
        "cursor": {
          "ref": "4c39b941-9dc0-4154-a697-e26ddca5ce80",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "db720ba5-bb6b-46fc-ac68-e8d5e3309b5d"
        },
        "item": {
          "id": "116fd01f-07a5-4580-b7bd-ceae60852dde",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6cd798b9-2fab-4299-8dbb-a470c0679968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c4a88d-2427-494c-9071-73f3690b9a4c",
        "cursor": {
          "ref": "b1145e68-79ed-4abd-9fcb-97a4e6e93d7d",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c7fd8f6f-3e96-418b-bb69-b9256dad23f9"
        },
        "item": {
          "id": "21c4a88d-2427-494c-9071-73f3690b9a4c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "838508f2-e5e0-4b1d-96d2-134f88c308b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13fa834e-029d-44c5-8f08-63f4c3e9b9cd",
        "cursor": {
          "ref": "2a0cd5b1-f466-42d1-80ef-e57c43176a31",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b751ee24-dee3-4062-aedb-03bc42271a4e"
        },
        "item": {
          "id": "13fa834e-029d-44c5-8f08-63f4c3e9b9cd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7d6ddf4e-d19a-4da7-901c-8be48262578e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f93c0e-3921-45a5-8ed7-07c7d3a90b20",
        "cursor": {
          "ref": "2ac8202d-05e4-499c-ac04-f66dc243e400",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4c06ec88-1eee-4b0f-9642-7152bf545987"
        },
        "item": {
          "id": "d7f93c0e-3921-45a5-8ed7-07c7d3a90b20",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c5cc99a5-89a2-42b6-b642-6ca044fbe735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f15c4d9-0c3a-47bd-b2e6-a772538fd13f",
        "cursor": {
          "ref": "2bcf0a34-ab2d-4af7-8cd3-765064e89739",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "bbecee78-b58b-40bb-a3fc-fe516d81f2b1"
        },
        "item": {
          "id": "2f15c4d9-0c3a-47bd-b2e6-a772538fd13f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fd0d5ab1-56ec-4c97-8838-4b55bed603c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c6706f-e275-4afd-b89d-46cc98ba7538",
        "cursor": {
          "ref": "965e4f82-5635-414e-85d1-a68237a676fe",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "525c83d9-98bc-4e79-ba3f-ce4a4f334c84"
        },
        "item": {
          "id": "53c6706f-e275-4afd-b89d-46cc98ba7538",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "46ad41f2-3154-47ec-b180-912c7428b27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce74914-454c-43da-91db-a99efef09fc5",
        "cursor": {
          "ref": "6fad4f62-c7fc-4dd6-b053-8f90807cd1c3",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4fdc0a97-d4ca-4158-8d63-bf7879075001"
        },
        "item": {
          "id": "9ce74914-454c-43da-91db-a99efef09fc5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "550480a0-d693-4b7d-a7fe-9b993676e617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57b4b46-3e7f-40bb-b73c-f218ca974b07",
        "cursor": {
          "ref": "bd3c0c26-a9ce-4bfe-ad7c-5f7b4ad5c453",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c276ff6a-fac2-46d5-baf5-14f1af565383"
        },
        "item": {
          "id": "c57b4b46-3e7f-40bb-b73c-f218ca974b07",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bc8ff6f9-0379-49d0-ad30-a15937390499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713cc8d4-0414-45aa-beaf-7d476fe3549e",
        "cursor": {
          "ref": "e2d190ee-b7dd-4526-9e98-3dae37cc9e72",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fc7d9d04-27d1-4948-ac49-a9aaa1dec037"
        },
        "item": {
          "id": "713cc8d4-0414-45aa-beaf-7d476fe3549e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fcf29ce8-0a66-41f7-aaf7-8fb30ce55391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3789c8dc-660b-4196-848e-4f08dbdd2b7b",
        "cursor": {
          "ref": "069494e9-4752-43ee-9ccd-4a84a301d152",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "03780f5b-e92a-4e59-bca3-4b22c00db74a"
        },
        "item": {
          "id": "3789c8dc-660b-4196-848e-4f08dbdd2b7b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "95c1c2a2-9fdb-4fcd-b4b3-35439e19c02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5994b6f6-3b73-4d3f-9a8d-5ee0047ffbc0",
        "cursor": {
          "ref": "34148d43-fdca-433d-9d06-eb913bfb7ffd",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "11953dab-c587-4eba-b51c-09cbeddfb167"
        },
        "item": {
          "id": "5994b6f6-3b73-4d3f-9a8d-5ee0047ffbc0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3a06041d-2ee7-41d2-b70b-8556438fc4f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82dc53b8-e149-410c-8471-590a1792d35e",
        "cursor": {
          "ref": "473c10f8-f0e6-4989-9e1f-ccc09f21d94e",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7e7addc6-6ffd-4f88-aa25-33264745a850"
        },
        "item": {
          "id": "82dc53b8-e149-410c-8471-590a1792d35e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c25554de-5d8d-46ed-960c-edefb44e5bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2038c83-05ae-403a-895c-aebc8c2f490b",
        "cursor": {
          "ref": "be034a24-08b1-4be3-bff0-19db1d317a5c",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a1707371-5c42-4a89-b299-3d947c53990e"
        },
        "item": {
          "id": "b2038c83-05ae-403a-895c-aebc8c2f490b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "350d057c-89c9-4905-a07e-8859d2d79ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9538e6-72ee-4367-9fa6-015ad73474da",
        "cursor": {
          "ref": "9f712f37-5fdb-4d2f-ad75-7061d6799bf6",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "25e5c7f3-37b8-4b43-b388-da09ca5e687d"
        },
        "item": {
          "id": "aa9538e6-72ee-4367-9fa6-015ad73474da",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "df374441-e8ba-4ed9-a91e-534b6f614ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfa14b9-4de8-425f-b1e5-b18e1e95ec94",
        "cursor": {
          "ref": "9c222e61-b0e0-48ce-ae72-4d7abb06482f",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d2edbbf7-3c69-491b-927f-722f2ba04be4"
        },
        "item": {
          "id": "2cfa14b9-4de8-425f-b1e5-b18e1e95ec94",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1c03d96b-9d87-4a8d-b807-95f8187b61b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3c556c-28c9-4cda-af4c-bfa0ccc66422",
        "cursor": {
          "ref": "130032e9-8d6d-4d75-bf72-247ad85b77e4",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "612e0f33-528e-44b1-8a93-88dfe6c12218"
        },
        "item": {
          "id": "3f3c556c-28c9-4cda-af4c-bfa0ccc66422",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "68fee0ad-401c-461e-9411-90551acdf095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe3505a-ee44-4533-a701-359f6c444db5",
        "cursor": {
          "ref": "25e01d14-badc-4a0a-a094-bf6ce8a0b0f5",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9d7ab04b-4f4e-4d94-97d1-f32efa31adc3"
        },
        "item": {
          "id": "4fe3505a-ee44-4533-a701-359f6c444db5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "32c5dffc-fc71-409e-ab5f-760851331e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1546de5-78c6-4902-98e3-a5a4629e2470",
        "cursor": {
          "ref": "fc598f4e-f47f-4d3f-9fe4-c4343abccfdd",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8fbad18e-6bb4-43cd-9d6e-de50428a7383"
        },
        "item": {
          "id": "d1546de5-78c6-4902-98e3-a5a4629e2470",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bdc91903-9d96-4511-bb98-a0e2bd54df4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab16c67-ec3b-461a-b8ae-8ddc34b21de7",
        "cursor": {
          "ref": "c6570c0a-5fc8-4f24-9f17-e86e53f0166e",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4dbe7f60-994a-4185-b107-30fc3688b434"
        },
        "item": {
          "id": "cab16c67-ec3b-461a-b8ae-8ddc34b21de7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ccf0e2cd-d346-491b-873a-7f41d108677b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d0999e-b17f-477a-bd22-b62d6fccf496",
        "cursor": {
          "ref": "b432f71b-8493-4d1b-a015-24fa7f094e42",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "63325e8b-d453-47db-bb73-e3a68e535fb1"
        },
        "item": {
          "id": "c3d0999e-b17f-477a-bd22-b62d6fccf496",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ad62aa02-1e08-46e2-89a9-1f4a60759880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f24d17c-aee8-4553-a54f-5bd83077db65",
        "cursor": {
          "ref": "37625285-bc1e-49b0-9736-1ed47d8e2938",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c40af01f-0a04-427a-8c35-6564902c0c51"
        },
        "item": {
          "id": "3f24d17c-aee8-4553-a54f-5bd83077db65",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8ebf0d80-422d-4215-99a9-dfb5151a4228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f6f236-38e9-468d-8061-4fc581a40187",
        "cursor": {
          "ref": "4b4ef0e0-9a4d-43f9-a6a1-73ff9adcb415",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "cc342f41-6aa0-43ef-aa3b-3c94a0171598"
        },
        "item": {
          "id": "22f6f236-38e9-468d-8061-4fc581a40187",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7df5a2fb-2311-49fc-93c9-fe49749c2457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb13d99-d1c3-4bfa-8e67-1c49bb0c0b48",
        "cursor": {
          "ref": "c3c63984-7548-43f6-ae5b-2e9fb3a94429",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2ffab244-0476-4f41-8d1b-b145ad5e25e0"
        },
        "item": {
          "id": "2bb13d99-d1c3-4bfa-8e67-1c49bb0c0b48",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b464d70b-de7a-4ab3-9bd1-1ea318923206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1109a385-0e74-456c-a029-40c7ce4b1426",
        "cursor": {
          "ref": "02a0ab50-0bc0-4beb-b03e-2e772f9a0b61",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5f14f5ea-3032-4534-b29a-aa0e667713dd"
        },
        "item": {
          "id": "1109a385-0e74-456c-a029-40c7ce4b1426",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "120eb966-3f6b-4fcf-a804-599197db6b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fa3032-626d-4d2f-a974-77bcaae905c1",
        "cursor": {
          "ref": "abf49558-4a9c-4de0-b6e8-8404173c0d5b",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "77cabb80-12e6-4ca1-b4cc-ad844e2e2f12"
        },
        "item": {
          "id": "f2fa3032-626d-4d2f-a974-77bcaae905c1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1dbf7b94-a505-405e-a850-ef667ff57dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44201514-5f0e-47e8-a8a0-b6c027426cae",
        "cursor": {
          "ref": "0a1553d0-1fac-4993-9ed2-f39f0b398e06",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "757ae1bf-b054-46d0-97f2-58b1cf4f30a5"
        },
        "item": {
          "id": "44201514-5f0e-47e8-a8a0-b6c027426cae",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8e393154-1a47-4ffb-ae78-6a30fe74f04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68be29f-df0f-4e41-afcc-5faf33743f19",
        "cursor": {
          "ref": "be8e0a11-22fb-4f5f-8abf-d520ae264b86",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "eb8e60ff-5eff-481e-9d0f-80126f2dbc67"
        },
        "item": {
          "id": "f68be29f-df0f-4e41-afcc-5faf33743f19",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7e9117a6-8c1c-4a4a-8c30-782c9b87169a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca2ba70-2e43-480d-baff-4b688eb09b54",
        "cursor": {
          "ref": "9251118c-f39a-4f43-9ed9-0627d290d106",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "039b4b6e-8ea8-4b48-adb9-dffb20ed4c2a"
        },
        "item": {
          "id": "3ca2ba70-2e43-480d-baff-4b688eb09b54",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e3ea05f0-5872-4f9e-a2d7-4ab8833f9587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcbd30c-124d-42ab-ae54-bb0eb83ca2f7",
        "cursor": {
          "ref": "79ec85aa-ffdb-4f3b-b226-68b3358f92bb",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "541ad63f-25dc-477a-a224-a7eb6fb8715d"
        },
        "item": {
          "id": "ddcbd30c-124d-42ab-ae54-bb0eb83ca2f7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "02ffbc60-2652-449c-a9bd-ac80457650fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b21eb4-d7c3-439a-9cec-1ed4123a5a5a",
        "cursor": {
          "ref": "0c895c1c-3c90-4e78-8bfa-a3fe713dd640",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "fd287f85-580e-4553-8419-11d947f17b00"
        },
        "item": {
          "id": "c2b21eb4-d7c3-439a-9cec-1ed4123a5a5a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3f6d22cf-52b5-4efe-a060-66ebd4637d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff2ac12-0258-4753-8a3e-d36628602d99",
        "cursor": {
          "ref": "2590d6ef-b921-4133-ab1c-57c0fbcc2600",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "00a7f2b9-426b-40ba-b9d1-4113728e1e07"
        },
        "item": {
          "id": "5ff2ac12-0258-4753-8a3e-d36628602d99",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8342aa7d-58de-48ca-9208-41a70afb91f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e41d69-33a5-448b-adaf-335f5e5d85dd",
        "cursor": {
          "ref": "d894ca0f-fc08-4753-ac65-cfa843fab570",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ba68c277-cb97-4368-ae30-2a667dcd79d8"
        },
        "item": {
          "id": "69e41d69-33a5-448b-adaf-335f5e5d85dd",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7e52f44e-11b0-4499-b213-49de9774e6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a06f09-ec03-4533-83ee-fcc593730588",
        "cursor": {
          "ref": "d23778f4-3711-4052-80d2-e14c76cf1b94",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a9942ead-26a8-41b0-815e-1cd54e25429a"
        },
        "item": {
          "id": "42a06f09-ec03-4533-83ee-fcc593730588",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ff07d4f5-961a-4947-9bba-45481cd16d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49ba087-a2ef-41ae-a236-d74e88412285",
        "cursor": {
          "ref": "363c9c94-c9ff-4e76-bfde-cb431e584e7f",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3b212d4e-fdca-46c9-8906-6c0d61fe3d65"
        },
        "item": {
          "id": "f49ba087-a2ef-41ae-a236-d74e88412285",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "270373e4-b384-4e29-b093-eed12eb861b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540f44ca-1f79-4f4d-b7a9-85a038068705",
        "cursor": {
          "ref": "1b2c2060-7fbb-4c8e-8092-c5cb91032c06",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1bd242ed-fb63-4cec-a8e8-c4bea77bba2c"
        },
        "item": {
          "id": "540f44ca-1f79-4f4d-b7a9-85a038068705",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "13ad4f6a-9bea-411a-a96b-fedd71e5e9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 860,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7264422c-a9f9-485e-9367-cdf753538aee",
        "cursor": {
          "ref": "9f84ad8b-cd9b-4449-aae4-af74fb89ad0b",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3248bf6d-327f-4179-bbd4-28b25ae2e93f"
        },
        "item": {
          "id": "7264422c-a9f9-485e-9367-cdf753538aee",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4f5a94e4-ebf5-44cb-841d-0e2dd609cff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab511da-16f3-42e5-b743-1396c131fc39",
        "cursor": {
          "ref": "b8058030-4f18-4c6e-bc70-afe451595bc1",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7a97bf1c-5c39-4f34-b0ae-b1726983e430"
        },
        "item": {
          "id": "9ab511da-16f3-42e5-b743-1396c131fc39",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8bb0096f-81fa-4011-bdbd-e33c2a0468f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fe2c10-476a-4934-9ffc-e551a54a34e8",
        "cursor": {
          "ref": "d7b61e91-a62d-4252-a449-298386cee7b7",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "36d2062b-dc2a-47fc-a812-bb836794be43"
        },
        "item": {
          "id": "b0fe2c10-476a-4934-9ffc-e551a54a34e8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a5d03e44-9c9d-46cb-ad02-b88de64dc372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb18fbb8-aded-48cd-8c67-74b49185b59f",
        "cursor": {
          "ref": "6bf56716-ee6e-408d-b6af-4870d161272b",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5ac69d8d-baad-4068-adf8-8eaa6d952f7d"
        },
        "item": {
          "id": "bb18fbb8-aded-48cd-8c67-74b49185b59f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3624d7bb-6fe5-433d-8a80-a7953764ef41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc10319-6e49-4e4a-9c39-8c1ca2028322",
        "cursor": {
          "ref": "b327b506-1dae-4ecc-8e45-f4f318266be2",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "88328dfe-fa8f-426a-a0b2-4eef8671b54f"
        },
        "item": {
          "id": "8dc10319-6e49-4e4a-9c39-8c1ca2028322",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bdbe7b10-7acd-451e-b142-5ad1018aec59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e904e0-e7d5-4431-b3de-3d5f713cb651",
        "cursor": {
          "ref": "7984cfe1-85b5-4c41-b8ba-416bed5b587c",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0eef167f-81c0-4217-a6cb-1563bf887afc"
        },
        "item": {
          "id": "d5e904e0-e7d5-4431-b3de-3d5f713cb651",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "094e134f-6c67-4a9a-9b06-23ceea848b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6deb631-8446-467a-9509-f25dd54055ee",
        "cursor": {
          "ref": "ac47019a-9f31-49da-a138-a721434d9f6e",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "14068f2c-8e78-4be2-9f1c-92da90256088"
        },
        "item": {
          "id": "d6deb631-8446-467a-9509-f25dd54055ee",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2df1a607-500b-4094-b3e1-753d8e73c0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf8692c-ec45-489a-9a89-48e0b14277d4",
        "cursor": {
          "ref": "7e65f669-ef0b-4f9c-ad66-0a8c47fff688",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "daf69c27-58a4-4369-b361-d4d98815aff0"
        },
        "item": {
          "id": "caf8692c-ec45-489a-9a89-48e0b14277d4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "809edb82-bb75-43fd-8db1-a370e92bcba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb1ef41-a5cb-4106-af59-3b2c14a58f77",
        "cursor": {
          "ref": "2c345f9c-05d2-44da-9e81-0b4470413068",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d1f8f957-aeb9-497f-9a98-3ee9740f5f62"
        },
        "item": {
          "id": "3fb1ef41-a5cb-4106-af59-3b2c14a58f77",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b4c55a2f-b066-4533-a931-8f1b6d2f22f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc548f66-bbd5-41ec-9c8f-835b72b2f0fd",
        "cursor": {
          "ref": "944c8606-940a-4fe9-a607-5676dca190c8",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ce5a9d58-b48a-43aa-8ffd-043356d07a6e"
        },
        "item": {
          "id": "dc548f66-bbd5-41ec-9c8f-835b72b2f0fd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "44da11cd-8c12-402c-b5cf-1e25e7c39354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fdd286b-1785-49f2-be97-088aab4d323c",
        "cursor": {
          "ref": "36eae01c-b8f0-4bb8-955c-bd673d3e079f",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "93af7052-007a-4fba-9e4e-c7e9b1c71b7f"
        },
        "item": {
          "id": "1fdd286b-1785-49f2-be97-088aab4d323c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0cee74be-4f31-4684-8cc2-6b56136966ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d204e7-6c2c-44c6-8543-47b6cf6cd0cd",
        "cursor": {
          "ref": "1e0d6914-37ea-4eb8-b839-78ce49ec6af2",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b0de735d-f10e-44d0-a083-a6b3e34c0b36"
        },
        "item": {
          "id": "e2d204e7-6c2c-44c6-8543-47b6cf6cd0cd",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8e8a8511-4107-463a-80d4-482b82cbf4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebae6a20-5a38-4491-8d8d-94cd952ec1ed",
        "cursor": {
          "ref": "0628e2c3-7df6-4a55-be70-d6ed3a3ed6c2",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6dc6d365-4a0b-479e-a63f-dc1b7cc9cff8"
        },
        "item": {
          "id": "ebae6a20-5a38-4491-8d8d-94cd952ec1ed",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "870436c7-3130-4192-807e-9b03e2458b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef55ad7-ff82-4250-b6f8-aa9fc39ec31f",
        "cursor": {
          "ref": "279a434e-9a03-48e8-9320-d81d55313d05",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e8282ddf-a407-4a2d-b459-fd8d18fb3fcf"
        },
        "item": {
          "id": "9ef55ad7-ff82-4250-b6f8-aa9fc39ec31f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "54d0d513-a20d-4782-a68a-5af2667c1356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86cb6d09-2d16-493a-820e-108784f7317e",
        "cursor": {
          "ref": "663a9281-81e1-44c6-9a46-7d77421210b4",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "52a2ee46-e3e7-4997-b77b-d38b31e58641"
        },
        "item": {
          "id": "86cb6d09-2d16-493a-820e-108784f7317e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ac45db9e-dbbd-4855-a7be-12b2a3e05053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a166ff5-66b9-4e05-a6f2-7c5edef3c6b9",
        "cursor": {
          "ref": "e7f524a9-5868-4e83-ac21-1070e1817ed7",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7149fa68-88a2-4d2d-bb49-b95ff34ec12a"
        },
        "item": {
          "id": "2a166ff5-66b9-4e05-a6f2-7c5edef3c6b9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "535121a0-1432-4a4f-8cd8-dfc8a7737a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48683593-4085-4829-b17d-00520c3c9f28",
        "cursor": {
          "ref": "24aa7e28-1656-476e-8aab-2137c4609dc4",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6a006cc7-f336-4a80-aa16-cd47b0fc7b2f"
        },
        "item": {
          "id": "48683593-4085-4829-b17d-00520c3c9f28",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1cbf67b8-9dc8-4a9a-83b7-a05eef400f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465f09e1-4cfe-4a7d-8efb-18e2b46e841b",
        "cursor": {
          "ref": "705997c6-d28f-438d-ad00-3667706545e4",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "14f3d81d-6676-4c70-9ada-a00ee97a7ad7"
        },
        "item": {
          "id": "465f09e1-4cfe-4a7d-8efb-18e2b46e841b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "49ff924e-7278-4c50-a5f1-38c3feddfb3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fbc789-edba-41c1-bbcc-f9f21a822ba0",
        "cursor": {
          "ref": "1ad02e85-e7e4-4cf1-920a-0ebf79bffe89",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5be077f0-683d-405e-a49e-167db42c9e31"
        },
        "item": {
          "id": "92fbc789-edba-41c1-bbcc-f9f21a822ba0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b2a08175-03fc-4127-bb52-78d6df1795ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58d2a36-3f33-4f90-8a28-4c11d02036dd",
        "cursor": {
          "ref": "5abaff41-4457-4a6d-9610-53c32c4169d0",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fc7e4d46-b3c0-47d1-a4f4-2795d1816087"
        },
        "item": {
          "id": "d58d2a36-3f33-4f90-8a28-4c11d02036dd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1e5a4bca-ce0c-42e3-bae1-fa27b77930b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8044d1c-7693-4063-8892-327adc0c5aae",
        "cursor": {
          "ref": "9f694cfa-4a19-4868-a567-8c53dc95c96e",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1edf4491-ac70-4a79-9433-096aaf4aeec8"
        },
        "item": {
          "id": "d8044d1c-7693-4063-8892-327adc0c5aae",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "88ce301a-74f4-438d-b68c-606057236e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee98d8f-be00-4ca8-870b-b2a76ca36b5a",
        "cursor": {
          "ref": "56ad9355-8185-44fb-81de-fe857c91927a",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2160a505-6846-41a8-8119-9de703c4b0fd"
        },
        "item": {
          "id": "3ee98d8f-be00-4ca8-870b-b2a76ca36b5a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f11e51c2-9efe-4c45-8d54-2c9311744c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1becac0-08fa-495c-8dc6-bf8f1337b5f3",
        "cursor": {
          "ref": "57e44dcc-8530-44de-a5d8-1ea852134e01",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "85b418a5-4c2a-42c0-bb5f-870ea3ca9a5a"
        },
        "item": {
          "id": "f1becac0-08fa-495c-8dc6-bf8f1337b5f3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1e846a73-57a1-4426-8f3f-4a6844f7fb52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412625ca-9c21-4cec-82a6-9b11e4818c26",
        "cursor": {
          "ref": "a872da38-8d7f-464e-8bba-d55d8a542de2",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "553f163b-1227-430b-a603-36ddd25ebe29"
        },
        "item": {
          "id": "412625ca-9c21-4cec-82a6-9b11e4818c26",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f0439406-47ba-4cac-8799-473308199941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cda8fed-b231-4af8-b841-9211ecc497e7",
        "cursor": {
          "ref": "353765a5-d650-427c-ba44-2bc7aea51b62",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c0d7fd7b-24ac-4aad-a5ed-8ec38d7c00fb"
        },
        "item": {
          "id": "8cda8fed-b231-4af8-b841-9211ecc497e7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b329626f-5c05-416d-997c-3eb1928d7e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f68302-69d7-4cae-a278-0dd4be60ed2b",
        "cursor": {
          "ref": "d48a9914-0b6a-46ff-bb21-4cc251d4f2fd",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "28978de4-d9c4-488b-af45-e14405aa1ded"
        },
        "item": {
          "id": "83f68302-69d7-4cae-a278-0dd4be60ed2b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c6fee2c3-0a60-469e-9dbe-e083ebc3809c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4080f5d0-b807-4a0e-94a0-0e51233dbe45",
        "cursor": {
          "ref": "70a319d7-5d04-4de3-ae1a-1a445f219469",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "847511ee-54ef-488d-b20e-47804d410c23"
        },
        "item": {
          "id": "4080f5d0-b807-4a0e-94a0-0e51233dbe45",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "85052f46-ecff-40ed-b242-7e781a023b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711141e2-f694-4b1f-a740-947936b44cea",
        "cursor": {
          "ref": "8bb6debd-83f4-4898-92d9-160ea1563dff",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1e2c6c76-e8ce-4093-a18c-bb6ee2380684"
        },
        "item": {
          "id": "711141e2-f694-4b1f-a740-947936b44cea",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c3c49d62-b23b-4dbd-acaa-7b2d5c95bc04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66bc8f74-116e-49f2-bf9a-525110984b02",
        "cursor": {
          "ref": "f2678649-e4e6-4361-9124-906fea1ea0be",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "159e5e77-8768-44a9-a896-e5dcaa619d70"
        },
        "item": {
          "id": "66bc8f74-116e-49f2-bf9a-525110984b02",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "165094e4-c55a-423c-954e-859911eada2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8469bb-4787-4b8f-a548-272fb5176cdb",
        "cursor": {
          "ref": "25b0e0a8-5ee6-4eba-bf46-a7f41ccf79f2",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3243d88f-8a4d-46c9-a95a-d187f2ab3e0a"
        },
        "item": {
          "id": "1f8469bb-4787-4b8f-a548-272fb5176cdb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ed86cb5e-f828-4de0-9c47-d4c5c7e02618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e654759-78c2-4fb9-a155-906a2cb871e2",
        "cursor": {
          "ref": "50318c9c-941c-4a0a-ac27-06bf87d13eb0",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d7c94620-43fb-433d-987a-17c9f03d830d"
        },
        "item": {
          "id": "2e654759-78c2-4fb9-a155-906a2cb871e2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "39863ee0-53ec-46e9-bd19-0cd5b6ba5a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af62f49-757e-4c10-9224-e424bddbf071",
        "cursor": {
          "ref": "4642af60-a75d-4b81-b3f8-fb91004952a5",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9c697bc7-acc6-4203-b266-16c6a89d3645"
        },
        "item": {
          "id": "4af62f49-757e-4c10-9224-e424bddbf071",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "51a4dd11-8a55-4690-98df-f928cc7a2e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a113d09-14be-42f6-a25e-0faffd62779f",
        "cursor": {
          "ref": "5ac3f6ae-1db4-41a7-a006-fd58fdbaea22",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "cc4f6dc7-9f8c-42c2-93ce-5e27cd4afeb5"
        },
        "item": {
          "id": "7a113d09-14be-42f6-a25e-0faffd62779f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "244b65ed-62a1-47b8-9c12-603f837053b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50d91b4-e1e6-4511-b334-3c54a638dd0e",
        "cursor": {
          "ref": "1c542862-59a7-4bf0-9699-478d1c956dc8",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c0550abf-dfaf-410a-9afc-1b9778d8f3ad"
        },
        "item": {
          "id": "d50d91b4-e1e6-4511-b334-3c54a638dd0e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1a584b3f-b6fc-4bac-ac9e-8188d4c2bfa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "d7def810-a13e-4dc3-a759-99fb644dd3c1",
        "cursor": {
          "ref": "11bad14f-12ca-4307-a87d-48b0ae4aa9a7",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6a65a571-0f3f-4261-bc7b-e6b031ec73d9"
        },
        "item": {
          "id": "d7def810-a13e-4dc3-a759-99fb644dd3c1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c4443188-50db-45a5-9603-57dc33d16184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "4a8831ff-29f8-4c81-b2c5-339c4723889b",
        "cursor": {
          "ref": "b858b954-1a63-465c-bfc7-fba5a82fc793",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "badb45dc-0f0f-4c1e-b0f1-495c3245e274"
        },
        "item": {
          "id": "4a8831ff-29f8-4c81-b2c5-339c4723889b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ad522bd6-da4f-471f-8a66-30244fa83d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "fc8b9ef1-fd53-415f-b7bc-fe204ecd0864",
        "cursor": {
          "ref": "e9359925-7772-4e8e-a48d-7e0ce84a0a64",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "90c022ce-3c3c-4bf2-8703-b23a39ef3999"
        },
        "item": {
          "id": "fc8b9ef1-fd53-415f-b7bc-fe204ecd0864",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4d839291-8356-4515-a4de-4661efe9f212",
          "status": "Created",
          "code": 201,
          "responseTime": 5221,
          "responseSize": 994
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0faacfbd-2bb7-4b5b-bb3f-28fd0c3c8721",
        "cursor": {
          "ref": "20bbc731-4e2b-48d9-b5a3-89c109099798",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "64a600a0-e004-4081-b1ce-4ad080b6b22b"
        },
        "item": {
          "id": "0faacfbd-2bb7-4b5b-bb3f-28fd0c3c8721",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ff1ae12d-6890-4c6c-b5ff-3d6ecd48dbd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "fb024c03-212e-4d74-b194-10c7e3fdcdaa",
        "cursor": {
          "ref": "8cbfbe52-6077-42f0-88f6-bdc09f052bc8",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "39ed58ba-236d-4108-9e7a-8d4ce3ed4d4a"
        },
        "item": {
          "id": "fb024c03-212e-4d74-b194-10c7e3fdcdaa",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f8f3d40d-263c-483d-80e4-f1ebeff86579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "294af420-a5b4-40f9-8050-89f973bd5394",
        "cursor": {
          "ref": "59ef7dac-260e-47a9-b778-2d4b5e140ca7",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "290e2aa5-7a94-4a9c-8076-166cd3ff800b"
        },
        "item": {
          "id": "294af420-a5b4-40f9-8050-89f973bd5394",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3b714a00-249b-463f-a635-d22c8d52bb2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ddb892-6056-4157-a409-c05227ae69a8",
        "cursor": {
          "ref": "8eaa3088-5e49-4cb2-a975-c85ae014c9a6",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "50acbbaa-654d-41a0-9e25-df185a7010c3"
        },
        "item": {
          "id": "21ddb892-6056-4157-a409-c05227ae69a8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bc24006c-05ca-4339-b244-d38b1916d01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e67b5ec-7ab6-48d0-9c86-c8644088b462",
        "cursor": {
          "ref": "4978230f-ea45-435b-8c09-11806f4dddb1",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5536e12b-058e-4ef9-81f9-846e7e171022"
        },
        "item": {
          "id": "8e67b5ec-7ab6-48d0-9c86-c8644088b462",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b429d4d7-5966-4475-8b42-d2540888064f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1388dac0-7a94-4a5b-aa10-302a2c11210b",
        "cursor": {
          "ref": "7e8e31ea-84f0-477c-9d34-9116724fe59f",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0cec02f5-e6fa-4536-99ed-c6c49a54110f"
        },
        "item": {
          "id": "1388dac0-7a94-4a5b-aa10-302a2c11210b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5fa4957f-4a8a-4d2b-a6d9-d2643bfbc14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d72763-ca66-476e-b4bd-5c0ffdf8c10d",
        "cursor": {
          "ref": "1cafa3de-e101-48e0-9cd5-9fb8d3227dbe",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9efac3c8-18fd-46ad-a4c7-c47f6306665a"
        },
        "item": {
          "id": "f3d72763-ca66-476e-b4bd-5c0ffdf8c10d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fc75ab0b-0fa9-4e5f-8e93-94d69d458a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d53f7da-4d0a-4098-a589-1d9812cc7b45",
        "cursor": {
          "ref": "a5c61341-5660-436c-a284-2b4835d832f7",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f3ba1926-60de-48c6-838f-9a44f00d23c7"
        },
        "item": {
          "id": "2d53f7da-4d0a-4098-a589-1d9812cc7b45",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9fbc9398-b899-4e43-9345-5711e249cb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9087786d-b395-4849-83d9-037cb32dca4c",
        "cursor": {
          "ref": "ec51d4b7-f161-428c-9b67-b4cc66f3884d",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e56f4bda-6109-4221-aa1c-2765caa3e3f5"
        },
        "item": {
          "id": "9087786d-b395-4849-83d9-037cb32dca4c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f2695fa4-78fa-416f-b26f-f20b4e7a5df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4c6aef-8063-4939-bd34-abf3108b19d9",
        "cursor": {
          "ref": "c7f22347-1cfa-4c46-b52b-2fd8f4e14737",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a5c50bdf-f09e-481b-ac8d-ff8451974aad"
        },
        "item": {
          "id": "8b4c6aef-8063-4939-bd34-abf3108b19d9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "737dfb4d-409b-486f-b272-55d27716b867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6ac27c-5cb7-47a0-95a4-a50363567ba4",
        "cursor": {
          "ref": "ffd2f751-c8ec-4589-a0d6-3ebde744a5f9",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0011073c-7c19-4187-bb7e-f572116541ee"
        },
        "item": {
          "id": "3a6ac27c-5cb7-47a0-95a4-a50363567ba4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ff72b4a8-0a7f-4ab4-8f7c-ad199f077f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e378858-0c1d-423c-8715-f3ee42eebd65",
        "cursor": {
          "ref": "f2464494-524a-4585-a379-bd91406aafca",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "59fc0bf8-ffc7-45b0-8c58-146eacbbd2d7"
        },
        "item": {
          "id": "4e378858-0c1d-423c-8715-f3ee42eebd65",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c6625f2c-7c38-4e16-8739-0361468b5236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ff3029-0fdb-4b97-a6ce-d8e733c09e71",
        "cursor": {
          "ref": "dab95788-c87e-4edc-8604-b227aadff6ee",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "24beac8a-c752-4af4-8f3b-3de7803471cc"
        },
        "item": {
          "id": "a5ff3029-0fdb-4b97-a6ce-d8e733c09e71",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6799236f-a877-4fef-aee0-cf9c8598e11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb52d27-aa7f-4ed5-85c0-7feca5d2bf10",
        "cursor": {
          "ref": "9dd0e958-4c08-46df-9076-b1d28ce910e2",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "866fa023-ca71-41b8-a148-e5830940b77b"
        },
        "item": {
          "id": "efb52d27-aa7f-4ed5-85c0-7feca5d2bf10",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b03469a6-5330-4753-8cc4-9f3f3ed96488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1567a51-9a69-423c-950e-d70c6c120efb",
        "cursor": {
          "ref": "08857334-c338-4062-8ef3-436252a81589",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b611838e-9b51-4b05-b9fb-71c22ea0033d"
        },
        "item": {
          "id": "f1567a51-9a69-423c-950e-d70c6c120efb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1c1bc32a-1d44-4ce3-9392-20b4d242ef5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97161b97-8608-43e0-9fb2-15e0c6f162f5",
        "cursor": {
          "ref": "e29e5996-c07b-488a-9077-43e88bff2f02",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3a6a707e-c043-444a-aabd-2454ecc8d9b4"
        },
        "item": {
          "id": "97161b97-8608-43e0-9fb2-15e0c6f162f5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "80253c8f-fb68-498a-9d2f-eae34497c1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742fdda4-e1d3-46b3-bbec-f3ec099e8e7c",
        "cursor": {
          "ref": "8db0670e-0fe7-4788-963c-89ac0cb36252",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a3b77592-bbd8-4eea-8f88-de779aa43516"
        },
        "item": {
          "id": "742fdda4-e1d3-46b3-bbec-f3ec099e8e7c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e0e0714d-7fbd-4b8e-9acd-c4f118811a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d3d7e0-f684-4440-b410-ee69902dcffb",
        "cursor": {
          "ref": "1309511a-f02a-46b2-a8ee-52922b303c24",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5c60227e-cc94-45ce-8f9e-cf65036f222c"
        },
        "item": {
          "id": "80d3d7e0-f684-4440-b410-ee69902dcffb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "82120e4d-c3ea-4372-abb8-1c04fd20d189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1223b17b-7f09-4016-a163-1f81546a407d",
        "cursor": {
          "ref": "2e6f3281-e537-4002-80dd-e5405dcbe675",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0922db0d-96f1-4c34-b332-302bf8191d6c"
        },
        "item": {
          "id": "1223b17b-7f09-4016-a163-1f81546a407d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1fe7cfe1-3588-4664-8375-a10ed49cbd7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9757b58d-eeb9-47ad-8858-f6ce0f065090",
        "cursor": {
          "ref": "4d86f05d-bbe6-4bf5-96ae-bfa7a48a17d7",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "32aaa5c3-db74-4e0f-b659-2093d4cd431e"
        },
        "item": {
          "id": "9757b58d-eeb9-47ad-8858-f6ce0f065090",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fb07725f-7203-48ba-be04-afef76a0e827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cadf0711-be53-4f41-80a4-2c5daa06d9d7",
        "cursor": {
          "ref": "6ee0e481-e857-4420-ad30-56777fe36a8d",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0e1693cf-e375-4124-a57b-bf12e0a27836"
        },
        "item": {
          "id": "cadf0711-be53-4f41-80a4-2c5daa06d9d7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6e1dec7b-b9c7-42c5-9eb4-ac6f21e365c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcdeef50-6c93-40e9-ad5e-1bf2f7fd8af6",
        "cursor": {
          "ref": "0bc36b05-2940-44dd-822d-6c8cff9e37c5",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9415ce8a-07d7-478c-bf44-028eda746222"
        },
        "item": {
          "id": "dcdeef50-6c93-40e9-ad5e-1bf2f7fd8af6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e6dd1139-73cc-4aaa-9bcc-261a26e4d6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0159f2da-1968-4b53-bb8f-aec71c6780f1",
        "cursor": {
          "ref": "8205e85b-9036-4fe6-a895-74bc673f8e35",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "07a9d3c6-a751-4b4b-abf5-db286ce421b9"
        },
        "item": {
          "id": "0159f2da-1968-4b53-bb8f-aec71c6780f1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2691cf25-2105-4528-b106-33b6bbed9a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f433b589-c904-4bc3-ae9f-3a15c5b95d29",
        "cursor": {
          "ref": "b1bd88e1-1686-479f-92b7-5b0e6d930048",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "97720035-eae7-4449-aa97-3d6b26b6d25e"
        },
        "item": {
          "id": "f433b589-c904-4bc3-ae9f-3a15c5b95d29",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c91d4214-1585-4e45-91a5-3e6f782413e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0959d5c-6d95-4d8a-8b55-44dfe81f01f1",
        "cursor": {
          "ref": "330fb3a0-ed81-4023-b583-aba11794a432",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b0ddf52c-ba76-404c-a9fd-0861270424f8"
        },
        "item": {
          "id": "d0959d5c-6d95-4d8a-8b55-44dfe81f01f1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "38f1090c-bada-424a-bfff-3e6bcb0afe82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bccb7f-3247-44f5-bc2d-d31aabc2782d",
        "cursor": {
          "ref": "82e07eac-5821-4178-83e6-121a9b0144ec",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8e12c42b-b00c-44fc-bd2d-49a0693538f1"
        },
        "item": {
          "id": "54bccb7f-3247-44f5-bc2d-d31aabc2782d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "773b436c-27b1-44ea-ad34-467f13eadade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e586564-ea58-46ea-9528-b53f9f2fdcbf",
        "cursor": {
          "ref": "c1739faf-f93f-454c-aa81-9ff30771f913",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "cae69567-e2bb-4e8f-807b-8634ad54a478"
        },
        "item": {
          "id": "7e586564-ea58-46ea-9528-b53f9f2fdcbf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e424087b-ede2-48ad-ba03-f78647fd1b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d74b4c-2cb4-4dc0-900a-0fd07ad634ea",
        "cursor": {
          "ref": "15cb8e0d-efa7-4f58-bc01-ed3a3c6274a3",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7118bac5-64d7-41ba-915e-e20f6a401e12"
        },
        "item": {
          "id": "c3d74b4c-2cb4-4dc0-900a-0fd07ad634ea",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d0fb1397-42bd-441a-bbde-888696a5cc12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607b992f-9074-428f-9092-8371c05dc770",
        "cursor": {
          "ref": "6703497d-00d9-46f9-8d35-53989acd91a6",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bfbb8ff5-5016-44e7-be23-9cd45c768c9f"
        },
        "item": {
          "id": "607b992f-9074-428f-9092-8371c05dc770",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "551ae447-1a58-4c74-89e8-dc331350de6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e301a8f-4d6b-4f8b-9370-bfda0b52b52b",
        "cursor": {
          "ref": "df03fc41-ea55-4870-b163-461e45315cd4",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "287f6eeb-42af-444f-b622-83d5d59b9ab9"
        },
        "item": {
          "id": "2e301a8f-4d6b-4f8b-9370-bfda0b52b52b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b3e8af60-082e-4a0c-8941-b9e5e154f298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48133cf0-deba-46d3-926c-72f5b6ac9260",
        "cursor": {
          "ref": "0e2b8e5a-8e3f-4b8e-b88e-edba9460fdc1",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "239a8942-e0f1-47c6-ba49-e4980187b44d"
        },
        "item": {
          "id": "48133cf0-deba-46d3-926c-72f5b6ac9260",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "563b5c49-2a63-4c0a-98a7-9026cc12fb94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1335254b-2e93-4f7e-83f3-f37d2d97dcf7",
        "cursor": {
          "ref": "9e917bd8-2300-474c-b2b1-3b991ec85f9e",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "50b81234-7b7b-452e-86fb-06b6c1de96e1"
        },
        "item": {
          "id": "1335254b-2e93-4f7e-83f3-f37d2d97dcf7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9b229bc0-551a-4dec-99a4-49db61f31154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72088ec-a1fe-4e09-90ac-32cd2dd45cce",
        "cursor": {
          "ref": "d009d6a1-2820-44ab-bc7e-f4ae9b539f9c",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "06d8bf03-a06e-47e1-b164-eb84f419ed36"
        },
        "item": {
          "id": "f72088ec-a1fe-4e09-90ac-32cd2dd45cce",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3dd63924-127c-48bd-8610-053282a9b4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdce8b1f-768f-4276-b88e-293aaf02861e",
        "cursor": {
          "ref": "c510f31f-f2a1-4001-85fc-6c7179cbed75",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4c0e398b-3171-4894-8e7a-3bee9cb9bdf7"
        },
        "item": {
          "id": "cdce8b1f-768f-4276-b88e-293aaf02861e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7a373c64-0e9e-4ba4-a03c-3af60b691047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db96b162-4dff-478a-86fd-f88ccb59f7cf",
        "cursor": {
          "ref": "6b62311e-c830-42db-b7be-45c438bc80d9",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "38f7664a-bfe1-4b27-965c-8cdb5c1220b0"
        },
        "item": {
          "id": "db96b162-4dff-478a-86fd-f88ccb59f7cf",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e98a778e-2ad9-4fca-8186-b5206e2bd663",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370c022b-812f-456b-b58f-c2cdde1f2463",
        "cursor": {
          "ref": "18764a7f-dff4-4541-8be9-cc603d3d759c",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ae19de95-6f6f-44ae-baba-b4637cdbd59c"
        },
        "item": {
          "id": "370c022b-812f-456b-b58f-c2cdde1f2463",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b09e3d8a-3c2f-4558-96ad-39d282d4bb15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f61a3e-5a1c-4f97-9e0c-6d57c958ffd8",
        "cursor": {
          "ref": "49e25bd7-bbe1-4890-8ee6-5f85ccf596cd",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9c912f94-138a-43e5-be2a-eaf21959234d"
        },
        "item": {
          "id": "85f61a3e-5a1c-4f97-9e0c-6d57c958ffd8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6dfbb142-897b-41d6-a8d7-c48d6915156a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24fa44b-17c8-4e68-87ba-9696a07c8932",
        "cursor": {
          "ref": "c972a86e-d581-4e99-85a1-f28017d60a72",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a07f7e61-62b1-4ea2-967d-49cf81a9281c"
        },
        "item": {
          "id": "f24fa44b-17c8-4e68-87ba-9696a07c8932",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9598963f-aa8a-43da-9758-5b69a4cb1c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6189bb28-f992-42af-821a-a6dbe7ac5b5c",
        "cursor": {
          "ref": "14cf8356-6793-46c7-aaf7-0b94857f36f6",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cbc18b35-aaa1-4dd9-83f0-c1116b487781"
        },
        "item": {
          "id": "6189bb28-f992-42af-821a-a6dbe7ac5b5c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d7275266-3c12-4008-9f80-b5986e4ad4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc26f5d8-35c5-4aa9-9c1f-13f9d5577442",
        "cursor": {
          "ref": "1199d1ac-f38d-495a-82f5-8ff6f0b263f4",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "eb9d27e3-c8f9-4130-aa7f-44d743ee4053"
        },
        "item": {
          "id": "dc26f5d8-35c5-4aa9-9c1f-13f9d5577442",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bc24baf4-365d-41b8-80c9-437249c2a610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50a28ff-af94-4579-a488-0ac3c2e55f2d",
        "cursor": {
          "ref": "1bc1b9a7-cae1-4f4c-bbaa-7eb82e425a22",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4233444d-2dc4-48ac-951c-4d3febe1a17e"
        },
        "item": {
          "id": "a50a28ff-af94-4579-a488-0ac3c2e55f2d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e029cbbd-289c-4952-a554-0e58c5a79f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cab1d8-b3a6-4b7b-8c83-1bd5381bc707",
        "cursor": {
          "ref": "4d428e40-49d9-4d8c-b1dd-6bb4abd5536f",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b4df6e3c-a45b-412e-a6b1-b6c0409f6edd"
        },
        "item": {
          "id": "70cab1d8-b3a6-4b7b-8c83-1bd5381bc707",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "90caad61-5add-4def-b6cc-9d004aa5c37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e928276-a6d0-4f86-a6be-f6eef9d10895",
        "cursor": {
          "ref": "2acf89b6-dabd-467f-ac24-1d5c33461744",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "231cc0ef-f054-40d8-8ad6-3c2c89c41c67"
        },
        "item": {
          "id": "5e928276-a6d0-4f86-a6be-f6eef9d10895",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "044744a3-b88c-4d37-b76f-ae23c435d64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46ea91a-52f4-48ee-8a37-69f804a2c3b0",
        "cursor": {
          "ref": "94ae1332-68b6-4238-8b18-7f4131369c4f",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3068c16a-db3c-474e-a72a-727c9b21d3ee"
        },
        "item": {
          "id": "f46ea91a-52f4-48ee-8a37-69f804a2c3b0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "31c5234c-06b9-402a-b6ab-86790bfce4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90752e42-3f7c-42fa-aa26-ac815768dd63",
        "cursor": {
          "ref": "70516fb7-9052-41c5-9bba-4da15ae9c5f6",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "bfaecf6d-5e73-4138-b0db-25a5100e548a"
        },
        "item": {
          "id": "90752e42-3f7c-42fa-aa26-ac815768dd63",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8773186e-69bd-4305-abe6-302943def585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273ece09-dbea-44cb-95ae-2e50f025553a",
        "cursor": {
          "ref": "d465bf12-c335-4c07-be9d-2474318cfbd3",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "94fccd37-dbfa-49e2-8a44-8be29e9d7b20"
        },
        "item": {
          "id": "273ece09-dbea-44cb-95ae-2e50f025553a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "49cbb535-af6e-4010-b703-9adaac964af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917f202d-67ee-4477-b8ed-3768d37a1a22",
        "cursor": {
          "ref": "6412fc1a-a35d-4fad-a61e-8894095cab5b",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fc6f1412-080e-4dee-9059-90787ac3f5d2"
        },
        "item": {
          "id": "917f202d-67ee-4477-b8ed-3768d37a1a22",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "177b1535-b8be-47f3-ad58-bfd718f8d84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260b35c7-4a6f-4474-a8b6-76a1cc8c9977",
        "cursor": {
          "ref": "158a98dd-1722-4efc-806d-2a9a210cc02d",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "cc74b831-8335-4d70-958e-1c33a8a43e8d"
        },
        "item": {
          "id": "260b35c7-4a6f-4474-a8b6-76a1cc8c9977",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c66e02ae-cb32-4885-9968-e2107ff790b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deba07d3-0250-49a3-8c0d-7ffd8f746377",
        "cursor": {
          "ref": "6f7e5f8d-2a50-45b5-8e02-95571c093112",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a17a4ba6-92e8-43eb-953f-5acfb6148018"
        },
        "item": {
          "id": "deba07d3-0250-49a3-8c0d-7ffd8f746377",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "243a8cce-26c8-49f7-99e7-f82e40cc80bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00bf1a1d-bf40-4c8c-afa1-6ab69f075306",
        "cursor": {
          "ref": "e08033c8-f7fd-41ad-b9f5-55fd5a7d7631",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3994471d-7b9c-49ac-9c91-4035ddb1f658"
        },
        "item": {
          "id": "00bf1a1d-bf40-4c8c-afa1-6ab69f075306",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "36c80708-66a4-4a1f-bfa1-d1b8ecac4ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f9cbc8-f5d9-4c14-86b9-1578b5362088",
        "cursor": {
          "ref": "3d403c16-6120-4c0c-bf9e-b685b5dde2b1",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "99c9b494-9da5-46c2-8059-78850cc4fe13"
        },
        "item": {
          "id": "28f9cbc8-f5d9-4c14-86b9-1578b5362088",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3e2b3d19-ed79-4b13-8be3-e711eee87ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b0860a-1d3d-4710-94fa-0a7c97d17016",
        "cursor": {
          "ref": "486a9e7e-b43d-4846-a981-e0a6cf03f0a1",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "da669472-57df-4671-ad87-2caf809c2acf"
        },
        "item": {
          "id": "23b0860a-1d3d-4710-94fa-0a7c97d17016",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a4563a8c-44fb-4003-ac9f-1d806b3942de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900ebc1c-ab99-4716-841f-e4a73cfb5549",
        "cursor": {
          "ref": "56c02b8b-74fc-4f5f-b992-0490a0393b34",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2598a712-a43d-403c-abee-d1b219a6bd92"
        },
        "item": {
          "id": "900ebc1c-ab99-4716-841f-e4a73cfb5549",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "682413b5-dfef-4f95-b524-0cc5bf22bfa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a345e4da-2c10-45d9-a16e-bd06f92a347e",
        "cursor": {
          "ref": "e0da6879-16de-4449-b2b4-e426350f6bb5",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6e59beef-2e42-4d42-b7a1-172996756d5a"
        },
        "item": {
          "id": "a345e4da-2c10-45d9-a16e-bd06f92a347e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ef3998f5-cb55-46a7-a8db-926af8fa7fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa597213-cee7-4604-a719-7a9058a3c7c6",
        "cursor": {
          "ref": "0c82a648-b90c-46c8-a540-718bb5b30c5f",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f6ac1136-59e5-460e-b00c-7df38e468295"
        },
        "item": {
          "id": "aa597213-cee7-4604-a719-7a9058a3c7c6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f539cc81-aeb7-4c6d-99a7-3102e9577cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ea1eb6-6ee3-4909-9284-7f2de47379ee",
        "cursor": {
          "ref": "c01718f8-46d2-4ee7-bb08-bb12a8998b3f",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "eb10e294-8b0d-4d71-855c-da359157f28d"
        },
        "item": {
          "id": "97ea1eb6-6ee3-4909-9284-7f2de47379ee",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ec22b25b-ab21-4f99-af93-5d087aa638e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e355767-7d72-462d-8db1-1649e66e327d",
        "cursor": {
          "ref": "370e707a-3534-4f85-b4b1-c4132abd06ea",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1cf17a3b-fd59-4615-ab57-c60abc32a29d"
        },
        "item": {
          "id": "3e355767-7d72-462d-8db1-1649e66e327d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "95a3cc20-4f37-4507-9786-b6bf8ce4839c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a275a9-b9c9-4c97-967e-339ef39fe95b",
        "cursor": {
          "ref": "1962c692-026f-4750-b3a2-16141fe200e1",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6053db82-e8cb-4e0d-92e1-0b23d5fcced5"
        },
        "item": {
          "id": "30a275a9-b9c9-4c97-967e-339ef39fe95b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "33f510b7-8fd2-481a-ad72-f44b6e5afd3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da48e92-920c-4802-ac16-1d7053210ea8",
        "cursor": {
          "ref": "affb9432-4746-49c3-9c4f-e1569ec21a15",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b7dfce5e-89de-4c04-a62d-3b78ded3498b"
        },
        "item": {
          "id": "7da48e92-920c-4802-ac16-1d7053210ea8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0b5564e7-9ce6-4f04-85cc-9dc6562e0c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cfc447-16a9-4176-b704-6f1f604bdfdd",
        "cursor": {
          "ref": "836c45a9-6fd4-4009-8f4f-10b6d53fd548",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ed222214-de56-4357-ae8a-de5fe87058bf"
        },
        "item": {
          "id": "57cfc447-16a9-4176-b704-6f1f604bdfdd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1bce8fcc-f27b-4653-ac34-e32b11473fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1533b225-7570-4e09-b86e-c092381d0267",
        "cursor": {
          "ref": "59c0b599-579c-4f46-a2c3-77796d0cb3a6",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "92100474-fa80-4527-9f68-0b4e48e14186"
        },
        "item": {
          "id": "1533b225-7570-4e09-b86e-c092381d0267",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "96fbf4bb-f645-474f-9593-e33f6aee8f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af4c09d-d032-40f1-9670-1a2e7b529398",
        "cursor": {
          "ref": "73652b4b-ef76-4f7c-9a8b-7316535e0021",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "654ad2c8-e6e6-4702-a4a7-0985290b3ed9"
        },
        "item": {
          "id": "1af4c09d-d032-40f1-9670-1a2e7b529398",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6caf097e-8c8a-490f-86f4-cb5f5ceb2239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af981084-2cc2-4e3d-a9db-f855e90bb9c3",
        "cursor": {
          "ref": "180b7a6c-0eed-4911-aea0-c0f03e276b05",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0fa189fa-d18e-42bc-978e-1117fd79a2c9"
        },
        "item": {
          "id": "af981084-2cc2-4e3d-a9db-f855e90bb9c3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "60cb019d-d241-491b-93ec-6e4b52bc012d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f437852-0d00-48eb-8a15-04b2d187c47a",
        "cursor": {
          "ref": "e2d2367d-38f4-4229-8a95-bded175fa852",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8bca98aa-d9ea-4410-8d0c-9e6b10ebd42a"
        },
        "item": {
          "id": "5f437852-0d00-48eb-8a15-04b2d187c47a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9c6ed539-13fe-4adc-bea3-5ee03b25a9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f4eb3a-51e5-4c97-bbb6-96164953f2a3",
        "cursor": {
          "ref": "63a73682-cc1c-4201-a0b4-80ad8a186dc9",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4b30d835-7e1f-4881-99e4-c0f999d1826a"
        },
        "item": {
          "id": "e0f4eb3a-51e5-4c97-bbb6-96164953f2a3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3af984e3-70bb-46d8-9012-2aa11f621b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70322584-efc3-4c8a-98a7-a2ab24bb7a9a",
        "cursor": {
          "ref": "5e98b00c-6fbc-493b-80b3-9c601a2dbf94",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9614347e-8800-4de4-9a0a-64f26dbb9e11"
        },
        "item": {
          "id": "70322584-efc3-4c8a-98a7-a2ab24bb7a9a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c245b999-38b1-4eb4-936d-cc3f85c3838d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d955498d-2925-4743-9bf6-c248c74aa234",
        "cursor": {
          "ref": "96d8923a-0042-4e98-abaa-6df2f2500ff9",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6b343fa8-8e21-40f9-be6f-8c9d26508750"
        },
        "item": {
          "id": "d955498d-2925-4743-9bf6-c248c74aa234",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "958e9f78-b814-4a31-ba5a-c83545d737c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c44940-62e1-44a9-b901-3bc0685d7d04",
        "cursor": {
          "ref": "5e95568a-48c0-41a3-8d68-5c078926d8e7",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "fcbaa0a2-d36e-4300-8a40-aa92c7c0547b"
        },
        "item": {
          "id": "06c44940-62e1-44a9-b901-3bc0685d7d04",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "fcb01d9d-4a98-42eb-8983-e099cd456546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f82e6b4-372f-41f6-bb1a-e177fe2ea57d",
        "cursor": {
          "ref": "098de5aa-d5b1-4f73-96e7-bd68cb952b25",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fd907f3d-7c78-41bc-b9e6-6e6594e99b77"
        },
        "item": {
          "id": "8f82e6b4-372f-41f6-bb1a-e177fe2ea57d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4155d357-fa01-4078-a2f5-0ceb51337fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3af368-44c7-4d0e-9594-afdaec730c83",
        "cursor": {
          "ref": "40ba3fdb-1ecf-4c6b-9746-37adddf259eb",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b10ed3ff-ee8d-4232-ac58-370666ee6998"
        },
        "item": {
          "id": "ec3af368-44c7-4d0e-9594-afdaec730c83",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b219c812-d3cc-4575-b8ee-13150114ce9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7799cc76-2afd-4c8b-b1e6-a91ef3ad0714",
        "cursor": {
          "ref": "1e154a66-4a3b-484b-8918-bf7efce32ae7",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "07290a9f-391b-4781-978b-a23ce4ac805d"
        },
        "item": {
          "id": "7799cc76-2afd-4c8b-b1e6-a91ef3ad0714",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7080a765-e1e2-4655-9641-0cd424e6b934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79016eba-039d-4950-8d3c-66b650c993b2",
        "cursor": {
          "ref": "98732402-d90e-4a84-9ae0-baa18ba9c148",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "60df4a15-8a8f-4510-8149-acc6dd319f40"
        },
        "item": {
          "id": "79016eba-039d-4950-8d3c-66b650c993b2",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "881a1ce1-2dc8-49e6-9a68-f33c90214833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551bff4d-dc87-4717-a7ed-ae4136199ff7",
        "cursor": {
          "ref": "dafac9b7-8050-4eb9-b425-d2587a774353",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "23ef4f5c-affd-4383-a713-ef2de5f39bf8"
        },
        "item": {
          "id": "551bff4d-dc87-4717-a7ed-ae4136199ff7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1efd024f-4b3e-4452-9eac-a2c0c46111f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1900c55-0711-456f-a49b-4ca21f0862ef",
        "cursor": {
          "ref": "7c11a49a-3bf6-4da5-b96a-10a38c286ed7",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2b73f49e-f53a-4a4d-b065-6e70a27b0a06"
        },
        "item": {
          "id": "a1900c55-0711-456f-a49b-4ca21f0862ef",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4eb46504-b6b1-49c2-9061-b7def81763d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc27768a-d4eb-49e9-81e4-edf6ce381f2a",
        "cursor": {
          "ref": "a94d9d77-2aff-40bf-b735-3aa7b517aa7f",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "692ea7e4-d996-4b12-be18-c98d0005bc7e"
        },
        "item": {
          "id": "fc27768a-d4eb-49e9-81e4-edf6ce381f2a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1d219499-4f3c-491b-a404-5d2f11f9e966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e805c858-d681-4562-b5fd-6c24b63fba55",
        "cursor": {
          "ref": "c415344e-f6b9-4093-9829-9a875105587b",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "cc129d43-f3a9-4a7e-bca6-daefdc5c6875"
        },
        "item": {
          "id": "e805c858-d681-4562-b5fd-6c24b63fba55",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c54a0c81-0ddd-450e-995a-a8949116b93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150535f1-d642-4d80-ab06-973f5a985a56",
        "cursor": {
          "ref": "c7754d85-3bb8-4d09-b2ee-5ccc20e5c51b",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7cbb4bd8-e104-451a-ba01-36b36970583e"
        },
        "item": {
          "id": "150535f1-d642-4d80-ab06-973f5a985a56",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "19f57eb7-4f10-4188-95c3-a882ba1c5502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9b1ec9-2c9d-4e7c-b264-6f09d660227d",
        "cursor": {
          "ref": "a90697e9-2bde-4b06-8c93-4dc15a89ae2d",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f824aa48-a0aa-4eb5-ba2c-9151b151687a"
        },
        "item": {
          "id": "6a9b1ec9-2c9d-4e7c-b264-6f09d660227d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "78f8ef38-4050-4ea5-92d9-4b4201cc19b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f861de4f-0179-4aaf-b58c-b42353a03784",
        "cursor": {
          "ref": "3d584fd7-570a-4532-892c-5529ea8725bc",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e3e02841-e14d-468a-afae-838151177235"
        },
        "item": {
          "id": "f861de4f-0179-4aaf-b58c-b42353a03784",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b144c3d5-2cb5-4dba-aa3e-ca8294b007fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918dc360-048b-4bfb-976c-1f54258ee35c",
        "cursor": {
          "ref": "3eef89ea-2368-46c9-b003-80850dc1d31e",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "abb13e3e-04e3-4318-8c6d-e78427e98038"
        },
        "item": {
          "id": "918dc360-048b-4bfb-976c-1f54258ee35c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "229a6f30-58e5-4e9b-9a87-667561d0c9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd01aa1c-999a-4a54-9ff7-310dc58ebb49",
        "cursor": {
          "ref": "e86d7652-061f-4ac2-84a8-bbc28f367fa5",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c0320b1a-c82b-49e3-94e9-1d8c065aeeb7"
        },
        "item": {
          "id": "cd01aa1c-999a-4a54-9ff7-310dc58ebb49",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1bbfbc3e-b812-41c1-b717-6b795dbd051b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9852d487-e8ea-4b6c-8291-cafbc19648bc",
        "cursor": {
          "ref": "333987c1-f70a-48a7-9bd6-dd9adc188828",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4f43d70b-4374-4a91-96c3-3778811ebea3"
        },
        "item": {
          "id": "9852d487-e8ea-4b6c-8291-cafbc19648bc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "23b7a874-572a-4116-8d0f-d499c48b8032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032ddaf4-1ddb-4949-b730-122604ce17ce",
        "cursor": {
          "ref": "85b432f6-8736-4ecb-b69c-5b44460bdec0",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a2304c09-f5ef-4a08-b619-07122eecf4bd"
        },
        "item": {
          "id": "032ddaf4-1ddb-4949-b730-122604ce17ce",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5203d501-4807-44bc-ad1a-c0638bd521df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3e3d68-c446-4495-b124-9ea8fc9a90d1",
        "cursor": {
          "ref": "57a08c57-fffb-4b42-8422-f7fe4bddb7ba",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ca0ac6db-9633-44a9-989c-5e3d6cd11156"
        },
        "item": {
          "id": "ad3e3d68-c446-4495-b124-9ea8fc9a90d1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f87b043e-f052-4bf4-8847-622352152810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5b56e1-c9d3-4c96-8d1a-61c38db3ed37",
        "cursor": {
          "ref": "e4bdc904-50f8-40b9-9fd5-46487882a751",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "51523d78-9eb1-4578-b1bd-b46e65f95767"
        },
        "item": {
          "id": "3a5b56e1-c9d3-4c96-8d1a-61c38db3ed37",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5a61906e-4700-4dfc-bd5c-0d77ad210b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11119d08-17cb-47db-860d-ade66c97502a",
        "cursor": {
          "ref": "75a1e1a7-9ed4-4284-aad1-6a8788e4d5ea",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "807a048e-37e1-4c48-a9f2-ea0761fc4194"
        },
        "item": {
          "id": "11119d08-17cb-47db-860d-ade66c97502a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "59e052a5-2379-4d37-ae87-227ecea5aa4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6f0e84-de97-4ad1-9d30-e669db0fe578",
        "cursor": {
          "ref": "db5039fa-56b0-4013-9bd9-6fed594e4225",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5cf1eab4-33e5-48d2-9e42-8c8f7c2bab79"
        },
        "item": {
          "id": "af6f0e84-de97-4ad1-9d30-e669db0fe578",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b0c6a5de-aa7e-4da8-9fb0-7944c4af9f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806dfc09-1da4-4093-b9a0-58a69ef0be6d",
        "cursor": {
          "ref": "6afb896a-c400-43db-93d1-6b70a0f71184",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ca41d2e7-1d30-4e67-9744-d56bfd1c541c"
        },
        "item": {
          "id": "806dfc09-1da4-4093-b9a0-58a69ef0be6d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "59816d30-7721-4d71-bc2d-639a6ea272de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6da587-b719-4cda-8857-102ea5de5bd2",
        "cursor": {
          "ref": "a278c405-2143-453f-bc21-d488b88e6380",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e11bbf4b-7649-45d2-97a9-b03fb9d48a93"
        },
        "item": {
          "id": "8d6da587-b719-4cda-8857-102ea5de5bd2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f33d5de2-34bd-4768-b7a4-7f7826603c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae952d9-882e-4877-abf9-9f1118ca1cfe",
        "cursor": {
          "ref": "40d95b5d-3c70-4e65-998a-41fb2025cddb",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "276d944b-11ec-4de6-96c8-2b518d222570"
        },
        "item": {
          "id": "aae952d9-882e-4877-abf9-9f1118ca1cfe",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9f2d7be9-eaae-46d8-8d1d-78bdf76dc593",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "ac4a3e11-5041-44af-88fb-a7573d785952",
        "cursor": {
          "ref": "5b34028f-adf1-4d11-ba53-e1873a44e465",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "68921077-ad5c-42ae-82dc-975401612f09"
        },
        "item": {
          "id": "ac4a3e11-5041-44af-88fb-a7573d785952",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a973aa59-4928-4065-8598-bedc39bcaf5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6dbd5c-c20b-4504-a491-3834177fad1e",
        "cursor": {
          "ref": "0f1640a5-6e9e-4be5-8a59-c17a3e0c99f8",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4d92ceeb-7fb9-419c-9b8b-01a4f53abd21"
        },
        "item": {
          "id": "ba6dbd5c-c20b-4504-a491-3834177fad1e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "dcdefa29-a76b-4f08-b17f-4fe6f547a008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a3a9a1-e331-41ba-9ca8-0e2607eb7cb1",
        "cursor": {
          "ref": "e24b76fe-6b14-4ae3-b333-4f61c5c2cab0",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "15a40e26-7ba9-4d40-b257-ddb3f3d5c045"
        },
        "item": {
          "id": "68a3a9a1-e331-41ba-9ca8-0e2607eb7cb1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9931744e-d4fa-4671-b431-ec9a5ab3435b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212ed51e-f32e-4069-868b-5ce88adf7f69",
        "cursor": {
          "ref": "7ee7ca0b-d176-49c1-aa0b-646049b9ba41",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f13a9eb5-5dbf-4056-8c03-2c9d86eb822b"
        },
        "item": {
          "id": "212ed51e-f32e-4069-868b-5ce88adf7f69",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a3b0d577-a7f6-4ad1-bda6-c8f0a6770d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b94267-f2a4-45d1-8fd7-0391bcf5adcc",
        "cursor": {
          "ref": "edf82280-4991-4908-a026-92d08b923f92",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "719e1c53-d5e1-4ea0-8653-b9eaf9367d05"
        },
        "item": {
          "id": "b0b94267-f2a4-45d1-8fd7-0391bcf5adcc",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "861ab1a1-bbb1-48e6-8e16-6fc26c56d014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ecf9f1-ddbb-43a3-a4bf-38458e32e5aa",
        "cursor": {
          "ref": "fb2d4e4d-32b3-4d08-8027-298bab783fb4",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ee95df38-42b1-428b-9170-3698097e20e4"
        },
        "item": {
          "id": "40ecf9f1-ddbb-43a3-a4bf-38458e32e5aa",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b9e7079d-33a7-48cb-b4bb-b8fe01b7d013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbfb79c-37d9-41f7-98c1-49592fbf8384",
        "cursor": {
          "ref": "9f3123ce-d3bc-4bc7-8216-aba40592732e",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cd52bf21-65fd-493f-9aba-fadc652c80cc"
        },
        "item": {
          "id": "cbbfb79c-37d9-41f7-98c1-49592fbf8384",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "08b056ee-8876-4bf7-8cd9-165d45b57010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb93a9fe-65d3-4f97-b444-c389867da34b",
        "cursor": {
          "ref": "2bbd0965-92d6-4031-beb4-75a2ffb41f00",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6dfee3e3-5280-4f56-bb9c-9ac337378dc2"
        },
        "item": {
          "id": "fb93a9fe-65d3-4f97-b444-c389867da34b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ac3356e3-c86e-46ee-8367-8aa142ced846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbe7676-2204-4dac-af2b-22ded8d99aaf",
        "cursor": {
          "ref": "5c777b67-c4b3-4f64-abd9-46c71d105097",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6ec225fb-888e-4432-ac4c-425106dcb4cf"
        },
        "item": {
          "id": "afbe7676-2204-4dac-af2b-22ded8d99aaf",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d9f92851-e2e5-4f07-8424-57ccec101c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dadef5d-5e87-417e-81d9-2a1c950a85e1",
        "cursor": {
          "ref": "4fe1e9a3-c860-4d8a-b627-275a950bf984",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "987eed23-a9ad-4975-beda-1672ea02573e"
        },
        "item": {
          "id": "1dadef5d-5e87-417e-81d9-2a1c950a85e1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "210c4d60-1d8e-4ac6-874b-3829df2cdbf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f2cf5f-a17c-4eeb-baee-a03e87784550",
        "cursor": {
          "ref": "e045bab4-1410-4b81-8762-54f2dcbb5c63",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7c7afbf6-4a46-4b94-98a8-033481688574"
        },
        "item": {
          "id": "85f2cf5f-a17c-4eeb-baee-a03e87784550",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e327a9dd-c200-4f92-814f-b866b7bc0f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793439d3-985f-4469-b6ee-fe3e08c7db11",
        "cursor": {
          "ref": "b1bf6c87-b3d1-4320-9424-0b19bb50d572",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8bce31e6-7021-4838-b92d-e6ff9d942934"
        },
        "item": {
          "id": "793439d3-985f-4469-b6ee-fe3e08c7db11",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "bad389d4-b27d-4941-a654-fa6fd5d4cf5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f69875-b112-47f8-9306-84661147b722",
        "cursor": {
          "ref": "9c74f294-c39a-4d12-a0ad-237e39d183c7",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "12a83c98-351e-4876-b0f1-06238f79ae2b"
        },
        "item": {
          "id": "37f69875-b112-47f8-9306-84661147b722",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6c2c2456-c3c2-45d3-be89-38dc2da5161f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad87d28d-9a06-498c-b3cb-899415a77e02",
        "cursor": {
          "ref": "ba9986ba-c6ce-4e3b-8c9c-8b8e45bece73",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3f2bc390-8ad3-4fd3-9c51-49420e24da39"
        },
        "item": {
          "id": "ad87d28d-9a06-498c-b3cb-899415a77e02",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "07adb637-bb47-4fbb-a5d4-58b31d0e1daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c91562b-f180-4b41-ba7c-1628c93d788d",
        "cursor": {
          "ref": "13d3c89d-e2b8-4b54-9560-3e9438ef938e",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3019c245-2926-45e3-b1bf-e464dc029749"
        },
        "item": {
          "id": "5c91562b-f180-4b41-ba7c-1628c93d788d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7a632407-f8cf-430a-bdb1-f1f11d294186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d825d6-2a86-4d3d-b8d7-8dac017b71e0",
        "cursor": {
          "ref": "9debbbbc-7475-46d8-adac-579853ef9d9f",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e9ba17e8-f7f9-447d-9900-81cdaf90d1fb"
        },
        "item": {
          "id": "f4d825d6-2a86-4d3d-b8d7-8dac017b71e0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1f7811fe-fb4c-4d1d-b69d-28b070cba886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457787e9-8e60-4b60-b76a-1a8b8f7ca1e9",
        "cursor": {
          "ref": "46373e4a-b5d9-4658-836f-3fd590b11f14",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "de1e29e8-f0be-454f-b0a0-e12e7bc7c9ac"
        },
        "item": {
          "id": "457787e9-8e60-4b60-b76a-1a8b8f7ca1e9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3e4ff18a-cbd2-49fe-8058-beadc188a796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83446a78-ac25-48a6-a153-7e7c609a397a",
        "cursor": {
          "ref": "99908ec4-37ad-4fe2-8871-dfa084da801b",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e5f46f7f-1b64-41ae-8ece-4eb7bb8bbddd"
        },
        "item": {
          "id": "83446a78-ac25-48a6-a153-7e7c609a397a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "390c154e-a3c0-43d6-9f43-757f188fd6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82cf3bf-6b97-4f5d-8254-e110feb0a508",
        "cursor": {
          "ref": "76a004c7-d99d-47c2-8c80-12e48a0280a3",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d585764d-8363-4862-9244-512301fb175c"
        },
        "item": {
          "id": "a82cf3bf-6b97-4f5d-8254-e110feb0a508",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "24cb802d-2d81-48a5-9822-584c4986ea38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6cf892c-7e1a-4298-9e83-da46d2a91073",
        "cursor": {
          "ref": "42cc0b9d-2317-4670-98d8-e45755305db8",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "60a04e00-65e1-4eae-97a9-1690c035e917"
        },
        "item": {
          "id": "e6cf892c-7e1a-4298-9e83-da46d2a91073",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ef7a2307-b6b3-40cf-af9f-4d3d3f752d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c771d4-2ed4-47bd-8b15-ccb576858d1b",
        "cursor": {
          "ref": "88c67c83-e75d-42c8-aa21-e979d088edd7",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1408ba98-7fc8-42e9-9b40-8d7deeff5737"
        },
        "item": {
          "id": "11c771d4-2ed4-47bd-8b15-ccb576858d1b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "336227a0-e2e8-4d41-8265-099dcde60858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1409d81e-f702-46db-a6c6-d95536c57d40",
        "cursor": {
          "ref": "ae5a8d9d-ec28-417f-b5cd-ac0cef48db61",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d742254c-a3fc-4592-8303-564099f95e97"
        },
        "item": {
          "id": "1409d81e-f702-46db-a6c6-d95536c57d40",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "07f24897-77f9-4f3a-81b4-7301d246e6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c6b9da-6d56-4446-b706-abb3a661520a",
        "cursor": {
          "ref": "83d7ac69-c92a-4447-b7ea-0d6e50ffe2cd",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "88ea2613-4247-4c37-9367-cd799fa0385e"
        },
        "item": {
          "id": "a6c6b9da-6d56-4446-b706-abb3a661520a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c37224db-40a3-426b-8f21-4cd78a1c122f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90237ca4-c704-457a-84d0-8b35e6dc5c9c",
        "cursor": {
          "ref": "30f166d7-a56d-4691-a19b-0f8058600462",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "05b5e359-cf1d-4272-be3f-5af70e22ae1e"
        },
        "item": {
          "id": "90237ca4-c704-457a-84d0-8b35e6dc5c9c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1b3c662e-38e5-414d-b352-6f4fcaa8b4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ad74dd-0ff9-4227-9357-9b91608f2264",
        "cursor": {
          "ref": "2edd2e41-234e-42e5-8b60-c9b289a44a05",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ab29652f-ab94-4316-9d1b-1018cd4954fc"
        },
        "item": {
          "id": "92ad74dd-0ff9-4227-9357-9b91608f2264",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "cef16acc-0822-4bc9-a50c-db63df0ced36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ffa91e-9161-493b-b2a7-531c833a08a7",
        "cursor": {
          "ref": "e826cf23-7422-46f9-85fb-34ca9151f86c",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "506c2be3-5e02-4fc3-be2a-4c5790e61a86"
        },
        "item": {
          "id": "25ffa91e-9161-493b-b2a7-531c833a08a7",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "184ddef3-813a-472e-8d50-5d8932f599db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f4aebe-27b9-4f7a-b4b5-ef196ca8a0ad",
        "cursor": {
          "ref": "a41e5dd2-9006-4851-b60d-8ba8bd36c4f8",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "63eb2f82-965a-4f50-900d-e7c5894bb410"
        },
        "item": {
          "id": "c5f4aebe-27b9-4f7a-b4b5-ef196ca8a0ad",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "65ccb8b9-2e4d-4003-a4ab-cb71d9fa722c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8474d37e-bb09-4059-916b-eac537bd3c0f",
        "cursor": {
          "ref": "f34afc85-5e12-4939-b853-1122cc2a27d1",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1506e3ad-039d-4a5c-8983-15ef10120fe3"
        },
        "item": {
          "id": "8474d37e-bb09-4059-916b-eac537bd3c0f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "eb90864a-9c00-47e4-b75f-d6e3dca76c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ce10ce-c3ee-43a1-8956-08738bdc4ebc",
        "cursor": {
          "ref": "9c9d3c0c-d3cd-4374-b4a1-8c721db84717",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "61ec8ae6-c0ec-4d5d-a6bb-3b26315b7c32"
        },
        "item": {
          "id": "f5ce10ce-c3ee-43a1-8956-08738bdc4ebc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e7f93a83-6211-447e-b26f-ba56dda4b4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4418b228-d9ec-49f6-9c83-2e4513537931",
        "cursor": {
          "ref": "3fdc0ab6-869c-49c7-94a5-de498152da43",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "059d83cf-84f7-49bf-bd6b-dd1a022cbece"
        },
        "item": {
          "id": "4418b228-d9ec-49f6-9c83-2e4513537931",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0a620257-ceba-4dfd-bb43-7e8cca120201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31c0196-bce6-4cc3-9b40-31fa6bf547ac",
        "cursor": {
          "ref": "f8698133-c97a-4174-abe2-2b80238116d8",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "187218d7-0398-4326-b404-2e95254ff227"
        },
        "item": {
          "id": "a31c0196-bce6-4cc3-9b40-31fa6bf547ac",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a4939593-66c5-4753-9228-cd3bb41074ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a1b7c6-d6ab-460a-ba08-450d2e6e6a3c",
        "cursor": {
          "ref": "f3f923ff-dc93-446f-bd73-70aef2df8527",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cfe37c74-1020-46b8-b077-31d142ac426a"
        },
        "item": {
          "id": "c5a1b7c6-d6ab-460a-ba08-450d2e6e6a3c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "017ad3cb-0061-43f4-802b-dee0bf347e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce97e0f1-78e8-4405-b827-9fbfecba6965",
        "cursor": {
          "ref": "1f6b9a51-e4bf-443f-bf8f-aecba0b39c17",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "96d398d8-f6ae-433c-98f8-41e6d6450b7c"
        },
        "item": {
          "id": "ce97e0f1-78e8-4405-b827-9fbfecba6965",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "bf4585cd-174e-4aa8-9e2e-921cdf0ff6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56bc1fde-a8dd-47cf-8cdc-23535acd6356",
        "cursor": {
          "ref": "2b0003ee-1dc0-4419-a373-20844e3e389b",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f0075f18-6448-4e33-a182-80244ce186ab"
        },
        "item": {
          "id": "56bc1fde-a8dd-47cf-8cdc-23535acd6356",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e222c2f6-be73-4537-83a8-3dafc85ae046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e0ce5e-b8ed-4a5d-a275-114e22452c82",
        "cursor": {
          "ref": "4aa57213-b16e-4c7c-87c0-9e083d3f5a55",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d83ca795-2c20-498b-bada-0ad2b5706d4e"
        },
        "item": {
          "id": "b0e0ce5e-b8ed-4a5d-a275-114e22452c82",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ea8231a1-858f-45eb-8101-712ed2d1990f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6892f92c-f9e6-476b-a0bc-5b7025474a10",
        "cursor": {
          "ref": "5e57cd16-3546-4f9f-bb30-983792dcd70a",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2da675bf-62fb-4c09-a57b-4a4423bef4c2"
        },
        "item": {
          "id": "6892f92c-f9e6-476b-a0bc-5b7025474a10",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "080b8f9d-053c-4231-9d49-394e74fb3854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3d517b-f8b4-4c06-8f0d-32889a223616",
        "cursor": {
          "ref": "a1aa1725-c823-4f8d-b9c5-f4ca8657c971",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "453656ea-b3fa-49fb-978a-02a26669e400"
        },
        "item": {
          "id": "1f3d517b-f8b4-4c06-8f0d-32889a223616",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1c58a2de-41e3-464b-b423-4c1b6e5cdd27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e7d57e-7436-43db-bbb3-b3652786b514",
        "cursor": {
          "ref": "02ad4db0-58e2-43e9-9dfa-3a17f40faa3a",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "580989f4-a0ad-4fa2-9953-2c11993d1254"
        },
        "item": {
          "id": "83e7d57e-7436-43db-bbb3-b3652786b514",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "46582957-7484-4304-a274-4a93a3256e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4898f87d-a117-4820-a489-20502c7ee8ca",
        "cursor": {
          "ref": "e8f6cd97-8436-403a-9c79-0da902d070ca",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "10a1b902-5995-426a-a46d-fb98de2f3c11"
        },
        "item": {
          "id": "4898f87d-a117-4820-a489-20502c7ee8ca",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7ee098f5-402f-4ded-9879-31af28b6322b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349efbfd-883d-49a5-a407-af5ec8c7c6d2",
        "cursor": {
          "ref": "f58e3970-c3f5-4dd9-85fc-2d123d811159",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "58fc2464-2e81-4993-a4bc-1c5268da1633"
        },
        "item": {
          "id": "349efbfd-883d-49a5-a407-af5ec8c7c6d2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a08f335d-a8ce-411d-a732-0d01bdf1751f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5777cbe7-37fc-4787-b91b-f07405b34cf7",
        "cursor": {
          "ref": "ad6957e8-73a0-4cab-bd68-45dcdba33690",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c0253307-6546-42f4-b714-5a6a495af22e"
        },
        "item": {
          "id": "5777cbe7-37fc-4787-b91b-f07405b34cf7",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ec8ca207-8fe9-4dc9-82bd-d8694d01f175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d74f312-c1d7-4d2f-a6c8-9142db2c6970",
        "cursor": {
          "ref": "bc5152a3-f27a-4522-a7c7-51acf6a574af",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "961c0fe2-ac68-42f8-989c-7a8d36d3aca8"
        },
        "item": {
          "id": "3d74f312-c1d7-4d2f-a6c8-9142db2c6970",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1531c8be-b9cc-42e1-9b61-dc1b173f7baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4a6f88-18e7-4624-b906-b11642de2f34",
        "cursor": {
          "ref": "64d35d94-b682-44f5-abb1-5c35540c36ce",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ec979d4e-4e90-477d-ab6e-d13727361c43"
        },
        "item": {
          "id": "5e4a6f88-18e7-4624-b906-b11642de2f34",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "17d26273-6c65-474f-9629-76ed9691d497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3744f2b0-75fd-4ba1-acf3-f7af539aa04c",
        "cursor": {
          "ref": "d5263079-a8b8-4db9-9cbb-d95df8107496",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "806868ab-9bac-4f73-86c3-5ccd522c365f"
        },
        "item": {
          "id": "3744f2b0-75fd-4ba1-acf3-f7af539aa04c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3eaf7e79-6ba0-4b23-85c4-d5ac4df7da4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3f75b0-9e7e-4a9f-afaf-7ff5da71af05",
        "cursor": {
          "ref": "0e7b41ca-887d-49b4-8542-479f21446bfa",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e50d1a88-be45-44d0-a314-1ab20fa13d7d"
        },
        "item": {
          "id": "bb3f75b0-9e7e-4a9f-afaf-7ff5da71af05",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2fd79cf1-eb06-48c6-bb8c-cd4eec9196c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ec813c-0106-465e-8aa4-8624a4d6de5a",
        "cursor": {
          "ref": "198169ba-63e2-4bfb-b27e-d7b5dffd0a95",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7a99e1fd-28f4-40f2-ac80-775562edbdd0"
        },
        "item": {
          "id": "27ec813c-0106-465e-8aa4-8624a4d6de5a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a5cf45ee-1d41-4664-ba9f-590fbeb977c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ee06ee-d851-4fe6-a840-c7fafaa3e0af",
        "cursor": {
          "ref": "be0df299-80ba-4759-ab91-88c6d32c32fe",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b5ad0d97-4ef6-4e9f-999b-b5f40f2dab80"
        },
        "item": {
          "id": "d7ee06ee-d851-4fe6-a840-c7fafaa3e0af",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "764e0b16-07c5-4187-a213-56b645b1ca01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85960f57-f94a-4a3e-88b8-e9cf9085d57d",
        "cursor": {
          "ref": "0895d26b-42ca-4ff4-9fa2-4b57e552d2bf",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ead8e147-2bde-48dc-a3a9-5555f0873089"
        },
        "item": {
          "id": "85960f57-f94a-4a3e-88b8-e9cf9085d57d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "35c395c0-b7cf-417a-9fdc-314e59b9b4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debc8e35-cf56-46a0-8c72-296cf7abe43e",
        "cursor": {
          "ref": "00876d03-a5a4-4815-91be-c867156e464c",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b811f6c4-fe26-4c7a-b4d1-57789081e9de"
        },
        "item": {
          "id": "debc8e35-cf56-46a0-8c72-296cf7abe43e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a230563b-364d-4895-a239-2182cc17c491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4846603-683c-44af-a773-8dbf483f0835",
        "cursor": {
          "ref": "ffb8d182-cf33-4194-951a-846b3db75123",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "25540ace-b499-4b49-9b71-ca0f0af2c3b5"
        },
        "item": {
          "id": "d4846603-683c-44af-a773-8dbf483f0835",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "52fdf19a-a9d2-40e7-8a40-34ba4ffaea7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1118923-4a01-4fc6-93a7-79e0d5c4f031",
        "cursor": {
          "ref": "c11def22-431f-46b8-9cd3-41113118a044",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ef089b89-3383-4bf0-9042-77643fe8de45"
        },
        "item": {
          "id": "c1118923-4a01-4fc6-93a7-79e0d5c4f031",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "66e5f52b-89e7-43c7-9bad-8facda126459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8d3c9e-0561-4905-b311-71f442df58a3",
        "cursor": {
          "ref": "cac45ad8-97af-4d76-8ee2-b79384fa01e7",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1492330a-979c-4f33-bebf-44c0da14b970"
        },
        "item": {
          "id": "ee8d3c9e-0561-4905-b311-71f442df58a3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5c1c4ce1-df03-4a1f-b06c-f4485dfcef06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ee9533-8e42-4138-a85e-425eff49c136",
        "cursor": {
          "ref": "5f86b1b2-9153-4918-96bb-d10f1467e6f3",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b815ab24-99ce-46ad-8eed-4a0f5a139882"
        },
        "item": {
          "id": "d8ee9533-8e42-4138-a85e-425eff49c136",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "01e80898-321d-40ef-bdea-5dc77ebe353f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44361b82-7749-40c2-ac81-6e413b2dbc40",
        "cursor": {
          "ref": "a4f20c3d-2f1b-4585-a09d-3f6159cc5d63",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "85f41d42-ca95-40cd-8eef-958cd13111ef"
        },
        "item": {
          "id": "44361b82-7749-40c2-ac81-6e413b2dbc40",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a8836318-334e-4e8c-a422-418ea3430305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42b84e1-fe6f-4cf6-9dff-083242f52433",
        "cursor": {
          "ref": "e5a6c98d-f69e-4ccf-b2cf-aa0ed2658fe2",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4fb12b74-ede3-418f-a07e-943908c0b77c"
        },
        "item": {
          "id": "f42b84e1-fe6f-4cf6-9dff-083242f52433",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "dce34e6f-032d-4b87-8506-7a10ea8e602f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7be2d6-1bf7-4810-bc64-41a39e5b22d3",
        "cursor": {
          "ref": "f6e72427-3029-4c06-beb7-a53e3e6e6d66",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "706ea932-7692-4144-ada1-0c180e4123cf"
        },
        "item": {
          "id": "1b7be2d6-1bf7-4810-bc64-41a39e5b22d3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d3649b28-690b-46b2-acaf-1b24e9868c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fbb5bc0-eae6-4408-b618-12124dbac3ee",
        "cursor": {
          "ref": "5e34e1ac-1746-44d0-ae17-8520d2a6c3e5",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a948bc0a-37d0-4e59-b0fd-05a5f23e2576"
        },
        "item": {
          "id": "6fbb5bc0-eae6-4408-b618-12124dbac3ee",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4438a4e0-0904-4432-a396-fabaaeb18499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54ed428-f0a2-48b1-a50f-ffb87ab9397c",
        "cursor": {
          "ref": "2a957bf0-01d1-4869-92da-7cd35871de74",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d09ab06b-1c58-4017-a652-918477735b69"
        },
        "item": {
          "id": "c54ed428-f0a2-48b1-a50f-ffb87ab9397c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "97747d0b-076b-4975-9568-34ce7ce099db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f95d70d-db96-475f-ae57-92973aff121a",
        "cursor": {
          "ref": "c65fe8eb-c705-448b-ae0d-054de9c6839d",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "72f6906b-e8ff-4d5d-b491-55493432980d"
        },
        "item": {
          "id": "3f95d70d-db96-475f-ae57-92973aff121a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "247083c5-98cb-4435-81c9-7fde97b0a979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9d7fe2-1be2-4666-b178-8d0b578a2e5d",
        "cursor": {
          "ref": "2849caf8-fc15-477c-8e55-f047aa91c5a3",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "dce128f1-2e59-4372-aa56-410af9f6908a"
        },
        "item": {
          "id": "fc9d7fe2-1be2-4666-b178-8d0b578a2e5d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "db77f9f7-5e28-4596-9472-a87b2a38c01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9857541a-a69c-47a2-84e1-92526bc2553c",
        "cursor": {
          "ref": "20dfa01f-5e78-49b2-aa67-19c5c81df61d",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "08730b04-1659-47d9-bdb5-43f9a77a4aac"
        },
        "item": {
          "id": "9857541a-a69c-47a2-84e1-92526bc2553c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "559bd218-8d78-4e6e-b133-c9ddf14f4397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa3a10f-1706-4f14-bde0-805676b2abbe",
        "cursor": {
          "ref": "c1201d37-8d91-4991-8f1b-fd838fe32f04",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "0ea1989a-36e0-4ca5-94f6-0d32493f1c29"
        },
        "item": {
          "id": "9aa3a10f-1706-4f14-bde0-805676b2abbe",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b829f3af-bd78-49ef-a2d4-04d8e8921b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0800d70e-5e32-4c5d-ad9c-e2ea40180a88",
        "cursor": {
          "ref": "aa7fc264-9c64-4100-b93a-499708351879",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "871de615-c24a-4dd1-a316-6fdfe869c679"
        },
        "item": {
          "id": "0800d70e-5e32-4c5d-ad9c-e2ea40180a88",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2d1d9da5-62e9-49dd-8efc-f178893a02bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fe8813-de5e-4bdb-94c3-fd0fef2a91af",
        "cursor": {
          "ref": "cbab59ee-17de-406e-a2cf-4e38a2bae1a8",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "d990b316-83c1-4f90-81d8-d46b099cf2fb"
        },
        "item": {
          "id": "c0fe8813-de5e-4bdb-94c3-fd0fef2a91af",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c58e53cc-68fb-4693-9a9b-7b3cac800109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f504c183-b5e1-41a2-91e7-6e190ece1054",
        "cursor": {
          "ref": "f12037be-41e9-4271-815a-0a3695d26c34",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "4dc34508-58b0-45c5-8b85-d6284c89d62e"
        },
        "item": {
          "id": "f504c183-b5e1-41a2-91e7-6e190ece1054",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "75d1af76-cb6e-4833-974e-9ab530a70b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a503bf91-bbf5-4fa3-8e9a-b0615ffddc32",
        "cursor": {
          "ref": "903769ab-fa9d-4f99-b8f6-739d5d710b8f",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "929aecc5-f78c-42f0-b964-d16a2dfb2e52"
        },
        "item": {
          "id": "a503bf91-bbf5-4fa3-8e9a-b0615ffddc32",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "14c696aa-e7bb-4a54-94ba-2300665fbf08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ea0818-319d-4169-b79e-ea8fc0707d52",
        "cursor": {
          "ref": "a9552e32-8d49-4bb6-b569-8f16d16ea0bb",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "6ff123c1-2dfe-4c45-8c77-b500f4fca05b"
        },
        "item": {
          "id": "96ea0818-319d-4169-b79e-ea8fc0707d52",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a902d495-e17f-4dcc-afb7-e012ca19c21a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa765c6-6047-49e6-bd51-badce15f17d9",
        "cursor": {
          "ref": "659b5f23-6357-45ed-9078-2f2147cdcf5b",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f771341b-2350-4e2e-abfe-b3701bb8470f"
        },
        "item": {
          "id": "afa765c6-6047-49e6-bd51-badce15f17d9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f75d580b-2557-470f-8337-4fb301058b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52f8e35-0939-47b2-b7ac-94ba916708d0",
        "cursor": {
          "ref": "ac675498-c854-4723-a551-eb2f6ae5ffc4",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c8405da8-1a97-4f15-a379-8b1456027db9"
        },
        "item": {
          "id": "c52f8e35-0939-47b2-b7ac-94ba916708d0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "bcf3b71b-a93c-4120-9119-4e0edbf1dba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ffcc20-ebb0-4771-b9b4-e576091a455b",
        "cursor": {
          "ref": "b935232c-ce4c-4d44-8f21-b581c3b08238",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3450e23f-16b9-4215-92a3-77a16ae1e2f6"
        },
        "item": {
          "id": "e3ffcc20-ebb0-4771-b9b4-e576091a455b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2b77088a-9238-47bb-bedb-dc7c7ac298d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0191f8-63da-4820-ac35-b4dfd7659ecc",
        "cursor": {
          "ref": "fe65df02-c082-4de0-aaa1-5b30e7396388",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "4871984e-3654-4dd2-83d0-cc34fb93d422"
        },
        "item": {
          "id": "5e0191f8-63da-4820-ac35-b4dfd7659ecc",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d91060ff-85d3-4f1c-ad8d-6f445cad8c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03bec50f-dacf-4adc-a03c-a33533e8ffaf",
        "cursor": {
          "ref": "0b02d5c4-0aa2-44dc-9a71-a9f43841bf33",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "eccf635a-a33e-46e3-8cd9-f720553c906a"
        },
        "item": {
          "id": "03bec50f-dacf-4adc-a03c-a33533e8ffaf",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b470ab88-4995-46b1-a3ae-806f2d03329f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8b0daa-a97d-4343-a12b-3d1e7ad6dd4a",
        "cursor": {
          "ref": "f864d362-4d23-471d-b8df-98852ee4df84",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "2543fad5-e980-4b49-a05d-d31ea865c6e7"
        },
        "item": {
          "id": "cb8b0daa-a97d-4343-a12b-3d1e7ad6dd4a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f165082d-8488-4325-a99b-6731e91811bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c4d878-0dec-4468-a022-2e1985c9f550",
        "cursor": {
          "ref": "145f9d1b-15fa-474f-8e63-c5ee9f2fcff8",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "9df96869-c2aa-41cc-9e57-75fbaaba53a5"
        },
        "item": {
          "id": "30c4d878-0dec-4468-a022-2e1985c9f550",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d4170dd9-0c91-4dd5-967b-fd75aa639a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32804a42-83fb-45d5-ac8b-f375311929e0",
        "cursor": {
          "ref": "7e2739b1-9ee3-4034-842d-61f1cf2fc743",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a4ea998f-1af7-478b-97c6-29196691551b"
        },
        "item": {
          "id": "32804a42-83fb-45d5-ac8b-f375311929e0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4d9e3f74-cc20-4c20-8893-44e4bb0e8abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c84b2f-730f-420e-869e-cd726ca5acc3",
        "cursor": {
          "ref": "da1fc727-9dfc-4ccd-9a98-95af9da29798",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "15336a71-503f-4cba-9cb6-d0327d9f7e2f"
        },
        "item": {
          "id": "44c84b2f-730f-420e-869e-cd726ca5acc3",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "99a8dbcd-6b6c-4ef3-8252-aadc0b81cca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2368ceb-69ba-4857-b08d-eab98c9ef0d7",
        "cursor": {
          "ref": "32d8a7a5-00a0-475f-b8d3-c6c0c09778e7",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e85eeb24-7f34-4b91-b15b-45ddc06ebe1c"
        },
        "item": {
          "id": "b2368ceb-69ba-4857-b08d-eab98c9ef0d7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e76f5bd8-e45f-4da6-a06f-ebef432efdcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbd05da-a1e4-43b3-803f-197baad4bf04",
        "cursor": {
          "ref": "9ac1fba9-71ac-4dd8-a4c6-87a1029bfd54",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "7b4bd6b9-e971-4e30-ab59-8f54b6164ed0"
        },
        "item": {
          "id": "cbbd05da-a1e4-43b3-803f-197baad4bf04",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "286b9e5b-bbe7-4546-8a8b-91e1b943c478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99aaeb4d-2c84-43b6-99ea-f4c905f4fc1d",
        "cursor": {
          "ref": "0d7672b2-ace2-4e8c-8690-e51f51c47d37",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "cc691fe6-0d4a-4537-8bfc-ad9ccc9cd56c"
        },
        "item": {
          "id": "99aaeb4d-2c84-43b6-99ea-f4c905f4fc1d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4a381d21-51ba-4991-bab9-9599b00be4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6d1328-1b1b-41be-8a9c-7b3a90d0e4ec",
        "cursor": {
          "ref": "add69ec3-36d9-48c3-b901-b815f17bdbd7",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "33c5283f-2312-49dd-bd36-8c9f2e55b2ac"
        },
        "item": {
          "id": "fb6d1328-1b1b-41be-8a9c-7b3a90d0e4ec",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "36b0b442-19d9-4b48-ab22-c3fcbc3a0d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825b3594-a20a-4c42-a419-54f6af6dec9d",
        "cursor": {
          "ref": "a0c837a3-94fe-442d-9ff7-a323930d91e6",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "db343cea-386a-464c-9716-5c93814e66c5"
        },
        "item": {
          "id": "825b3594-a20a-4c42-a419-54f6af6dec9d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4f186f89-cb2c-4266-b660-8b24e5af9777",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350a2c16-d028-40d6-8666-19022e1f1f9f",
        "cursor": {
          "ref": "e0fe6c2a-b256-401d-9260-4a922375c025",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "1611b1b6-2c98-4cac-9667-6241137f576a"
        },
        "item": {
          "id": "350a2c16-d028-40d6-8666-19022e1f1f9f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0fe0fd1e-c92c-48ea-a1ca-680a4d6c9d29",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "22050fdb-89fa-49d2-bb6a-2eaaa50a92a7",
        "cursor": {
          "ref": "450cc29e-91fe-4e58-beb4-8d66279177b6",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "1905fd81-efdb-4ede-95fc-98341637cec7"
        },
        "item": {
          "id": "22050fdb-89fa-49d2-bb6a-2eaaa50a92a7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b834aabb-a3c8-49e6-a92b-5de1566d76f4",
          "status": "OK",
          "code": 200,
          "responseTime": 3058,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfea19d-73c8-42c6-94c0-5639463d742f",
        "cursor": {
          "ref": "97028740-50bd-45ae-87f3-35f61aa7db4c",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "4e50366b-f0e3-4dd8-b228-b9a2975630f7"
        },
        "item": {
          "id": "2bfea19d-73c8-42c6-94c0-5639463d742f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "db09fc9c-1387-4e6c-8dcd-1b6a2af984f0",
          "status": "OK",
          "code": 200,
          "responseTime": 2665,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e0a07f-12a4-4654-b16d-83a0dce675a1",
        "cursor": {
          "ref": "ce417b66-af8c-4901-be0e-caf304273b32",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "315bf3d9-405e-42ce-9702-fe2d85e5c845"
        },
        "item": {
          "id": "d1e0a07f-12a4-4654-b16d-83a0dce675a1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6e8df376-4616-4996-9fe9-d6316958078f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e0a07f-12a4-4654-b16d-83a0dce675a1",
        "cursor": {
          "ref": "ce417b66-af8c-4901-be0e-caf304273b32",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "315bf3d9-405e-42ce-9702-fe2d85e5c845"
        },
        "item": {
          "id": "d1e0a07f-12a4-4654-b16d-83a0dce675a1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6e8df376-4616-4996-9fe9-d6316958078f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8034dff-297c-4c9b-b2de-370ada01ea25",
        "cursor": {
          "ref": "0e3f9e52-bbf9-4678-bb67-73792189a736",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "39e9d9f6-55e9-494f-a269-4ebda8eebad5"
        },
        "item": {
          "id": "a8034dff-297c-4c9b-b2de-370ada01ea25",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0f0fc652-91e6-47d1-8886-afcf5909a46f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e2cdcf-c94f-4417-91c4-bcf9e432f99d",
        "cursor": {
          "ref": "3a921917-1199-41a6-a103-a7eb66acbf30",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "24b75ca6-d2f7-4e55-a507-d1cf66ccf321"
        },
        "item": {
          "id": "e6e2cdcf-c94f-4417-91c4-bcf9e432f99d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e54220b1-c8c4-453d-8f53-d715d1722aac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}